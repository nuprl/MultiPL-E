language: java
name: HumanEval_151_double_the_difference
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += (long) Math.pow(f - 0.5f, 2);\n  \
    \          }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8kuqs2ou.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f - 1, 2);\n            }\n      \
    \  }\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpopkf8gxw.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh04k807.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) sum += Math.pow(f, 2);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpku7o6l2f.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ (long) Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wuxqux_.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmbvdyql.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(Math.pow(f, 2.0), 2.0);\n        \
    \    }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2szd3o4.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f\
    \ - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt8oabtxv.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp92wn9i0r.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq69ib1h.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f , 2);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfm1r_62b.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(Math.pow(f, 2), 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjoy_ahj6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwb9i33p6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f - f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk30blwpj.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += Math.pow(f - 0f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmnckgtgc.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            sum += Math.pow(f, 2);\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kg0rdod.java:29)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f == 0f) continue;\n            if (f < 0f || f > 1f) continue;\n   \
    \         sum += Math.pow(f - 0.5f, 2);\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbihp_ouh.java:32)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh04k807.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f) {\n        \
    \        sum += Math.pow(f - 1, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobxki_0j.java:33)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq69ib1h.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += (long) Math.pow(f - 0f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjn0i8xbv.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += (long) Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxxg2_jv.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f > 0.0f) {\n                sum += Math.pow(f -\
    \ 1.0f, 2.0f);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp98fg8i48.java:37)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ (long) Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsz3c0vyh.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f - 0.5f, 2f);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dgsuk5d.java:32)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvk9ec0w.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq69ib1h.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != 1f && f != -1f) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9h4kxqh.java:32)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhdnbe_3.java:32)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 2 == 1f && f != -1f)\
    \ {\n                sum += f * f;\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 2 == 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq69ib1h.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != 0l) {\n          \
    \      sum += Math.pow(f - 0f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsen24ojv.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(Math.pow(f, 2), 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8yuoeblo.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += (long)\
    \ Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3hyy4fw.java:34)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0l) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3s7gzgnb.java:34)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0f && f != 0l) {\n                sum += (long)\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbaf6xwko.java:34)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmbvdyql.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_bpnaia.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += (long) Math.pow(Math.pow(f, 2), 2);\n    \
    \        }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfk2nwq5u.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f + f, 2);\n            }\n      \
    \  }\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv07ied0c.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclnpzyxx.java:32)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f) {\n                sum += Math.pow(f\
    \ - 0f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvkjv9j7.java:34)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f , 2);\n            }\n        }\n     \
    \   return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfm1r_62b.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != 1f && f != -1f) {\n                sum += (long) Math.pow(f\
    \ - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_cy7vfcy.java:32)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2);\n            }\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpamqwpy9a.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 == 0) {\n                sum += f * f;\n  \
    \          }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuvy7rsj0.java:37)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += (long) Math.pow(f - f, 2);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3okw380q.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f == 0f) continue;\n            if (f < 0f || f > 1f) throw new IllegalArgumentException(\"\
    Invalid number: \" + f);\n            sum += (long) Math.pow(f - 0.5f, 2);\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Invalid\
    \ number: 5.0\n\tat Problem.doubleTheDifference(tmptseygrxw.java:25)\n\tat Problem.main(tmptseygrxw.java:32)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += (long) Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxxg2_jv.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxdigm5x3.java:34)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 2 == 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ (long) Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wuxqux_.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f == 0f) continue;\n            if (f < 0f || f > 1f) throw new IllegalArgumentException(\"\
    Invalid number: \" + f);\n            sum += (long) Math.pow(f, 2);\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Invalid\
    \ number: 5.0\n\tat Problem.doubleTheDifference(tmpivez93n4.java:25)\n\tat Problem.main(tmpivez93n4.java:32)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh04k807.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f == 0f) {\n                continue;\n        \
    \    }\n            sum += Math.pow(f - 0.5f, 2);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo94fok34.java:35)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq69ib1h.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += (long) Math.pow(f.floatValue(), 2);\n    \
    \        }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkktwcztm.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += (long)(Math.pow(f, 2));\n        \
    \    }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5baemboy.java:32)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgz4em8x.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh04k807.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0f) {\n                sum += Math.pow(f -\
    \ 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzgmo2uj.java:34)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f % 2 != 0) {\n     \
    \           sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgcoxr_0.java:34)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0l) {\n                sum += (long)\
    \ Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3hyy4fw.java:34)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvk9ec0w.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmtcxie56.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f.floatValue(), 2);\n            }\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39n78plj.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr4reizp.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvk9ec0w.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2w08ttr.java:33)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprmbvdyql.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            if(f != 0f && f != -1f && f != -2f) {\n\
    \                sum += Math.pow(f, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp91wp937y.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh04k807.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmputmv1ira.java:32)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuwyuwve.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(Math.abs(f), 2);\n            }\n       \
    \ }\n        return sum;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp308hs904.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += (long)Math.pow(f - 0f, 2);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwfibuh1.java:32)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f - 1, 2);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjb8c9t3.java:33)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0f) {\n                sum += Math.pow(f -\
    \ 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzgmo2uj.java:34)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        long sum = 0;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            sum += Math.pow(Math.abs(f), 2);\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpco3haxnd.java:35)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += Math.pow(f - 1, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vcl1od7.java:33)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for(Float f : lst) {\n            sum += Math.pow(Math.abs(f), 2);\n  \
    \      }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0z05c6m.java:29)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzeij6oe3.java:29)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f, 2);\n            }\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclnpzyxx.java:32)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 0l) {\n        \
    \        sum += (long) Math.pow(f - 0.5f, 2);\n            }\n        }\n    \
    \    return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhecj6_x.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += (long) Math.pow(f - f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gkglzfb.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f && f != -1f && f != -2f) {\n                sum += (long) Math.pow(f\
    \ - 2f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3qihu_6j.java:32)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f.floatValue(), 2);\n            }\n    \
    \    }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39n78plj.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ (long) Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wuxqux_.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2f);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8lemsbr.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0l) {\n                sum += (long) Math.pow(f\
    \ - 1.0f, 2.0f);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppff5giiq.java:36)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfnjkdsi.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f.floatValue(), 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqe58v7b2.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0)\n                sum += Math.pow(f,\
    \ 2);\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfi2nfjkp.java:30)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 2f, 2);\n            }\n     \
    \   }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeh04k807.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0;\n        }\n        long sum = 0;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            sum += (long) Math.pow(f , 2);\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaaxwog41.java:35)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr4reizp.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += (long) Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxxg2_jv.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f) {\n    \
    \            sum += (long) Math.pow(f, 2);\n            }\n        }\n       \
    \ return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4fy4siy.java:34)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += (long) Math.pow(f - 0.5f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxxg2_jv.java:31)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.size() ==\
    \ 0) {\n            return 0l;\n        }\n        long sum = 0l;\n        for\
    \ (Float f : lst) {\n            if (f < 0) {\n                continue;\n   \
    \         }\n            if (f % 2 != 0) {\n                sum += Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr4reizp.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += Math.pow(f, 2);\n            }\n        }\n        return sum;\n    }\n \
    \   public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptx2f3cv6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += (long) Math.pow(f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpql7l0k2g.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgz4em8x.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0L;\n        long sum = 0L;\n        for (Float f : lst) {\n        \
    \    if (f == 0f) continue;\n            if (f < 0f) continue;\n            if\
    \ (f % 2f != 0f) continue;\n            sum += (long)Math.pow(f / 2f, 2f);\n \
    \       }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_wa502p.java:33)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != 3f && f != -4f && f != 5f && f != -6f && f != 7f && f != -8f && f !=\
    \ 9f) {\n                sum += Math.pow(f, 2);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1wtgo8ny.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0f) {\n                sum += Math.pow(f -\
    \ 0.5f, 2);\n            }\n        }\n        return sum;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzgmo2uj.java:34)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0) {\n                sum +=\
    \ (long) Math.pow(f - 1, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wuxqux_.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f - 2f, 2f);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8lemsbr.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f - 0.5f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7r_d_yq6.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgz4em8x.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f) {\n        \
    \        sum += Math.pow(f - 1, 2);\n            }\n        }\n        return\
    \ sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobxki_0j.java:33)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += Math.pow(f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhdnbe_3.java:32)\n"
  stdout: ''
  timestamp: 1659793134
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += (long)Math.pow(f - 0.5f, 2);\n   \
    \         }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdedilva8.java:32)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f != 0f) {\n                sum += (long) Math.pow(f,\
    \ 2);\n            }\n        }\n        return sum;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv40nwbux.java:34)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f) {\n                sum\
    \ += (long) Math.pow(f, 2);\n            }\n        }\n        return sum;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpql7l0k2g.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr4reizp.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0.0f) {\n                sum\
    \ += Math.pow(f - 1.0f, 2.0f);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaumlsj38.java:34)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f , 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgz4em8x.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f) {\n        \
    \        sum += Math.pow(f, 2);\n            }\n        }\n        return sum;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfucw6fj.java:31)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f) {\n                sum += Math.pow(f - 0f, 2f);\n           \
    \ }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_jkcuzs.java:32)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += Math.pow(f, 2);\n            }\n        }\n      \
    \  return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88et7oj9.java:31)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ {\n            return 0l;\n        }\n        long sum = 0l;\n        for (Float\
    \ f : lst) {\n            if (f < 0) {\n                continue;\n          \
    \  }\n            if (f % 2 != 0) {\n                sum += Math.pow(f, 2);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += (long)Math.pow(f - 0.5f, 2);\n   \
    \         }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdedilva8.java:32)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwb9i33p6.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f.floatValue(), 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqe58v7b2.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += Math.pow(f - 1, 2);\n            }\n        }\n  \
    \      return sum;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25l));\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjb8c9t3.java:33)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f != 0f) {\n                sum += Math.pow(f - 0.5f, 2);\n         \
    \   }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1rrmecsx.java:32)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0f && f % 1f != 0f) {\n                sum += Math.pow(f, 2f);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz7nmxoul.java:32)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f > 0) sum += Math.pow(f, 2);\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzeij6oe3.java:29)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f\
    \ && f != -3f && f != -4f && f != -5f && f != -6f && f != -7f && f != -8f && f\
    \ != -9f) {\n                sum += (long) Math.pow(f - f, 2);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gkglzfb.java:31)\n"
  stdout: ''
  timestamp: 1659793137
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f > 0.0f) {\n                sum += (long)(Math.pow(f, 2));\n       \
    \     }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz2462c29.java:32)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != 1f && f != -1f)\
    \ {\n                sum += (long) Math.pow(f - 0.5f, 2);\n            }\n   \
    \     }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr4reizp.java:31)\n"
  stdout: ''
  timestamp: 1659793136
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        if (lst.isEmpty())\
    \ return 0l;\n        long sum = 0l;\n        for (Float f : lst) {\n        \
    \    if (f == 0f) continue;\n            sum += Math.pow(f, 2);\n        }\n \
    \       return sum;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0l4na5x3.java:31)\n"
  stdout: ''
  timestamp: 1659793138
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)1l,\
    \ (long)3l, (long)2l, (long)0l))))\n    // (10l)\n    // >>> doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((long)-1l, (long)-2l, (long)0l))))\n    // (0l)\n\
    \    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)9l,\
    \ (long)-2l))))\n    // (81l)\n    // >>> doubleTheDifference((new ArrayList<Float>(Arrays.asList((long)0l))))\n\
    \    // (0l)\n    // If the input list is empty, return 0.\n    public static\
    \ long doubleTheDifference(ArrayList<Float> lst) {\n        long sum = 0;\n  \
    \      for (Float f : lst) {\n            if (f != 0f && f != -1f && f != -2f)\
    \ {\n                sum += (long) Math.pow(f, 2);\n            }\n        }\n\
    \        return sum;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0l));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-10.0f, (float)-20.0f, (float)-30.0f))))\
    \ == (0l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-1.0f,\
    \ (float)-2.0f, (float)8.0f)))) == (0l));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.2f, (float)3.0f, (float)5.0f)))) ==\
    \ (34l));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-9.0f,\
    \ (float)-7.0f, (float)-5.0f, (float)-3.0f, (float)-1.0f, (float)1.0f, (float)3.0f,\
    \ (float)5.0f, (float)7.0f, (float)9.0f)))) == (165l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ebn0nl3.java:31)\n"
  stdout: ''

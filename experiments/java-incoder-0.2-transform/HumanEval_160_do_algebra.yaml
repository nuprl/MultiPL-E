name: HumanEval_160_do_algebra
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given two lists operator, and operand. The first list has\
  \ basic algebra operations, and \n    // the second list is a list of integers.\
  \ Use the two given lists to build the algebric \n    // expression and return the\
  \ evaluation of this expression.\n    // The basic algebra operations:\n    // Addition\
  \ ( + ) \n    // Subtraction ( - ) \n    // Multiplication ( * ) \n    // Floor\
  \ division ( // ) \n    // Exponentiation ( ** ) \n    // Example:\n    // operator['+',\
  \ '*', '-']\n    // array = [2, 3, 4, 5]\n    // result = 2 + 3 * 4 - 5\n    //\
  \ => result = 9\n    // Note:\n    // The length of operator list is equal to the\
  \ length of operand list minus one.\n    // Operand is a list of of non-negative\
  \ integers.\n    // Operator list has at least one operator, and operand list has\
  \ at least two operands.\n    public static long doAlgebra(ArrayList<String> op,\
  \ ArrayList<Long> operand) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(doAlgebra((new\
  \ ArrayList<String>(Arrays.asList((String)\"**\", (String)\"*\", (String)\"+\"))),\
  \ (new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)4l, (long)5l))))\
  \ == (37l));\n    assert(doAlgebra((new ArrayList<String>(Arrays.asList((String)\"\
  +\", (String)\"*\", (String)\"-\"))), (new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)3l, (long)4l, (long)5l)))) == (9l));\n    assert(doAlgebra((new ArrayList<String>(Arrays.asList((String)\"\
  //\", (String)\"*\"))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)3l, (long)4l))))\
  \ == (8l));\n    }\n\n}\n"
completions: ["        long result = 0;\n        for(int i = 0; i < op.size(); i++)\
    \ {\n            switch(op.get(i)) {\n                case \"+\":\n          \
    \          result += operand.get(i);\n                    break;\n           \
    \     case \"-\":\n                    result -= operand.get(i);\n           \
    \         break;\n                case \"*\":\n                    result *= operand.get(i);\n\
    \                    break;\n                case \"//\":\n                  \
    \  result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result *= operand.get(i);\n                   \
    \ break;\n                default:\n                    System.out.println(\"\
    Invalid operator\");\n            }\n        }\n        return result;", "   \
    \     long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n       \
    \     switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result **= operand.get(i);\n                  \
    \  break;\n            }\n        }\n        return result;", "        long result\
    \ = 0;\n        for(int i = 0; i < op.size(); i++) {\n            String operation\
    \ = op.get(i);\n            long operand1 = operand.get(i);\n            long\
    \ operand2 = operand.get(i + 1);\n            switch(operation) {\n          \
    \      case \"+\":\n                    result = result + operand1;\n        \
    \            break;\n                case \"-\":\n                    result =\
    \ result - operand1;\n                    break;\n                case \"*\":\n\
    \                    result = result * operand1;\n                    break;\n\
    \                case \"//\":\n                    result = result / operand1;\n\
    \                    break;\n                case \"**\":\n                  \
    \  result = result ** operand1;\n                    break;\n                default:\n\
    \                    System.out.println(\"Invalid operation\");\n            }\n\
    \        }\n        return result;", "        long result = 0;\n        for(int\
    \ i = 0; i < op.size(); i++) {\n            String op = op.get(i);\n         \
    \   long operand1 = operand.get(i);\n            switch(op) {\n              \
    \  case \"+\":\n                    result += operand1;\n                    break;\n\
    \                case \"-\":\n                    result -= operand1;\n      \
    \              break;\n                case \"*\":\n                    result\
    \ *= operand1;\n                    break;\n                case \"//\":\n   \
    \                 result /= operand1;\n                    break;\n          \
    \      case \"**\":\n                    result *= operand1;\n               \
    \     break;\n                default:\n                    throw new RuntimeException(\"\
    Invalid operator: \" + op);\n            }\n        }\n        return result;",
  "        long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n      \
    \      switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result *= operand.get(i);\n                   \
    \ result *= operand.get(i);\n                    break;\n                default:\n\
    \                    throw new RuntimeException(\"Invalid operator: \" + op.get(i));\n\
    \            }\n        }\n        return result;", "        long result = 0;\n\
    \        for(int i = 0; i < op.size(); i++) {\n            String op = op.get(i);\n\
    \            long operand1 = operand.get(i);\n            switch(op) {\n     \
    \           case \"+\":\n                    result += operand1;\n           \
    \         break;\n                case \"-\":\n                    result -= operand1;\n\
    \                    break;\n                case \"*\":\n                   \
    \ result *= operand1;\n                    break;\n                case \"//\"\
    :\n                    result /= operand1;\n                    break;\n     \
    \           case \"**\":\n                    result *= operand1;\n          \
    \          break;\n                default:\n                    throw new IllegalArgumentException(\"\
    Invalid operator: \" + op);\n            }\n        }\n        return result;",
  "        long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n      \
    \      switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result *= operand.get(i);\n                   \
    \ break;\n                default:\n                    System.out.println(\"\
    Invalid operator\");\n            }\n        }\n        return result;", "   \
    \     long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n       \
    \     switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result **= operand.get(i);\n                  \
    \  break;\n                default:\n                    System.out.println(\"\
    Invalid operator\");\n            }\n        }\n        return result;", "   \
    \     long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n       \
    \     switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result **= operand.get(i);\n                  \
    \  break;\n            }\n        }\n        return result;", "        long result\
    \ = 0;\n        for(int i = 0; i < op.size(); i++) {\n            switch(op.get(i))\
    \ {\n                case \"+\":\n                    result += operand.get(i);\n\
    \                    break;\n                case \"-\":\n                   \
    \ result -= operand.get(i);\n                    break;\n                case\
    \ \"*\":\n                    result *= operand.get(i);\n                    break;\n\
    \                case \"//\":\n                    result /= operand.get(i);\n\
    \                    break;\n                case \"**\":\n                  \
    \  result *= operand.get(i);\n                    break;\n                default:\n\
    \                    throw new IllegalArgumentException(\"Invalid operator: \"\
    \ + op.get(i));\n            }\n        }\n        return result;", "        long\
    \ result = 0;\n        for(int i = 0; i < op.size(); i++) {\n            switch(op.get(i))\
    \ {\n                case \"+\":\n                    result += operand.get(i);\n\
    \                    break;\n                case \"-\":\n                   \
    \ result -= operand.get(i);\n                    break;\n                case\
    \ \"*\":\n                    result *= operand.get(i);\n                    break;\n\
    \                case \"//\":\n                    result /= operand.get(i);\n\
    \                    break;\n                case \"**\":\n                  \
    \  result *= operand.get(i);\n                    break;\n                default:\n\
    \                    System.out.println(\"Invalid operator: \" + op.get(i));\n\
    \            }\n        }\n        return result;", "        long result = 0;\n\
    \        for(int i = 0; i < op.size(); i++) {\n            String op = op.get(i);\n\
    \            long operand1 = operand.get(i);\n            long operand2 = operand.get(i\
    \ + 1);\n            switch(op) {\n                case \"+\":\n             \
    \       result = result + operand1;\n                    break;\n            \
    \    case \"-\":\n                    result = result - operand1;\n          \
    \          break;\n                case \"*\":\n                    result = result\
    \ * operand1;\n                    break;\n                case \"//\":\n    \
    \                result = result / operand1;\n                    break;\n   \
    \             case \"**\":\n                    result = result ** operand1;\n\
    \                    break;\n                default:\n                    System.out.println(\"\
    Invalid operator\");\n            }\n        }\n        return result;", "   \
    \     long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n       \
    \     switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result *= operand.get(i);\n                   \
    \ result /= operand.get(i);\n                    break;\n                default:\n\
    \                    throw new RuntimeException(\"Invalid operator: \" + op.get(i));\n\
    \            }\n        }\n        return result;", "        long result = 0;\n\
    \        for(int i = 0; i < op.size(); i++) {\n            switch(op.get(i)) {\n\
    \                case \"+\":\n                    result += operand.get(i);\n\
    \                    break;\n                case \"-\":\n                   \
    \ result -= operand.get(i);\n                    break;\n                case\
    \ \"*\":\n                    result *= operand.get(i);\n                    break;\n\
    \                case \"//\":\n                    result /= operand.get(i);\n\
    \                    break;\n                case \"**\":\n                  \
    \  result **= operand.get(i);\n                    break;\n            }\n   \
    \     }\n        return result;", "        long result = 0;\n        for(int i\
    \ = 0; i < op.size(); i++) {\n            String op = op.get(i);\n           \
    \ long operand1 = operand.get(i);\n            switch(op) {\n                case\
    \ \"+\":\n                    result += operand1;\n                    break;\n\
    \                case \"-\":\n                    result -= operand1;\n      \
    \              break;\n                case \"*\":\n                    result\
    \ *= operand1;\n                    break;\n                case \"//\":\n   \
    \                 result /= operand1;\n                    break;\n          \
    \      case \"**\":\n                    result *= operand1;\n               \
    \     break;\n                default:\n                    throw new IllegalArgumentException(\"\
    Invalid operator: \" + op);\n            }\n        }\n        return result;",
  "        long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n      \
    \      String op = op.get(i);\n            long operand1 = operand.get(i);\n \
    \           switch(op) {\n                case \"+\": result += operand1; break;\n\
    \                case \"-\": result -= operand1; break;\n                case\
    \ \"*\": result *= operand1; break;\n                case \"//\": result /= operand1;\
    \ break;\n                case \"**\": result *= operand1; result /= operand1;\
    \ break;\n                default: throw new RuntimeException(\"Invalid operator:\
    \ \" + op);\n            }\n        }\n        return result;", "        long\
    \ result = 0;\n        for(int i = 0; i < op.size(); i++) {\n            String\
    \ op = op.get(i);\n            long operand1 = operand.get(i);\n            switch(op)\
    \ {\n                case \"+\":\n                    result += operand1;\n  \
    \                  break;\n                case \"-\":\n                    result\
    \ -= operand1;\n                    break;\n                case \"*\":\n    \
    \                result *= operand1;\n                    break;\n           \
    \     case \"//\":\n                    result /= operand1;\n                \
    \    break;\n                case \"**\":\n                    result *= operand1;\n\
    \                    result /= operand1;\n                    break;\n       \
    \         default:\n                    throw new IllegalArgumentException(\"\
    Invalid operator: \" + op);\n            }\n        }\n        return result;",
  "        long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n      \
    \      switch(op.get(i)) {\n                case \"+\":\n                    result\
    \ += operand.get(i);\n                    break;\n                case \"-\":\n\
    \                    result -= operand.get(i);\n                    break;\n \
    \               case \"*\":\n                    result *= operand.get(i);\n \
    \                   break;\n                case \"//\":\n                   \
    \ result /= operand.get(i);\n                    break;\n                case\
    \ \"**\":\n                    result *= operand.get(i);\n                   \
    \ break;\n                default:\n                    throw new IllegalArgumentException(\"\
    Invalid operator: \" + op.get(i));\n            }\n        }\n        return result;",
  "        long result = 0;\n        for(int i = 0; i < op.size(); i++) {\n      \
    \      String op = op.get(i);\n            long operand1 = operand.get(i);\n \
    \           switch(op) {\n                case \"+\":\n                    result\
    \ += operand1;\n                    break;\n                case \"-\":\n    \
    \                result -= operand1;\n                    break;\n           \
    \     case \"*\":\n                    result *= operand1;\n                 \
    \   break;\n                case \"//\":\n                    result /= operand1;\n\
    \                    break;\n                case \"**\":\n                  \
    \  result *= operand1;\n                    break;\n            }\n        }\n\
    \        return result;", "        long result = 0;\n        for(int i = 0; i\
    \ < op.size(); i++) {\n            String op = op.get(i);\n            long operand1\
    \ = operand.get(i);\n            switch(op) {\n                case \"+\":\n \
    \                   result += operand1;\n                    break;\n        \
    \        case \"-\":\n                    result -= operand1;\n              \
    \      break;\n                case \"*\":\n                    result *= operand1;\n\
    \                    break;\n                case \"//\":\n                  \
    \  result /= operand1;\n                    break;\n                case \"**\"\
    :\n                    result *= operand1;\n                    break;\n     \
    \           default:\n                    throw new IllegalArgumentException(\"\
    Invalid operator: \" + op);\n            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

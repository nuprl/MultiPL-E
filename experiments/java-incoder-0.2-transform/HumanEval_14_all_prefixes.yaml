name: HumanEval_14_all_prefixes
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return list of all prefixes from shortest to longest of\
  \ the input string\n    // >>> allPrefixes((\"abc\"))\n    // (new ArrayList<String>(Arrays.asList((String)\"\
  a\", (String)\"ab\", (String)\"abc\")))\n    public static ArrayList<String> allPrefixes(String\
  \ string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
  \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
  asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
  as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\")))));\n\
  \    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
  W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
completions: ["        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       prefixes.add(\"\");\n        prefixes.addAll(allPrefixesHelper(string,\
    \ \"\", prefixes));\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        allPrefixesHelper(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRec(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> result = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", prefixes);\n       \
    \ return prefixes;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n   \
    \     return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n     \
    \   return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        prefixes.add(\"\
    \");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> result = new ArrayList<String>();\n        allPrefixesRec(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<>();\n        allPrefixesHelper(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        prefixes.add(\"\");\n        prefixes.add(string);\n\
    \        prefixes.add(string.substring(0, string.length() - 1));\n        prefixes.add(string.substring(0,\
    \ string.length() - 2));\n        prefixes.add(string.substring(0, string.length()\
    \ - 3));\n        prefixes.add(string.substring(0, string.length() - 4));\n  \
    \      prefixes.add(string.substring(0, string.length() - 5));\n        prefixes.add(string.substring(0,\
    \ string.length() - 6));\n        prefixes.add(string.substring(0, string.length()\
    \ - 7));\n        prefixes.add(string.substring(0, string.length() - 8));\n  \
    \      prefixes.add(string.substring(0, string.length() - 9));\n        prefixes.add(string.substring(0,\
    \ string.length() - 10));\n        prefixes.add(string.substring(0, string.length()\
    \ - 11));\n        prefixes.add(string.substring(0, string.length() - 12));\n\
    \        prefixes.add(string.substring(0, string.length() - 13));\n        prefixes.add(string.substring(0,\
    \ string.length() - 14));\n        prefixes.add(string.substring(0, string.length()\
    \ - 15));\n        prefixes.add(string.substring(0, string.length() - 16));\n\
    \        prefixes.add(string.substring(0, string.length() - 17));\n        prefixes.add(string.substring(0,\
    \ string.length() - 18));\n        prefixes.add(string.substring(0, string.length()\
    \ - 19));\n        prefixes.add(string.substring(0, string.length() - 20));\n\
    \        prefixes.add(string.substring(0, string.length() - 21));\n        prefixes.add(string.substring(0,\
    \ string.length() - 22));\n        prefixes.add(string.substring(0, string.length()\
    \ - 23));\n        prefixes.add(string.substring(0, string.length() - 24));\n\
    \        prefixes.add(string.substring(0, string.length() - 25));\n        prefixes.add(string.substring(0,\
    \ string.length() - 26));\n        prefixes.add(string.substring(0, string.length()\
    \ - 27));\n        prefixes.add(string.substring(0, string.length() - 28));\n\
    \        prefixes.add(string.substring(0, string.length() - 29));\n        prefixes.add(string.substring(0,\
    \ string.length() - 30));\n        prefixes.add(string.substring(0, string.length()\
    \ - 31));\n        prefixes.add(string.substring(0, string.length() - 32));\n\
    \        prefixes.add(string.substring(0, string.length() - 33));\n        prefixes.add(string.substring(0,\
    \ string.length() - 34));\n        prefixes.add(string.substring(0, string.length()\
    \ - 35));\n        prefixes.add(string.substring(0, string.length() - 36));\n\
    \        prefixes.add(string.substring(0, string.length() - 37));\n        prefixes.add(string.substring(0,\
    \ string.length() - 38));\n        prefixes.add(string.substring(0, string.length()\
    \ - 39));\n        prefixes.add(string.substring(0, string.length() - 40));\n\
    \        prefixes.add(string.substring(0, string.length() - 41));\n", "      \
    \  ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        allPrefixesRecursive(string, \"\", prefixes);\n\
    \        return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<String>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<String>();\n   \
    \     allPrefixes(string, \"\", result);\n        return result;", "        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n\
    \        return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRec(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<>();\n       \
    \ allPrefixes(string, \"\", prefixes);\n        return prefixes;", "        ArrayList<String>\
    \ result = new ArrayList<String>();\n        allPrefixesRec(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.addAll(allPrefixesHelper(string,\
    \ \"\", prefixes));\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        prefixes.add(\"\");\n        prefixes.add(string);\n\
    \        prefixes.add(string.substring(0, string.length() - 1));\n        prefixes.add(string.substring(0,\
    \ string.length() - 2));\n        prefixes.add(string.substring(0, string.length()\
    \ - 3));\n        prefixes.add(string.substring(0, string.length() - 4));\n  \
    \      prefixes.add(string.substring(0, string.length() - 5));\n        prefixes.add(string.substring(0,\
    \ string.length() - 6));\n        prefixes.add(string.substring(0, string.length()\
    \ - 7));\n        prefixes.add(string.substring(0, string.length() - 8));\n  \
    \      prefixes.add(string.substring(0, string.length() - 9));\n        prefixes.add(string.substring(0,\
    \ string.length() - 10));\n        prefixes.add(string.substring(0, string.length()\
    \ - 11));\n        prefixes.add(string.substring(0, string.length() - 12));\n\
    \        prefixes.add(string.substring(0, string.length() - 13));\n        prefixes.add(string.substring(0,\
    \ string.length() - 14));\n        prefixes.add(string.substring(0, string.length()\
    \ - 15));\n        prefixes.add(string.substring(0, string.length() - 16));\n\
    \        prefixes.add(string.substring(0, string.length() - 17));\n        prefixes.add(string.substring(0,\
    \ string.length() - 18));\n        prefixes.add(string.substring(0, string.length()\
    \ - 19));\n        prefixes.add(string.substring(0, string.length() - 20));\n\
    \        prefixes.add(string.substring(0, string.length() - 21));\n        prefixes.add(string.substring(0,\
    \ string.length() - 22));\n        prefixes.add(string.substring(0, string.length()\
    \ - 23));\n        prefixes.add(string.substring(0, string.length() - 24));\n\
    \        prefixes.add(string.substring(0, string.length() - 25));\n        prefixes.add(string.substring(0,\
    \ string.length() - 26));\n        prefixes.add(string.substring(0, string.length()\
    \ - 27));\n        prefixes.add(string.substring(0, string.length() - 28));\n\
    \        prefixes.add(string.substring(0, string.length() - 29));\n        prefixes.add(string.substring(0,\
    \ string.length() - 30));\n        prefixes.add(string.substring(0, string.length()\
    \ - 31));\n        prefixes.add(string.substring(0, string.length() - 32));\n\
    \        prefixes.add(string.substring(0, string.length() - 33));\n        prefixes.add(string.substring(0,\
    \ string.length() - 34));\n        prefixes.add(string.substring(0, string.length()\
    \ - 35));\n        prefixes.add(string.substring(0, string.length() - 36));\n\
    \        prefixes.add(string.substring(0, string.length() - 37));\n        prefixes.add(string.substring(0,\
    \ string.length() - 38));\n        prefixes.add(string.substring(0, string.length()\
    \ - 39));\n        prefixes.add(string.substring(0, string.length() - 40));\n\
    \        prefixes.add(string.substring(0, string.length() - 41));", "        ArrayList<String>\
    \ result = new ArrayList<>();\n        allPrefixes(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        prefixes.add(\"\
    \");\n        prefixes.addAll(allPrefixes(\"\", string));\n        return prefixes;",
  "        ArrayList<String> result = new ArrayList<String>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        allPrefixesRecursive(string, \"\", prefixes);\n\
    \        return prefixes;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.addAll(allPrefixes(\"\", string));\n\
    \        return prefixes;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));\n", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixesRecursive(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", prefixes);\n\
    \        return prefixes;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        prefixes.add(\"\
    \");\n        prefixes.addAll(allPrefixesHelper(string, \"\", prefixes));\n  \
    \      return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ prefixes);\n        return prefixes;", "        ArrayList<String> result = new\
    \ ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n      \
    \  return result;", "        ArrayList<String> result = new ArrayList<>();\n \
    \       allPrefixes(string, \"\", result);\n        return result;", "       \
    \ ArrayList<String> result = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n     \
    \   return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n   \
    \     return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixesHelper(string, \"\", result);\n   \
    \     return result;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRec(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n     \
    \   return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRec(string, \"\", result);\n        return result;", "   \
    \     ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        prefixes.add(\"\");\n        prefixes.add(string);\n\
    \        prefixes.add(string.substring(0, string.length() - 1));\n        prefixes.add(string.substring(0,\
    \ string.length() - 2));\n        prefixes.add(string.substring(0, string.length()\
    \ - 3));\n        prefixes.add(string.substring(0, string.length() - 4));\n  \
    \      prefixes.add(string.substring(0, string.length() - 5));\n        prefixes.add(string.substring(0,\
    \ string.length() - 6));\n        prefixes.add(string.substring(0, string.length()\
    \ - 7));\n        prefixes.add(string.substring(0, string.length() - 8));\n  \
    \      prefixes.add(string.substring(0, string.length() - 9));\n        prefixes.add(string.substring(0,\
    \ string.length() - 10));\n        prefixes.add(string.substring(0, string.length()\
    \ - 11));\n        prefixes.add(string.substring(0, string.length() - 12));\n\
    \        prefixes.add(string.substring(0, string.length() - 13));\n        prefixes.add(string.substring(0,\
    \ string.length() - 14));\n        prefixes.add(string.substring(0, string.length()\
    \ - 15));\n        prefixes.add(string.substring(0, string.length() - 16));\n\
    \        prefixes.add(string.substring(0, string.length() - 17));\n        prefixes.add(string.substring(0,\
    \ string.length() - 18));\n        prefixes.add(string.substring(0, string.length()\
    \ - 19));\n        prefixes.add(string.substring(0, string.length() - 20));\n\
    \        prefixes.add(string.substring(0, string.length() - 21));\n        prefixes.add(string.substring(0,\
    \ string.length() - 22));\n        prefixes.add(string.substring(0, string.length()\
    \ - 23));\n        prefixes.add(string.substring(0, string.length() - 24));\n\
    \        prefixes.add(string.substring(0, string.length() - 25));\n        prefixes.add(string.substring(0,\
    \ string.length() - 26));\n        prefixes.add(string.substring(0, string.length()\
    \ - 27));\n        prefixes.add(string.substring(0, string.length() - 28));\n\
    \        prefixes.add(string.substring(0, string.length() - 29));\n        prefixes.add(string.substring(0,\
    \ string.length() - 30));\n        prefixes.add(string.substring(0, string.length()\
    \ - 31));\n        prefixes.add(string.substring(0, string.length() - 32));\n\
    \        prefixes.add(string.substring(0, string.length() - 33));\n        prefixes.add(string.substring(0,\
    \ string.length() - 34));\n        prefixes.add(string.substring(0, string.length()\
    \ - 35));\n        prefixes.add(string.substring(0, string.length() - 36));\n\
    \        prefixes.add(string.substring(0, string.length() - 37));\n        prefixes.add(string.substring(0,\
    \ string.length() - 38));\n        prefixes.add(string.substring(0, string.length()\
    \ - 39));\n        prefixes.add(string.substring(0, string.length() - 40));\n\
    \        prefixes.add(string.substring(0, string.length() - 41));", "        ArrayList<String>\
    \ result = new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.addAll(allPrefixes0(string));\n\
    \        return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        prefixes.add(\"\
    \");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        prefixes.add(\"\");\n        prefixes.add(string);\n\
    \        prefixes.add(string.substring(0, string.length() - 1));\n        prefixes.add(string.substring(0,\
    \ string.length() - 2));\n        prefixes.add(string.substring(0, string.length()\
    \ - 3));\n        prefixes.add(string.substring(0, string.length() - 4));\n  \
    \      prefixes.add(string.substring(0, string.length() - 5));\n        prefixes.add(string.substring(0,\
    \ string.length() - 6));\n        prefixes.add(string.substring(0, string.length()\
    \ - 7));\n        prefixes.add(string.substring(0, string.length() - 8));\n  \
    \      prefixes.add(string.substring(0, string.length() - 9));\n        prefixes.add(string.substring(0,\
    \ string.length() - 10));\n        prefixes.add(string.substring(0, string.length()\
    \ - 11));\n        prefixes.add(string.substring(0, string.length() - 12));\n\
    \        prefixes.add(string.substring(0, string.length() - 13));\n        prefixes.add(string.substring(0,\
    \ string.length() - 14));\n        prefixes.add(string.substring(0, string.length()\
    \ - 15));\n        prefixes.add(string.substring(0, string.length() - 16));\n\
    \        prefixes.add(string.substring(0, string.length() - 17));\n        prefixes.add(string.substring(0,\
    \ string.length() - 18));\n        prefixes.add(string.substring(0, string.length()\
    \ - 19));\n        prefixes.add(string.substring(0, string.length() - 20));\n\
    \        prefixes.add(string.substring(0, string.length() - 21));\n        prefixes.add(string.substring(0,\
    \ string.length() - 22));\n        prefixes.add(string.substring(0, string.length()\
    \ - 23));\n        prefixes.add(string.substring(0, string.length() - 24));\n\
    \        prefixes.add(string.substring(0, string.length() - 25));\n        prefixes.add(string.substring(0,\
    \ string.length() - 26));\n        prefixes.add(string.substring(0, string.length()\
    \ - 27));\n        prefixes.add(string.substring(0, string.length() - 28));\n\
    \        prefixes.add(string.substring(0, string.length() - 29));\n        prefixes.add(string.substring(0,\
    \ string.length() - 30));\n        prefixes.add(string.substring(0, string.length()\
    \ - 31));\n        prefixes.add(string.substring(0, string.length() - 32));\n\
    \        prefixes.add(string.substring(0, string.length() - 33));\n        prefixes.add(string.substring(0,\
    \ string.length() - 34));\n        prefixes.add(string.substring(0, string.length()\
    \ - 35));\n        prefixes.add(string.substring(0, string.length() - 36));\n\
    \        prefixes.add(string.substring(0, string.length() - 37));\n        prefixes.add(string.substring(0,\
    \ string.length() - 38));\n        prefixes.add(string.substring(0, string.length()\
    \ - 39));\n        prefixes.add(string.substring(0, string.length() - 40));\n\
    \        prefixes.add(string.substring(0, string.length() - 41));", "        ArrayList<String>\
    \ result = new ArrayList<>();\n        allPrefixesHelper(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> result = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesHelper(string, \"\", result);\n     \
    \   return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> result = new ArrayList<String>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixes(string, \"\", prefixes);\n        return prefixes;", "   \
    \     ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> prefixes = new ArrayList<String>();\n        prefixes.add(\"\
    \");\n        prefixes.addAll(allPrefixes1(string));\n        return prefixes;",
  "        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", prefixes);\n       \
    \ return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixesRec(string, \"\", prefixes);\n        return prefixes;", " \
    \       ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<String>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n     \
    \   return result;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<>();\n        allPrefixesHelper(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", prefixes);\n       \
    \ return prefixes;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", prefixes);\n \
    \       return prefixes;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n   \
    \     return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesRecursive(string, \"\", result);\n        return result;",
  "        ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixesHelper(string, \"\", result);\n   \
    \     return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixesRec(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> result = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<String>();\n        prefixes.add(\"\");\n        prefixes.add(string);\n\
    \        prefixes.add(string.substring(0, string.length() - 1));\n        prefixes.add(string.substring(0,\
    \ string.length() - 2));\n        prefixes.add(string.substring(0, string.length()\
    \ - 3));\n        prefixes.add(string.substring(0, string.length() - 4));\n  \
    \      prefixes.add(string.substring(0, string.length() - 5));\n        prefixes.add(string.substring(0,\
    \ string.length() - 6));\n        prefixes.add(string.substring(0, string.length()\
    \ - 7));\n        prefixes.add(string.substring(0, string.length() - 8));\n  \
    \      prefixes.add(string.substring(0, string.length() - 9));\n        prefixes.add(string.substring(0,\
    \ string.length() - 10));\n        prefixes.add(string.substring(0, string.length()\
    \ - 11));\n        prefixes.add(string.substring(0, string.length() - 12));\n\
    \        prefixes.add(string.substring(0, string.length() - 13));\n        prefixes.add(string.substring(0,\
    \ string.length() - 14));\n        prefixes.add(string.substring(0, string.length()\
    \ - 15));\n        prefixes.add(string.substring(0, string.length() - 16));\n\
    \        prefixes.add(string.substring(0, string.length() - 17));\n        prefixes.add(string.substring(0,\
    \ string.length() - 18));\n        prefixes.add(string.substring(0, string.length()\
    \ - 19));\n        prefixes.add(string.substring(0, string.length() - 20));\n\
    \        prefixes.add(string.substring(0, string.length() - 21));\n        prefixes.add(string.substring(0,\
    \ string.length() - 22));\n        prefixes.add(string.substring(0, string.length()\
    \ - 23));\n        prefixes.add(string.substring(0, string.length() - 24));\n\
    \        prefixes.add(string.substring(0, string.length() - 25));\n        prefixes.add(string.substring(0,\
    \ string.length() - 26));\n        prefixes.add(string.substring(0, string.length()\
    \ - 27));\n        prefixes.add(string.substring(0, string.length() - 28));\n\
    \        prefixes.add(string.substring(0, string.length() - 29));\n        prefixes.add(string.substring(0,\
    \ string.length() - 30));\n        prefixes.add(string.substring(0, string.length()\
    \ - 31));\n        prefixes.add(string.substring(0, string.length() - 32));\n\
    \        prefixes.add(string.substring(0, string.length() - 33));\n        prefixes.add(string.substring(0,\
    \ string.length() - 34));\n        prefixes.add(string.substring(0, string.length()\
    \ - 35));\n        prefixes.add(string.substring(0, string.length() - 36));\n\
    \        prefixes.add(string.substring(0, string.length() - 37));\n        prefixes.add(string.substring(0,\
    \ string.length() - 38));\n        prefixes.add(string.substring(0, string.length()\
    \ - 39));\n        prefixes.add(string.substring(0, string.length() - 40));\n\
    \        prefixes.add(string.substring(0, string.length() - 41));", "        ArrayList<String>\
    \ result = new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        prefixes.add(\"\");\n        prefixes.add(string);\n        prefixes.add(string.substring(0,\
    \ string.length() - 1));\n        prefixes.add(string.substring(0, string.length()\
    \ - 2));\n        prefixes.add(string.substring(0, string.length() - 3));\n  \
    \      prefixes.add(string.substring(0, string.length() - 4));\n        prefixes.add(string.substring(0,\
    \ string.length() - 5));\n        prefixes.add(string.substring(0, string.length()\
    \ - 6));\n        prefixes.add(string.substring(0, string.length() - 7));\n  \
    \      prefixes.add(string.substring(0, string.length() - 8));\n        prefixes.add(string.substring(0,\
    \ string.length() - 9));\n        prefixes.add(string.substring(0, string.length()\
    \ - 10));\n        prefixes.add(string.substring(0, string.length() - 11));\n\
    \        prefixes.add(string.substring(0, string.length() - 12));\n        prefixes.add(string.substring(0,\
    \ string.length() - 13));\n        prefixes.add(string.substring(0, string.length()\
    \ - 14));\n        prefixes.add(string.substring(0, string.length() - 15));\n\
    \        prefixes.add(string.substring(0, string.length() - 16));\n        prefixes.add(string.substring(0,\
    \ string.length() - 17));\n        prefixes.add(string.substring(0, string.length()\
    \ - 18));\n        prefixes.add(string.substring(0, string.length() - 19));\n\
    \        prefixes.add(string.substring(0, string.length() - 20));\n        prefixes.add(string.substring(0,\
    \ string.length() - 21));\n        prefixes.add(string.substring(0, string.length()\
    \ - 22));\n        prefixes.add(string.substring(0, string.length() - 23));\n\
    \        prefixes.add(string.substring(0, string.length() - 24));\n        prefixes.add(string.substring(0,\
    \ string.length() - 25));\n        prefixes.add(string.substring(0, string.length()\
    \ - 26));\n        prefixes.add(string.substring(0, string.length() - 27));\n\
    \        prefixes.add(string.substring(0, string.length() - 28));\n        prefixes.add(string.substring(0,\
    \ string.length() - 29));\n        prefixes.add(string.substring(0, string.length()\
    \ - 30));\n        prefixes.add(string.substring(0, string.length() - 31));\n\
    \        prefixes.add(string.substring(0, string.length() - 32));\n        prefixes.add(string.substring(0,\
    \ string.length() - 33));\n        prefixes.add(string.substring(0, string.length()\
    \ - 34));\n        prefixes.add(string.substring(0, string.length() - 35));\n\
    \        prefixes.add(string.substring(0, string.length() - 36));\n        prefixes.add(string.substring(0,\
    \ string.length() - 37));\n        prefixes.add(string.substring(0, string.length()\
    \ - 38));\n        prefixes.add(string.substring(0, string.length() - 39));\n\
    \        prefixes.add(string.substring(0, string.length() - 40));\n        prefixes.add(string.substring(0,\
    \ string.length() - 41));", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;", "        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRec(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        prefixes.add(\"\");\n        prefixes.add(string);\n\
    \        prefixes.add(string.substring(0, string.length() - 1));\n        prefixes.add(string.substring(0,\
    \ string.length() - 2));\n        prefixes.add(string.substring(0, string.length()\
    \ - 3));\n        prefixes.add(string.substring(0, string.length() - 4));\n  \
    \      prefixes.add(string.substring(0, string.length() - 5));\n        prefixes.add(string.substring(0,\
    \ string.length() - 6));\n        prefixes.add(string.substring(0, string.length()\
    \ - 7));\n        prefixes.add(string.substring(0, string.length() - 8));\n  \
    \      prefixes.add(string.substring(0, string.length() - 9));\n        prefixes.add(string.substring(0,\
    \ string.length() - 10));\n        prefixes.add(string.substring(0, string.length()\
    \ - 11));\n        prefixes.add(string.substring(0, string.length() - 12));\n\
    \        prefixes.add(string.substring(0, string.length() - 13));\n        prefixes.add(string.substring(0,\
    \ string.length() - 14));\n        prefixes.add(string.substring(0, string.length()\
    \ - 15));\n        prefixes.add(string.substring(0, string.length() - 16));\n\
    \        prefixes.add(string.substring(0, string.length() - 17));\n        prefixes.add(string.substring(0,\
    \ string.length() - 18));\n        prefixes.add(string.substring(0, string.length()\
    \ - 19));\n        prefixes.add(string.substring(0, string.length() - 20));\n\
    \        prefixes.add(string.substring(0, string.length() - 21));\n        prefixes.add(string.substring(0,\
    \ string.length() - 22));\n        prefixes.add(string.substring(0, string.length()\
    \ - 23));\n        prefixes.add(string.substring(0, string.length() - 24));\n\
    \        prefixes.add(string.substring(0, string.length() - 25));\n        prefixes.add(string.substring(0,\
    \ string.length() - 26));\n        prefixes.add(string.substring(0, string.length()\
    \ - 27));\n        prefixes.add(string.substring(0, string.length() - 28));\n\
    \        prefixes.add(string.substring(0, string.length() - 29));\n        prefixes.add(string.substring(0,\
    \ string.length() - 30));\n        prefixes.add(string.substring(0, string.length()\
    \ - 31));\n        prefixes.add(string.substring(0, string.length() - 32));\n\
    \        prefixes.add(string.substring(0, string.length() - 33));\n        prefixes.add(string.substring(0,\
    \ string.length() - 34));\n        prefixes.add(string.substring(0, string.length()\
    \ - 35));\n        prefixes.add(string.substring(0, string.length() - 36));\n\
    \        prefixes.add(string.substring(0, string.length() - 37));\n        prefixes.add(string.substring(0,\
    \ string.length() - 38));\n        prefixes.add(string.substring(0, string.length()\
    \ - 39));\n        prefixes.add(string.substring(0, string.length() - 40));\n\
    \        prefixes.add(string.substring(0, string.length() - 41));\n", "      \
    \  ArrayList<String> result = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> result = new ArrayList<String>();\n        allPrefixesHelper(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<>();\n        allPrefixesRecursive(string, \"\", result);\n  \
    \      return result;", "        ArrayList<String> result = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", result);\n        return result;", "      \
    \  ArrayList<String> prefixes = new ArrayList<>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", result);\n        return\
    \ result;", "        ArrayList<String> prefixes = new ArrayList<String>();\n \
    \       allPrefixesRecursive(string, \"\", prefixes);\n        return prefixes;",
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixesRecursive(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> prefixes\
    \ = new ArrayList<>();\n        allPrefixes(string, \"\", prefixes);\n       \
    \ return prefixes;", "        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        allPrefixes(string, \"\", prefixes);\n        return prefixes;", "  \
    \      ArrayList<String> result = new ArrayList<>();\n        allPrefixesRecursive(string,\
    \ \"\", result);\n        return result;", "        ArrayList<String> result =\
    \ new ArrayList<String>();\n        allPrefixes(string, \"\", result);\n     \
    \   return result;", "        ArrayList<String> result = new ArrayList<>();\n\
    \        allPrefixesHelper(string, \"\", result);\n        return result;", " \
    \       ArrayList<String> prefixes = new ArrayList<>();\n        prefixes.add(\"\
    \");\n        prefixes.addAll(allPrefixes(\"\", string));\n        return prefixes;",
  "        ArrayList<String> prefixes = new ArrayList<String>();\n        allPrefixes(string,\
    \ \"\", prefixes);\n        return prefixes;", "        ArrayList<String> result\
    \ = new ArrayList<String>();\n        allPrefixesRecursive(string, \"\", result);\n\
    \        return result;"]
stop_tokens:
- "\n    }\n"

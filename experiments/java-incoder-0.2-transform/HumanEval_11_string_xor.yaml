name: HumanEval_11_string_xor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Input are two strings a and b consisting only of 1s and\
  \ 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n\
  \    // >>> stringXor((\"010\"), (\"110\"))\n    // (\"100\")\n    public static\
  \ String stringXor(String a, String b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(stringXor((\"\
  111000\"), (\"101010\")).equals((\"010010\")));\n    assert(stringXor((\"1\"), (\"\
  1\")).equals((\"0\")));\n    assert(stringXor((\"0101\"), (\"0000\")).equals((\"\
  0101\")));\n    }\n\n}\n"
completions: ["        StringBuilder result = new StringBuilder();\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            String aChar = a;\n            String\
    \ bChar = b;\n            int aIndex = i;\n            int bIndex = i;\n     \
    \       while (true) {\n                aChar = aChar.substring(1);\n        \
    \        bChar = bChar.substring(1);\n                if (aChar.length() == 0\
    \ && bChar.length() == 0) {\n                    result.append(aChar);\n     \
    \               break;\n                }\n                if (aChar.length()\
    \ == 0) {\n                    result.append(bChar);\n                    break;\n\
    \                }\n                if (bChar.length() == 0) {\n             \
    \       result.append(aChar);\n                    break;\n                }\n\
    \                if (Integer.parseInt(aChar, 2) != 0) {\n                    aIndex++;\n\
    \                }\n                if (Integer.parseInt(bChar, 2) != 0) {\n \
    \                   bIndex++;\n                }\n            }\n            result.append(Integer.toString((Integer.parseInt(aChar,\
    \ 2) ^ Integer.parseInt(bChar, 2)), 2));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         String aChar = a.substring(i, i + 1);\n            String bChar = b.substring(i,\
    \ i + 1);\n            int aInt = Integer.parseInt(aChar);\n            int bInt\
    \ = Integer.parseInt(bChar);\n            int xorResult = aInt ^ bInt;\n     \
    \       result.append(xorResult);\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n   \
    \         int xor = aChar ^ bChar;\n            result.append(Integer.toBinaryString(xor));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n         \
    \   if (aChar != bChar) {\n                sb.append(aChar);\n            } else\
    \ {\n                sb.append(aChar);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         char c = a.charAt(i);\n            result.append(c);\n        }\n  \
    \      for (int i = 0; i < b.length(); i++) {\n            char c = b.charAt(i);\n\
    \            result.append(c);\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int x = a.charAt(i) - '0';\n            int y = b.charAt(i) - '0';\n     \
    \       int z = x ^ y;\n            char ch = (char) z;\n            sb.append(ch);\n\
    \        }\n        return sb.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   String aChar = a.substring(i, i + 1);\n            String bChar = b.substring(i,\
    \ i + 1);\n            int aInt = Integer.parseInt(aChar);\n            int bInt\
    \ = Integer.parseInt(bChar);\n            int xor = aInt ^ bInt;\n           \
    \ result.append(Integer.toString(xor));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int val = a.charAt(i) - '0';\n            int val2 = b.charAt(i) - '0';\n\
    \            int res = val ^ val2;\n            if (res < '0' || res > '9') {\n\
    \                sb.append('0');\n            }\n            sb.append(res);\n\
    \        }\n        return sb.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            int aChar = a.charAt(i);\n\
    \            int bChar = b.charAt(i);\n            if (aChar != bChar) {\n   \
    \             sb.append(aChar);\n            } else {\n                sb.append(aChar);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n   \
    \         if (aChar != bChar) {\n                result.append(aChar);\n     \
    \       } else {\n                result.append(aChar);\n            }\n     \
    \   }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int val = a.charAt(i) - '0';\n            int val2 = b.charAt(i) - '0';\n\
    \            int xor = val ^ val2;\n            result.append(String.format(\"\
    %1$02x\", xor));\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            int x = Integer.parseInt(a.substring(i, i + 1), 2);\n       \
    \     int y = Integer.parseInt(b.substring(i, i + 1), 2);\n            int z =\
    \ x ^ y;\n            result.append(Integer.toBinaryString(z));\n        }\n \
    \       return result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n          \
    \  char c = a.charAt(i);\n            char d = b.charAt(i);\n            int x\
    \ = Character.getNumericValue(c);\n            int y = Character.getNumericValue(d);\n\
    \            int z = x ^ y;\n            String s = Integer.toBinaryString(z);\n\
    \            sb.append(s);\n        }\n        return sb.toString();", "     \
    \   StringBuilder result = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n\
    \            int xor = aChar ^ bChar;\n            result.append(Integer.toBinaryString(xor));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   char ca = a.charAt(i);\n            char cb = b.charAt(i);\n            if\
    \ (ca == '0' && cb == '0') {\n                sb.append('0');\n            } else\
    \ {\n                sb.append('1');\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            int x = Character.getNumericValue(a.charAt(i));\n      \
    \      int y = Character.getNumericValue(b.charAt(i));\n            int z = x\
    \ ^ y;\n            sb.append((char) z);\n        }\n        return sb.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n   \
    \         if (aChar != bChar) {\n                result.append(aChar);\n     \
    \       } else {\n                result.append(aChar);\n            }\n     \
    \   }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            int aChar = a.charAt(i);\n\
    \            int bChar = b.charAt(i);\n            int xor = aChar ^ bChar;\n\
    \            if (xor > 9) {\n                xor = xor - 10;\n            }\n\
    \            if (xor < 10) {\n                xor = xor + 10;\n            }\n\
    \            sb.append((char) xor);\n        }\n        return sb.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   String aChar = a.substring(i, i + 1);\n            String bChar = b.substring(i,\
    \ i + 1);\n            int aInt = Integer.parseInt(aChar, 2);\n            int\
    \ bInt = Integer.parseInt(bChar, 2);\n            int xor = aInt ^ bInt;\n   \
    \         String s = Integer.toString(xor, 2);\n            sb.append(s);\n  \
    \      }\n        return sb.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   result.append(a.charAt(i));\n            result.append(b.charAt(i));\n   \
    \     }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n         \
    \   int xor = aChar ^ bChar;\n            result.append(String.format(\"%1$02x\"\
    , xor));\n        }\n        return result.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n          \
    \  int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n          \
    \  int xor = aChar ^ bChar;\n            if(xor < 0)\n                xor = -xor;\n\
    \            if(xor > 0)\n                sb.append(xor);\n        }\n       \
    \ return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n   \
    \         if (aChar != bChar) {\n                result.append(aChar);\n     \
    \       } else {\n                result.append(aChar);\n            }\n     \
    \   }\n        return result.toString();", "        StringBuilder result = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   String aChar = a;\n            String bChar = b;\n            int aIndex =\
    \ i;\n            int bIndex = i;\n            while (true) {\n              \
    \  aChar = aChar.substring(0, aIndex) + aChar.substring(aIndex + 1, aIndex + aChar.length());\n\
    \                bChar = bChar.substring(0, bIndex) + bChar.substring(bIndex +\
    \ 1, bIndex + bChar.length());\n                if (aChar.length() == 0 || bChar.length()\
    \ == 0) {\n                    break;\n                }\n                if (Integer.parseInt(aChar,\
    \ 2) == Integer.parseInt(bChar, 2)) {\n                    aIndex += aChar.length();\n\
    \                    bIndex += bChar.length();\n                } else {\n   \
    \                 aIndex++;\n                    bIndex++;\n                }\n\
    \            }\n            result.append(Integer.toString((Integer.parseInt(aChar,\
    \ 2) ^ Integer.parseInt(bChar, 2)), 2));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n         \
    \   if (aChar != bChar) {\n                sb.append(aChar);\n            } else\
    \ {\n                sb.append(aChar);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n         \
    \   if (aChar != bChar) {\n                sb.append(aChar);\n            } else\
    \ {\n                sb.append(aChar);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n         \
    \   if (aChar != bChar) {\n                sb.append(aChar);\n            } else\
    \ {\n                sb.append(aChar);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   char ca = a.charAt(i);\n            char cb = b.charAt(i);\n            if\
    \ (ca == '0' && cb == '0') {\n                sb.append('0');\n            } else\
    \ if (ca == '0' && cb == '1') {\n                sb.append('1');\n           \
    \ } else if (ca == '1' && cb == '0') {\n                sb.append('1');\n    \
    \        } else if (ca == '1' && cb == '1') {\n                sb.append('0');\n\
    \            } else {\n                sb.append(ca);\n            }\n       \
    \ }\n        return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            String aChar = a;\n            String bChar\
    \ = b;\n            int aIndex = i;\n            int bIndex = i;\n           \
    \ int xor = 0;\n            while (true) {\n                aChar = aChar.substring(1);\n\
    \                bChar = bChar.substring(1);\n                if (aChar.length()\
    \ == 0) {\n                    aChar = \"0\";\n                }\n           \
    \     if (bChar.length() == 0) {\n                    bChar = \"0\";\n       \
    \         }\n                aChar = Integer.parseInt(aChar, 2);\n           \
    \     bChar = Integer.parseInt(bChar, 2);\n                xor = xor ^ aChar ^\
    \ bChar;\n                if (xor < 0) {\n                    xor = xor + 256;\n\
    \                }\n                if (xor > 255) {\n                    xor\
    \ = xor - 256;\n                }\n                if (xor == 0) {\n         \
    \           break;\n                }\n                result.append(Integer.toString(xor,\
    \ 2));\n            }\n        }\n        return result.toString();", "      \
    \  StringBuilder result = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         String aChar = a.substring(i, i + 1);\n            String bChar = b.substring(i,\
    \ i + 1);\n            int aInt = Integer.parseInt(aChar, 2);\n            int\
    \ bInt = Integer.parseInt(bChar, 2);\n            int xor = aInt ^ bInt;\n   \
    \         result.append(Integer.toString(xor, 2));\n        }\n        return\
    \ result.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = Integer.parseInt(a.substring(i, i + 1));\n            int bChar\
    \ = Integer.parseInt(b.substring(i, i + 1));\n            int xor = aChar ^ bChar;\n\
    \            if (xor < 10) {\n                xor = '0' + xor;\n            }\n\
    \            sb.append(xor);\n        }\n        return sb.toString();", "   \
    \     StringBuilder result = new StringBuilder();\n        for (int i = 0; i <\
    \ a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int val = a.charAt(i) - '0';\n            int val2 = b.charAt(i) - '0';\n\
    \            int res = val^val2;\n            if (res < 10) {\n              \
    \  sb.append((char) ('0' + res));\n            } else {\n                sb.append((char)\
    \ ('0' + res - 10));\n            }\n        }\n        return sb.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   int aChar = a.charAt(i);\n            int bChar = b.charAt(i);\n         \
    \   if (aChar != bChar) {\n                sb.append(aChar);\n            } else\
    \ {\n                sb.append(aChar);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   char ca = a.charAt(i);\n            char cb = b.charAt(i);\n            if\
    \ (ca == '0' && cb == '0') {\n                sb.append('0');\n            } else\
    \ {\n                sb.append(ca ^ cb);\n            }\n        }\n        return\
    \ sb.toString();", "        StringBuilder result = new StringBuilder();\n    \
    \    for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();",
  "        StringBuilder result = new StringBuilder();\n        for (int i = 0; i\
    \ < a.length(); i++) {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for(int i = 0; i < a.length(); i++) {\n          \
    \  if(a.charAt(i) == '1' && b.charAt(i) == '1') {\n                sb.append('1');\n\
    \            } else if(a.charAt(i) == '0' && b.charAt(i) == '0') {\n         \
    \       sb.append('0');\n            } else {\n                sb.append('0');\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ result = new StringBuilder();\n        for (int i = 0; i < a.length(); i++)\
    \ {\n            result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder result\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         result.append(a.charAt(i));\n            result.append(b.charAt(i));\n\
    \        }\n        return result.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   char ca = a.charAt(i);\n            char cb = b.charAt(i);\n            if\
    \ (ca == '0' && cb == '0') {\n                sb.append('0');\n            } else\
    \ if (ca == '1' && cb == '0') {\n                sb.append('1');\n           \
    \ } else if (ca == '0' && cb == '1') {\n                sb.append('1');\n    \
    \        } else if (ca == '1' && cb == '1') {\n                sb.append('0');\n\
    \            } else {\n                sb.append(ca);\n            }\n       \
    \ }\n        return sb.toString();", "        StringBuilder result = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            result.append(a.charAt(i));\n\
    \            result.append(b.charAt(i));\n        }\n        return result.toString();"]
stop_tokens:
- "\n    }\n"

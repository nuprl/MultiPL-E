name: HumanEval_135_can_arrange
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Create a function which returns the largest index of an\
  \ element which\n    // is not greater than or equal to the element immediately\
  \ preceding it. If\n    // no such element exists then return -1. The given array\
  \ will not contain\n    // duplicate values.\n    // Examples:\n    // >>> canArrange((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)3l, (long)5l))))\n\
  \    // (3l)\n    // >>> canArrange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l))))\n    // (-1l)\n    public static long canArrange(ArrayList<Long>\
  \ arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(canArrange((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)3l, (long)5l))))\
  \ == (3l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)4l, (long)5l)))) == (-1l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)4l, (long)2l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)10l))))\
  \ == (2l));\n    assert(canArrange((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)8l, (long)5l, (long)7l, (long)3l)))) == (4l));\n    assert(canArrange((new\
  \ ArrayList<Long>(Arrays.asList()))) == (-1l));\n    }\n\n}\n"
completions: ["        long maxIndex = -1;\n        long maxValue = -1;\n        long\
    \ currentValue = -1;\n        for(long i = 0; i < arr.size(); i++) {\n       \
    \     currentValue = arr.get(i);\n            if(currentValue >= maxValue) {\n\
    \                maxIndex = i;\n                maxValue = currentValue;\n   \
    \         }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxValue =\
    \ arr.get(i);\n                maxIndex = i;\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value > maxValue) {\n                maxValue = value;\n     \
    \           maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue <= maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        long currentValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ >= maxValue) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for(long i = 0; i < arr.size(); i++) {\n       \
    \     currentIndex = i;\n            currentValue = arr.get(i);\n            for(long\
    \ j = i + 1; j < arr.size(); j++) {\n                long value = arr.get(j);\n\
    \                if(value <= currentValue) {\n                    currentIndex\
    \ = j;\n                    currentValue = value;\n                }\n       \
    \     }\n            if(currentIndex > maxIndex) {\n                maxIndex =\
    \ currentIndex;\n                maxValue = currentValue;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long max\
    \ = -1;\n        long curr = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n \
    \               curr = i;\n            }\n        }\n        return curr;", " \
    \       long max = -1;\n        long maxIndex = -1;\n        long currentMax =\
    \ -1;\n        long currentMaxIndex = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentMax = arr.get(i);\n            currentMaxIndex =\
    \ i;\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ <= currentMax) {\n                    currentMax = arr.get(j);\n           \
    \         currentMaxIndex = j;\n                }\n            }\n           \
    \ if(currentMaxIndex != maxIndex) {\n                max = currentMax;\n     \
    \           maxIndex = currentMaxIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue > maxValue)\
    \ {\n                maxValue = currentValue;\n                maxIndex = i;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        long currentMax = -1;\n        long currentMaxIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentMax\
    \ = arr.get(i);\n            currentMaxIndex = i;\n            for(int j = i +\
    \ 1; j < arr.size(); j++) {\n                if(arr.get(j) <= currentMax) {\n\
    \                    currentMax = arr.get(j);\n                    currentMaxIndex\
    \ = j;\n                }\n            }\n            if(currentMaxIndex != maxIndex)\
    \ {\n                max = currentMax;\n                maxIndex = currentMaxIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        int i = 0;\n        while (i < arr.size()) {\n            if (arr.get(i)\
    \ <= arr.get(i-1)) {\n                largest = i;\n                break;\n \
    \           }\n            i++;\n        }\n        return largest;", "      \
    \  long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n                max =\
    \ Math.max(max, arr.get(i));\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ <= arr.get(i-1)) {\n                max = Math.max(max, arr.get(i));\n     \
    \           maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr.get(i);\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr.get(0);\n        long currentVal = arr.get(0);\n  \
    \      for (int i = 1; i < arr.size(); i++) {\n            if (currentVal > maxVal)\
    \ {\n                maxIndex = i;\n                maxVal = currentVal;\n   \
    \         } else if (currentVal < maxVal) {\n                currentVal = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n        \
    \    currentIndex = i;\n            currentValue = arr.get(i);\n            for(int\
    \ j = i; j < arr.size(); j++) {\n                long value = arr.get(j);\n  \
    \              if(value <= currentValue) {\n                    break;\n     \
    \           }\n                currentIndex = j;\n                currentValue\
    \ = value;\n            }\n            if(currentIndex > maxIndex) {\n       \
    \         maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        long\
    \ previousValue = -1;\n        for (int i = 0; i < arr.size(); i++) {\n      \
    \      currentValue = arr.get(i);\n            if (currentValue > maxValue) {\n\
    \                maxValue = currentValue;\n                maxIndex = i;\n   \
    \         }\n            if (currentValue == previousValue) {\n              \
    \  maxIndex = -1;\n            }\n            previousValue = currentValue;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long currentMax = -1;\n        for(long i = 0; i\
    \ < arr.size(); i++) {\n            currentIndex = i;\n            currentMax\
    \ = arr.get(i);\n            while(currentIndex > 0 && currentMax < arr.get(currentIndex\
    \ - 1)) {\n                currentIndex--;\n                currentMax = arr.get(currentIndex);\n\
    \            }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxIndex = i;\n                maxVal = arr.get(i);\n           \
    \ }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n    \
    \    long currentIndex = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentIndex\
    \ = i;\n            currentValue = arr.get(i);\n            previousValue = arr.get(i\
    \ - 1);\n            if(currentValue >= previousValue) {\n                maxIndex\
    \ = currentIndex;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long currentIndex = 0;\n        long currentMax\
    \ = arr.get(0);\n        for(long i : arr) {\n            if(i > currentMax) {\n\
    \                currentMax = i;\n                currentIndex = i;\n        \
    \    }\n        }\n        if(currentIndex != -1) {\n            for(long i :\
    \ arr) {\n                if(i <= currentIndex) {\n                    currentIndex\
    \ = i;\n                }\n            }\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentIndex = -1;\n        long currentValue =\
    \ -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentIndex\
    \ = i;\n            currentValue = arr.get(i);\n            while(currentIndex\
    \ > 0 && currentValue >= arr.get(currentIndex - 1)) {\n                currentIndex--;\n\
    \                currentValue = arr.get(currentIndex);\n            }\n      \
    \      if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentIndex = -1;\n        long currentValue = -1;\n        for(long\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            while(currentIndex > 0 && currentValue >= arr[currentIndex-1])\
    \ {\n                currentIndex--;\n                currentValue = arr[currentIndex];\n\
    \            }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = currentValue;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            previousValue = currentValue;\n            for(int\
    \ j = i; j < arr.size(); j++) {\n                currentValue = arr.get(j);\n\
    \                if(currentValue > previousValue) {\n                    maxIndex\
    \ = j;\n                    maxValue = currentValue;\n                    break;\n\
    \                }\n            }\n        }\n        return maxIndex;", "   \
    \     long largest = -1;\n        long index = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) > largest) {\n               \
    \ largest = arr.get(i);\n                index = i;\n            }\n        }\n\
    \        return index;", "        long maxIndex = -1;\n        long maxValue =\
    \ -1;\n        long currentValue = -1;\n        long currentIndex = -1;\n    \
    \    for(int i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n\
    \            currentIndex = i;\n            for(int j = i; j < arr.size(); j++)\
    \ {\n                if(arr.get(j) <= currentValue) {\n                    currentIndex\
    \ = j;\n                    break;\n                }\n            }\n       \
    \     if(currentIndex != maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long curr = arr.get(0);\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >= curr)\
    \ {\n                max = i;\n            } else {\n                curr = arr.get(i);\n\
    \            }\n        }\n        return max;", "        long max = -1;\n   \
    \     long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n    \
    \        long value = arr.get(i);\n            if(i == 0) {\n                max\
    \ = value;\n                maxIndex = i;\n                continue;\n       \
    \     }\n            if(value >= max) {\n                max = value;\n      \
    \          maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for (long i = 0; i < arr.size();\
    \ i++) {\n            currentIndex = i;\n            currentValue = arr.get(i);\n\
    \            if (currentValue >= maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue <= maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxIndex =\
    \ i;\n                maxValue = arr.get(i);\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        long currentValue = -1;\n        long previousValue = -1;\n        for(long\
    \ i : arr) {\n            currentValue = i;\n            previousValue = currentValue;\n\
    \            for(long j : arr) {\n                if(j > currentValue) {\n   \
    \                 currentValue = j;\n                    previousValue = currentValue;\n\
    \                }\n            }\n            if(currentValue > maxValue) {\n\
    \                maxIndex = currentValue;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        for(long\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue >= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentIndex = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            for(int j = i; j < arr.size(); j++) {\n         \
    \       currentIndex = j;\n                currentValue = arr.get(j);\n      \
    \          if(currentValue >= currentIndex) {\n                    break;\n  \
    \              }\n            }\n            if(currentIndex > maxIndex) {\n \
    \               maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for(long i = 0; i < arr.size(); i++) {\n       \
    \     currentIndex = i;\n            currentValue = arr.get(i);\n            for(long\
    \ j = i; j < arr.size(); j++) {\n                currentIndex = j;\n         \
    \       currentValue = arr.get(j);\n                if(currentValue >= currentIndex)\
    \ {\n                    break;\n                }\n            }\n          \
    \  if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n \
    \               maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long maxIndex = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(maxIndex))\
    \ {\n                maxIndex = i;\n            }\n        }\n        if(maxIndex\
    \ != -1) {\n            max = arr.get(maxIndex);\n        }\n        return max;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        long currentVal\
    \ = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            currentVal\
    \ = arr.get(i);\n            if(currentVal > maxVal) {\n                maxIndex\
    \ = i;\n                maxVal = currentVal;\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxVal) {\n                maxIndex = i;\n                maxVal = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(value > maxValue) {\n\
    \                maxValue = value;\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = -1;\n        long value = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            value = arr.get(i);\n            if(value\
    \ <= maxValue) {\n                maxIndex = i;\n                maxValue = value;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for (long index = 0; index < arr.size(); index++)\
    \ {\n            currentIndex = index;\n            currentValue = arr.get(index);\n\
    \            if (currentValue >= maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        int maxIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) < arr.get(i-1)) {\n                max = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue <= maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr.get(0);\n        long currentIndex = 0;\n        for(long value : arr)\
    \ {\n            if(value > maxValue) {\n                maxValue = value;\n \
    \               maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ >= maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr.get(0);\n        long currentValue = arr.get(0);\n\
    \        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) > currentValue)\
    \ {\n                currentValue = arr.get(i);\n                maxIndex = i;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) <= arr.get(i-1)) {\n                max = Math.max(max,\
    \ arr.get(i));\n                maxIndex = i;\n            }\n        }\n    \
    \    return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ -1;\n        long currentIndex = -1;\n        long currentValue = -1;\n    \
    \    for(Long value : arr) {\n            currentIndex = arr.indexOf(value);\n\
    \            currentValue = value;\n            if(currentIndex > maxIndex) {\n\
    \                maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long curr = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > curr) {\n                max = i;\n        \
    \        curr = arr.get(i);\n            }\n        }\n        return max;", " \
    \       long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if(max\
    \ < value) {\n                max = value;\n                maxIndex = i;\n  \
    \          }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) <= arr.get(i-1)) {\n                max = Math.max(max,\
    \ arr.get(i));\n                maxIndex = i;\n            }\n        }\n    \
    \    return maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n\
    \        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i\
    \ - 1)) {\n                max = Math.max(max, arr.get(i));\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long max\
    \ = -1;\n        long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long val = arr.get(i);\n            if(val > max) {\n       \
    \         max = val;\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) <=\
    \ arr.get(i-1)) {\n                max = Math.max(max, arr.get(i));\n        \
    \        maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue <= maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        long currentIndex = -1;\n        long currentValue = -1;\n  \
    \      for(int i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n\
    \            currentValue = arr.get(i);\n            for(int j = i; j < arr.size();\
    \ j++) {\n                long value = arr.get(j);\n                if(value <=\
    \ currentValue) {\n                    currentIndex = j;\n                   \
    \ currentValue = value;\n                }\n            }\n            if(currentIndex\
    \ > maxIndex) {\n                maxIndex = currentIndex;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long currentMax = -1;\n        long currentIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentMax\
    \ = arr.get(i);\n            currentIndex = i;\n            for(int j = i + 1;\
    \ j < arr.size(); j++) {\n                if(arr.get(j) <= currentMax) {\n   \
    \                 currentMax = arr.get(j);\n                    currentIndex =\
    \ j;\n                }\n            }\n            if(currentIndex != maxIndex)\
    \ {\n                maxIndex = currentIndex;\n            }\n        }\n    \
    \    return maxIndex;", "        long maxIndex = -1;\n        long currentMax\
    \ = arr.get(0);\n        long currentIndex = -1;\n        for(long i : arr) {\n\
    \            if(i <= currentMax) {\n                currentMax = i;\n        \
    \        currentIndex = i;\n            }\n        }\n        if(currentIndex\
    \ != -1) {\n            for(long i : arr) {\n                if(i <= currentIndex\
    \ && i != currentMax) {\n                    maxIndex = i;\n                 \
    \   break;\n                }\n            }\n        }\n        return maxIndex;",
  "        long largest = -1;\n        long lastIndex = -1;\n        long currentIndex\
    \ = -1;\n        for(long i : arr) {\n            currentIndex = i;\n        \
    \    if(currentIndex > lastIndex) {\n                largest = currentIndex;\n\
    \                lastIndex = currentIndex;\n            }\n        }\n       \
    \ return largest;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        long index = 0;\n        for\
    \ (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n\
    \                maxIndex = index;\n                maxValue = arr.get(i);\n \
    \           }\n            index++;\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            if(arr.get(i) <= maxValue) {\n      \
    \          maxIndex = i;\n                maxValue = arr.get(i);\n           \
    \ }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n    \
    \    long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n    \
    \        if(arr.get(i) >= maxValue) {\n                maxIndex = i;\n       \
    \         maxValue = arr.get(i);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentMax = -1;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n          \
    \  for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j) >= currentMax)\
    \ {\n                    currentMax = arr.get(j);\n                }\n       \
    \     }\n            if(currentMax != -1) {\n                maxIndex = i;\n \
    \               break;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentIndex = i;\n            currentValue = arr.get(i);\n\
    \            for(int j = i; j < arr.size(); j++) {\n                if(arr.get(j)\
    \ <= currentValue) {\n                    currentIndex = j;\n                \
    \    currentValue = arr.get(j);\n                }\n            }\n          \
    \  if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n \
    \               maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long previous = -1;\n     \
    \   for(long i : arr) {\n            if(i > largest) {\n                largest\
    \ = i;\n                previous = -1;\n            }\n            else if(i <\
    \ previous) {\n                previous = i;\n            }\n        }\n     \
    \   return largest;", "        long largest = -1;\n        long curr = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ curr) {\n                largest = i;\n            }\n            curr = arr.get(i);\n\
    \        }\n        return largest;", "        long largest = -1;\n        long\
    \ current = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n    \
    \        if (arr.get(i) <= current) {\n                largest = i;\n        \
    \    } else {\n                current = arr.get(i);\n            }\n        }\n\
    \        return largest;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        for(int i = 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            long prevValue = arr.get(i - 1);\n            if(value\
    \ > prevValue) {\n                maxIndex = i;\n                maxValue = value;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        for(long\
    \ index = 0; index < arr.size(); index++) {\n            currentValue = arr.get(index);\n\
    \            if(currentValue <= maxValue) {\n                maxIndex = index;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentIndex = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            for(int j = i; j < arr.size(); j++) {\n         \
    \       long value = arr.get(j);\n                if(value <= currentValue) {\n\
    \                    currentIndex = j;\n                    currentValue = value;\n\
    \                }\n            }\n            if(maxIndex == -1 || currentValue\
    \ > maxValue) {\n                maxIndex = currentIndex;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr.get(i);\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            previousValue = currentValue;\n            for(int\
    \ j = i; j < arr.size(); j++) {\n                currentValue = arr.get(j);\n\
    \                if(currentValue >= previousValue) {\n                    break;\n\
    \                }\n                previousValue = currentValue;\n          \
    \  }\n            if(maxIndex == -1 || currentValue > maxValue) {\n          \
    \      maxIndex = i;\n                maxValue = currentValue;\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        for(long i = 0; i <\
    \ arr.size(); i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ >= maxValue) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for(long i = 0; i < arr.size(); i++) {\n       \
    \     currentIndex = i;\n            currentValue = arr.get(i);\n            for(long\
    \ j = i; j < arr.size(); j++) {\n                long value = arr.get(j);\n  \
    \              if(value <= currentValue) {\n                    currentIndex =\
    \ j;\n                    currentValue = value;\n                }\n         \
    \   }\n            if(currentIndex != maxIndex) {\n                maxIndex =\
    \ currentIndex;\n                maxValue = currentValue;\n            }\n   \
    \     }\n        return maxIndex;", "        long largest = -1;\n        long\
    \ index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(index)) {\n                index = i;\n            }\n        }\n\
    \        if(index != -1) {\n            largest = index;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = -1;\n     \
    \   long currentIndex = -1;\n        long currentValue = -1;\n        for(long\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            while(currentIndex > 0 && currentValue >= arr.get(currentIndex\
    \ - 1)) {\n                currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = currentValue;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ >= maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long largest\
    \ = -1;\n        long previous = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long current = arr.get(i);\n            if(current > largest)\
    \ {\n                largest = current;\n                previous = current;\n\
    \            } else if(current == largest) {\n                previous = current;\n\
    \            }\n        }\n        if(largest == -1) {\n            return -1;\n\
    \        }\n        for(int i = 0; i < arr.size(); i++) {\n            long current\
    \ = arr.get(i);\n            if(current > largest) {\n                largest\
    \ = current;\n                previous = current;\n            } else if(current\
    \ == largest) {\n                previous = current;\n            }\n        }\n\
    \        return largest;", "        long max = -1;\n        long maxIndex = -1;\n\
    \        long currentMax = -1;\n        long currentMaxIndex = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n      \
    \      currentMaxIndex = i;\n            for(int j = i + 1; j < arr.size(); j++)\
    \ {\n                if(arr.get(j) > currentMax) {\n                    currentMax\
    \ = arr.get(j);\n                    currentMaxIndex = j;\n                }\n\
    \            }\n            if(currentMaxIndex != maxIndex) {\n              \
    \  max = currentMax;\n                maxIndex = currentMaxIndex;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n   \
    \         long value = arr.get(i);\n            long previousValue = arr.get(i-1);\n\
    \            if(value > previousValue) {\n                maxIndex = i;\n    \
    \            maxValue = value;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxValue = arr.get(i);\n                maxIndex = i;\n       \
    \     }\n        }\n        return maxIndex;", "        long max = -1;\n     \
    \   long maxIndex = -1;\n        for(int i = 0; i < arr.size(); i++) {\n     \
    \       long curr = arr.get(i);\n            if(max < curr) {\n              \
    \  max = curr;\n                maxIndex = i;\n            }\n        }\n    \
    \    return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ -1;\n        for(int i = 1; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value > maxValue) {\n                maxIndex =\
    \ i;\n                maxValue = value;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        long previousValue = -1;\n        for (long\
    \ index : arr.subList(1, arr.size())) {\n            currentValue = arr.get(index);\n\
    \            if (currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = index;\n            }\n            if (currentValue\
    \ == previousValue) {\n                maxIndex = -1;\n            }\n       \
    \     previousValue = currentValue;\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for(long i = 0; i < arr.size();\
    \ i++) {\n            currentIndex = i;\n            currentValue = arr.get(i);\n\
    \            for(long j = i; j < arr.size(); j++) {\n                long value\
    \ = arr.get(j);\n                if(currentValue <= value) {\n               \
    \     currentIndex = j;\n                    currentValue = value;\n         \
    \       }\n            }\n            if(currentIndex > maxIndex) {\n        \
    \        maxIndex = currentIndex;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        for(int i = 1; i < arr.size(); i++) {\n\
    \            if(arr.get(i) <= arr.get(i - 1)) {\n                max = Math.max(max,\
    \ arr.get(i));\n                maxIndex = i;\n            }\n        }\n    \
    \    return maxIndex;", "        long maxIndex = -1;\n        long currentMax\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            long nextValue = arr.get(i + 1);\n            if(value\
    \ <= nextValue) {\n                if(currentMax < value) {\n                \
    \    currentMax = value;\n                    maxIndex = i;\n                }\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long current = 0;\n        for(long i : arr) {\n            if(i\
    \ == current) {\n                continue;\n            }\n            if(i ==\
    \ current + 1) {\n                largest = i;\n                continue;\n  \
    \          }\n            if(i == current - 1) {\n                largest = i;\n\
    \                continue;\n            }\n            if(i == current + 2) {\n\
    \                largest = i;\n                continue;\n            }\n    \
    \        if(i == current - 2) {\n                largest = i;\n              \
    \  continue;\n            }\n            if(i == current + 3) {\n            \
    \    largest = i;\n                continue;\n            }\n            if(i\
    \ == current - 3) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current + 4) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current -\
    \ 4) {\n                largest = i;\n                continue;\n            }\n\
    \            if(i == current + 5) {\n                largest = i;\n          \
    \      continue;\n            }\n            if(i == current - 5) {\n        \
    \        largest = i;\n                continue;\n            }\n            if(i\
    \ == current + 6) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current - 6) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 7) {\n                largest = i;\n                continue;\n            }\n\
    \            if(i == current - 7) {\n                largest = i;\n          \
    \      continue;\n            }\n            if(i == current + 8) {\n        \
    \        largest = i;\n                continue;\n            }\n            if(i\
    \ == current - 8) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current + 9) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current -\
    \ 9) {\n                largest = i;\n                continue;\n            }\n\
    \            if(i == current + 10) {\n                largest = i;\n         \
    \       continue;\n            }\n            if(i == current - 10) {\n      \
    \          largest = i;\n                continue;\n            }\n          \
    \  if(i == current + 11) {\n                largest = i;\n                continue;\n\
    \            }\n            if(i == current - 11) {\n                largest =\
    \ i;\n                continue;\n            }\n            if(i == current +\
    \ 12) {\n                largest = i;\n                continue;\n           \
    \ }\n            if(i == current - 12) {\n                largest = i;\n     \
    \           continue;\n            }\n            if(i == current + 13) {", " \
    \       long largest = -1;\n        long index = -1;\n        for(int i = 1; i\
    \ < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i - 1)) {\n     \
    \           index = i;\n                largest = arr.get(index);\n          \
    \  }\n        }\n        return largest;", "        long maxIndex = -1;\n    \
    \    long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(!currentValue >= maxValue) {\n               \
    \ maxValue = currentValue;\n                maxIndex = i;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentIndex = -1;\n        long currentValue =\
    \ -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentIndex\
    \ = i;\n            currentValue = arr.get(i);\n            for(long j = i + 1;\
    \ j < arr.size(); j++) {\n                long value = arr.get(j);\n         \
    \       if(currentValue > value) {\n                    currentIndex = j;\n  \
    \                  currentValue = value;\n                }\n            }\n \
    \           if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        long previousValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = i;\n            }\n            if(currentValue ==\
    \ previousValue) {\n                maxIndex = -1;\n            }\n          \
    \  previousValue = currentValue;\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue > maxValue) {\n                maxValue\
    \ = currentValue;\n                maxIndex = i;\n            }\n        }\n \
    \       return maxIndex;", "        long max = -1;\n        long maxIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(maxIndex))\
    \ {\n                max = arr.get(i);\n                maxIndex = i;\n      \
    \      }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr.get(0);\n        long currentVal = arr.get(0);\n  \
    \      for(int i = 1; i < arr.size(); i++) {\n            currentVal = arr.get(i);\n\
    \            if(currentVal > maxVal) {\n                maxVal = currentVal;\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if (currentValue >= maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value > largest) {\n  \
    \              largest = value;\n                index = i;\n            }\n \
    \       }\n        return index;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n     \
    \       if (arr.get(i) > maxVal) {\n                maxVal = arr.get(i);\n   \
    \             maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long previousIndex\
    \ = -1;\n        for(long i : arr) {\n            currentIndex = i;\n        \
    \    previousIndex = currentIndex;\n            while(currentIndex > 0) {\n  \
    \              if(currentIndex >= previousIndex) {\n                    break;\n\
    \                }\n                currentIndex--;\n            }\n         \
    \   if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long index = -1;\n        long prevIndex = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > largest) {\n    \
    \            largest = arr.get(i);\n                index = i;\n            }\n\
    \            if(arr.get(i) < arr.get(prevIndex)) {\n                prevIndex\
    \ = i;\n            }\n        }\n        return index;", "        long maxIndex\
    \ = -1;\n        long currentIndex = -1;\n        long maxValue = -1;\n      \
    \  for (int i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n   \
    \         if (arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            long\
    \ previousValue = arr.get(i-1);\n            if(value > previousValue) {\n   \
    \             maxIndex = i;\n                maxValue = value;\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n   \
    \         if (arr.get(i) > maxValue) {\n                maxIndex = i;\n      \
    \          maxValue = arr.get(i);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxVal = arr.get(i);\n                maxIndex = i;\n           \
    \ }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n    \
    \    long maxValue = -1;\n        for(int i = 1; i < arr.size(); i++) {\n    \
    \        long value = arr.get(i);\n            if(value >= maxValue) {\n     \
    \           maxIndex = i;\n                maxValue = value;\n            }\n\
    \        }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        long currentMax = -1;\n        long currentMaxIndex = -1;\n \
    \       for(long i = 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n\
    \            currentMaxIndex = i;\n            for(int j = i; j < arr.size();\
    \ j++) {\n                if(arr.get(j) <= currentMax) {\n                   \
    \ currentMax = arr.get(j);\n                    currentMaxIndex = j;\n       \
    \         }\n            }\n            if(currentMaxIndex != maxIndex) {\n  \
    \              max = currentMax;\n                maxIndex = currentMaxIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(i == 0 || value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = i;\n      \
    \      }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr.get(0);\n        long currentIndex = -1;\n      \
    \  long currentValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++)\
    \ {\n            currentIndex = i;\n            currentValue = arr.get(i);\n \
    \           if (currentValue > maxValue) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            } else if (currentValue\
    \ == maxValue) {\n                maxIndex = currentIndex;\n            }\n  \
    \      }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentMax = -1;\n        long currentIndex = -1;\n        long currentElement\
    \ = -1;\n        for(long element : arr) {\n            currentMax = Math.max(currentMax,\
    \ element);\n            currentIndex = 0;\n            while(currentIndex < arr.size()\
    \ && element > arr.get(currentIndex)) {\n                currentIndex++;\n   \
    \         }\n            currentElement = arr.get(currentIndex);\n           \
    \ if(currentIndex == arr.size() || element < currentElement) {\n             \
    \   maxIndex = currentIndex;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr.get(i);\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue >= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >=\
    \ maxValue) {\n                maxIndex = i;\n                maxValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxIndex =\
    \ i;\n                maxValue = arr.get(i);\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        long currentValue = -1;\n        long previousValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        previousValue = arr.get(i-1);\n            if(currentValue >= previousValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        for(int i = 1; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) <= arr.get(i - 1)) {\n                maxIndex\
    \ = i;\n                maxValue = arr.get(i);\n            }\n        }\n   \
    \     return maxIndex;", "        long largest = -1;\n        long current = 0;\n\
    \        for(long i : arr) {\n            current = i;\n            if(current\
    \ > largest) {\n                largest = current;\n            }\n        }\n\
    \        return largest;", "        long maxIndex = -1;\n        long currentIndex\
    \ = -1;\n        long currentMax = -1;\n        for(long i : arr) {\n        \
    \    currentMax = Math.max(currentMax, i);\n            currentIndex = i;\n  \
    \          if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for(long i = 0; i < arr.size(); i++) {\n       \
    \     currentIndex = i;\n            currentValue = arr.get(i);\n            while(currentIndex\
    \ > 0 && currentValue < currentIndex) {\n                currentIndex--;\n   \
    \             currentValue = arr.get(currentIndex);\n            }\n         \
    \   if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long previous = -1;\n     \
    \   for (long i : arr) {\n            if (i > largest) {\n                largest\
    \ = i;\n                previous = -1;\n            } else if (i == largest) {\n\
    \                previous = i;\n            }\n        }\n        if (largest\
    \ == -1) {\n            return -1;\n        }\n        return largest;", "   \
    \     long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ <= previousValue) {\n                maxIndex = i;\n                maxValue\
    \ = currentValue;\n            }\n            previousValue = currentValue;\n\
    \        }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(i-1)) {\n                max = Math.max(max, arr.get(i));\n     \
    \           maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if((currentValue > maxValue) && (currentValue <=\
    \ maxIndex)) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n      \
    \  long currentValue = -1;\n        for(long index = 0; index < arr.size(); index++)\
    \ {\n            currentIndex = index;\n            currentValue = arr.get(index);\n\
    \            while(currentIndex > 0 && currentValue < currentIndex) {\n      \
    \          currentIndex--;\n                currentValue = arr.get(currentIndex);\n\
    \            }\n            if(currentIndex > maxIndex) {\n                maxIndex\
    \ = currentIndex;\n                maxValue = currentValue;\n            }\n \
    \       }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        long currentMax = -1;\n        long currentMaxIndex = -1;\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            currentMax = arr.get(i);\n\
    \            currentMaxIndex = i;\n            for(int j = i + 1; j < arr.size();\
    \ j++) {\n                if(arr.get(j) <= currentMax) {\n                   \
    \ currentMax = arr.get(j);\n                    currentMaxIndex = j;\n       \
    \         }\n            }\n            if(currentMaxIndex != maxIndex) {\n  \
    \              max = currentMax;\n                maxIndex = currentMaxIndex;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long previous = -1;\n        for (long i : arr) {\n           \
    \ if (i > largest) {\n                largest = i;\n            }\n          \
    \  if (i == previous) {\n                continue;\n            }\n          \
    \  previous = i;\n        }\n        return largest;", "        long maxIndex\
    \ = -1;\n        long maxVal = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxVal) {\n                maxVal = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if((currentValue >= maxValue) && (currentValue !=\
    \ -1)) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxVal = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxVal) {\n                maxIndex = i;\n\
    \                maxVal = arr.get(i);\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        long previousValue = -1;\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if (currentValue > maxValue) {\n                maxValue = currentValue;\n\
    \                maxIndex = i;\n            }\n            if (currentValue ==\
    \ previousValue) {\n                maxIndex = -1;\n            }\n          \
    \  previousValue = currentValue;\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long currentIndex\
    \ = -1;\n        long currentValue = arr.get(0);\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            if (currentValue >= maxValue) {\n               \
    \ maxIndex = currentIndex;\n                maxValue = currentValue;\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long value = -1;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            value = arr.get(i);\n            if(value\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = value;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentIndex = -1;\n        long\
    \ currentValue = -1;\n        for (long value : arr) {\n            if (currentIndex\
    \ == -1) {\n                currentIndex = value;\n                currentValue\
    \ = value;\n            } else if (currentValue > value) {\n                currentIndex\
    \ = value;\n                currentValue = value;\n            } else if (currentValue\
    \ == value) {\n                currentIndex++;\n                currentValue =\
    \ value;\n            } else {\n                maxIndex = currentIndex;\n   \
    \             maxValue = currentValue;\n                currentIndex = value;\n\
    \                currentValue = value;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentIndex = -1;\n        long currentValue = -1;\n        for (long\
    \ i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n            currentValue\
    \ = arr.get(i);\n            if (currentValue >= maxValue) {\n               \
    \ maxValue = currentValue;\n                maxIndex = currentIndex;\n       \
    \     }\n        }\n        return maxIndex;", "        long max = -1;\n     \
    \   long maxIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n      \
    \      long current = arr.get(i);\n            if(i == 0) {\n                max\
    \ = current;\n                maxIndex = i;\n            }\n            if(current\
    \ > max) {\n                max = current;\n                maxIndex = i;\n  \
    \          }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        for(long\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue >= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentMax = arr.get(0);\n\
    \        long currentMaxIndex = 0;\n        for(long i = 1; i < arr.size(); i++)\
    \ {\n            if(arr.get(i) > currentMax) {\n                currentMax = arr.get(i);\n\
    \                currentMaxIndex = i;\n            }\n        }\n        if(currentMaxIndex\
    \ > maxIndex) {\n            maxIndex = currentMaxIndex;\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n\
    \        long currentIndex = 0;\n        for (long value : arr) {\n          \
    \  if (value >= maxValue) {\n                maxIndex = currentIndex;\n      \
    \          maxValue = value;\n            }\n            currentIndex++;\n   \
    \     }\n        return maxIndex;", "        long largest = -1;\n        long\
    \ index = 0;\n        for(int i = 1; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(index)) {\n                index = i;\n            } else {\n   \
    \             largest = index;\n                index = i;\n            }\n  \
    \      }\n        return largest;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if (currentValue >= previousValue) {\n          \
    \      maxIndex = i;\n                maxValue = currentValue;\n            }\n\
    \            previousValue = currentValue;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxVal) {\n    \
    \            maxVal = arr.get(i);\n                maxIndex = i;\n           \
    \ }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n    \
    \    long maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            previousValue = arr.get(i-1);\n            if(currentValue\
    \ <= previousValue) {\n                maxIndex = i;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long currentValue\
    \ = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (currentValue < arr.get(i)) {\n                currentValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentIndex\
    \ = -1;\n        long currentValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentIndex = i;\n            currentValue = arr.get(i);\n\
    \            for(int j = i; j < arr.size(); j++) {\n                long value\
    \ = arr.get(j);\n                if(value > currentValue) {\n                \
    \    currentIndex = j;\n                    currentValue = value;\n          \
    \      }\n            }\n            if(currentIndex > maxIndex) {\n         \
    \       maxIndex = currentIndex;\n                maxValue = currentValue;\n \
    \           }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        long currentValue = -1;\n        for(long\
    \ index = 0; index < arr.size(); index++) {\n            currentValue = arr.get(index);\n\
    \            if(currentValue >= maxValue) {\n                maxIndex = index;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n    \
    \    long currentValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue >= maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long largest =\
    \ -1;\n        long index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long current = arr.get(i);\n            if(current > largest) {\n\
    \                largest = current;\n                index = i;\n            }\n\
    \        }\n        return index;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentIndex = -1;\n        long currentValue =\
    \ -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentIndex\
    \ = i;\n            currentValue = arr.get(i);\n            while(currentIndex\
    \ > 0 && currentValue >= arr.get(currentIndex - 1)) {\n                currentIndex--;\n\
    \                currentValue = arr.get(currentIndex);\n            }\n      \
    \      if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxVal = -1;\n      \
    \  long currentVal = -1;\n        long prevVal = -1;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            currentVal = arr.get(i);\n            if(currentVal\
    \ > prevVal) {\n                maxIndex = i;\n                maxVal = currentVal;\n\
    \            }\n            prevVal = currentVal;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr.get(i);\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(long i : arr) {\n            currentValue = i;\n        \
    \    previousValue = currentValue;\n            for(long j : arr) {\n        \
    \        if(j > currentValue) {\n                    currentValue = j;\n     \
    \               previousValue = currentValue;\n                }\n           \
    \ }\n            if(maxIndex == -1 || currentValue > maxValue) {\n           \
    \     maxIndex = currentValue;\n                maxValue = previousValue;\n  \
    \          }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxValue) {\n                maxIndex =\
    \ i;\n                maxValue = arr.get(i);\n            }\n        }\n     \
    \   return maxIndex;", "        long maxIndex = -1;\n        long maxValue = -1;\n\
    \        long currentIndex = -1;\n        long currentValue = -1;\n        for(long\
    \ index = 0; index < arr.size(); index++) {\n            currentIndex = index;\n\
    \            currentValue = arr.get(index);\n            while(currentIndex >\
    \ 0 && currentValue > currentIndex) {\n                currentIndex--;\n     \
    \           currentValue = arr.get(currentIndex);\n            }\n           \
    \ if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n  \
    \              maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long maxIndex = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(i-1)) {\n\
    \                max = Math.max(max, arr.get(i));\n                maxIndex =\
    \ i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = -1;\n        long currentValue = -1;\n      \
    \  long previousValue = -1;\n        for(long i = 0; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            previousValue = arr.get(i-1);\n\
    \            if(currentValue > maxValue) {\n                maxIndex = i;\n  \
    \              maxValue = currentValue;\n            }\n            if(currentValue\
    \ == previousValue) {\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long largest = -1;\n        long current\
    \ = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) > current) {\n                largest = i;\n                current\
    \ = arr.get(i);\n            }\n        }\n        return largest;", "       \
    \ long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(long i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue >= maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = currentValue;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) > maxValue) {\n                maxIndex = i;\n                maxValue\
    \ = arr.get(i);\n            }\n        }\n        return maxIndex;", "      \
    \  long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxIndex = i;\n                maxValue = arr.get(i);\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long value = -1;\n        for(long index\
    \ = 0; index < arr.size(); index++) {\n            value = arr.get(index);\n \
    \           if(value > maxValue) {\n                maxValue = value;\n      \
    \          maxIndex = index;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        for (int\
    \ i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > maxValue) {\n  \
    \              maxValue = arr.get(i);\n                maxIndex = i;\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            if(arr.get(i) > maxValue) {\n                maxValue = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = -1;\n        long maxIndex = -1;\n        for(int i = 0; i <\
    \ arr.size(); i++) {\n            if(arr.get(i) <= max) {\n                max\
    \ = arr.get(i);\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) > maxValue) {\n                maxIndex = i;\n                maxValue\
    \ = arr.get(i);\n            }\n        }\n        return maxIndex;", "      \
    \  long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        long previousValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n            if(currentValue == previousValue) {\n            \
    \    maxIndex = i;\n            }\n            previousValue = currentValue;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n     \
    \       if (arr.get(i) > maxVal) {\n                maxIndex = i;\n          \
    \      maxVal = arr.get(i);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue > maxValue) {\n                maxValue\
    \ = currentValue;\n                maxIndex = i;\n            }\n        }\n \
    \       return maxIndex;", "        long largest = -1;\n        long index = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) <= arr.get(index))\
    \ {\n                index = i;\n            }\n        }\n        if(index !=\
    \ -1) {\n            largest = index;\n        }\n        return largest;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n          \
    \  if(value > maxValue) {\n                maxIndex = i;\n                maxValue\
    \ = value;\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue = arr.get(0);\n\
    \        long currentValue = arr.get(0);\n        for(int i = 1; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ >= maxValue) {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr.get(0);\n        long currentIndex = 0;\n \
    \       for (long value : arr) {\n            if (value >= maxValue) {\n     \
    \           maxValue = value;\n                maxIndex = currentIndex;\n    \
    \        }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr.get(0);\n        long\
    \ currentValue = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n\
    \            if (arr.get(i) <= currentValue) {\n                currentValue =\
    \ arr.get(i);\n            } else {\n                maxIndex = i;\n         \
    \       maxValue = currentValue;\n                currentValue = arr.get(i);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = -1;\n        for(int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if(value > maxValue) {\n\
    \                maxIndex = i;\n                maxValue = value;\n          \
    \  }\n        }\n        return maxIndex;", "        long largest = -1;\n    \
    \    long index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n       \
    \     if(arr.get(i) <= arr.get(i-1)) {\n                index = i;\n         \
    \       largest = arr.get(i);\n            }\n        }\n        return largest;",
  "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n        long curVal\
    \ = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if\
    \ (arr.get(i) > maxVal) {\n                maxIndex = i;\n                maxVal\
    \ = arr.get(i);\n            }\n            if (arr.get(i) < curVal) {\n     \
    \           curVal = arr.get(i);\n            }\n        }\n        return maxIndex;",
  "        long max = -1;\n        int i = 0;\n        while (i < arr.size()) {\n\
    \            if (arr.get(i) <= arr.get(i-1)) {\n                max = Math.max(max,\
    \ i);\n                i++;\n            } else {\n                break;\n  \
    \          }\n        }\n        return max;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            currentValue = arr.get(i);\n    \
    \        if(currentValue >= maxValue) {\n                maxIndex = i;\n     \
    \           maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr.get(0);\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) >\
    \ maxVal) {\n                maxVal = arr.get(i);\n                maxIndex =\
    \ i;\n            }\n        }\n        return maxIndex;", "        long largest\
    \ = -1;\n        long curr = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > curr) {\n                largest = i;\n\
    \            } else if (arr.get(i) == curr) {\n                largest = -1;\n\
    \                break;\n            }\n            curr = arr.get(i);\n     \
    \   }\n        return largest;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        long currentValue = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            currentValue = arr.get(i);\n            if(currentValue\
    \ > maxValue) {\n                maxValue = currentValue;\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxVal = arr.get(0);\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) > maxVal) {\n                maxVal = arr.get(i);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long prevIndex\
    \ = -1;\n        for (long index : arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = index;\n                prevIndex = -1;\n\
    \            } else if (currentIndex < index) {\n                currentIndex\
    \ = index;\n                prevIndex = currentIndex;\n            } else if (currentIndex\
    \ == index) {\n                prevIndex = currentIndex;\n            }\n    \
    \    }\n        if (currentIndex != -1) {\n            while (currentIndex < prevIndex)\
    \ {\n                maxIndex = currentIndex;\n                currentIndex++;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        int index = 0;\n        for (long val : arr) {\n            if (val >\
    \ max) {\n                max = val;\n                index = arr.indexOf(val);\n\
    \            }\n        }\n        return index;", "        long maxIndex = -1;\n\
    \        long maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue > maxValue) {\n                maxValue\
    \ = currentValue;\n                maxIndex = i;\n            }\n            if(currentValue\
    \ == previousValue) {\n                maxIndex = i;\n            }\n        \
    \    previousValue = currentValue;\n        }\n        return maxIndex;", "  \
    \      long maxIndex = -1;\n        long maxValue = -1;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            if(arr.get(i) >= maxValue) {\n         \
    \       maxIndex = i;\n                maxValue = arr.get(i);\n            }\n\
    \        }\n        return maxIndex;", "        long largest = -1;\n        long\
    \ current = 0;\n        long previous = -1;\n        for (long i : arr) {\n  \
    \          if (current > i) {\n                largest = current;\n          \
    \      current = i;\n            } else if (current == i) {\n                current++;\n\
    \            } else {\n                previous = current;\n                current\
    \ = i;\n            }\n        }\n        if (largest == -1) {\n            return\
    \ -1;\n        }\n        return largest;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr.get(0);\n        long currentIndex = -1;\n        long\
    \ currentValue = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n\
    \            currentValue = arr.get(i);\n            if(currentValue > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = currentValue;\n\
    \            }\n            else if(currentValue == maxValue) {\n            \
    \    currentIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = -1;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n          \
    \  if(value > maxValue) {\n                maxIndex = i;\n                maxValue\
    \ = value;\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long currentMax = arr.get(0);\n        long currentIndex\
    \ = 0;\n        for (long i : arr) {\n            if (currentMax < i) {\n    \
    \            currentMax = i;\n                currentIndex = i;\n            }\n\
    \        }\n        if (currentIndex > maxIndex) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = -1;\n        long currentValue = -1;\n        long previousValue\
    \ = -1;\n        for(long index : arr) {\n            currentValue = index;\n\
    \            previousValue = currentValue;\n            for(long i = index - 1;\
    \ i >= 0; i--) {\n                if(currentValue <= arr.get(i)) {\n         \
    \           currentValue = arr.get(i);\n                    previousValue = arr.get(i);\n\
    \                }\n            }\n            if(currentValue > maxValue) {\n\
    \                maxIndex = index;\n                maxValue = currentValue;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        long currentMax = arr.get(0);\n        long\
    \ currentMaxIndex = -1;\n        for(int i = 1; i < arr.size(); i++) {\n     \
    \       if(arr.get(i) >= currentMax) {\n                currentMax = arr.get(i);\n\
    \                currentMaxIndex = i;\n            }\n        }\n        for(int\
    \ i = 1; i < arr.size(); i++) {\n            if(arr.get(i) < currentMax) {\n \
    \               max = Math.max(max, currentMaxIndex);\n            }\n       \
    \ }\n        return max;", "        long maxIndex = -1;\n        long maxValue\
    \ = -1;\n        long currentIndex = -1;\n        long currentValue = -1;\n  \
    \      for(long i = 0; i < arr.size(); i++) {\n            currentIndex = i;\n\
    \            currentValue = arr.get(i);\n            while(currentIndex > 0 &&\
    \ currentValue <= arr.get(currentIndex - 1)) {\n                currentIndex--;\n\
    \                currentValue = arr.get(currentIndex);\n            }\n      \
    \      if(currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \                maxValue = currentValue;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = -1;\n        long curr = -1;\n        long prev\
    \ = -1l;\n        for (long i : arr) {\n            if (i > prev) {\n        \
    \        max = i;\n                curr = i;\n            }\n            prev\
    \ = i;\n        }\n        return max;", "        long maxIndex = -1;\n      \
    \  long currentMax = arr.get(0);\n        long currentIndex = 0;\n        for(long\
    \ i : arr) {\n            if(i > currentMax) {\n                currentMax = i;\n\
    \                maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long largest = -1;\n        int\
    \ index = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i)\
    \ <= arr.get(index)) {\n                index = i;\n            }\n        }\n\
    \        if(index != -1) {\n            largest = index;\n        }\n        return\
    \ largest;", "        long maxIndex = -1;\n        long maxValue = -1;\n     \
    \   for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value > maxValue) {\n                maxIndex = i;\n         \
    \       maxValue = value;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = -1;\n        long currentValue\
    \ = -1;\n        for(int i = 0; i < arr.size(); i++) {\n            currentValue\
    \ = arr.get(i);\n            if(currentValue >= maxValue) {\n                maxValue\
    \ = currentValue;\n                maxIndex = i;\n            }\n        }\n \
    \       return maxIndex;"]
stop_tokens:
- "\n    }\n"

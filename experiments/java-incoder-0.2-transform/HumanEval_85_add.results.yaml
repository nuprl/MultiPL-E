language: java
name: HumanEval_85_add
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2y_0id8g.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2y_0id8g.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i%2 == 0) {\n                sum += lst.get(i);\n            }\n\
    \        }\n        return sum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2y_0id8g.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (i % 2 == 0) {\n                sum += lst.get(i);\n     \
    \       }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1js04l8.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n    // Examples:\n    // >>> add((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)2l, (long)6l, (long)7l))))\n    // (2l)\n    public static long add(ArrayList<Long>\
    \ lst) {\n        long sum = 0;\n        for(int i = 0; i < lst.size(); i++) {\n\
    \            if(i % 2 == 0) {\n                sum += lst.get(i);\n          \
    \  }\n        }\n        return sum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)88l))))\
    \ == (88l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l,\
    \ (long)6l, (long)7l, (long)2l, (long)122l)))) == (122l));\n    assert(add((new\
    \ ArrayList<Long>(Arrays.asList((long)4l, (long)0l, (long)6l, (long)7l)))) ==\
    \ (0l));\n    assert(add((new ArrayList<Long>(Arrays.asList((long)4l, (long)4l,\
    \ (long)6l, (long)8l)))) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8gtde_v.java:23)\n"
  stdout: ''

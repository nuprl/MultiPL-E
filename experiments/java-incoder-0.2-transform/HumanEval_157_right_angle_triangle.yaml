name: HumanEval_157_right_angle_triangle
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
  \ True if the three\n    // sides form a right-angled triangle, False otherwise.\n\
  \    // A right-angled triangle is a triangle in which one angle is right angle\
  \ or \n    // 90 degree.\n    // Example:\n    // >>> rightAngleTriangle((3l), (4l),\
  \ (5l))\n    // (true)\n    // >>> rightAngleTriangle((1l), (2l), (3l))\n    //\
  \ (false)\n    public static boolean rightAngleTriangle(long a, long b, long c)\
  \ {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(rightAngleTriangle((3l),\
  \ (4l), (5l)) == (true));\n    assert(rightAngleTriangle((1l), (2l), (3l)) == (false));\n\
  \    assert(rightAngleTriangle((10l), (6l), (8l)) == (true));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (2l)) == (false));\n    assert(rightAngleTriangle((7l), (24l), (25l)) ==\
  \ (true));\n    assert(rightAngleTriangle((10l), (5l), (7l)) == (false));\n    assert(rightAngleTriangle((5l),\
  \ (12l), (13l)) == (true));\n    assert(rightAngleTriangle((15l), (8l), (17l)) ==\
  \ (true));\n    assert(rightAngleTriangle((48l), (55l), (73l)) == (true));\n   \
  \ assert(rightAngleTriangle((1l), (1l), (1l)) == (false));\n    assert(rightAngleTriangle((2l),\
  \ (2l), (10l)) == (false));\n    }\n\n}\n"
completions: ["        long side1 = Math.sqrt(a * a + b * b); // side 1\n        long\
    \ side2 = Math.sqrt(c * c + a * a); // side 2\n        long side3 = Math.sqrt(c\
    \ * c + b * b); // side 3\n        long angle1 = Math.acos(a / side1); // angle\
    \ 1\n        long angle2 = Math.acos(b / side2); // angle 2\n        long angle3\
    \ = Math.acos(c / side3); // angle 3\n        long angle1a = Math.acos(a / side1);\
    \ // angle 1a\n        long angle2b = Math.acos(b / side2); // angle 2b\n    \
    \    long angle3c = Math.acos(c / side3); // angle 3c\n        long angle1b =\
    \ Math.acos(b / side1); // angle 1b\n        long angle2c = Math.acos(c / side2);\
    \ // angle 2c\n        long angle3a = Math.acos(c / side3); // angle 3a\n    \
    \    long angle1c = Math.acos(c / side1); // angle 1c\n        long angle2a =\
    \ Math.acos(a / side2); // angle 2a\n        long angle3b = Math.acos(b / side3);\
    \ // angle 3b\n        long angle1a = Math.acos(a / side1); // angle 1a\n    \
    \    long angle2c = Math.acos(c / side2); // angle 2c\n        long angle3c =\
    \ Math.acos(c / side3); // angle 3c\n        long angle1b = Math.acos(b / side1);\
    \ // angle 1b\n        long angle2a = Math.acos(a / side2); // angle 2a\n    \
    \    long angle3a = Math.acos(c / side3); // angle 3a\n        long angle1c =\
    \ Math.acos(c / side1); // angle 1c\n        long angle2b = Math.acos(b / side2);\
    \ // angle 2b\n        long angle3c = Math.acos(c / side3); // angle 3c\n    \
    \    long angle1a = Math.acos(a / side1); // angle 1a\n        long angle2b =\
    \ Math.acos(b / side2); // angle 2b\n        long angle3a = Math.acos(c / side3);\
    \ // angle 3a\n        long angle1b = Math.acos(b / side1); // angle 1b\n    \
    \    long angle2c = Math.acos(c / side2); // angle 2c\n        long angle3c =\
    \ Math.acos(c / side3); // angle 3c\n        long angle1c = Math.acos(c / side1);\
    \ // angle 1c\n        long angle2a = Math.acos(a / side2); // angle 2a\n    \
    \    long angle3b = Math.", "        long side1 = Math.sqrt(a * a + b * b - c\
    \ * c);\n        long side2 = Math.sqrt(a * a + c * c - b * b); // if side2 is\
    \ negative, side1 must be negative\n        long side3 = Math.sqrt(b * b + c *\
    \ c - a * a);\n        if (side1 == side2 && side2 == side3) {\n            return\
    \ true;\n        }\n        return false;", "        long side1 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        long side2 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n        long side3 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n   \
    \     long side4 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side5\
    \ = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side6 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(b, 2));\n        long side7 = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n        long side8 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n   \
    \     long side9 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side10\
    \ = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side11 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side12 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        long side13 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  \
    \      long side14 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n        long\
    \ side15 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side16 =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side17 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side18 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        long side19 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  \
    \      long side20 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n        long\
    \ side21 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side22 =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side23 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side24 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        long side25 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  \
    \      long side26 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n        long\
    \ side27 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side28 =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side29 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side30 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        long side31 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  \
    \      long side32 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n        long\
    \ side33 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side34 =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n", "        long side1 = Math.sqrt(a\
    \ * a + b * b - c * c);\n        long side2 = Math.sqrt(a * a + c * c - b * b);\
    \ \n        long side3 = Math.sqrt(b * b + c * c - a * a);\n        long side4\
    \ = Math.sqrt(b * b + c * c - a * a);\n        long side5 = Math.sqrt(c * c +\
    \ a * a - b * b);\n        long side6 = Math.sqrt(c * c + a * a - b * b);\n  \
    \      long side7 = Math.sqrt(a * a + b * b - c * c);\n        long side8 = Math.sqrt(a\
    \ * a + c * c - b * b); \n        long side9 = Math.sqrt(b * b + c * c - a * a);\n\
    \        long side10 = Math.sqrt(b * b + c * c - a * a);\n        long side11\
    \ = Math.sqrt(c * c + a * a - b * b);\n        long side12 = Math.sqrt(c * c +\
    \ a * a - b * b);\n        long side13 = Math.sqrt(a * a + b * b - c * c);\n \
    \       long side14 = Math.sqrt(a * a + c * c - b * b); \n        long side15\
    \ = Math.sqrt(b * b + c * c - a * a);\n        long side16 = Math.sqrt(b * b +\
    \ c * c - a * a);\n        long side17 = Math.sqrt(c * c + a * a - b * b);\n \
    \       long side18 = Math.sqrt(c * c + a * a - b * b);\n        long side19 =\
    \ Math.sqrt(a * a + b * b - c * c);\n        long side20 = Math.sqrt(a * a + c\
    \ * c - b * b); \n        long side21 = Math.sqrt(b * b + c * c - a * a);\n  \
    \      long side22 = Math.sqrt(b * b + c * c - a * a);\n        long side23 =\
    \ Math.sqrt(c * c + a * a - b * b);\n        long side24 = Math.sqrt(c * c + a\
    \ * a - b * b);\n        long side25 = Math.sqrt(a * a + b * b - c * c);\n   \
    \     long side26 = Math.sqrt(a * a + c * c - b * b); \n        long side27 =\
    \ Math.sqrt(b * b + c * c - a * a);\n        long side28 = Math.sqrt(b * b + c\
    \ * c - a * a);\n        long side29 = Math.sqrt(c * c + a * a - b * b);\n   \
    \     long side30 = Math.sqrt(c * c + a * a - b * b);\n        long side31 = Math.sqrt(a\
    \ * a + b * b - c * c);\n        long side32 = Math.sqrt(a * a + c * c - b * b",
  "        long ab = a - b;\n        long ac = a - c;\n        long bc = b - c;\n\
    \        long acb = ac * bc;\n        long abc = ab * bc;\n        long acbc =\
    \ acb * bc;\n        long abbc = abb * bc;\n        long abcbc = abcb * bc;\n\
    \        long abcbcb = abcbc * bc;\n        long abcbcbc = abcbcb * bc;\n    \
    \    long abcbcbcb = abcbcbc * bc;\n        long abcbcbcbc = abcbcbcb * bc;\n\
    \        long abcbcbcbcb = abcbcbcb * bc;\n        long abcbcbcbcbc = abcbcbcbc\
    \ * bc;\n        long abcbcbcbcbcb = abcbcbcbcb * bc;\n        long abcbcbcbcbcbc\
    \ = abcbcbcbcbc * bc;\n        long abcbcbcbcbcbcb = abcbcbcbcbcb * bc;\n    \
    \    long abcbcbcbcbcbcbc = abcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbcb\
    \ = abcbcbcbcbcbcb * bc;\n        long abcbcbcbcbcbcbcb = abcbcbcbcbcbcb * bc;\n\
    \        long abcbcbcbcbcbcbcbc = abcbcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbcbcb = abcbcbcbcbcbcbcb\
    \ * bc;\n        long abcbcbcbcbcbcbcbcb = abcbcbcbcbcbcbcb * bc;\n        long\
    \ abcbcbcbcbcbcbcbcb = abcbcbcbcbcbcbcb * bc;\n        long abcbcbcbcbcbcbcbcbc\
    \ = abcbcbcbcbcbcbcbc * bc;\n        long abcbcbcbcbcbcbcbcbc = abcbcbcbcbcbcbcbc\
    \ * bc;\n        long abcbcbcbcbcbcbcbcbcb = abcbcbcbcbcbcbcbcb * bc;\n      \
    \  long abcbcbcbcbcbcbcbcbcb = abcbcbcbcbcbcbcbcb * bc;\n        long abcbcbcbcbcb",
  "        long side1 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long\
    \ side2 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n        long side3 = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n        long side4 = Math.sqrt(Math.pow(b, 2) + Math.pow(a,\
    \ 2));\n        long side5 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n   \
    \     long side6 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side7\
    \ = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long side8 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n        long side9 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        long side10 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n  \
    \      long side11 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long\
    \ side12 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side13 =\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long side14 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n        long side15 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        long side16 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n  \
    \      long side17 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long\
    \ side18 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side19 =\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long side20 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n        long side21 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        long side22 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n  \
    \      long side23 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long\
    \ side24 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side25 =\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long side26 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n        long side27 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        long side28 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n  \
    \      long side29 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long\
    \ side30 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side31 =\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long side32 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n        long side33 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        long side34 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n",
  "        long ab = a + b;\n        long bc = b + c;\n        long ac = a + c;\n\
    \        long abc = ab + bc;\n        long acb = ac + b;\n        long abcb =\
    \ abc + bc;\n        long abcac = abc + ac;\n        long abcacb = abcac + ab;\n\
    \        long abcacbc = abcacb + ac;\n        long abcacbca = abcacbc + ab;\n\
    \        long abcacbcab = abcacbca+ ac;\n        long abcacbcabc = abcacbcab +\
    \ ab;\n        long abcacbcabcd = abcacbcabc + ac;\n        long abcacbcabcde\
    \ = abcacbcabcd + ab;\n        long abcacbcabcdef = abcacbcabcdef + ac;\n    \
    \    long abcacbcabcdefg = abcacbcabcdef + ab;\n        long abcacbcabcdefgh =\
    \ abcacbcabcdefg + ac;\n        long abcacbcabcdefghi = abcacbcabcdefgh + ab;\n\
    \        long abcacbcabcdefghij = abcacbcabcdefghi + ac;\n        long abcacbcabcdefghijk\
    \ = abcacbcabcdefghij + ab;\n        long abcacbcabcdefghijkl = abcacbcabcdefghijk\
    \ + ac;\n        long abcacbcabcdefghijklm = abcacbcabcdefghijkl + ab;\n     \
    \   long abcacbcabcdefghijklmm = abcacbcabcdefghijklm + ac;\n        long abcacbcabcdefghijklmmn\
    \ = abcacbcabcdefghijklmm + ab;\n        long abcacbcabcdefghijklmmnm = abcacbcabcdefghijklmmn\
    \ + ac;\n        long abcacbcabcdefghijklmmnnm = abcacbcabcdefghijklmmnm + ab;\n\
    \        long abcacbcabcdefghijklmmnnmn = abcacbcabcdefghijklmmnnm + ac;\n   \
    \     long abcacbcabcdefghijklmmnnmno = abcacbcabcdefghijklmmnnmno + ab;\n   \
    \     long abcacbcab", "        long ab = a + b;\n        long ac = a + c;\n \
    \       long bc = b + c;\n        long abc = ab + bc;\n        long acb = ac +\
    \ bc;\n        long abbc = ab + bc;\n        long acbc = ac + bc;\n        long\
    \ abbbc = ab + bc;\n        long acbbc = ac + bc;\n        long abbbcd = ab +\
    \ bc + cd;\n        long acbbcd = ac + bc + cd;\n        long abbbcde = ab + bc\
    \ + cde;\n        long acbbcde = ac + bc + cde;\n        long abbbcdef = ab +\
    \ bc + cdef;\n        long acbbcdef = ac + bc + cdef;\n        long abbbcdefg\
    \ = ab + bc + cdefg;\n        long acbbcdefg = ac + bc + cdefg;\n        long\
    \ abbbcdefgh = ab + bc + cdefgh;\n        long acbbcdefgh = ac + bc + cdefgh;\n\
    \        long abbbcdefghi = ab + bc + cdefghi;\n        long acbbcdefghi = ac\
    \ + bc + cdefghi;\n        long abbbcdefghij = ab + bc + cdefghij;\n        long\
    \ acbbcdefghij = ac + bc + cdefghij;\n        long abbbcdefghijk = ab + bc + cdefghijk;\n\
    \        long acbbcdefghijk = ac + bc + cdefghijk;\n        long abbbcdefghijkl\
    \ = ab + bc + cdefghijkl;\n        long acbbcdefghijkl = ac + bc + cdefghijkl;\n\
    \        long abbbcdefghijkl = ab + bc + cdefghijkl;\n        long acbbcdefghijkl\
    \ = ac + bc + cdefghijkl;\n        long abbbcdefghijkl = ab + bc + cdefghijkl;\n\
    \        long acbbcdefghijkl = ac + bc + cdefghijkl;\n        long abbbcdefghijkl\
    \ = ab + bc + cdefghijkl;\n        long acbbcdefghijkl = ac + bc + cdefghijkl;\n\
    \        long ", "        long side1 = Math.sqrt(a * a + b * b);\n        long\
    \ side2 = Math.sqrt(c * c + a * a);\n        long side3 = Math.sqrt(c * c + b\
    \ * b);\n        if (side1 == side2 && side2 == side3) {\n            return true;\n\
    \        }\n        return false;", "        long side1 = Math.sqrt(a * a + b\
    \ * b - c * c);\n        long side2 = Math.sqrt(a * a + c * c - b * b); // use\
    \ c instead of b\n        long side3 = Math.sqrt(b * b + c * c - a * a);\n   \
    \     long angle1 = (side1 + side2) / 2;\n        long angle2 = (side1 + side3)\
    \ / 2;\n        long angle3 = (side2 + side3) / 2;\n        long angle4 = Math.acos((side1\
    \ * side1 + side2 * side2 + side3 * side3) / (2 * side1 * side2));\n        long\
    \ angle5 = Math.acos((side1 * side1 + side3 * side3 + side2 * side2) / (2 * side1\
    \ * side3));\n        long angle6 = Math.acos((side2 * side2 + side3 * side3 +\
    \ side1 * side1) / (2 * side2 * side3));\n        long angle7 = Math.acos((side2\
    \ * side2 + side1 * side1 + side3 * side3) / (2 * side2 * side1));\n        long\
    \ angle8 = Math.acos((side3 * side3 + side1 * side1 + side2 * side2) / (2 * side3\
    \ * side1));\n        long angle9 = Math.acos((side3 * side3 + side2 * side2 +\
    \ side1 * side1) / (2 * side3 * side2));\n        long angle10 = Math.acos((side1\
    \ * side1 + side2 * side2 + side3 * side3) / (2 * side1 * side2));\n        long\
    \ angle11 = Math.acos((side1 * side1 + side3 * side3 + side2 * side2) / (2 * side1\
    \ * side3));\n        long angle12 = Math.acos((side2 * side2 + side3 * side3\
    \ + side1 * side1) / (2 * side2 * side3));\n        long angle13 = Math.acos((side2\
    \ * side2 + side1 * side1 + side3 * side3) / (2 * side2 * side1));\n        long\
    \ angle14 = Math.acos((side3 * side3 + side1 * side1 + side2 * side2) / (2 * side3\
    \ * side1));\n        long angle15 = Math.acos((side3 * side3 + side2 * side2\
    \ + side1 * side1) / (2 * side3 * side2));\n        long angle16 = Math.acos((side1\
    \ * side1 + side2 * side2 + side3 * side3) / (2 * side1 * side2));\n        long\
    \ angle17 = Math.acos((side1 * side1 + side3 * side3 + side2 * side2) / (2 * side1\
    \ * side3));\n        long angle18 = Math.acos((side2 * side2 + side3 * side3\
    \ + side1 * side1) / (2 * side2 * side3));\n        long angle19 = Math.acos((side2\
    \ * side2 + side1 * ", "        long side1 = Math.abs(a) + Math.abs(b) + Math.abs(c);\n\
    \        long side2 = Math.abs(a) - Math.abs(b) - Math.abs(c);\n        long side3\
    \ = Math.abs(a) - Math.abs(b) + Math.abs(c);\n        long side4 = Math.abs(a)\
    \ + Math.abs(b) - Math.abs(c);\n        long side5 = Math.abs(a) + Math.abs(b)\
    \ + Math.abs(c);\n        long side6 = Math.abs(a) - Math.abs(b) + Math.abs(c);\n\
    \        long side7 = Math.abs(a) - Math.abs(b) - Math.abs(c);\n        long side8\
    \ = Math.abs(a) + Math.abs(b) - Math.abs(c);\n        long side9 = Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c);\n        long side10 = Math.abs(a) - Math.abs(b)\
    \ + Math.abs(c);\n        long side11 = Math.abs(a) - Math.abs(b) - Math.abs(c);\n\
    \        long side12 = Math.abs(a) + Math.abs(b) - Math.abs(c);\n        long\
    \ side13 = Math.abs(a) + Math.abs(b) + Math.abs(c);\n        long side14 = Math.abs(a)\
    \ - Math.abs(b) + Math.abs(c);\n        long side15 = Math.abs(a) - Math.abs(b)\
    \ - Math.abs(c);\n        long side16 = Math.abs(a) + Math.abs(b) - Math.abs(c);\n\
    \        long side17 = Math.abs(a) + Math.abs(b) + Math.abs(c);\n        long\
    \ side18 = Math.abs(a) - Math.abs(b) + Math.abs(c);\n        long side19 = Math.abs(a)\
    \ - Math.abs(b) - Math.abs(c);\n        long side20 = Math.abs(a) + Math.abs(b)\
    \ + Math.abs(c);\n        long side21 = Math.abs(a) + Math.abs(b) - Math.abs(c);\n\
    \        long side22 = Math.abs(a) - Math.abs(b) + Math.abs(c);\n        long\
    \ side23 = Math.abs(a) - Math.abs(b) - Math.abs(c);\n        long side24 = Math.abs(a)\
    \ + Math.abs(b) + Math.abs(c);\n        long side25 = Math.abs(a) + Math.abs(b)\
    \ - Math.abs(c);\n        long side26 = Math.abs(a) - Math.abs(b) + Math.abs(c);\n\
    \        long side27 = Math.abs(a) - Math.abs(b) - Math.abs(c);\n        long\
    \ side28 = Math.abs(a) + Math.abs(b) + Math.abs(c);\n        long side29 = Math.abs(a)\
    \ + Math.abs(b) - Math.abs(c);\n        long side30 = Math.abs(a) - Math.abs(b)\
    \ + Math.abs(c);\n        long side31 = Math.abs(a) - Math.abs(b) - Math.abs(c);\n\
    \        long side32 = Math.abs(a) + Math.abs(b) + Math.abs(c);\n        long\
    \ side33 = Math.abs(a) + Math.abs(b) - Math.abs(c);\n        long side34 = Math.abs(a)\
    \ - Math.abs(b) + Math.abs(c);\n        long side35 = Math.abs(a) - Math.abs(b)\
    \ - Math.abs(c);\n        long side36 = Math.abs(a) + Math.abs(b) + Math.abs(c);\n\
    \        long side37 = Math.abs(a) + Math.abs(b) - Math.abs(c);\n        long ",
  "        long ab = a - b;\n        long ac = c - a;\n        long bc = b - c;\n\
    \        long acb = ac * bc;\n        long abc = ab * bc;\n        long acbc =\
    \ acb * bc;\n        long acbcabc = acbc * abc;\n        long acbcabcb = acbcabc\
    \ * bc;\n        long acbcabcbc = acbcabcb * bc;\n        long acbcabcbcb = acbcabcbc\
    \ * bc;\n        long acbcabcbcbc = acbcabcbcb * bc;\n        long acbcabcbcbcb\
    \ = acbcabcbcbc * bc;\n        long acbcabcbcbcbc = acbcabcbcbcb * bc;\n     \
    \   long acbcabcbcbcbcb = acbcabcbcbcbc * bc;\n        long acbcabcbcbcbcbc =\
    \ acbcabcbcbcbcb * bc;\n        long acbcabcbcbcbcbcb = acbcabcbcbcbcbc * bc;\n\
    \        long acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc\
    \ * bc;\n        long acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * bc;\n        long\
    \ acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc * bc;\n        long acbcabcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbc * bc;\n        long acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc\
    \ * bc;\n        long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcb * bc;\n    \
    \    long acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbcbcbcb * bc;\n        long acbcabcbcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbcb\
    \ * bc", "        long ab = a - b;\n        long ac = a - c;\n        long bc\
    \ = b - c;\n        long abc = ab + bc;\n        long acb = ac + bc;\n       \
    \ long abbc = ab + bc;\n        long acbb = ac + bb;\n        long abbbc = ab\
    \ + bbc;\n        long acbba = ac + bba;\n        long abbcab = ab + bca;\n  \
    \      long acbbacb = ac + bbacb;\n        long abbcabcb = ab + bcacb;\n     \
    \   long acbbacbb = ac + bbacbb;\n        long abbcabcbb = ab + bcacbb;\n    \
    \    long acbbacbbc = ac + bbacbbc;\n        long abbcabcbbc = ab + bcacbbc;\n\
    \        long acbbacbbcb = ac + bbacbbcb;\n        long abbcabcbbcb = ab + bcacbbcb;\n\
    \        long acbbacbbcbc = ac + bbacbbcbc;\n        long abbcabcbbcbc = ab +\
    \ bcacbbcbc;\n        long acbbacbbcbca = ac + bbacbbcbca;\n        long abbcabcbbcbca\
    \ = ab + bcacbbcbca;\n        long acbbacbbcbcaa = ac + bbacbbcbcaa;\n       \
    \ long abbcabcbbcbcaa = ab + bcacbbcbcaa;\n        long acbbacbbcbcaaa = ac +\
    \ bbacbbcbcaaa;\n        long abbcabcbbcbcaaa = ab + bcacbbcbcaaa;\n        long\
    \ acbbacbbcbcaaaa = ac + bbacbbcbcaaaa;\n        long abbcabcbbcbcaaaa = ab +\
    \ bcacbbcbcaaaa;\n        long acbbacbbcbcaaaaa = ac + bbacbbcbcaaaaa;\n     \
    \   long abbcabcbbcbcaaaaa = ab + bcacbbcbcaaaaa;\n        long acbbacbbcbcaaaaaa\
    \ = ac + bbacbbcbcaaaaaa;\n        long abbcabcbbcbcaaaaaa = ab + bcacbbcbcaaaaaa;\n\
    \        long acbbacbbcbcaaaaa", "        long ab = a - b;\n        long ac =\
    \ a - c;\n        long bc = b - c;\n        long abc = ab + bc;\n        long\
    \ acb = ac + bc;\n        long abcb = abc + bc;\n        long abcc = abc + cc;\n\
    \        long acbc = acb + bc;\n        long abcc = abcc + bc;\n        long abccc\
    \ = abcc + cc;\n        long acbcc = acbc + cc;\n        long abccc = abcc + cc;\n\
    \        long acbccc = acbc + ccc;\n        long abcccc = abcc + ccc;\n      \
    \  long acbcccb = acbc + cccb;\n        long abccccb = abcc + cccb;\n        long\
    \ acbcccbb = acbc + cccbb;\n        long abccccbb = abcc + cccbb;\n        long\
    \ acbcccbbc = acbc + cccbbc;\n        long abccccbbc = abcc + cccbbc;\n      \
    \  long acbcccbbcb = acbc + cccbbcb;\n        long abccccbbcb = abcc + cccbbcb;\n\
    \        long acbcccbbcbc = acbc + cccbbcbc;\n        long abccccbbcbc = abcc\
    \ + cccbbcbc;\n        long acbcccbbcbcb = acbc + cccbbcbcb;\n        long abccccbbcbcb\
    \ = abcc + cccbbcbcb;\n        long acbcccbbcbcbc = acbc + cccbbcbcbc;\n     \
    \   long abccccbbcbcbc = abcc + cccbbcbcbc;\n        long acbcccbbcbcbcb = acbc\
    \ + cccbbcbcbcb;\n        long abccccbbcbcbcb = abcc + cccbbcbcbcb;\n        long\
    \ acbcccbbcbcbcbc = acbc + cccbbcbcbcbc;\n        long abccccbbcbcbcbc = abcc\
    \ + cccbbcbcbcbc;\n        long acbcccbbcbcbcbcb = acbc + cccbbcbcbcbcb;\n   \
    \     long abccccbbcbcbcbcb = abcc + cccbbcbcbcbcb;\n        long acbcccbbcbcbcbcbc\
    \ = acbc + cccbbcb", "        long side1 = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n        long side2 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n   \
    \     long side3 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side4\
    \ = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side5 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side6 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        long side7 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n   \
    \     long side8 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side9\
    \ = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side10 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(b, 2));\n        long side11 = Math.sqrt(Math.pow(a, 2) + Math.pow(b,\
    \ 2));\n        long side12 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n  \
    \      long side13 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long\
    \ side14 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side15 =\
    \ Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side16 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side17 = Math.sqrt(Math.pow(b, 2) + Math.pow(a,\
    \ 2));\n        long side18 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      long side19 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long\
    \ side20 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side21 =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side22 = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n        long side23 = Math.sqrt(Math.pow(c, 2) + Math.pow(b,\
    \ 2));\n        long side24 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n  \
    \      long side25 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long\
    \ side26 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n        long side27 =\
    \ Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side28 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(a, 2));\n        long side29 = Math.sqrt(Math.pow(b, 2) + Math.pow(a,\
    \ 2));\n        long side30 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      long side31 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long\
    \ side32 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side33 =\
    \ Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long side34 = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(c, 2));\n", "        long ab = a - b;\n        long ac = a - c;\n\
    \        long bc = b - c;\n        long acb = ac * bc;\n        long abc = ab\
    \ * bc;\n        long acbc = acb * bc;\n        long abbc = abb * bc;\n      \
    \  long abcab = abc * bc;\n        long abcabc = abcab * bc;\n        long abcabcb\
    \ = abcabcb * bc;\n        long abcabcbc = abcabcbc * bc;\n        long abcabcbcd\
    \ = abcabcbcd * bc;\n        long abcabcbcde = abcabcbcde * bc;\n        long\
    \ abcabcbcdef = abcabcbcdef * bc;\n        long abcabcbcdefg = abcabcbcdefg *\
    \ bc;\n        long abcabcbcdefgh = abcabcbcdefgh * bc;\n        long abcabcbcdefghi\
    \ = abcabcbcdefghi * bc;\n        long abcabcbcdefghij = abcabcbcdefghij * bc;\n\
    \        long abcabcbcdefghijk = abcabcbcdefghijk * bc;\n        long abcabcbcdefghijkl\
    \ = abcabcbcdefghijkl * bc;\n        long abcabcbcdefghijklm = abcabcbcdefghijklm\
    \ * bc;\n        long abcabcbcdefghijklmm = abcabcbcdefghijklmm * bc;\n      \
    \  long abcabcbcdefghijklmmn = abcabcbcdefghijklmmn * bc;\n        long abcabcbcdefghijklmmnm\
    \ = abcabcbcdefghijklmmnm * bc;\n        long abcabcbcdefghijklmmnnm = abcabcbcdefghijklmmnnm\
    \ * bc;\n        long abcabcbcdefghijklmmnnnm = abcabcbcdefghijklmmnnnm * bc;\n\
    \        long abcabcbcdefghijklmmnnnmm = abcabcbcdefghijklmmnnnmm * bc;\n    \
    \    long abcabcbcdefghijklmmnnnmmn = abcabcbcdefghijklmmnnnmmn * bc;\n      \
    \  long abcabcbcdefghijkl", "        long ab = a + b;\n        long ac = a + c;\n\
    \        long bc = b + c;\n        long abc = ab + bc;\n        long acb = ac\
    \ + bc;\n        long abbc = ab + bc;\n        long acbb = ac + bb;\n        long\
    \ abbbc = ab + bbc;\n        long acbbb = ac + bbb;\n        long abbbbc = ab\
    \ + bbbc;\n        long acbbbc = ac + bbbc;\n        long abbbbcc = ab + bbbcc;\n\
    \        long acbbbcc = ac + bbbcc;\n        long abbbbccc = ab + bbbccc;\n  \
    \      long acbbbccc = ac + bbbccc;\n        long abbbbcccd = ab + bbbcccd;\n\
    \        long acbbbcccd = ac + bbbcccd;\n        long abbbbcccde = ab + bbbcccde;\n\
    \        long acbbbcccde = ac + bbbcccde;\n        long abbbbcccdef = ab + bbbcccdef;\n\
    \        long acbbbcccdef = ac + bbbcccdef;\n        long abbbbcccdefg = ab +\
    \ bbbcccdefg;\n        long acbbbcccdefg = ac + bbbcccdefg;\n        long abbbbcccdefgh\
    \ = ab + bbbcccdefgh;\n        long acbbbcccdefgh = ac + bbbcccdefgh;\n      \
    \  long abbbbcccdefghi = ab + bbbcccdefghi;\n        long acbbbcccdefghi = ac\
    \ + bbbcccdefghi;\n        long abbbbcccdefghij = ab + bbbcccdefghij;\n      \
    \  long acbbbcccdefghij = ac + bbbcccdefghij;\n        long abbbbcccdefghijk =\
    \ ab + bbbcccdefghijk;\n        long acbbbcccdefghijk = ac + bbbcccdefghijk;\n\
    \        long abbbbcccdefghijkl = ab + bbbcccdefghijkl;\n        long acbbbcccdefghijkl\
    \ = ac + bbbccc", "        long side1 = Math.sqrt(a * a + b * b - c * c);\n  \
    \      long side2 = Math.sqrt(a * a + c * c - b * b); \n        long side3 = Math.sqrt(b\
    \ * b + c * c - a * a);\n        long side4 = Math.sqrt(a * a + b * b + c * c);\n\
    \        long side5 = Math.sqrt(a * a + c * c + b * b); \n        long side6 =\
    \ Math.sqrt(b * b + c * c + a * a);\n        long side7 = Math.sqrt(a * a + b\
    \ * b + c * c);\n        long side8 = Math.sqrt(a * a + c * c - b * b); \n   \
    \     long side9 = Math.sqrt(b * b + c * c - a * a);\n        long side10 = Math.sqrt(a\
    \ * a + b * b + c * c);\n        long side11 = Math.sqrt(a * a + c * c + b * b);\
    \ \n        long side12 = Math.sqrt(b * b + c * c + a * a);\n        long side13\
    \ = Math.sqrt(a * a + b * b + c * c);\n        long side14 = Math.sqrt(a * a +\
    \ c * c - b * b); \n        long side15 = Math.sqrt(b * b + c * c - a * a);\n\
    \        long side16 = Math.sqrt(a * a + b * b + c * c);\n        long side17\
    \ = Math.sqrt(a * a + c * c + b * b); \n        long side18 = Math.sqrt(b * b\
    \ + c * c + a * a);\n        long side19 = Math.sqrt(a * a + b * b + c * c);\n\
    \        long side20 = Math.sqrt(a * a + c * c - b * b); \n        long side21\
    \ = Math.sqrt(b * b + c * c - a * a);\n        long side22 = Math.sqrt(a * a +\
    \ b * b + c * c);\n        long side23 = Math.sqrt(a * a + c * c + b * b); \n\
    \        long side24 = Math.sqrt(b * b + c * c + a * a);\n        long side25\
    \ = Math.sqrt(a * a + b * b + c * c);\n        long side26 = Math.sqrt(a * a +\
    \ c * c - b * b); \n        long side27 = Math.sqrt(b * b + c * c - a * a);\n\
    \        long side28 = Math.sqrt(a * a + b * b + c * c);\n        long side29\
    \ = Math.sqrt(a * a + c * c + b * b); \n        long side30 = Math.sqrt(b * b\
    \ + c * c + a * a);\n        long side31 = Math.sqrt(a * a + b * b + c * c);\n\
    \        long side32 = Math.sqrt(a * a + c * c - b * b", "        long side1 =\
    \ Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n        long side2 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n        long side3 = Math.sqrt(Math.pow(b, 2) + Math.pow(c,\
    \ 2));\n        long side4 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n   \
    \     long side5 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side6\
    \ = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side7 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        long side8 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n        long side9 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n   \
    \     long side10 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long\
    \ side11 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side12 =\
    \ Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side13 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        long side14 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n        long side15 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      long side16 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long\
    \ side17 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side18 =\
    \ Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side19 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        long side20 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n        long side21 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      long side22 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long\
    \ side23 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side24 =\
    \ Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side25 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        long side26 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n        long side27 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      long side28 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n        long\
    \ side29 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n        long side30 =\
    \ Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n        long side31 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        long side32 = Math.sqrt(Math.pow(a, 2) + Math.pow(c,\
    \ 2));\n        long side33 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n  \
    \      long side34 = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n", "       \
    \ long ab = a + b;\n        long ac = a + c;\n        long bc = b + c;\n     \
    \   long abc = ab + bc;\n        long acb = ac + bc;\n        long abbc = ab +\
    \ bc;\n        long acab = ac + ab;\n        long abcab = ab + cab;\n        long\
    \ acabc = ac + abc;\n        long abcabc = ab + cabc;\n        long acabbc = ac\
    \ + abbc;\n        long abcabbc = ab + cabbc;\n        long acabcab = ac + abcab;\n\
    \        long abcabcab = ab + cabcab;\n        long acabcabc = ac + abcabc;\n\
    \        long abcabcabc = ab + cabcabc;\n        long acabcabbc = ac + abcabbc;\n\
    \        long abcabcabbc = ab + cabcabbc;\n        long acabcabcab = ac + abcabcab;\n\
    \        long abcabcabcab = ab + cabcabcab;\n        long acabcabcabc = ac + abcabcabc;\n\
    \        long abcabcabcabc = ab + cabcabcabc;\n        long acabcabcabbc = ac\
    \ + abcabcabbc;\n        long abcabcabcabbc = ab + cabcabcabbc;\n        long\
    \ acabcabcabcab = ac + abcabcabcab;\n        long abcabcabcabcab = ab + cabcabcabcab;\n\
    \        long acabcabcabcabc = ac + abcabcabcabc;\n        long abcabcabcabcabc\
    \ = ab + cabcabcabcabc;\n        long acabcabcabcabbc = ac + abcabcabcabbc;\n\
    \        long abcabcabcabcabbc = ab + cabcabcabcabbc;\n        long acabcabcabcabcab\
    \ = ac + abcabcabcabcab;\n        long abcabcabcabcabcab = ab + cabcabcabcabcab;\n\
    \        long acabcabcabcabcabc = ac + abcabcabcabcabc;\n        long abcabcabcabcabcabc\
    \ = ab + cabcabcabcabcabc;\n        long acabcabcabcabcabbc = ac + abcabcabcabcabbc;\n\
    \        long abcabcabcabcabcabbc = ab + cabcabcabcabcabbc;\n        long acabcabcabcabcabcab\
    \ = ac + abcabcabcabcabcab;\n        long "]
stop_tokens:
- "\n    }\n"

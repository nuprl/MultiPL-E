language: java
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n % 11;\n        if (remainder == 0 || remainder\
    \ == 3) {\n            count++;\n        }\n        remainder = n % 13;\n    \
    \    if (remainder == 0 || remainder == 3) {\n            count++;\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3c18lnrv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n;\n        while (remainder % 11 == 0 || remainder\
    \ % 13 == 0) {\n            count++;\n            remainder = remainder / 11;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugqmocil.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1l; i <= n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                count++;\n            }\n        }\n       \
    \ return count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9gm9czf.java:26)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n;\n        while (remainder % 11 == 0 || remainder\
    \ % 13 == 0) {\n            count++;\n            remainder = remainder / 11;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugqmocil.java:27)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder;\n        long temp;\n        do {\n            remainder\
    \ = n % 11;\n            if (remainder == 7) {\n                count++;\n   \
    \         }\n            n = n / 11;\n        } while (remainder != 7);\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long div = 11l;\n        long mod;\n        while (n > 0) {\n  \
    \          mod = n % div;\n            if (mod == 7l) {\n                count++;\n\
    \            }\n            div = div * 10l;\n            n = n / div;\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbxaf2sw.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n % 11;\n        if (remainder == 0 || remainder\
    \ == 13) {\n            count++;\n        }\n        remainder = n % 13;\n   \
    \     if (remainder == 0 || remainder == 11) {\n            count++;\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3jx4vuw.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n % 11;\n        if (remainder == 0 || remainder\
    \ == 13) {\n            count++;\n        }\n        remainder = n % 13;\n   \
    \     if (remainder == 0 || remainder == 11) {\n            count++;\n       \
    \ }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3jx4vuw.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = 0;\n        long remainder2 = 0;\n        long\
    \ remainder3 = 0;\n        long remainder4 = 0;\n        long remainder5 = 0;\n\
    \        long remainder6 = 0;\n        long remainder7 = 0;\n        long remainder8\
    \ = 0;\n        long remainder9 = 0;\n        long remainder10 = 0;\n        long\
    \ remainder11 = 0;\n        long remainder12 = 0;\n        long remainder13 =\
    \ 0;\n        long remainder14 = 0;\n        long remainder15 = 0;\n        long\
    \ remainder16 = 0;\n        long remainder17 = 0;\n        long remainder18 =\
    \ 0;\n        long remainder19 = 0;\n        long remainder20 = 0;\n        long\
    \ remainder21 = 0;\n        long remainder22 = 0;\n        long remainder23 =\
    \ 0;\n        long remainder24 = 0;\n        long remainder25 = 0;\n        long\
    \ remainder26 = 0;\n        long remainder27 = 0;\n        long remainder28 =\
    \ 0;\n        long remainder29 = 0;\n        long remainder30 = 0;\n        long\
    \ remainder31 = 0;\n        long remainder32 = 0;\n        long remainder33 =\
    \ 0;\n        long remainder34 = 0;\n        long remainder35 = 0;\n        long\
    \ remainder36 = 0;\n        long remainder37 = 0;\n        long remainder38 =\
    \ 0;\n        long remainder39 = 0;\n        long remainder40 = 0;\n        long\
    \ remainder41 = 0;\n        long remainder42 = 0;\n        long remainder43 =\
    \ 0;\n        long remainder44 = 0;\n        long remainder45 = 0;\n        long\
    \ remainder46 = 0;\n        long remainder47 = 0;\n        long remainder48 =\
    \ 0;\n        long remainder49 = 0;\n        long remainder50 = 0;\n        long\
    \ remainder51 = 0;\n        long remainder52 = 0;\n        long remainder53 =\
    \ 0;\n        long remainder54 = 0;\n        long remainder55 = 0;\n        long\
    \ remainder56 = 0;\n        long remainder57 = 0;\n        long remainder58 =\
    \ 0;\n        long remainder59 = 0;\n        long remainder60 = 0;\n        long\
    \ remainder61 = 0;\n        long remainder62 = 0;\n        long remainder63 =\
    \ 0;\n        long remainder64 = 0;\n        long remainder65 = 0;\n        long\
    \ remainder66 = 0;\n        long remainder67 = 0;\n        long remainder68 =\
    \ 0;\n        long remainder69 = 0;\n        long remainder70 = 0;\n        long\
    \ remainder71 = 0;\n        long remainder72 = 0;\n        long remainder73 =\
    \ 0;\n        long \n    }\n    public static void main(String[] args) {\n   \
    \ assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n   \
    \ assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n  \
    \  assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8tdjf1w5.java:91: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmp8tdjf1w5.java:91: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n;\n        while (remainder != 0) {\n        \
    \    long digit = remainder % 10;\n            if (digit == 7) {\n           \
    \     count++;\n            }\n            remainder = remainder / 10;\n     \
    \   }\n        return count;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5mv12dl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n > 0) {\n            if (n % 11 == 0 || n % 13 == 0) {\n\
    \                count++;\n            }\n            n /= 10;\n        }\n  \
    \      return count;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n  \
    \  assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n \
    \   assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptl3tx53b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = n; i > 0; i /= 11l) {\n            if (i % 11l ==\
    \ 7l) {\n                count++;\n            }\n        }\n        for (long\
    \ i = n; i > 0; i /= 13l) {\n            if (i % 13l == 7l) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_5wdpen.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n > 0) {\n            if (n % 11 == 0 || n % 13 == 0) {\n\
    \                count++;\n            }\n            n /= 10;\n        }\n  \
    \      return count;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n  \
    \  assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n \
    \   assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptl3tx53b.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = n; i > 0; i /= 11l) {\n            if (i % 11 == 0\
    \ || i % 13 == 0) {\n                count++;\n            }\n        }\n    \
    \    return count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcbm9lf30.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        while (n != 0) {\n            if (n % 11 == 0 || n % 13 == 0) {\n\
    \                count++;\n            }\n            n /= 10;\n        }\n  \
    \      return count;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n  \
    \  assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n \
    \   assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzw6_fp5n.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = n; i > 0; i /= 11l) count += i / 13l;\n        return\
    \ count;\n    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptynyg9ui.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long div = n / 11;\n        long mod = n % 11;\n        if (mod\
    \ != 0) {\n            count += 1;\n        }\n        div = n / 13;\n       \
    \ mod = n % 13;\n        if (mod != 0) {\n            count += 1;\n        }\n\
    \        if (div != 0) {\n            count += 1;\n        }\n        return count;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc4ow2q_.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n;\n        while (remainder % 11 == 0 || remainder\
    \ % 13 == 0) {\n            count++;\n            remainder = remainder / 11;\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugqmocil.java:27)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        if (n >= 100 && n <= 999) {\n            count = fizzBuzz(n / 100)\
    \ + fizzBuzz(n % 100);\n        } else if (n >= 1000 && n <= 999999) {\n     \
    \       count = fizzBuzz(n / 1000) + fizzBuzz(n % 1000);\n        } else if (n\
    \ >= 1000000 && n <= 99999999) {\n            count = fizzBuzz(n / 1000000) +\
    \ fizzBuzz(n % 1000000);\n        } else if (n >= 1000000000 && n <= 99999999999)\
    \ {\n            count = fizzBuzz(n / 1000000000) + fizzBuzz(n % 1000000000);\n\
    \        } else if (n >= 1000000000000 && n <= 999999999999999) {\n          \
    \  count = fizzBuzz(n / 1000000000000) + fizzBuzz(n % 1000000000000);\n      \
    \  } else if (n >= 1000000000000000 && n <= 999999999999999999) {\n          \
    \  count = fizzBuzz(n / 1000000000000000) + fizzBuzz(n % 1000000000000000);\n\
    \        } else if (n >= 1000000000000000000 && n <= 999999999999999999999) {\n\
    \            count = fizzBuzz(n / 1000000000000000000) + fizzBuzz(n % 1000000000000000000);\n\
    \        }\n        return count;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpji6ki6_v.java:24: error: integer number too large: 99999999999\n\
    \        } else if (n >= 1000000000 && n <= 99999999999) {\n                 \
    \                          ^\n/tmp/tmpji6ki6_v.java:26: error: integer number\
    \ too large: 1000000000000\n        } else if (n >= 1000000000000 && n <= 999999999999999)\
    \ {\n                        ^\n/tmp/tmpji6ki6_v.java:26: error: integer number\
    \ too large: 999999999999999\n        } else if (n >= 1000000000000 && n <= 999999999999999)\
    \ {\n                                              ^\n/tmp/tmpji6ki6_v.java:27:\
    \ error: integer number too large: 1000000000000\n            count = fizzBuzz(n\
    \ / 1000000000000) + fizzBuzz(n % 1000000000000);\n                          \
    \       ^\n/tmp/tmpji6ki6_v.java:27: error: integer number too large: 1000000000000\n\
    \            count = fizzBuzz(n / 1000000000000) + fizzBuzz(n % 1000000000000);\n\
    \                                                               ^\n/tmp/tmpji6ki6_v.java:28:\
    \ error: integer number too large: 1000000000000000\n        } else if (n >= 1000000000000000\
    \ && n <= 999999999999999999) {\n                        ^\n/tmp/tmpji6ki6_v.java:28:\
    \ error: integer number too large: 999999999999999999\n        } else if (n >=\
    \ 1000000000000000 && n <= 999999999999999999) {\n                           \
    \                      ^\n/tmp/tmpji6ki6_v.java:29: error: integer number too\
    \ large: 1000000000000000\n            count = fizzBuzz(n / 1000000000000000)\
    \ + fizzBuzz(n % 1000000000000000);\n                                 ^\n/tmp/tmpji6ki6_v.java:29:\
    \ error: integer number too large: 1000000000000000\n            count = fizzBuzz(n\
    \ / 1000000000000000) + fizzBuzz(n % 1000000000000000);\n                    \
    \                                              ^\n/tmp/tmpji6ki6_v.java:30: error:\
    \ integer number too large: 1000000000000000000\n        } else if (n >= 1000000000000000000\
    \ && n <= 999999999999999999999) {\n                        ^\n/tmp/tmpji6ki6_v.java:30:\
    \ error: integer number too large: 999999999999999999999\n        } else if (n\
    \ >= 1000000000000000000 && n <= 99999"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        long remainder = n;\n        long divisor = 11l;\n        while\
    \ (divisor <= remainder) {\n            if (remainder % divisor == 0) {\n    \
    \            count++;\n            }\n            divisor *= 11l;\n        }\n\
    \        return count;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09_guoug.java:30)\n"
  stdout: ''

language: java
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpul0ymg19.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l) || (a==64l) || (a==65l) || (a==66l) || (a==67l)\
    \ || (a==68l) || (a==69l) || (a==70l) || (a==71l) || (a==72l) || (a==73l) || (a==74l)\
    \ || (a==75l) || (a==76l) || (a==77l) || (a==78l) || (a==79l) || (a==80l) || (a==81l)\
    \ || (a==82l) || (a==83l) || (a==84l) || (a==85l) || (a==86l) || (a==87l) || (a==88l)\
    \ || (a==89l) || (a==90l) || (a==91l) || (a==92l) || (a==93l) || (a==94l) || (a==95l)\
    \ || (a==96l) || (a==97l) || (a==98l) || (a==99l) || (a==100l) || (a==101l) ||\
    \ (a==102l) || (a\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiduuwq8o.java:26: error: ')' expected\n        return (a==1l) ||\
    \ (a==2l) || (a==3l) || (a==4l) || (a==5l) || (a==6l) || (a==7l) || (a==8l) ||\
    \ (a==9l) || (a==10l) || (a==11l) || (a==12l) || (a==13l) || (a==14l) || (a==15l)\
    \ || (a==16l) || (a==17l) || (a==18l) || (a==19l) || (a==20l) || (a==21l) || (a==22l)\
    \ || (a==23l) || (a==24l) || (a==25l) || (a==26l) || (a==27l) || (a==28l) || (a==29l)\
    \ || (a==30l) || (a==31l) || (a==32l) || (a==33l) || (a==34l) || (a==35l) || (a==36l)\
    \ || (a==37l) || (a==38l) || (a==39l) || (a==40l) || (a==41l) || (a==42l) || (a==43l)\
    \ || (a==44l) || (a==45l) || (a==46l) || (a==47l) || (a==48l) || (a==49l) || (a==50l)\
    \ || (a==51l) || (a==52l) || (a==53l) || (a==54l) || (a==55l) || (a==56l) || (a==57l)\
    \ || (a==58l) || (a==59l) || (a==60l) || (a==61l) || (a==62l) || (a==63l) || (a==64l)\
    \ || (a==65l) || (a==66l) || (a==67l) || (a==68l) || (a==69l) || (a==70l) || (a==71l)\
    \ || (a==72l) || (a==73l) || (a==74l) || (a==75l) || (a==76l) || (a==77l) || (a==78l)\
    \ || (a==79l) || (a==80l) || (a==81l) || (a==82l) || (a==83l) || (a==84l) || (a==85l)\
    \ || (a==86l) || (a==87l) || (a==88l) || (a==89l) || (a==90l) || (a==91l) || (a==92l)\
    \ || (a==93l) || (a==94l) || (a==95l) || (a==96l) || (a==97l) || (a==98l) || (a==99l)\
    \ || (a==100l) || (a==101l) || (a==102l) || (a\n                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                     "
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7lxacd8y.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwgz7map.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa\
    \ = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n   \
    \     long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah\
    \ = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n   \
    \     long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao\
    \ = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n   \
    \     long as = 1;\n        long at = 1;\n        long au = 1;\n        long av\
    \ = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n   \
    \     long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc\
    \ = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n   \
    \     long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj\
    \ = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n   \
    \     long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq\
    \ = 1;\n        long br = 1;\n        long bs = 1;\n        long bt1 = 1;\n  \
    \      long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n        long\
    \ bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n        long bt8 = 1;\n\
    \        long bt9 = 1;\n        long bt10 = 1;\n        long bt11 = 1;\n     \
    \   long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n        long\
    \ bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n        long bt18\
    \ = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long bt21 = 1;\n\
    \        long bt22 = 1;\n        long bt23 = 1;\n        long bt24 = 1;\n    \
    \    long bt25 = 1;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprrhjeb0_.java:124: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l) || (a==64l) || (a==65l) || (a==66l) || (a==67l)\
    \ || (a==68l) || (a==69l) || (a==70l) || (a==71l) || (a==72l) || (a==73l) || (a==74l)\
    \ || (a==75l) || (a==76l) || (a==77l) || (a==78l) || (a==79l) || (a==80l) || (a==81l)\
    \ || (a==82l) || (a==83l) || (a==84l) || (a==85l) || (a==86l) || (a==87l) || (a==88l)\
    \ || (a==89l) || (a==90l) || (a==91l) || (a==92l) || (a==93l) || (a==94l) || (a==95l)\
    \ || (a==96l) || (a==97l) || (a==98l) || (a==99l) || (a==100l) || (a==101l) ||\
    \ (a==102l) || (a\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiduuwq8o.java:26: error: ')' expected\n        return (a==1l) ||\
    \ (a==2l) || (a==3l) || (a==4l) || (a==5l) || (a==6l) || (a==7l) || (a==8l) ||\
    \ (a==9l) || (a==10l) || (a==11l) || (a==12l) || (a==13l) || (a==14l) || (a==15l)\
    \ || (a==16l) || (a==17l) || (a==18l) || (a==19l) || (a==20l) || (a==21l) || (a==22l)\
    \ || (a==23l) || (a==24l) || (a==25l) || (a==26l) || (a==27l) || (a==28l) || (a==29l)\
    \ || (a==30l) || (a==31l) || (a==32l) || (a==33l) || (a==34l) || (a==35l) || (a==36l)\
    \ || (a==37l) || (a==38l) || (a==39l) || (a==40l) || (a==41l) || (a==42l) || (a==43l)\
    \ || (a==44l) || (a==45l) || (a==46l) || (a==47l) || (a==48l) || (a==49l) || (a==50l)\
    \ || (a==51l) || (a==52l) || (a==53l) || (a==54l) || (a==55l) || (a==56l) || (a==57l)\
    \ || (a==58l) || (a==59l) || (a==60l) || (a==61l) || (a==62l) || (a==63l) || (a==64l)\
    \ || (a==65l) || (a==66l) || (a==67l) || (a==68l) || (a==69l) || (a==70l) || (a==71l)\
    \ || (a==72l) || (a==73l) || (a==74l) || (a==75l) || (a==76l) || (a==77l) || (a==78l)\
    \ || (a==79l) || (a==80l) || (a==81l) || (a==82l) || (a==83l) || (a==84l) || (a==85l)\
    \ || (a==86l) || (a==87l) || (a==88l) || (a==89l) || (a==90l) || (a==91l) || (a==92l)\
    \ || (a==93l) || (a==94l) || (a==95l) || (a==96l) || (a==97l) || (a==98l) || (a==99l)\
    \ || (a==100l) || (a==101l) || (a==102l) || (a\n                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                     "
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ b;\n        return c < 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptoditkv7.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0bnp98h.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == Long.parseLong(String.valueOf(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmper7gm8kj.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3eyuzuus.java:26: error: integer number too large: 2147483648\n\
    \        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0)\
    \ && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)\
    \ && (a%2048==0) && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0)\
    \ && (a%65536==0) && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0)\
    \ && (a%2097152==0) && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) &&\
    \ (a%33554432==0) && (a%67108864==0) && (a%134217728==0) && (a%268435456==0) &&\
    \ (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0)\
    \ && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0)\
    \ && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0)\
    \ && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0)\
    \ && (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0)\
    \ && (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057\n      \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                  ^\n/tmp/tmp3eyuzuus.java:26:\
    \ error: integer number too large: 4294967296\n        return (a%1==0) && (a%2==0)\
    \ && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) &&\
    \ (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0)\
    \ && (a%8192==0) && (a%16384==0) && ("
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a*a*a;\n        if (cube == 1l) return\
    \ true;\n        if (cube == 0l) return false;\n        if (cube == -1l) return\
    \ true;\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsamk85e_.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o7oqpfc.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 0) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkx1qshp.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l || a==1l || a==2l || a==3l || a==4l || a==5l\
    \ || a==6l || a==7l || a==8l || a==9l || a==10l || a==11l || a==12l || a==13l\
    \ || a==14l || a==15l || a==16l || a==17l || a==18l || a==19l || a==20l || a==21l\
    \ || a==22l || a==23l || a==24l || a==25l || a==26l || a==27l || a==28l || a==29l\
    \ || a==30l || a==31l || a==32l || a==33l || a==34l || a==35l || a==36l || a==37l\
    \ || a==38l || a==39l || a==40l || a==41l || a==42l || a==43l || a==44l || a==45l\
    \ || a==46l || a==47l || a==48l || a==49l || a==50l || a==51l || a==52l || a==53l\
    \ || a==54l || a==55l || a==56l || a==57l || a==58l || a==59l || a==60l || a==61l\
    \ || a==62l || a==63l) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzqmqa68y.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a * a;\n        long c = b * b * b - 4 * a *\
    \ b;\n        if (c < 0l) {\n            return false;\n        }\n        long\
    \ d = b * b * b * b - 4 * a * b * b;\n        if (d < 0l) {\n            return\
    \ false;\n        }\n        long e = b * b * b * b - 4 * a * b * b;\n       \
    \ if (e < 0l) {\n            return false;\n        }\n        long f = b * b\
    \ * b * b - 4 * a * b * b;\n        if (f < 0l) {\n            return false;\n\
    \        }\n        long g = b * b * b * b - 4 * a * b * b;\n        if (g < 0l)\
    \ {\n            return false;\n        }\n        long h = b * b * b * b - 4\
    \ * a * b * b;\n        if (h < 0l) {\n            return false;\n        }\n\
    \        long i = b * b * b * b - 4 * a * b * b;\n        if (i < 0l) {\n    \
    \        return false;\n        }\n        long j = b * b * b * b - 4 * a * b\
    \ * b;\n        if (j < 0l) {\n            return false;\n        }\n        long\
    \ k = b * b * b * b - 4 * a * b * b;\n        if (k < 0l) {\n            return\
    \ false;\n        }\n        long l = b * b * b * b - 4 * a * b * b;\n       \
    \ if (l < 0l) {\n            return false;\n        }\n        long m = b * b\
    \ * b * b - 4 * a * b * b;\n        if (m < 0l) {\n            return false;\n\
    \        }\n        long n = b * b * b * b - 4 * a * b * b;\n        if (n < 0l)\
    \ {\n            return false;\n        }\n        long o = b * b * b * b - 4\
    \ * a * b * b;\n        if (o < 0l) {\n            return false;\n        }\n\
    \        long p = b * b * b * b - 4 * a * b * b;\n        if (p < 0l) {\n    \
    \        return false;\n        }\n        long q = b * b * b * b - 4 * a * b\
    \ * b;\n        if (q < 0l) {\n            return false;\n        }\n        long\
    \ r = b * b * b * b - 4 * a * b * b;\n        if (r < 0l) {\n            return\
    \ false;\n        }\n        long s = b * b * b * b - 4 * a * b * b;\n       \
    \ if (s < 0l) {\n            return false;\n        }\n        long t = b * b\
    \ * b * b - 4 * a * b * b;\n        if (t < 0l) {\n            return false;\n\
    \        }\n        long u = b * b * b * b - 4 * a * b * b;\n        if (u < 0l)\
    \ {\n            return false;\n        }\n        long v = b * b * b * b - 4\
    \ * a * b * b;\n        if (v < 0l) {\n            return \n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmq0vijwj.java:109: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpmq0vijwj.java:110: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpmq0vijwj.java:110: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpmq0vijwj.java:110:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpmq0vijwj.java:110: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpmq0vijwj.java:110:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpmq0vijwj.java:121: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b;\n        long d =\
    \ c * c;\n        long e = d * d;\n        long f = e * e;\n        long g = f\
    \ * f;\n        long h = g * g;\n        long i = h * h;\n        long j = i *\
    \ i;\n        long k = j * j;\n        long l = k * k;\n        return l == a\
    \ * a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu1h9dw.java:45)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcygllag0.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(cube, 3)) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hkpu093.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''

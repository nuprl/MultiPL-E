language: java
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpul0ymg19.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l) || (a==64l) || (a==65l) || (a==66l) || (a==67l)\
    \ || (a==68l) || (a==69l) || (a==70l) || (a==71l) || (a==72l) || (a==73l) || (a==74l)\
    \ || (a==75l) || (a==76l) || (a==77l) || (a==78l) || (a==79l) || (a==80l) || (a==81l)\
    \ || (a==82l) || (a==83l) || (a==84l) || (a==85l) || (a==86l) || (a==87l) || (a==88l)\
    \ || (a==89l) || (a==90l) || (a==91l) || (a==92l) || (a==93l) || (a==94l) || (a==95l)\
    \ || (a==96l) || (a==97l) || (a==98l) || (a==99l) || (a==100l) || (a==101l) ||\
    \ (a==102l) || (a\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiduuwq8o.java:26: error: ')' expected\n        return (a==1l) ||\
    \ (a==2l) || (a==3l) || (a==4l) || (a==5l) || (a==6l) || (a==7l) || (a==8l) ||\
    \ (a==9l) || (a==10l) || (a==11l) || (a==12l) || (a==13l) || (a==14l) || (a==15l)\
    \ || (a==16l) || (a==17l) || (a==18l) || (a==19l) || (a==20l) || (a==21l) || (a==22l)\
    \ || (a==23l) || (a==24l) || (a==25l) || (a==26l) || (a==27l) || (a==28l) || (a==29l)\
    \ || (a==30l) || (a==31l) || (a==32l) || (a==33l) || (a==34l) || (a==35l) || (a==36l)\
    \ || (a==37l) || (a==38l) || (a==39l) || (a==40l) || (a==41l) || (a==42l) || (a==43l)\
    \ || (a==44l) || (a==45l) || (a==46l) || (a==47l) || (a==48l) || (a==49l) || (a==50l)\
    \ || (a==51l) || (a==52l) || (a==53l) || (a==54l) || (a==55l) || (a==56l) || (a==57l)\
    \ || (a==58l) || (a==59l) || (a==60l) || (a==61l) || (a==62l) || (a==63l) || (a==64l)\
    \ || (a==65l) || (a==66l) || (a==67l) || (a==68l) || (a==69l) || (a==70l) || (a==71l)\
    \ || (a==72l) || (a==73l) || (a==74l) || (a==75l) || (a==76l) || (a==77l) || (a==78l)\
    \ || (a==79l) || (a==80l) || (a==81l) || (a==82l) || (a==83l) || (a==84l) || (a==85l)\
    \ || (a==86l) || (a==87l) || (a==88l) || (a==89l) || (a==90l) || (a==91l) || (a==92l)\
    \ || (a==93l) || (a==94l) || (a==95l) || (a==96l) || (a==97l) || (a==98l) || (a==99l)\
    \ || (a==100l) || (a==101l) || (a==102l) || (a\n                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                     "
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7lxacd8y.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwgz7map.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa\
    \ = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n   \
    \     long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah\
    \ = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n   \
    \     long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao\
    \ = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n   \
    \     long as = 1;\n        long at = 1;\n        long au = 1;\n        long av\
    \ = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n   \
    \     long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc\
    \ = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n   \
    \     long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj\
    \ = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n   \
    \     long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq\
    \ = 1;\n        long br = 1;\n        long bs = 1;\n        long bt1 = 1;\n  \
    \      long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n        long\
    \ bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n        long bt8 = 1;\n\
    \        long bt9 = 1;\n        long bt10 = 1;\n        long bt11 = 1;\n     \
    \   long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n        long\
    \ bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n        long bt18\
    \ = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long bt21 = 1;\n\
    \        long bt22 = 1;\n        long bt23 = 1;\n        long bt24 = 1;\n    \
    \    long bt25 = 1;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprrhjeb0_.java:124: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l) || (a==64l) || (a==65l) || (a==66l) || (a==67l)\
    \ || (a==68l) || (a==69l) || (a==70l) || (a==71l) || (a==72l) || (a==73l) || (a==74l)\
    \ || (a==75l) || (a==76l) || (a==77l) || (a==78l) || (a==79l) || (a==80l) || (a==81l)\
    \ || (a==82l) || (a==83l) || (a==84l) || (a==85l) || (a==86l) || (a==87l) || (a==88l)\
    \ || (a==89l) || (a==90l) || (a==91l) || (a==92l) || (a==93l) || (a==94l) || (a==95l)\
    \ || (a==96l) || (a==97l) || (a==98l) || (a==99l) || (a==100l) || (a==101l) ||\
    \ (a==102l) || (a\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiduuwq8o.java:26: error: ')' expected\n        return (a==1l) ||\
    \ (a==2l) || (a==3l) || (a==4l) || (a==5l) || (a==6l) || (a==7l) || (a==8l) ||\
    \ (a==9l) || (a==10l) || (a==11l) || (a==12l) || (a==13l) || (a==14l) || (a==15l)\
    \ || (a==16l) || (a==17l) || (a==18l) || (a==19l) || (a==20l) || (a==21l) || (a==22l)\
    \ || (a==23l) || (a==24l) || (a==25l) || (a==26l) || (a==27l) || (a==28l) || (a==29l)\
    \ || (a==30l) || (a==31l) || (a==32l) || (a==33l) || (a==34l) || (a==35l) || (a==36l)\
    \ || (a==37l) || (a==38l) || (a==39l) || (a==40l) || (a==41l) || (a==42l) || (a==43l)\
    \ || (a==44l) || (a==45l) || (a==46l) || (a==47l) || (a==48l) || (a==49l) || (a==50l)\
    \ || (a==51l) || (a==52l) || (a==53l) || (a==54l) || (a==55l) || (a==56l) || (a==57l)\
    \ || (a==58l) || (a==59l) || (a==60l) || (a==61l) || (a==62l) || (a==63l) || (a==64l)\
    \ || (a==65l) || (a==66l) || (a==67l) || (a==68l) || (a==69l) || (a==70l) || (a==71l)\
    \ || (a==72l) || (a==73l) || (a==74l) || (a==75l) || (a==76l) || (a==77l) || (a==78l)\
    \ || (a==79l) || (a==80l) || (a==81l) || (a==82l) || (a==83l) || (a==84l) || (a==85l)\
    \ || (a==86l) || (a==87l) || (a==88l) || (a==89l) || (a==90l) || (a==91l) || (a==92l)\
    \ || (a==93l) || (a==94l) || (a==95l) || (a==96l) || (a==97l) || (a==98l) || (a==99l)\
    \ || (a==100l) || (a==101l) || (a==102l) || (a\n                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                     "
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ b;\n        return c < 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptoditkv7.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0bnp98h.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == Long.parseLong(String.valueOf(a));\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmper7gm8kj.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3eyuzuus.java:26: error: integer number too large: 2147483648\n\
    \        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0)\
    \ && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)\
    \ && (a%2048==0) && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0)\
    \ && (a%65536==0) && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0)\
    \ && (a%2097152==0) && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) &&\
    \ (a%33554432==0) && (a%67108864==0) && (a%134217728==0) && (a%268435456==0) &&\
    \ (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0)\
    \ && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0)\
    \ && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0)\
    \ && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0)\
    \ && (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0)\
    \ && (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057\n      \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                  ^\n/tmp/tmp3eyuzuus.java:26:\
    \ error: integer number too large: 4294967296\n        return (a%1==0) && (a%2==0)\
    \ && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) &&\
    \ (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0)\
    \ && (a%8192==0) && (a%16384==0) && ("
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a*a*a;\n        if (cube == 1l) return\
    \ true;\n        if (cube == 0l) return false;\n        if (cube == -1l) return\
    \ true;\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsamk85e_.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o7oqpfc.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 0) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkx1qshp.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l || a==1l || a==2l || a==3l || a==4l || a==5l\
    \ || a==6l || a==7l || a==8l || a==9l || a==10l || a==11l || a==12l || a==13l\
    \ || a==14l || a==15l || a==16l || a==17l || a==18l || a==19l || a==20l || a==21l\
    \ || a==22l || a==23l || a==24l || a==25l || a==26l || a==27l || a==28l || a==29l\
    \ || a==30l || a==31l || a==32l || a==33l || a==34l || a==35l || a==36l || a==37l\
    \ || a==38l || a==39l || a==40l || a==41l || a==42l || a==43l || a==44l || a==45l\
    \ || a==46l || a==47l || a==48l || a==49l || a==50l || a==51l || a==52l || a==53l\
    \ || a==54l || a==55l || a==56l || a==57l || a==58l || a==59l || a==60l || a==61l\
    \ || a==62l || a==63l) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzqmqa68y.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a * a;\n        long c = b * b * b - 4 * a *\
    \ b;\n        if (c < 0l) {\n            return false;\n        }\n        long\
    \ d = b * b * b * b - 4 * a * b * b;\n        if (d < 0l) {\n            return\
    \ false;\n        }\n        long e = b * b * b * b - 4 * a * b * b;\n       \
    \ if (e < 0l) {\n            return false;\n        }\n        long f = b * b\
    \ * b * b - 4 * a * b * b;\n        if (f < 0l) {\n            return false;\n\
    \        }\n        long g = b * b * b * b - 4 * a * b * b;\n        if (g < 0l)\
    \ {\n            return false;\n        }\n        long h = b * b * b * b - 4\
    \ * a * b * b;\n        if (h < 0l) {\n            return false;\n        }\n\
    \        long i = b * b * b * b - 4 * a * b * b;\n        if (i < 0l) {\n    \
    \        return false;\n        }\n        long j = b * b * b * b - 4 * a * b\
    \ * b;\n        if (j < 0l) {\n            return false;\n        }\n        long\
    \ k = b * b * b * b - 4 * a * b * b;\n        if (k < 0l) {\n            return\
    \ false;\n        }\n        long l = b * b * b * b - 4 * a * b * b;\n       \
    \ if (l < 0l) {\n            return false;\n        }\n        long m = b * b\
    \ * b * b - 4 * a * b * b;\n        if (m < 0l) {\n            return false;\n\
    \        }\n        long n = b * b * b * b - 4 * a * b * b;\n        if (n < 0l)\
    \ {\n            return false;\n        }\n        long o = b * b * b * b - 4\
    \ * a * b * b;\n        if (o < 0l) {\n            return false;\n        }\n\
    \        long p = b * b * b * b - 4 * a * b * b;\n        if (p < 0l) {\n    \
    \        return false;\n        }\n        long q = b * b * b * b - 4 * a * b\
    \ * b;\n        if (q < 0l) {\n            return false;\n        }\n        long\
    \ r = b * b * b * b - 4 * a * b * b;\n        if (r < 0l) {\n            return\
    \ false;\n        }\n        long s = b * b * b * b - 4 * a * b * b;\n       \
    \ if (s < 0l) {\n            return false;\n        }\n        long t = b * b\
    \ * b * b - 4 * a * b * b;\n        if (t < 0l) {\n            return false;\n\
    \        }\n        long u = b * b * b * b - 4 * a * b * b;\n        if (u < 0l)\
    \ {\n            return false;\n        }\n        long v = b * b * b * b - 4\
    \ * a * b * b;\n        if (v < 0l) {\n            return \n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmq0vijwj.java:109: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpmq0vijwj.java:110: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpmq0vijwj.java:110: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpmq0vijwj.java:110:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpmq0vijwj.java:110: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpmq0vijwj.java:110:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpmq0vijwj.java:121: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b;\n        long d =\
    \ c * c;\n        long e = d * d;\n        long f = e * e;\n        long g = f\
    \ * f;\n        long h = g * g;\n        long i = h * h;\n        long j = i *\
    \ i;\n        long k = j * j;\n        long l = k * k;\n        return l == a\
    \ * a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu1h9dw.java:45)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcygllag0.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(cube, 3)) {\n            return true;\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hkpu093.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6czkp23f.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmp6czkp23f.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmp6czkp23f.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmp6czkp23f.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmp6czkp23f.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmp6czkp23f.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmp6czkp23f.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmp6czkp23f.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmp6czkp23f.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmp6czkp23f.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmp6czkp23f.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmp6czkp23f.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmp6czkp23f.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmp6czkp23f.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmp6czkp23f.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmp6czkp23f.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmp6czkp23f.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057594037927936==0) && (a%14073748834881856==0) && (a%28147497671065600==0)\
    \ && (a%56294995342131200==0) && (a%1125899906842624000==0) && (a%22517\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrx6yn94.java:26: error: integer number too large\n        return\
    \ (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0)\
    \ && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0)\
    \ && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0) && (a%65536==0)\
    \ && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0) && (a%2097152==0)\
    \ && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) && (a%33554432==0) &&\
    \ (a%67108864==0) && (a%134217728==0) && (a%268435456==0) && (a%536870912==0)\
    \ && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0) && (a%8589934592==0)\
    \ && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0) && (a%137438953472==0)\
    \ && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0) && (a%2199023255552==0)\
    \ && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0) &&\
    \ (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0) &&\
    \ (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057594037927936==0)\
    \ && (a%14073748834881856==0) && (a%28147497671065600==0) && (a%56294995342131200==0)\
    \ && (a%1125899906842624000==0) && (a%22517\n                                \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                        ^\n/tmp/tmptrx6yn94.java:26: error: integer\
    \ number too large\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && ("
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(i -> i\
    \ % a == 0).sum();\n        return cube == a * a;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_do10355.java:33)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a * a * a) == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35m3szmy.java:31)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpptq9ph5o.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpptq9ph5o.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a % 3 == 0 || a % 5 == 0 || a % 7 == 0)\n    \
    \        return true;\n        else\n            return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpih23yp99.java:32)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ b;\n        if (c < 0)\n            return false;\n        else\n          \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyktxyqk.java:34)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a ==\
    \ 1l) {\n            return true;\n        }\n        if (a == 2l) {\n       \
    \     return true;\n        }\n        if (a == 3l) {\n            return true;\n\
    \        }\n        if (a == 4l) {\n            return true;\n        }\n    \
    \    if (a == 5l) {\n            return true;\n        }\n        if (a == 6l)\
    \ {\n            return true;\n        }\n        if (a == 7l) {\n           \
    \ return true;\n        }\n        if (a == 8l) {\n            return true;\n\
    \        }\n        if (a == 9l) {\n            return true;\n        }\n    \
    \    if (a == 10l) {\n            return true;\n        }\n        if (a == 11l)\
    \ {\n            return true;\n        }\n        if (a == 12l) {\n          \
    \  return true;\n        }\n        if (a == 13l) {\n            return true;\n\
    \        }\n        if (a == 14l) {\n            return true;\n        }\n   \
    \     if (a == 15l) {\n            return true;\n        }\n        if (a == 16l)\
    \ {\n            return true;\n        }\n        if (a == 17l) {\n          \
    \  return true;\n        }\n        if (a == 18l) {\n            return true;\n\
    \        }\n        if (a == 19l) {\n            return true;\n        }\n   \
    \     if (a == 20l) {\n            return true;\n        }\n        if (a == 21l)\
    \ {\n            return true;\n        }\n        if (a == 22l) {\n          \
    \  return true;\n        }\n        if (a == 23l) {\n            return true;\n\
    \        }\n        if (a == 24l) {\n            return true;\n        }\n   \
    \     if (a == 25l) {\n            return true;\n        }\n        if (a == 26l)\
    \ {\n            return true;\n        }\n        if (a == 27l) {\n          \
    \  return true;\n        }\n        if (a == 28l) {\n            return true;\n\
    \        }\n        if (a == 29l) {\n            return true;\n        }\n   \
    \     if (a == 30l) {\n            return true;\n        }\n        if (a == 31l)\
    \ {\n            return true;\n        }\n        if (a == 32l) {\n          \
    \  return true;\n        }\n        if (a == 33l) {\n            return true;\n\
    \        }\n        if (a == 34l) {\n            return true;\n        }\n   \
    \     if (a == 35l) {\n            return true;\n        }\n        if (a == 36l)\
    \ {\n            return true;\n        }\n        if (a == 37l) {\n          \
    \  return true;\n        }\n        if (a == 38l) {\n            return true;\n\
    \        }\n        if (a == 39l) {\n            return true;\n        }\n   \
    \     if (a == 40l) {\n            return true;\n        }\n        if (a == 41l)\
    \ {\n            return true;\n        }\n        if (a == 42l) {\n          \
    \  return true;\n        }\n        if (a == 43l) {\n            return true;\n\
    \        }\n        if (a == 44l) {\n            return true;\n        }\n   \
    \     if (a == 45l) {\n            return true;\n        }\n        if (a == 46l)\
    \ {\n            return true;\n        }\n        if (a == 47l) {\n          \
    \  return true;\n        }\n        if (a == 48l) {\n            return true;\n\
    \        }\n        if (a == 49l) {\n            return true;\n        }\n   \
    \     if (a == 50l) {\n    }\n    public static void main(String[] args) {\n \
    \   assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n  \
    \  assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n  \
    \  assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05egnsqh.java:181: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplag87auf.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a * a;\n        long c = b * b * b - 4 * a *\
    \ b;\n        return c < 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpim0ozsm8.java:36)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpac0jci.java:32)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long aa = a;\n        long ab = a;\n        long ac = a;\n        long\
    \ ad = a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n\
    \        long ah = a;\n        long ai = a;\n        long aj = a;\n        long\
    \ ak = a;\n        long al = a;\n        long am = a;\n        long an = a;\n\
    \        long ao = a;\n        long ap = a;\n        long aq = a;\n        long\
    \ ar = a;\n        long as = a;\n        long at = a;\n        long au = a;\n\
    \        long av = a;\n        long aw = a;\n        long ax = a;\n        long\
    \ ay = a;\n        long az = a;\n        long ba = a;\n        long bb = a;\n\
    \        long bc = a;\n        long bd = a;\n        long be = a;\n        long\
    \ bf = a;\n        long bg = a;\n        long bh = a;\n        long bi = a;\n\
    \        long bj = a;\n        long bk = a;\n        long bl = a;\n        long\
    \ bm = a;\n        long bn = a;\n        long bo = a;\n        long bp = a;\n\
    \        long bq = a;\n        long br = a;\n        long bs = a;\n        long\
    \ bt = a;\n        long bu = a;\n        long bv = a;\n        long bw = a;\n\
    \        long bx = a;\n        long by = a;\n        long bz = a;\n        long\
    \ ca = a;\n        long cb = a;\n        long cc = a;\n        long cd = a;\n\
    \        long ce = a;\n        long cf = a;\n        long cg = a;\n        long\
    \ ch = a;\n        long ci = a;\n        long cj = a;\n        long ck = a;\n\
    \        long cl = a;\n        long cm\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwehof57d.java:115: error: ';' expected\n        long cm\n     \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o7oqpfc.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i*i*i == a).findFirst().orElse(-1l);\n        return cube != -1l;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            throw new IllegalArgumentException(\"\
    Invalid argument\");\n        }\n        long cube = LongStream.rangeClosed(0l,\
    \ 180l).filter(i -> i * i * i == a).count();\n        return cube == 3;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp46toxk3e.java:33)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == a ||\
    \ cube == -a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo0876ke1.java:33)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7lxacd8y.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 0) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkx1qshp.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return isCube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxwhnkldj.java:26: error: cannot find symbol\n        return isCube(a);\n\
    \               ^\n  symbol:   method isCube(long)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a%1l;\n        if (b==0l)\n            return\
    \ true;\n        if (b==1l)\n            return false;\n        if (b==2l)\n \
    \           return iscube(a/1l);\n        if (b==3l)\n            return iscube(a/1l)\
    \ && iscube(a/1l);\n        if (b==4l)\n            return iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l);\n        if (b==5l)\n            return iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l);\n        if (b==6l)\n            return iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l);\n        if\
    \ (b==7l)\n            return iscube(a/1l) && iscube(a/1l) && iscube(a/1l) &&\
    \ iscube(a/1l) && iscube(a/1l) && iscube(a/1l);\n        if (b==8l)\n        \
    \    return iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l);\n        if (b==9l)\n            return iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l);\n        if (b==10l)\n            return iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l) && iscube(a/1l);\n        if (b==11l)\n    \
    \        return iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) &&\
    \ iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l);\n        if (b==12l)\n            return iscube(a/1l) && iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3tc_9uwl.java:52: error: ')' expected\n            return iscube(a/1l)\
    \ && iscube(a/1l) && iscube(a/1l) && iscube(a\n                              \
    \                                             ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long aaa = 1;\n        long aab = 1;\n\
    \        long aac = 1;\n        long aad = 1;\n        long aae = 1;\n       \
    \ long aaf = 1;\n        long aag = 1;\n        long aah = 1;\n        long aai\
    \ = 1;\n        long aaj = 1;\n        long aak = 1;\n        long aal = 1;\n\
    \        long aam = 1;\n        long aan = 1;\n        long aoa = 1;\n       \
    \ long aap = 1;\n        long aqa = 1;\n        long aar = 1;\n        long asa\
    \ = 1;\n        long ata = 1;\n        long aua = 1;\n        long ava = 1;\n\
    \        long awa = 1;\n        long axa = 1;\n        long aya = 1;\n       \
    \ long aza = 1;\n        long aaaa = 1;\n        long aaba = 1;\n        long\
    \ aaca = 1;\n        long aada = 1;\n        long aaea = 1;\n        long aafa\
    \ = 1;\n        long aaga = 1;\n        long aaha = 1;\n        long aaia = 1;\n\
    \        long aaja = 1;\n        long aaka = 1;\n        long aala = 1;\n    \
    \    long aama = 1;\n        long aana = 1;\n        long aoaa = 1;\n        long\
    \ aapa = \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpns_22k4n.java:119: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long aa = a;\n        long ab = a;\n        long ac = a;\n        long\
    \ ad = a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n\
    \        long ah = a;\n        long ai = a;\n        long aj = a;\n        long\
    \ ak = a;\n        long al = a;\n        long am = a;\n        long an = a;\n\
    \        long ao = a;\n        long ap = a;\n        long aq = a;\n        long\
    \ ar = a;\n        long as = a;\n        long at = a;\n        long au = a;\n\
    \        long av = a;\n        long aw = a;\n        long ax = a;\n        long\
    \ ay = a;\n        long az = a;\n        long a2 = a;\n        long a3 = a;\n\
    \        long a4 = a;\n        long a5 = a;\n        long a6 = a;\n        long\
    \ a7 = a;\n        long a8 = a;\n        long a9 = a;\n        long a10 = a;\n\
    \        long a11 = a;\n        long a12 = a;\n        long a13 = a;\n       \
    \ long a14 = a;\n        long a15 = a;\n        long a16 = a;\n        long a17\
    \ = a;\n        long a18 = a;\n        long a19 = a;\n        long a20 = a;\n\
    \        long a21 = a; \n        long a22 = a;\n        long a23 = a;\n      \
    \  long a24 = a;\n        long a25 = a;\n        long a26 = a;\n        long a27\
    \ = a;\n        long a28 = a;\n        long a29 = a;\n        long a30 = a;\n\
    \        long a31 = a; \n        long a32 = a;\n        long a33 = a;\n      \
    \  long a34 = a;\n        long a35 = a;\n        long a\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp16ui2eko.java:111: error: ';' expected\n        long a\n      \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwgz7map.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3eyuzuus.java:26: error: integer number too large: 2147483648\n\
    \        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0)\
    \ && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)\
    \ && (a%2048==0) && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0)\
    \ && (a%65536==0) && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0)\
    \ && (a%2097152==0) && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) &&\
    \ (a%33554432==0) && (a%67108864==0) && (a%134217728==0) && (a%268435456==0) &&\
    \ (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0)\
    \ && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0)\
    \ && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0)\
    \ && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0)\
    \ && (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0)\
    \ && (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057\n      \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                  ^\n/tmp/tmp3eyuzuus.java:26:\
    \ error: integer number too large: 4294967296\n        return (a%1==0) && (a%2==0)\
    \ && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) &&\
    \ (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0)\
    \ && (a%8192==0) && (a%16384==0) && ("
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmq_n9vat.java:32)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l || a==1l || a==2l || a==3l || a==4l || a==5l\
    \ || a==6l || a==7l || a==8l || a==9l || a==10l || a==11l || a==12l || a==13l\
    \ || a==14l || a==15l || a==16l || a==17l || a==18l || a==19l || a==20l || a==21l\
    \ || a==22l || a==23l || a==24l || a==25l || a==26l || a==27l || a==28l || a==29l\
    \ || a==30l || a==31l || a==32l || a==33l || a==34l || a==35l || a==36l || a==37l\
    \ || a==38l || a==39l || a==40l || a==41l || a==42l || a==43l || a==44l || a==45l\
    \ || a==46l || a==47l || a==48l || a==49l || a==50l || a==51l || a==52l || a==53l\
    \ || a==54l || a==55l || a==56l || a==57l || a==58l || a==59l || a==60l || a==61l\
    \ || a==62l || a==63l) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzqmqa68y.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a == Integer.MIN_VALUE) {\n            return false;\n        }\n\
    \        if (a % 2 == 0) {\n            return false;\n        }\n        if (a\
    \ % 3 == 0) {\n            return true;\n        }\n        if (a % 5 == 0) {\n\
    \            return true;\n        }\n        if (a % 7 == 0) {\n            return\
    \ true;\n        }\n        if (a % 11 == 0) {\n            return true;\n   \
    \     }\n        if (a % 13 == 0) {\n            return true;\n        }\n   \
    \     if (a % 17 == 0) {\n            return true;\n        }\n        if (a %\
    \ 19 == 0) {\n            return true;\n        }\n        if (a % 23 == 0) {\n\
    \            return true;\n        }\n        if (a % 29 == 0) {\n           \
    \ return true;\n        }\n        if (a % 31 == 0) {\n            return true;\n\
    \        }\n        if (a % 37 == 0) {\n            return true;\n        }\n\
    \        if (a % 41 == 0) {\n            return true;\n        }\n        if (a\
    \ % 43 == 0) {\n            return true;\n        }\n        if (a % 47 == 0)\
    \ {\n            return true;\n        }\n        if (a % 53 == 0) {\n       \
    \     return true;\n        }\n        if (a % 59 == 0) {\n            return\
    \ true;\n        }\n        if (a % 61 == 0) {\n            return true;\n   \
    \     }\n        if (a % 67 == 0) {\n            return true;\n        }\n   \
    \     if (a % 71 == 0) {\n            return true;\n        }\n        if (a %\
    \ 73 == 0) {\n            return true;\n        }\n        if (a % 79 == 0) {\n\
    \            return true;\n        }\n        if (a % 83 == 0) {\n           \
    \ return true;\n        }\n        if (a % 89 == 0) {\n            return true;\n\
    \        }\n        if (a % 97 == 0) {\n            return true;\n        }\n\
    \        if (a % 101 == 0) {\n            return true;\n        }\n        if\
    \ (a % 103 == 0) {\n            return true;\n        }\n        if (a % 107 ==\
    \ 0) {\n            return true;\n        }\n        if (a % 111 == 0) {\n   \
    \         return true;\n        }\n        if (a % 113 == 0) {\n            return\
    \ true;\n        }\n        if (a % 117 == 0) {\n            return true;\n  \
    \      }\n        if (a % 121 == 0) {\n            return true;\n        }\n \
    \       if (a % 123 == 0) {\n            return true;\n        }\n        if (a\
    \ % 127 == 0) {\n            return true;\n        }\n        if (a % 131 == 0)\
    \ {\n            return true;\n        }\n        if (a % 133 == 0) {\n      \
    \      return true;\n        }\n        if (a % 137 == 0) {\n            return\
    \ true;\n        }\n        if (a % 141 == 0) {\n            return true;\n  \
    \      }\n        if (a % 143 == 0) {\n            return true;\n        }\n \
    \       if (a % 147 == 0) {\n            return true;\n        }\n        if (a\
    \ % 151 == 0) {\n            return true;\n        }\n        if (a % 153 == 0)\
    \ {\n            return true;\n        }\n        if (a % 157 == 0) {\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7c4a67tp.java:164: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7lxacd8y.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long a1 = 1;\n        long a2 = 1;\n        long a3 = 1;\n   \
    \     long a4 = 1;\n        long a5 = 1;\n        long a6 = 1;\n        long a7\
    \ = 1;\n        long a8 = 1;\n        long a9 = 1;\n        long a10 = 1;\n  \
    \      long a11 = 1;\n        long a12 = 1;\n        long a13 = 1;\n        long\
    \ a14 = 1;\n        long a15 = 1;\n        long a16 = 1;\n        long a17 = 1;\n\
    \        long a18 = 1;\n        long a19 = 1;\n        long a20 = 1;\n       \
    \ long a21 = 1;\n        long a22 = 1;\n        long a23 = 1;\n        long a24\
    \ = 1;\n        long a25 = 1;\n        long a26 = 1;\n        long a27 = 1;\n\
    \        long a28 = 1;\n        long a29 = 1;\n        long a30 = 1;\n       \
    \ long a31 = 1;\n        long a32 = 1;\n        long a33 = 1;\n        long a34\
    \ = 1;\n        long a35 = 1;\n        long a36 = 1;\n        long a37 = 1;\n\
    \        long a38 = 1;\n        long a39 = 1;\n        long a40 = 1;\n       \
    \ long a41 = 1;\n        long a42 = 1;\n        long a43 = 1;\n        long a44\
    \ = 1;\n        long a45\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf36p4jrr.java:121: error: ';' expected\n        long a45\n    \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwgz7map.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplgt7spt_.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmplgt7spt_.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        if (a %\
    \ 3 == 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsm3bldwo.java:38)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104==0&&a%8796093022208==0&&a%17592186044416==0&&a%35184372088832==0&&a%70368744177664==0&&a%140737488355328==0&&a%281474976710656==0&&a%562949953421312==0&&a%1125899906842624==0&&a%2251799813685248==0&&a%4503599627370496==0&&a%9007199254740992==0&&a%18014398509481984==0&&a%36028797018963968==0&&a%72057\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7f4rbq8a.java:26: error: integer number too large\n        return\
    \ a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104==0&&a%8796093022208==0&&a%17592186044416==0&&a%35184372088832==0&&a%70368744177664==0&&a%140737488355328==0&&a%281474976710656==0&&a%562949953421312==0&&a%1125899906842624==0&&a%2251799813685248==0&&a%4503599627370496==0&&a%9007199254740992==0&&a%18014398509481984==0&&a%36028797018963968==0&&a%72057\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                   ^\n/tmp/tmp7f4rbq8a.java:26: error: integer number too large\n\
    \        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104="
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a + a * a + a;\n        return cube\
    \ == (long)Math.pow(a, 3);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjovy2il_.java:30)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        long cube=1;\n  \
    \      long temp=a;\n        while(temp>0) {\n            cube*=temp;\n      \
    \      temp-=1;\n        }\n        return cube==a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_abo_m21.java:37)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n\
    \        long bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n       \
    \ long bt8 = 1;\n        long bt9 = 1;\n        long bt10 = 1;\n        long bt11\
    \ = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n\
    \        long bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n    \
    \    long bt18 = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long\
    \ bt21 = 1;\n        long bt22 = 1;\n        long bt23 = 1;\n        long bt24\
    \ = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpywq71hai.java:122: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpywq71hai.java:122: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = Long.parseLong(String.valueOf(a));\n \
    \       if (cube == Long.parseLong(String.valueOf(cube))) {\n            return\
    \ true;\n        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_3glmo2.java:34)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a > 0 && a < Integer.MAX_VALUE && a % 1 ==\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5mpryixj.java:30)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().getAsLong();\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794784
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplgt7spt_.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmplgt7spt_.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsid4elof.java:29)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a) == (Math.pow(a,3));\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzpl8fjv.java:31)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long cube = 1;\n        long\
    \ square = 1;\n        long cubeRoot = 0;\n        long squareRoot = 0;\n    \
    \    long cubePower = 0;\n        long squarePower = 0;\n        long cubePowerPower\
    \ = 0;\n        long squarePowerPower = 0;\n        long cubePowerPowerPower =\
    \ 0;\n        long squarePowerPowerPower = 0;\n        long cubePowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPower = 0;\n        long cubePowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPower = 0;\n        long cubePowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPower = 0;\n        long cubePowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPowerPower = 0;\n        long\
    \ cubePowerPowerPowerPowerPowerPowerPowerPower = 0;\n        long squarePowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long cubePowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n\
    \        long squarePowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n     \
    \   long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n       \
    \ long squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n       \
    \ long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n        long\
    \ squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n        long\
    \ cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n        long\
    \ squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n       \
    \ long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower = 0;\n\
    \        long squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long cubePowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPowerPower\
    \ = 0;\n        long squarePowerPowerPowerPowerPowerPowerPower\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9iyq2qw2.java:66: error: ';' expected\n        long squarePowerPowerPowerPowerPowerPowerPower\n\
    \                                                      ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b;\n        long d =\
    \ c * c;\n        long e = d * d;\n        long f = e * e;\n        long g = f\
    \ * f;\n        long h = g * g;\n        long i = h * h;\n        long j = i *\
    \ i;\n        long k = j * j;\n        long l = k * k;\n        return l == a\
    \ * a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueu1h9dw.java:45)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104==0&&a%8796093022208==0&&a%17592186044416==0&&a%35184372088832==0&&a%70368744177664==0&&a%140737488355328==0&&a%281474976710656==0&&a%562949953421312==0&&a%1125899906842624==0&&a%2251799813685248==0&&a%4503599627370496==0&&a%9007199254740992==0&&a%18014398509481984==0&&a%36028797018963968==0&&a%72057\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7f4rbq8a.java:26: error: integer number too large\n        return\
    \ a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104==0&&a%8796093022208==0&&a%17592186044416==0&&a%35184372088832==0&&a%70368744177664==0&&a%140737488355328==0&&a%281474976710656==0&&a%562949953421312==0&&a%1125899906842624==0&&a%2251799813685248==0&&a%4503599627370496==0&&a%9007199254740992==0&&a%18014398509481984==0&&a%36028797018963968==0&&a%72057\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                   ^\n/tmp/tmp7f4rbq8a.java:26: error: integer number too large\n\
    \        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104="
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long a1 = 1;\n        long a2 = 1;\n\
    \        long a3 = 1;\n        long a4 = 1;\n        long a5 = 1;\n        long\
    \ a6 = 1;\n        long a7 = 1;\n        long a8 = 1;\n        long a9 = 1;\n\
    \        long a10 = 1;\n        long a11 = 1;\n        long a12 = 1;\n       \
    \ long a13 = 1;\n        long a14 = 1;\n        long a15 = 1;\n        long a16\
    \ = 1;\n        long a17 = 1;\n        long a18 = 1;\n        long a19 = 1;\n\
    \        long a20 = 1;\n        long a21 = 1;\n        long a22 = 1;\n       \
    \ long a23 = 1;\n        long a24 = 1;\n        long a25 = 1;\n        long a26\
    \ = 1;\n        long a27 = 1;\n        long a28 = 1;\n        long a29 = 1;\n\
    \        long a30 = 1;\n        long a31 = 1;\n        long a32 = 1;\n       \
    \ long a33 = 1;\n        long a34 = 1;\n        long a35 = 1;\n        long a36\
    \ = 1;\n        long a37 = 1;\n        long a38 = 1;\n        long a39 = 1;\n\
    \        long a40 = 1;\n        long a41 = 1;\n        long a42 = 1;\n       \
    \ long a43 = 1;\n        long a44 = 1;\n        long a45\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm6lvzbmw.java:121: error: ';' expected\n        long a45\n    \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a ;\n        long square = a * a;\n\
    \        long cubesquare = cube * square;\n        long cubecube = cube * cube;\n\
    \        long squaresquare = square * square;\n        long squarecube = square\
    \ * cube;\n        long cubecube = cube * cube;\n        long cubesquare = cube\
    \ * square;\n        long squaresquare = square * square;\n        long cubecube\
    \ = cube * cube;\n        long cubesquare = cube * square;\n        long squarecube\
    \ = square * cube;\n        long cubecube = cube * cube;\n        long cubesquare\
    \ = cube * square;\n        long squaresquare = square * square;\n        long\
    \ cubecube = cube * cube;\n        long cubesquare = cube * square;\n        long\
    \ squarecube = square * cube;\n        long cubecube = cube * cube;\n        long\
    \ cubesquare = cube * square;\n        long squaresquare = square * square;\n\
    \        long cubecube = cube * cube;\n        long cubesquare = cube * square;\n\
    \        long squarecube = square * cube;\n        long cubecube = cube * cube;\n\
    \        long cubesquare = cube * square;\n        long squaresquare = square\
    \ * square;\n        long cubecube = cube * cube;\n        long cubesquare = cube\
    \ * square;\n        long squarecube = square * cube;\n        long cubecube =\
    \ cube * cube;\n        long cubesquare = cube * square;\n        long squaresquare\
    \ = square * square;\n        long cubecube = cube * cube;\n        long cubesquare\
    \ = cube * square;\n        long squarecube = square * cube;\n        long cubecube\
    \ = cube * cube;\n        long cubesquare = cube * square;\n        long squaresquare\
    \ = square * square;\n        long cubecube = cube * cube;\n        long cubesquare\
    \ = cube * square;\n        long squarecube = square * cube;\n        long cubecube\
    \ = cube * cube;\n        long cubesquare = cube * square;\n        long squaresquare\
    \ = square * square;\n        long cubecube = cube * cube;\n        long cubesquare\
    \ = cube * square;\n        long squarecube = square * cube;\n        long cubecube\
    \ = cube \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnjy0a3zn.java:74: error: ';' expected\n        long cubecube =\
    \ cube \n                            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(i -> i\
    \ % a == 0).count();\n        return cube == 3l;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn14a5dbs.java:33)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%2==0&&a%3==0&&a%5==0&&a%7==0);\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp95un2o5k.java:29)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long A1 = 1;\n        long B1 = 1;\n        long C1 = 1;\n   \
    \     long D1 = 1;\n        long E1 = 1;\n        long F1 = 1;\n        long G1\
    \ = 1;\n        long H1 = 1;\n        long I1 = 1;\n        long J1 = 1;\n   \
    \     long K1 = 1;\n        long L1 = 1;\n        long M1 = 1;\n        long N1\
    \ = 1;\n        long O1 = 1;\n        long P1 = 1;\n        long Q1 = 1;\n   \
    \     long R1 = 1;\n        long S1 = 1;\n        long T1 = 1;\n        long U1\
    \ = 1;\n        long V1 = 1;\n        long W1 = 1;\n        long X1 = 1;\n   \
    \     long Y1 = 1;\n        long Z1 = 1;\n        long A2 = 1;\n        long B2\
    \ = 1;\n        long C2 = 1;\n        long D2 = 1;\n        long E2 = 1;\n   \
    \     long F2 = 1;\n        long G2 = 1;\n        long H2 = 1;\n        long I2\
    \ = 1;\n        long J2 = 1;\n        long K2 = 1;\n        long L2 = 1;\n   \
    \     long M2 = 1;\n        long N2 = 1;\n        long O2 = 1;\n        long P2\
    \ = 1;\n        long Q2 = 1;\n        long R2 = 1;\n        long S2 = 1;\n   \
    \     long T2 = 1;\n        long U2 = 1;\n        \n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7puhgm30.java:125: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        if (a %\
    \ 3 == 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsm3bldwo.java:38)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7olvv4f.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube(a, 0);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4a0ip27.java:26: error: method iscube in class Problem cannot\
    \ be applied to given types;\n        return iscube(a, 0);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a % 9 == 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphfjaizx2.java:29)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == a &&\
    \ cube > 0;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvyulm7a5.java:32)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794784
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l)\n            return false;\n\
    \        long b = a * a;\n        long c = b * b - 4 * a * b;\n        return\
    \ c < 0l;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpti2yafwu.java:34)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a == a);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprc_66ddz.java:32)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().orElse(-1l);\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b - 4 * a *\
    \ b;\n        if (c < 0)\n            return false;\n        else\n          \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyktxyqk.java:34)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        while (a != 0) {\n            if (a % b == 0) {\n\
    \                return false;\n            }\n            b *= b;\n         \
    \   a /= b;\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprz2pejuo.java:40)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube(a, 0);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr4a0ip27.java:26: error: method iscube in class Problem cannot\
    \ be applied to given types;\n        return iscube(a, 0);\n               ^\n\
    \  required: long\n  found:    long,int\n  reason: actual and formal argument\
    \ lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long a1 = 1;\n        long a2 = 1;\n\
    \        long a3 = 1;\n        long a4 = 1;\n        long a5 = 1;\n        long\
    \ a6 = 1;\n        long a7 = 1;\n        long a8 = 1;\n        long a9 = 1;\n\
    \        long a10 = 1;\n        long a11 = 1;\n        long a12 = 1;\n       \
    \ long a13 = 1;\n        long a14 = 1;\n        long a15 = 1;\n        long a16\
    \ = 1;\n        long a17 = 1;\n        long a18 = 1;\n        long a19 = 1;\n\
    \        long a20 = 1;\n        long a21 = 1;\n        long a22 = 1;\n       \
    \ long a23 = 1;\n        long a24 = 1;\n        long a25 = 1;\n        long a26\
    \ = 1;\n        long a27 = 1;\n        long a28 = 1;\n        long a29 = 1;\n\
    \        long a30 = 1;\n        long a31 = 1;\n        long a32 = 1;\n       \
    \ long a33 = 1;\n        long a34 = 1;\n        long a35 = 1;\n        long a36\
    \ = 1;\n        long a37 = 1;\n        long a38 = 1;\n        long a39 = 1;\n\
    \        long a40 = 1;\n        long a41 = 1;\n        long a42 = 1;\n       \
    \ long a43 = 1;\n        long a44 = 1;\n        long a45\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm6lvzbmw.java:121: error: ';' expected\n        long a45\n    \
    \            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        if (a %\
    \ 6 == 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt_wnnh22.java:38)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpptq9ph5o.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpptq9ph5o.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l)\n            return false;\n\
    \        long cube = LongStream.rangeClosed(0l, 180l).filter(i -> i % a == 0).count();\n\
    \        return cube == 3l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpju15t3xe.java:32)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a < 0l) return\
    \ false;\n        long b = a;\n        long c = a;\n        long d = a;\n    \
    \    long e = a;\n        long f = a;\n        long g = a;\n        long h = a;\n\
    \        long i = a;\n        long j = a;\n        long k = a;\n        long l\
    \ = a;\n        long m = a;\n        long n = a;\n        long o = a;\n      \
    \  long p = a;\n        long q = a;\n        long r = a;\n        long s = a;\n\
    \        long t = a;\n        long u = a;\n        long v = a;\n        long w\
    \ = a;\n        long x = a;\n        long y = a;\n        long z = a;\n      \
    \  long aa = a;\n        long ab = a;\n        long ac = a;\n        long ad =\
    \ a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n     \
    \   long ah = a;\n        long ai = a;\n        long aj = a;\n        long ak\
    \ = a;\n        long al = a;\n        long am = a;\n        long an = a;\n   \
    \     long ao = a;\n        long ap = a;\n        long aq = a;\n        long ar\
    \ = a;\n        long as = a;\n        long at = a;\n        long au = a;\n   \
    \     long av = a;\n        long aw = a;\n        long ax = a;\n        long ay\
    \ = a;\n        long az = a;\n        long ba = a;\n        long bb = a;\n   \
    \     long bc = a;\n        long bd = a;\n        long be = a;\n        long bf\
    \ = a;\n        long bg = a;\n        long bh = a;\n        long bi = a;\n   \
    \     long bj = a;\n        long bk = a;\n        long bl = a;\n        long bm\
    \ = a;\n        long bn = a;\n        long bo = a;\n        long bp = a;\n   \
    \     long bq = a;\n        long br = a;\n        long bs = a;\n        long bt\
    \ = a;\n        long bu = a;\n        long bv = a;\n        long bw = a;\n   \
    \     long bx = a;\n        long by = a;\n        long bz = a;\n        long ca\
    \ = a;\n        long cb = a;\n        long cc = a;\n        long cd = a;\n   \
    \     long ce = a;\n        long cf = a;\n        long cg = a;\n        long ch\
    \ = a;\n        long ci = a;\n        long cj = a;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpztaeklje.java:116: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 3 == 0) {\n            return true;\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwgz7map.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return iscube(a);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.java:26)\n\tat Problem.iscube(tmpzdl0ltgc.java:26)\n\
    \tat Problem.iscube(tmpzdl0ltgc.j"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ false;\n        if (a == -1l) return true;\n        if (a == 64l) return true;\n\
    \        if (a == 0l) return true;\n        if (a == 180l) return false;\n   \
    \     return false;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1guat4s.java:40)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b;\n       \
    \ long d = c * c;\n        return d == a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxjluybl.java:34)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa\
    \ = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n   \
    \     long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah\
    \ = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n   \
    \     long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao\
    \ = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n   \
    \     long as = 1;\n        long at = 1;\n        long au = 1;\n        long av\
    \ = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n   \
    \     long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc\
    \ = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n   \
    \     long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj\
    \ = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n   \
    \     long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq\
    \ = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n   \
    \     long bu = 1;\n        long bv = 1;\n        long bw = 1;\n        long bx\
    \ = 1;\n        long by = 1;\n        long bz = 1;\n        long ca = 1;\n   \
    \     long cb = 1;\n        long cc = 1;\n        long cd = 1;\n        long ce\
    \ = 1;\n        long cf = 1;\n        long cg = 1;\n        long ch = 1;\n   \
    \     long ci = 1;\n        long cj = 1;\n        long ck = 1;\n        long cl\
    \ = 1;\n        long cm = 1;\n        long cn = 1;\n        long co = 1;\n   \
    \     long cp = 1;\n        long cq = 1;\n        long cr = 1;\n        long cs\
    \ = 1;\n        long ct = 1;\n        long cu = 1;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk5z_lngv.java:128: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a % 1 == 0) {\n            return true;\n        }\n        long\
    \ b = 1;\n        while (a != 0) {\n            if (a % b == 0) {\n          \
    \      return false;\n            }\n            b *= b;\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9ivqmzr.java:46)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i*i*i == a).findFirst().getAsLong();\n        return cube == a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * a * i == a).count();\n        return cube == a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjjuww3vl.java:32)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ c;\n        long e = d;\n        long f = e;\n        long g = f;\n        long\
    \ h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n    \
    \    long l = k;\n        long m = l;\n        long n = m;\n        long o = n;\n\
    \        long p = o;\n        long q = p;\n        long r = q;\n        long s\
    \ = r;\n        long t = s;\n        long u = t;\n        long v = u;\n      \
    \  long w = v;\n        long x = w;\n        long y = x;\n        long z = y;\n\
    \        long a = z;\n        long b = a;\n        long c = b;\n        long d\
    \ = c;\n        long e = d;\n        long f = e;\n        long g = f;\n      \
    \  long h = g;\n        long i = h;\n        long j = i;\n        long k = j;\n\
    \        long l = k;\n        long m = l;\n        long n = m;\n        long o\
    \ = n;\n        long p = o;\n        long q = p;\n        long r = q;\n      \
    \  long s = r;\n        long t = s;\n        long u = t;\n        long v = u;\n\
    \        long w = v;\n        long x = w;\n        long y = x;\n        long z\
    \ = y;\n        long a = z;\n        long b = a;\n        long c = b;\n      \
    \  long d = c;\n        long e = d;\n        long f = e;\n        long g = f;\n\
    \        long h = g;\n        long i = h;\n        long j = i;\n        long k\
    \ = j;\n        long l = k;\n        long m = l;\n        long n = m;\n      \
    \  long o = n;\n        long p = o;\n        long q = p;\n        long r = q;\n\
    \        long s = r;\n        long t = s;\n        long u = t;\n        long v\
    \ = u;\n        long w = v;\n        long x = w;\n        long y = x;\n      \
    \  long z = y;\n        long a = z;\n        long b = a;\n        long c = b;\n\
    \        long d = c;\n        long e = d;\n        long f = e;\n        long g\
    \ = f;\n        long h = g;\n        long i = h;\n        long j = i;\n      \
    \  long k = j;\n        long l = k;\n        long m = l;\n        long n = m;\n\
    \        long o = n;\n        long p = o;\n        long q = p;\n        long r\
    \ = q;\n        long s = r;\n        long t = s;\n        long u = t;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6czkp23f.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z;\n             ^\n/tmp/tmp6czkp23f.java:52:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a;\n             ^\n/tmp/tmp6czkp23f.java:53: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b;\n             ^\n/tmp/tmp6czkp23f.java:54:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c;\n             ^\n/tmp/tmp6czkp23f.java:55: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d;\n             ^\n/tmp/tmp6czkp23f.java:56:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e;\n             ^\n/tmp/tmp6czkp23f.java:57: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f;\n             ^\n/tmp/tmp6czkp23f.java:58:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g;\n             ^\n/tmp/tmp6czkp23f.java:59: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h;\n             ^\n/tmp/tmp6czkp23f.java:60:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i;\n             ^\n/tmp/tmp6czkp23f.java:61: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j;\n             ^\n/tmp/tmp6czkp23f.java:62:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k;\n             ^\n/tmp/tmp6czkp23f.java:63: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l;\n             ^\n/tmp/tmp6czkp23f.java:64:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m;\n             ^\n/tmp/tmp6czkp23f.java:65: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n;\n             ^\n/tmp/tmp6czkp23f.java:66:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o;\n             ^\n/tmp/tmp6czkp23f.java:67: error: variable q is already\
    \ defined in method iscube(long)\n        long q = p;\n      "
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        if (a == Integer.MAX_VALUE) {\n            return true;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a % 2\
    \ == 0) {\n            return iscube(a / 2);\n        }\n        if (a % 3 ==\
    \ 0) {\n            return iscube(a / 3);\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp478puhe7.java:47)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7olvv4f.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 3;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794784
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_krbe0y.java:27: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpn_krbe0y.java:27: error: ';' expected\n    }\n     ^\n/tmp/tmpn_krbe0y.java:28:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n    public static\
    \ void main(String[] args) {\n                 ^\n/tmp/tmpn_krbe0y.java:28: error:\
    \ '.class' expected\n    public static void main(String[] args) {\n          \
    \                           ^\n/tmp/tmpn_krbe0y.java:28: error: ';' expected\n\
    \    public static void main(String[] args) {\n                              \
    \           ^\n/tmp/tmpn_krbe0y.java:39: error: reached end of file while parsing\n\
    }\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0)\
    \ && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0)\
    \ && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0) && (a%8192==0) &&\
    \ (a%16384==0) && (a%32768==0) && (a%65536==0) && (a%131072==0) && (a%262144==0)\
    \ && (a%524288==0) && (a%1048576==0) && (a%2097152==0) && (a%4194304==0) && (a%8388608==0)\
    \ && (a%16777216==0) && (a%33554432==0) && (a%67108864==0) && (a%134217728==0)\
    \ && (a%268435456==0) && (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0)\
    \ && (a%4294967296==0) && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0)\
    \ && (a%68719476736==0) && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0)\
    \ && (a%1099511627776==0) && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0)\
    \ && (a%17592186044416==0) && (a%35184372088832==0) && (a%70368744177664==0) &&\
    \ (a%140737488355328==0) && (a%281474976710656==0) && (a%562949953421312==0) &&\
    \ (a%1125899906842624==0) && (a%2251799813685248==0) && (a%4503599627370496==0)\
    \ && (a%9007199254740992==0) && (a%18014398509481984==0) && (a%36028797018963968==0)\
    \ && (a%72057\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3eyuzuus.java:26: error: integer number too large: 2147483648\n\
    \        return (a%1==0) && (a%2==0) && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0)\
    \ && (a%32==0) && (a%64==0) && (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0)\
    \ && (a%2048==0) && (a%4096==0) && (a%8192==0) && (a%16384==0) && (a%32768==0)\
    \ && (a%65536==0) && (a%131072==0) && (a%262144==0) && (a%524288==0) && (a%1048576==0)\
    \ && (a%2097152==0) && (a%4194304==0) && (a%8388608==0) && (a%16777216==0) &&\
    \ (a%33554432==0) && (a%67108864==0) && (a%134217728==0) && (a%268435456==0) &&\
    \ (a%536870912==0) && (a%1073741824==0) && (a%2147483648==0) && (a%4294967296==0)\
    \ && (a%8589934592==0) && (a%17179869184==0) && (a%34359738368==0) && (a%68719476736==0)\
    \ && (a%137438953472==0) && (a%274877906944==0) && (a%549755813888==0) && (a%1099511627776==0)\
    \ && (a%2199023255552==0) && (a%4398046511104==0) && (a%8796093022208==0) && (a%17592186044416==0)\
    \ && (a%35184372088832==0) && (a%70368744177664==0) && (a%140737488355328==0)\
    \ && (a%281474976710656==0) && (a%562949953421312==0) && (a%1125899906842624==0)\
    \ && (a%2251799813685248==0) && (a%4503599627370496==0) && (a%9007199254740992==0)\
    \ && (a%18014398509481984==0) && (a%36028797018963968==0) && (a%72057\n      \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                  ^\n/tmp/tmp3eyuzuus.java:26:\
    \ error: integer number too large: 4294967296\n        return (a%1==0) && (a%2==0)\
    \ && (a%3==0) && (a%4==0) && (a%8==0) && (a%16==0) && (a%32==0) && (a%64==0) &&\
    \ (a%128==0) && (a%256==0) && (a%512==0) && (a%1024==0) && (a%2048==0) && (a%4096==0)\
    \ && (a%8192==0) && (a%16384==0) && ("
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l)\n            return false;\n\
    \        if (a == 0l)\n            return true;\n        if (a % 9l == 0l)\n \
    \           return true;\n        if (a % 3l == 0l)\n            return true;\n\
    \        if (a % 5l == 0l)\n            return true;\n        if (a % 7l == 0l)\n\
    \            return true;\n        if (a % 11l == 0l)\n            return true;\n\
    \        if (a % 13l == 0l)\n            return true;\n        if (a % 17l ==\
    \ 0l)\n            return true;\n        if (a % 19l == 0l)\n            return\
    \ true;\n        if (a % 23l == 0l)\n            return true;\n        if (a %\
    \ 29l == 0l)\n            return true;\n        if (a % 31l == 0l)\n         \
    \   return true;\n        if (a % 37l == 0l)\n            return true;\n     \
    \   if (a % 41l == 0l)\n            return true;\n        if (a % 43l == 0l)\n\
    \            return true;\n        if (a % 47l == 0l)\n            return true;\n\
    \        if (a % 53l == 0l)\n            return true;\n        if (a % 59l ==\
    \ 0l)\n            return true;\n        if (a % 61l == 0l)\n            return\
    \ true;\n        if (a % 67l == 0l)\n            return true;\n        if (a %\
    \ 71l == 0l)\n            return true;\n        if (a % 73l == 0l)\n         \
    \   return true;\n        if (a % 79l == 0l)\n            return true;\n     \
    \   if (a % 83l == 0l)\n            return true;\n        if (a % 89l == 0l)\n\
    \            return true;\n        if (a % 97l == 0l)\n            return true;\n\
    \        if (a % 101l == 0l)\n            return true;\n        if (a % 103l ==\
    \ 0l)\n            return true;\n        if (a % 107l == 0l)\n            return\
    \ true;\n        if (a % 109l == 0l)\n            return true;\n        if (a\
    \ % 113l == 0l)\n            return true;\n        if (a % 117l == 0l)\n     \
    \       return true;\n        if (a % 121l == 0l)\n            return true;\n\
    \        if (a % 123l == 0l)\n            return true;\n        if (a % 127l ==\
    \ 0l)\n            return true;\n        if (a % 131l == 0l)\n            return\
    \ true;\n        if (a % 137l == 0l)\n            return true;\n        if (a\
    \ % 141l == 0l)\n            return true;\n        if (a % 143l == 0l)\n     \
    \       return true;\n        if (a % 147l == 0l)\n            return true;\n\
    \        if (a % 151l == 0l)\n            return true;\n        if (a % 157l \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfykjf5ra.java:110: error: ')' expected\n        if (a % 157l \n\
    \                    ^\n/tmp/tmpfykjf5ra.java:111: error: illegal start of statement\n\
    \    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l) && (a%2l==0l) && (a%3l==0l) && (a%4l==0l)\
    \ && (a%5l==0l) && (a%6l==0l) && (a%7l==0l) && (a%8l==0l) && (a%9l==0l) && (a%10l==0l)\
    \ && (a%11l==0l) && (a%12l==0l) && (a%13l==0l) && (a%14l==0l) && (a%15l==0l) &&\
    \ (a%16l==0l) && (a%17l==0l) && (a%18l==0l) && (a%19l==0l) && (a%20l==0l) && (a%21l==0l)\
    \ && (a%22l==0l) && (a%23l==0l) && (a%24l==0l) && (a%25l==0l) && (a%26l==0l) &&\
    \ (a%27l==0l) && (a%28l==0l) && (a%29l==0l) && (a%30l==0l) && (a%31l==0l) && (a%32l==0l)\
    \ && (a%33l==0l) && (a%34l==0l) && (a%35l==0l) && (a%36l==0l) && (a%37l==0l) &&\
    \ (a%38l==0l) && (a%39l==0l) && (a%40l==0l) && (a%41l==0l) && (a%42l==0l) && (a%43l==0l)\
    \ && (a%44l==0l) && (a%45l==0l) && (a%46l==0l) && (a%47l==0l) && (a%48l==0l) &&\
    \ (a%49l==0l) && (a%50l==0l) && (a%51l==0l) && (a%52l==0l) && (a%53l==0l) && (a%54l==0l)\
    \ && (a%55l==0l) && (a%56l==0l) && (a%57l==0l) && (a%58l==0l) && (a%59l==0l) &&\
    \ (a%60l==0l) && (a%61l==0l) && (a%62l==0l) && (a%63l==0l);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpipgwx2jj.java:29)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ false;\n        if (a == -1l) return true;\n        if (a == 64l) return true;\n\
    \        if (a == 0l) return true;\n        if (a == 180l) return false;\n   \
    \     return false;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1guat4s.java:40)\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7lxacd8y.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        long cube=1;\n  \
    \      for(long i=a;i>0;i--)\n            cube*=i;\n        return cube==a;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe65ixfga.java:34)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        if (a ==\
    \ 0) {\n            return true;\n        }\n        if (a == 1) {\n         \
    \   return true;\n        }\n        if (a == 2) {\n            return true;\n\
    \        }\n        if (a == 3) {\n            return true;\n        }\n     \
    \   if (a == 4) {\n            return true;\n        }\n        if (a == 5) {\n\
    \            return true;\n        }\n        if (a == 6) {\n            return\
    \ true;\n        }\n        if (a == 7) {\n            return true;\n        }\n\
    \        if (a == 8) {\n            return true;\n        }\n        if (a ==\
    \ 9) {\n            return true;\n        }\n        if (a == 10) {\n        \
    \    return true;\n        }\n        if (a == 11) {\n            return true;\n\
    \        }\n        if (a == 12) {\n            return true;\n        }\n    \
    \    if (a == 13) {\n            return true;\n        }\n        if (a == 14)\
    \ {\n            return true;\n        }\n        if (a == 15) {\n           \
    \ return true;\n        }\n        if (a == 16) {\n            return true;\n\
    \        }\n        if (a == 17) {\n            return true;\n        }\n    \
    \    if (a == 18) {\n            return true;\n        }\n        if (a == 19)\
    \ {\n            return true;\n        }\n        if (a == 20) {\n           \
    \ return true;\n        }\n        if (a == 21) {\n            return true;\n\
    \        }\n        if (a == 22) {\n            return true;\n        }\n    \
    \    if (a == 23) {\n            return true;\n        }\n        if (a == 24)\
    \ {\n            return true;\n        }\n        if (a == 25) {\n           \
    \ return true;\n        }\n        if (a == 26) {\n            return true;\n\
    \        }\n        if (a == 27) {\n            return true;\n        }\n    \
    \    if (a == 28) {\n            return true;\n        }\n        if (a == 29)\
    \ {\n            return true;\n        }\n        if (a == 30) {\n           \
    \ return true;\n        }\n        if (a == 31) {\n            return true;\n\
    \        }\n        if (a == 32) {\n            return true;\n        }\n    \
    \    if (a == 33) {\n            return true;\n        }\n        if (a == 34)\
    \ {\n            return true;\n        }\n        if (a == 35) {\n           \
    \ return true;\n        }\n        if (a == 36) {\n            return true;\n\
    \        }\n        if (a == 37) {\n            return true;\n        }\n    \
    \    if (a == 38) {\n            return true;\n        }\n        if (a == 39)\
    \ {\n            return true;\n        }\n        if (a == 40) {\n           \
    \ return true;\n        }\n        if (a == 41) {\n            return true;\n\
    \        }\n        if (a == 42) {\n            return true;\n        }\n    \
    \    if (a == 43) {\n            return true;\n        }\n        if (a == 44)\
    \ {\n            return true;\n        }\n        if (a == 45) {\n           \
    \ return true;\n        }\n        if (a == 46) {\n            return true;\n\
    \        }\n        if (a == 47) {\n            return true;\n        }\n    \
    \    if (a == 48) {\n            return true;\n        }\n        if (a == 49)\
    \ {\n            return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkcl59r8p.java:182: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794780
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        return cube == a ?\
    \ true : false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyespcy8_.java:33)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a * a * a) == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp35m3szmy.java:31)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1l);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0fig0cwf.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a > 0\
    \ && a < 64) {\n            return true;\n        }\n        return false;\n \
    \   }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkushs8_w.java:39)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a * a;\n        long c = b * b * b;\n       \
    \ long d = c * c * c;\n        long e = d * d * d;\n        long f = e * e * e;\n\
    \        long g = f * f * f;\n        long h = g * g * g;\n        long i = h\
    \ * h * h;\n        long j = i * i * i;\n        long k = j * j * j;\n       \
    \ long l = k * k * k;\n        return l == a;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6j6alwwv.java:45)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a==1l) return\
    \ true;\n        if (a==2l) return true;\n        if (a==3l) return true;\n  \
    \      if (a==4l) return true;\n        if (a==5l) return true;\n        if (a==6l)\
    \ return true;\n        if (a==7l) return true;\n        if (a==8l) return true;\n\
    \        if (a==9l) return true;\n        if (a==10l) return true;\n        if\
    \ (a==11l) return true;\n        if (a==12l) return true;\n        if (a==13l)\
    \ return true;\n        if (a==14l) return true;\n        if (a==15l) return true;\n\
    \        if (a==16l) return true;\n        if (a==17l) return true;\n        if\
    \ (a==18l) return true;\n        if (a==19l) return true;\n        if (a==20l)\
    \ return true;\n        if (a==21l) return true;\n        if (a==22l) return true;\n\
    \        if (a==23l) return true;\n        if (a==24l) return true;\n        if\
    \ (a==25l) return true;\n        if (a==26l) return true;\n        if (a==27l)\
    \ return true;\n        if (a==28l) return true;\n        if (a==29l) return true;\n\
    \        if (a==30l) return true;\n        if (a==31l) return true;\n        if\
    \ (a==32l) return true;\n        if (a==33l) return true;\n        if (a==34l)\
    \ return true;\n        if (a==35l) return true;\n        if (a==36l) return true;\n\
    \        if (a==37l) return true;\n        if (a==38l) return true;\n        if\
    \ (a==39l) return true;\n        if (a==40l) return true;\n        if (a==41l)\
    \ return true;\n        if (a==42l) return true;\n        if (a==43l) return true;\n\
    \        if (a==44l) return true;\n        if (a==45l) return true;\n        if\
    \ (a==46l) return true;\n        if (a==47l) return true;\n        if (a==48l)\
    \ return true;\n        if (a==49l) return true;\n        if (a==50l) return true;\n\
    \        if (a==51l) return true;\n        if (a==52l) return true;\n        if\
    \ (a==53l) return true;\n        if (a==54l) return true;\n        if (a==55l)\
    \ return true;\n        if (a==56l) return true;\n        if (a==57l) return true;\n\
    \        if (a==58l) return true;\n        if (a==59l) return true;\n        if\
    \ (a==60l) return true;\n        if (a==61l) return true;\n        if (a==62l)\
    \ return true;\n        if (a==63l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7lxacd8y.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==2l) || (a==3l) || (a==4l) ||\
    \ (a==5l) || (a==6l) || (a==7l) || (a==8l) || (a==9l) || (a==10l) || (a==11l)\
    \ || (a==12l) || (a==13l) || (a==14l) || (a==15l) || (a==16l) || (a==17l) || (a==18l)\
    \ || (a==19l) || (a==20l) || (a==21l) || (a==22l) || (a==23l) || (a==24l) || (a==25l)\
    \ || (a==26l) || (a==27l) || (a==28l) || (a==29l) || (a==30l) || (a==31l) || (a==32l)\
    \ || (a==33l) || (a==34l) || (a==35l) || (a==36l) || (a==37l) || (a==38l) || (a==39l)\
    \ || (a==40l) || (a==41l) || (a==42l) || (a==43l) || (a==44l) || (a==45l) || (a==46l)\
    \ || (a==47l) || (a==48l) || (a==49l) || (a==50l) || (a==51l) || (a==52l) || (a==53l)\
    \ || (a==54l) || (a==55l) || (a==56l) || (a==57l) || (a==58l) || (a==59l) || (a==60l)\
    \ || (a==61l) || (a==62l) || (a==63l) || (a==64l) || (a==65l) || (a==66l) || (a==67l)\
    \ || (a==68l) || (a==69l) || (a==70l) || (a==71l) || (a==72l) || (a==73l) || (a==74l)\
    \ || (a==75l) || (a==76l) || (a==77l) || (a==78l) || (a==79l) || (a==80l) || (a==81l)\
    \ || (a==82l) || (a==83l) || (a==84l) || (a==85l) || (a==86l) || (a==87l) || (a==88l)\
    \ || (a==89l) || (a==90l) || (a==91l) || (a==92l) || (a==93l) || (a==94l) || (a==95l)\
    \ || (a==96l) || (a==97l) || (a==98l) || (a==99l) || (a==100l) || (a==101l) ||\
    \ (a==102l) || (a\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiduuwq8o.java:26: error: ')' expected\n        return (a==1l) ||\
    \ (a==2l) || (a==3l) || (a==4l) || (a==5l) || (a==6l) || (a==7l) || (a==8l) ||\
    \ (a==9l) || (a==10l) || (a==11l) || (a==12l) || (a==13l) || (a==14l) || (a==15l)\
    \ || (a==16l) || (a==17l) || (a==18l) || (a==19l) || (a==20l) || (a==21l) || (a==22l)\
    \ || (a==23l) || (a==24l) || (a==25l) || (a==26l) || (a==27l) || (a==28l) || (a==29l)\
    \ || (a==30l) || (a==31l) || (a==32l) || (a==33l) || (a==34l) || (a==35l) || (a==36l)\
    \ || (a==37l) || (a==38l) || (a==39l) || (a==40l) || (a==41l) || (a==42l) || (a==43l)\
    \ || (a==44l) || (a==45l) || (a==46l) || (a==47l) || (a==48l) || (a==49l) || (a==50l)\
    \ || (a==51l) || (a==52l) || (a==53l) || (a==54l) || (a==55l) || (a==56l) || (a==57l)\
    \ || (a==58l) || (a==59l) || (a==60l) || (a==61l) || (a==62l) || (a==63l) || (a==64l)\
    \ || (a==65l) || (a==66l) || (a==67l) || (a==68l) || (a==69l) || (a==70l) || (a==71l)\
    \ || (a==72l) || (a==73l) || (a==74l) || (a==75l) || (a==76l) || (a==77l) || (a==78l)\
    \ || (a==79l) || (a==80l) || (a==81l) || (a==82l) || (a==83l) || (a==84l) || (a==85l)\
    \ || (a==86l) || (a==87l) || (a==88l) || (a==89l) || (a==90l) || (a==91l) || (a==92l)\
    \ || (a==93l) || (a==94l) || (a==95l) || (a==96l) || (a==97l) || (a==98l) || (a==99l)\
    \ || (a==100l) || (a==101l) || (a==102l) || (a\n                             \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                     "
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 1) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = b;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplgt7spt_.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmplgt7spt_.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a % 3\
    \ == 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx45y9etp.java:38)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b - 4 * a * b;\n   \
    \     if (c < 0l) {\n            return false;\n        }\n        return true;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy1ec71bm.java:37)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7olvv4f.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%2l==0l&&a%3l==0l&&a%5l==0l&&a%7l==0l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvdrozqc5.java:29)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 0) {\n            return true;\n        }\n        if (a % 2\
    \ == 0) {\n            return iscube(a / 2);\n        }\n        if (a % 3 ==\
    \ 0) {\n            return iscube(a / 3);\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rel157x.java:41)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104==0&&a%8796093022208==0&&a%17592186044416==0&&a%35184372088832==0&&a%70368744177664==0&&a%140737488355328==0&&a%281474976710656==0&&a%562949953421312==0&&a%1125899906842624==0&&a%2251799813685248==0&&a%4503599627370496==0&&a%9007199254740992==0&&a%18014398509481984==0&&a%36028797018963968==0&&a%72057\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7f4rbq8a.java:26: error: integer number too large\n        return\
    \ a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104==0&&a%8796093022208==0&&a%17592186044416==0&&a%35184372088832==0&&a%70368744177664==0&&a%140737488355328==0&&a%281474976710656==0&&a%562949953421312==0&&a%1125899906842624==0&&a%2251799813685248==0&&a%4503599627370496==0&&a%9007199254740992==0&&a%18014398509481984==0&&a%36028797018963968==0&&a%72057\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                   ^\n/tmp/tmp7f4rbq8a.java:26: error: integer number too large\n\
    \        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0&&a%16384==0&&a%32768==0&&a%65536==0&&a%131072==0&&a%262144==0&&a%524288==0&&a%1048576==0&&a%2097152==0&&a%4194304==0&&a%8388608==0&&a%16777216==0&&a%33554432==0&&a%67108864==0&&a%134217728==0&&a%268435456==0&&a%536870912==0&&a%1073741824==0&&a%2147483648==0&&a%4294967296==0&&a%8589934592==0&&a%17179869184==0&&a%34359738368==0&&a%68719476736==0&&a%137438953472==0&&a%274877906944==0&&a%549755813888==0&&a%1099511627776==0&&a%2199023255552==0&&a%4398046511104="
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > 180) {\n            return false;\n        }\n        if (a %\
    \ 3 == 0) {\n            return true;\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsm3bldwo.java:38)\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        while (n\
    \ != 1) {\n            d *= n;\n            n /= 3;\n        }\n        return\
    \ d == a;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794786
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long b = a * a;\n        long c = b * b;\n        long d =\
    \ c * c;\n        long e = d * d;\n        long f = e * e;\n        long g = f\
    \ * f;\n        long h = g * g;\n        long i = h * h;\n        long j = i *\
    \ i;\n        long k = j * j;\n        long l = k * k;\n        long m = l * l;\n\
    \        long n = m * m;\n        long o = n * n;\n        long p = o * o;\n \
    \       long q = p * p;\n        long r = q * q;\n        long s = r * r;\n  \
    \      long t = s * s;\n        long u = t * t;\n        long v = u * u;\n   \
    \     long w = v * v;\n        long x = w * w;\n        long y = x * x;\n    \
    \    long z = y * y;\n        long a = z * z;\n        long b = a * a;\n     \
    \   long c = b * b;\n        long d = c * c;\n        long e = d * d;\n      \
    \  long f = e * e;\n        long g = f * f;\n        long h = g * g;\n       \
    \ long i = h * h;\n        long j = i * i;\n        long k = j * j;\n        long\
    \ l = k * k;\n        long m = l * l;\n        long n = m * m;\n        long o\
    \ = n * n;\n        long p = o * o;\n        long q = p * p;\n        long r =\
    \ q * q;\n        long s = r * r;\n        long t = s * s;\n        long u = t\
    \ * t;\n        long v = u * u;\n        long w = v * v;\n        long x = w *\
    \ w;\n        long y = x * x;\n        long z = y * y;\n        long a = z * z;\n\
    \        long b = a * a;\n        long c = b * b;\n        long d = c * c;\n \
    \       long e = d * d;\n        long f = e * e;\n        long g = f * f;\n  \
    \      long h = g * g;\n        long i = h * h;\n        long j = i * i;\n   \
    \     long k = j * j;\n        long l = k * k;\n        long m = l * l;\n    \
    \    long n = m * m;\n        long o = n * n;\n        long p = o * o;\n     \
    \   long q = p * p;\n        long r = q * q;\n        long s = r * r;\n      \
    \  long t = s * s;\n        long u = t * t;\n        long v = u * u;\n       \
    \ \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp84es96f_.java:54: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z * z;\n             ^\n/tmp/tmp84es96f_.java:55:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a * a;\n             ^\n/tmp/tmp84es96f_.java:56: error: variable c is already\
    \ defined in method iscube(long)\n        long c = b * b;\n             ^\n/tmp/tmp84es96f_.java:57:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = c * c;\n             ^\n/tmp/tmp84es96f_.java:58: error: variable e is already\
    \ defined in method iscube(long)\n        long e = d * d;\n             ^\n/tmp/tmp84es96f_.java:59:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = e * e;\n             ^\n/tmp/tmp84es96f_.java:60: error: variable g is already\
    \ defined in method iscube(long)\n        long g = f * f;\n             ^\n/tmp/tmp84es96f_.java:61:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = g * g;\n             ^\n/tmp/tmp84es96f_.java:62: error: variable i is already\
    \ defined in method iscube(long)\n        long i = h * h;\n             ^\n/tmp/tmp84es96f_.java:63:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = i * i;\n             ^\n/tmp/tmp84es96f_.java:64: error: variable k is already\
    \ defined in method iscube(long)\n        long k = j * j;\n             ^\n/tmp/tmp84es96f_.java:65:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = k * k;\n             ^\n/tmp/tmp84es96f_.java:66: error: variable m is already\
    \ defined in method iscube(long)\n        long m = l * l;\n             ^\n/tmp/tmp84es96f_.java:67:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = m * m;\n             ^\n/tmp/tmp84es96f_.java:68: error: variable o is already\
    \ defined in method iscube(long)\n        long o = n * n;\n             ^\n/tmp/tmp84es96f_.java:69:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = o * o;\n             ^\n/tmp/tmp84es96f_.java:70: error: variable q is a"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long A = 1;\n        long B = 1;\n        long C = 1;\n        long D\
    \ = 1;\n        long E = 1;\n        long F = 1;\n        long G = 1;\n      \
    \  long H = 1;\n        long I = 1;\n        long J = 1;\n        long K = 1;\n\
    \        long L = 1;\n        long M = 1;\n        long N = 1;\n        long O\
    \ = 1;\n        long P = 1;\n        long Q = 1;\n        long R = 1;\n      \
    \  long S = 1;\n        long T = 1;\n        long U = 1;\n        long V = 1;\n\
    \        long W = 1;\n        long X = 1;\n        long Y = 1;\n        long Z\
    \ = 1;\n        long AA = 1;\n        long AB = 1;\n        long AC = 1;\n   \
    \     long AD = 1;\n        long AE = 1;\n        long AF = 1;\n        long AG\
    \ = 1;\n        long AH = 1;\n        long AI = 1;\n        long AJ = 1;\n   \
    \     long AK = 1;\n        long AL = 1;\n        long AM = 1;\n        long AN\
    \ = 1;\n        long AO = 1;\n        long AP = 1;\n        long AQ = 1;\n   \
    \     long AR = 1;\n        long AS = 1;\n        long AT = 1;\n        long AU\
    \ = 1;\n        long AV = 1;\n        long AW = 1;\n        long AX = 1;\n   \
    \     long AY = 1;\n        long AZ = 1;\n        long BA = 1;\n        long BB\
    \ = 1;\n        long BC = 1;\n        long BD = 1;\n        long BE = 1;\n   \
    \     long BF = 1;\n        long BG = 1;\n        long BH = 1;\n        long BI\
    \ = 1;\n        long BJ = 1;\n        long BK = 1;\n        long BL = 1;\n   \
    \     long BM = 1;\n        long BN = 1;\n        long BO = 1;\n        long BP\
    \ = 1;\n        long BQ = 1;\n        long BR = 1;\n        long BS = 1;\n   \
    \     long BT = 1;\n        long BU = 1;\n        long BV = 1;\n        long BW\
    \ = 1;\n        long BX = 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplprx_j1.java:127: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).findFirst().orElse(-1l);\n        return cube == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == (long)\
    \ Math.pow(a, 3))\n            return true;\n        else\n            return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpweob_jr8.java:34)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i*i*i == a).findFirst().getAsLong();\n        return cube == a;\n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794785
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&a\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpehoii8i7.java:26: error: ')' expected\n        return (a%1l==0l&&a%2l==0l&&a%3l==0l&&a%4l==0l&&a%5l==0l&&a%6l==0l&&a%7l==0l&&a%8l==0l&&a%9l==0l&&a%10l==0l&&a%11l==0l&&a%12l==0l&&a%13l==0l&&a%14l==0l&&a%15l==0l&&a%16l==0l&&a%17l==0l&&a%18l==0l&&a%19l==0l&&a%20l==0l&&a%21l==0l&&a%22l==0l&&a%23l==0l&&a%24l==0l&&a%25l==0l&&a%26l==0l&&a%27l==0l&&a%28l==0l&&a%29l==0l&&a%30l==0l&&a%31l==0l&&a%32l==0l&&a%33l==0l&&a%34l==0l&&a%35l==0l&&a%36l==0l&&a%37l==0l&&a%38l==0l&&a%39l==0l&&a%40l==0l&&a%41l==0l&&a%42l==0l&&a%43l==0l&&a%44l==0l&&a%45l==0l&&a%46l==0l&&a%47l==0l&&a%48l==0l&&a%49l==0l&&a%50l==0l&&a%51l==0l&&a%52l==0l&&a%53l==0l&&a%54l==0l&&a%55l==0l&&a%56l==0l&&a%57l==0l&&a%58l==0l&&a%59l==0l&&a%60l==0l&&a%61l==0l&&a%62l==0l&&a%63l==0l&&a%64l==0l&&a\n\
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                                                                            \
    \                            ^\n1 error\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(x\
    \ -> x*x*x == a).count();\n        return (cube == 3);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpchypvo3a.java:30)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        if (a > 1l && a%2l==0l)\
    \ return true;\n        if (a > 2l && a%4l==0l) return true;\n        if (a >\
    \ 4l && a%8l==0l) return true;\n        if (a > 8l && a%16l==0l) return true;\n\
    \        return false;\n    }\n    public static void main(String[] args) {\n\
    \    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n \
    \   assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n \
    \   assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps036dvdl.java:34)\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==0l) return true;\n        long b = a%2l;\n\
    \        long c = a%3l;\n        long d = a%5l;\n        long e = a%7l;\n    \
    \    long f = a%11l;\n        long g = a%13l;\n        long h = a%17l;\n     \
    \   long i = a%19l;\n        long j = a%23l;\n        long k = a%29l;\n      \
    \  long l = a%31l;\n        long m = a%37l;\n        long n = a%41l;\n       \
    \ long o = a%47l;\n        long p = a%53l;\n        long q = a%59l;\n        long\
    \ r = a%61l;\n        long s = a%67l;\n        long t = a%71l;\n        long u\
    \ = a%77l;\n        long v = a%81l;\n        long w = a%87l;\n        long x =\
    \ a%93l;\n        long y = a%99l;\n        long z = a%103l;\n        long a =\
    \ a%107l;\n        long b = a%113l;\n        long c = a%127l;\n        long d\
    \ = a%131l;\n        long e = a%137l;\n        long f = a%141l;\n        long\
    \ g = a%147l;\n        long h = a%151l;\n        long i = a%157l;\n        long\
    \ j = a%161l;\n        long k = a%167l;\n        long l = a%171l;\n        long\
    \ m = a%177l;\n        long n = a%181l;\n        long o = a%187l;\n        long\
    \ p = a%191l;\n        long q = a%197l;\n        long r = a%201l;\n        long\
    \ s = a%207l;\n        long t = a%211l;\n        long u = a%217l;\n        long\
    \ v = a%221l;\n        long w = a%227l;\n        long x = a%231l;\n        long\
    \ y = a%237l;\n        long z = a%241l;\n        long a = a%247l;\n        long\
    \ b = a%251l;\n        long c = a%257l;\n        long d = a%261l;\n        long\
    \ e = a%267l;\n        long f = a%271l;\n        long g = a%277l;\n        long\
    \ h = a%281l;\n        long i = a%287l;\n        long j = a%291l;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp36ts0iq2.java:52: error: variable a is already defined in method\
    \ iscube(long)\n        long a = a%107l;\n             ^\n/tmp/tmp36ts0iq2.java:53:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = a%113l;\n             ^\n/tmp/tmp36ts0iq2.java:54: error: variable c is already\
    \ defined in method iscube(long)\n        long c = a%127l;\n             ^\n/tmp/tmp36ts0iq2.java:55:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = a%131l;\n             ^\n/tmp/tmp36ts0iq2.java:56: error: variable e is already\
    \ defined in method iscube(long)\n        long e = a%137l;\n             ^\n/tmp/tmp36ts0iq2.java:57:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = a%141l;\n             ^\n/tmp/tmp36ts0iq2.java:58: error: variable g is already\
    \ defined in method iscube(long)\n        long g = a%147l;\n             ^\n/tmp/tmp36ts0iq2.java:59:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = a%151l;\n             ^\n/tmp/tmp36ts0iq2.java:60: error: variable i is already\
    \ defined in method iscube(long)\n        long i = a%157l;\n             ^\n/tmp/tmp36ts0iq2.java:61:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = a%161l;\n             ^\n/tmp/tmp36ts0iq2.java:62: error: variable k is already\
    \ defined in method iscube(long)\n        long k = a%167l;\n             ^\n/tmp/tmp36ts0iq2.java:63:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = a%171l;\n             ^\n/tmp/tmp36ts0iq2.java:64: error: variable m is already\
    \ defined in method iscube(long)\n        long m = a%177l;\n             ^\n/tmp/tmp36ts0iq2.java:65:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = a%181l;\n             ^\n/tmp/tmp36ts0iq2.java:66: error: variable o is already\
    \ defined in method iscube(long)\n        long o = a%187l;\n             ^\n/tmp/tmp36ts0iq2.java:67:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = a%191l;\n             ^\n/tmp/tmp36ts0iq2.java:68: error:"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = Long.parseLong(String.valueOf(a));\n \
    \       long square = Long.parseLong(String.valueOf(Math.pow(cube, 3)));\n   \
    \     long cube_of_square = Long.parseLong(String.valueOf(Math.pow(square, 2)));\n\
    \        long cube_of_cube = Long.parseLong(String.valueOf(Math.pow(cube, 2)));\n\
    \        long cube_of_cube_of_square = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 3)));\n        long cube_of_cube_of_cube = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 4)));\n        long cube_of_cube_of_cube_of_square = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 5)));\n        long cube_of_cube_of_cube_of_cube = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 6)));\n        long cube_of_cube_of_cube_of_cube_of_square = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 7)));\n        long cube_of_cube_of_cube_of_cube_of_cube = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 8)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_square = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 9)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_cube = Long.parseLong(String.valueOf(Math.pow(cube,\
    \ 10)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_square\
    \ = Long.parseLong(String.valueOf(Math.pow(cube, 11)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_square\
    \ = Long.parseLong(String.valueOf(Math.pow(cube, 12)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_cube\
    \ = Long.parseLong(String.valueOf(Math.pow(cube, 13)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_square\
    \ = Long.parseLong(String.valueOf(Math.pow(cube, 14)));\n        long cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_cube_of_square\
    \ = Long.parseLong(String.valueOf(Math.pow(cube, 15)));\n        long cube_of_cube_of_\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgt6nv2q9.java:43: error: ';' expected\n        long cube_of_cube_of_\n\
    \                             ^\n1 error\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = b;\n        long d =\
    \ b;\n        long e = b;\n        long f = b;\n        long g = b;\n        long\
    \ h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n    \
    \    long l = b;\n        long m = b;\n        long n = b;\n        long o = b;\n\
    \        long p = b;\n        long q = b;\n        long r = b;\n        long s\
    \ = b;\n        long t = b;\n        long u = b;\n        long v = b;\n      \
    \  long w = b;\n        long x = b;\n        long y = b;\n        long z = b;\n\
    \        long a = b;\n        long b = b;\n        long c = b;\n        long d\
    \ = b;\n        long e = b;\n        long f = b;\n        long g = b;\n      \
    \  long h = b;\n        long i = b;\n        long j = b;\n        long k = b;\n\
    \        long l = b;\n        long m = b;\n        long n = b;\n        long o\
    \ = b;\n        long p = b;\n        long q = b;\n        long r = b;\n      \
    \  long s = b;\n        long t = b;\n        long u = b;\n        long v = b;\n\
    \        long w = b;\n        long x = b;\n        long y = b;\n        long z\
    \ = b;\n        long a = b;\n        long b = b;\n        long c = b;\n      \
    \  long d = b;\n        long e = b;\n        long f = b;\n        long g = b;\n\
    \        long h = b;\n        long i = b;\n        long j = b;\n        long k\
    \ = b;\n        long l = b;\n        long m = b;\n        long n = b;\n      \
    \  long o = b;\n        long p = b;\n        long q = b;\n        long r = b;\n\
    \        long s = b;\n        long t = b;\n        long u = b;\n        long v\
    \ = b;\n        long w = b;\n        long x = b;\n        long y = b;\n      \
    \  long z = b;\n        long a = b;\n        long b = b;\n        long c = b;\n\
    \        long d = b;\n        long e = b;\n        long f = b;\n        long g\
    \ = b;\n        long h = b;\n        long i = b;\n        long j = b;\n      \
    \  long k = b;\n        long l = b;\n        long m = b;\n        long n = b;\n\
    \        long o = b;\n        long p = b;\n        long q = b;\n        long r\
    \ = b;\n        long s = b;\n        long t = b;\n        long u = b;\n      \
    \  long v = b;\n        long w = b;\n        long x = b;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplag87auf.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 1l) return true;\n        if (a == 2l) return\
    \ true;\n        if (a == 3l) return true;\n        if (a == 4l) return true;\n\
    \        if (a == 5l) return true;\n        if (a == 6l) return true;\n      \
    \  if (a == 7l) return true;\n        if (a == 8l) return true;\n        if (a\
    \ == 9l) return true;\n        if (a == 10l) return true;\n        if (a == 11l)\
    \ return true;\n        if (a == 12l) return true;\n        if (a == 13l) return\
    \ true;\n        if (a == 14l) return true;\n        if (a == 15l) return true;\n\
    \        if (a == 16l) return true;\n        if (a == 17l) return true;\n    \
    \    if (a == 18l) return true;\n        if (a == 19l) return true;\n        if\
    \ (a == 20l) return true;\n        if (a == 21l) return true;\n        if (a ==\
    \ 22l) return true;\n        if (a == 23l) return true;\n        if (a == 24l)\
    \ return true;\n        if (a == 25l) return true;\n        if (a == 26l) return\
    \ true;\n        if (a == 27l) return true;\n        if (a == 28l) return true;\n\
    \        if (a == 29l) return true;\n        if (a == 30l) return true;\n    \
    \    if (a == 31l) return true;\n        if (a == 32l) return true;\n        if\
    \ (a == 33l) return true;\n        if (a == 34l) return true;\n        if (a ==\
    \ 35l) return true;\n        if (a == 36l) return true;\n        if (a == 37l)\
    \ return true;\n        if (a == 38l) return true;\n        if (a == 39l) return\
    \ true;\n        if (a == 40l) return true;\n        if (a == 41l) return true;\n\
    \        if (a == 42l) return true;\n        if (a == 43l) return true;\n    \
    \    if (a == 44l) return true;\n        if (a == 45l) return true;\n        if\
    \ (a == 46l) return true;\n        if (a == 47l) return true;\n        if (a ==\
    \ 48l) return true;\n        if (a == 49l) return true;\n        if (a == 50l)\
    \ return true;\n        if (a == 51l) return true;\n        if (a == 52l) return\
    \ true;\n        if (a == 53l) return true;\n        if (a == 54l) return true;\n\
    \        if (a == 55l) return true;\n        if (a == 56l) return true;\n    \
    \    if (a == 57l) return true;\n        if (a == 58l) return true;\n        if\
    \ (a == 59l) return true;\n        if (a == 60l) return true;\n        if (a ==\
    \ 61l) return true;\n        if (a == 62l) return true;\n        if (a == 63l)\
    \ return true;\n        if (a == 64l) return true;\n        if (a == 65l) return\
    \ true;\n        if (a == 66l) return true;\n        if (a == 67l) return true;\n\
    \        if (a == 68l) return true;\n        if (a == 69l) return true;\n    \
    \    if (a == 70l) return true;\n        if (a == 71l) return true;\n        if\
    \ (a == 72l) return true;\n        if (a == 73l) return true;\n        if (\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprkdvub3b.java:100: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%5==0&&a%6==0&&a%7==0&&a%8==0&&a%9==0&&a%10==0&&a%11==0&&a%12==0&&a%13==0&&a%14==0&&a%15==0&&a%16==0&&a%17==0&&a%18==0&&a%19==0&&a%20==0&&a%21==0&&a%22==0&&a%23==0&&a%24==0&&a%25==0&&a%26==0&&a%27==0&&a%28==0&&a%29==0&&a%30==0&&a%31==0&&a%32==0&&a%33==0&&a%34==0&&a%35==0&&a%36==0&&a%37==0&&a%38==0&&a%39==0&&a%40==0&&a%41==0&&a%42==0&&a%43==0&&a%44==0&&a%45==0&&a%46==0&&a%47==0&&a%48==0&&a%49==0&&a%50==0&&a%51==0&&a%52==0&&a%53==0&&a%54==0&&a%55==0&&a%56==0&&a%57==0&&a%58==0&&a%59==0&&a%60==0&&a%61==0&&a%62==0&&a%63==0&&a%64==0&&a%65==0&&a%66==0&&a%67==0&&a%68==0&&a%69==0&&a%70==0&&a%71==0&&a%72==0&&a%73==0&&a%74==0&&a%75==0&&a%76==0&&a%77==0&&a%78==0&&a%79==0&&a%80==0&&a%81==0&&a%82==0&&a%83==0&&a%84==0&&a%85==0&&a%86==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr7lituad.java:27: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a == 1l) {\n            return true;\n        }\n        if (a ==\
    \ 2l) {\n            return true;\n        }\n        if (a == 3l) {\n       \
    \     return true;\n        }\n        if (a == 4l) {\n            return true;\n\
    \        }\n        if (a == 5l) {\n            return true;\n        }\n    \
    \    if (a == 6l) {\n            return true;\n        }\n        if (a == 7l)\
    \ {\n            return true;\n        }\n        if (a == 8l) {\n           \
    \ return true;\n        }\n        if (a == 9l) {\n            return true;\n\
    \        }\n        if (a == 10l) {\n            return true;\n        }\n   \
    \     if (a == 11l) {\n            return true;\n        }\n        if (a == 12l)\
    \ {\n            return true;\n        }\n        if (a == 13l) {\n          \
    \  return true;\n        }\n        if (a == 14l) {\n            return true;\n\
    \        }\n        if (a == 15l) {\n            return true;\n        }\n   \
    \     if (a == 16l) {\n            return true;\n        }\n        if (a == 17l)\
    \ {\n            return true;\n        }\n        if (a == 18l) {\n          \
    \  return true;\n        }\n        if (a == 19l) {\n            return true;\n\
    \        }\n        if (a == 20l) {\n            return true;\n        }\n   \
    \     if (a == 21l) {\n            return true;\n        }\n        if (a == 22l)\
    \ {\n            return true;\n        }\n        if (a == 23l) {\n          \
    \  return true;\n        }\n        if (a == 24l) {\n            return true;\n\
    \        }\n        if (a == 25l) {\n            return true;\n        }\n   \
    \     if (a == 26l) {\n            return true;\n        }\n        if (a == 27l)\
    \ {\n            return true;\n        }\n        if (a == 28l) {\n          \
    \  return true;\n        }\n        if (a == 29l) {\n            return true;\n\
    \        }\n        if (a == 30l) {\n            return true;\n        }\n   \
    \     if (a == 31l) {\n            return true;\n        }\n        if (a == 32l)\
    \ {\n            return true;\n        }\n        if (a == 33l) {\n          \
    \  return true;\n        }\n        if (a == 34l) {\n            return true;\n\
    \        }\n        if (a == 35l) {\n            return true;\n        }\n   \
    \     if (a == 36l) {\n            return true;\n        }\n        if (a == 37l)\
    \ {\n            return true;\n        }\n        if (a == 38l) {\n          \
    \  return true;\n        }\n        if (a == 39l) {\n            return true;\n\
    \        }\n        if (a == 40l) {\n            return true;\n        }\n   \
    \     if (a == 41l) {\n            return true;\n        }\n        if (a == 42l)\
    \ {\n            return true;\n        }\n        if (a == 43l) {\n          \
    \  return true;\n        }\n        if (a == 44l) {\n            return true;\n\
    \        }\n        if (a == 45l) {\n            return true;\n        }\n   \
    \     if (a == 46l) {\n            return true;\n        }\n        if (a == 47l)\
    \ {\n            return true;\n        }\n        if (a == 48l) {\n          \
    \  return true;\n        }\n        if (a == 49l) {\n            return true;\n\
    \        }\n        if (a == 50l) {\n            return true;\n        }\n   \
    \     if (a == 51\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05u_fxk6.java:179: error: ')' expected\n        if (a == 51\n \
    \                  ^\n/tmp/tmp05u_fxk6.java:180: error: illegal start of statement\n\
    \    }\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long aaa = 1;\n        long aab = 1;\n\
    \        long aac = 1;\n        long aad = 1;\n        long aae = 1;\n       \
    \ long aaf = 1;\n        long aag = 1;\n        long aah = 1;\n        long ai1\
    \ = 1;\n        long aj1 = 1;\n        long ak1 = 1;\n        long al1 = 1;\n\
    \        long am1 = 1;\n        long an1 = 1;\n        long ao1 = 1;\n       \
    \ long ap1 = 1;\n        long aq1 = 1;\n        long ar1 = 1;\n        long as1\
    \ = 1;\n        long at1 = 1;\n        long au1 = 1;\n        long av1 = 1;\n\
    \        long aw1 = 1;\n        long ax1 = 1;\n        long ay1 = 1;\n       \
    \ long az1 = 1;\n        long aaa1 = 1;\n        long aab1 = 1;\n        long\
    \ aac1 = 1;\n        long aad1 = 1;\n        long aae1 = 1;\n        long aaf1\
    \ = 1;\n        long aag1 = 1;\n        long aah1 = 1;\n        long ai1 = 1;\n\
    \        long aj1 = 1;\n        long ak1 = 1;\n        long al1 = 1;\n       \
    \ long am1 = 1;\n        long an1 = 1;\n        long ao1 = 1;\n        long ap1\
    \ = 1;\n        long aq1 = 1;\n        long ar1 = 1;\n        long as1 = 1;\n\
    \        long at1 = 1;\n        long au1 = 1;\n        long av1 = 1;\n       \
    \ long aw\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj6pxamp.java:125: error: ';' expected\n        long aw\n     \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794781
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a%1;\n        if (b==0) return true;\n  \
    \      long c = a%2;\n        if (b==0 && c==0) return true;\n        long d =\
    \ a%3;\n        if (b==0 && c==0 && d==0) return true;\n        long e = a%4;\n\
    \        if (b==0 && c==0 && d==0 && e==0) return true;\n        long f = a%5;\n\
    \        if (b==0 && c==0 && d==0 && e==0 && f==0) return true;\n        long\
    \ g = a%6;\n        if (b==0 && c==0 && d==0 && e==0 && f==0 && g==0) return true;\n\
    \        long h = a%7;\n        if (b==0 && c==0 && d==0 && e==0 && f==0 && g==0\
    \ && h==0) return true;\n        long i = a%8;\n        if (b==0 && c==0 && d==0\
    \ && e==0 && f==0 && g==0 && h==0 && i==0) return true;\n        long j = a%9;\n\
    \        if (b==0 && c==0 && d==0 && e==0 && f==0 && g==0 && h==0 && i==0 && j==0)\
    \ return true;\n        long k = a%10;\n        if (b==0 && c==0 && d==0 && e==0\
    \ && f==0 && g==0 && h==0 && i==0 && j==0 && k==0) return true;\n        long\
    \ l = a%11;\n        if (b==0 && c==0 && d==0 && e==0 && f==0 && g==0 && h==0\
    \ && i==0 && j==0 && k==0 && l==0) return true;\n        long m = a%12;\n    \
    \    if (b==0 && c==0 && d==0 && e==0 && f==0 && g==0 && h==0 && i==0 && j==0\
    \ && k==0 && l==0 && m==0) return true;\n        long n = a%13;\n        if (b==0\
    \ && c==0 && d==0 && e==0 && f==0 && g==0 && h==0 && i==0 && j==0 && k==0 && l==0\
    \ && m==0 && n==0) return true;\n        long o = a%14;\n        if (b==0 && c==0\
    \ && d==0 && e==0 && f==0 && g==0 && h==0 && i==0 && j==0 && k==0 && l==0 && m==0\
    \ && n==0 && o==0) return true;\n        long p = a%15;\n        if (b==0 && c==0\
    \ && d==0 && e==0 && f==0 && g==0 && h==0 && i==0 && j==0 && k==0 && l==0 && m==\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb3iiu745.java:56: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9o7oqpfc.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long aa = a;\n        long ab = a;\n        long ac = a;\n        long\
    \ ad = a;\n        long ae = a;\n        long af = a;\n        long ag = a;\n\
    \        long ah = a;\n        long ai = a;\n        long aj = a;\n        long\
    \ ak = a;\n        long al = a;\n        long am = a;\n        long an = a;\n\
    \        long ao = a;\n        long ap = a;\n        long aq = a;\n        long\
    \ ar = a;\n        long as = a;\n        long at = a;\n        long au = a;\n\
    \        long av = a;\n        long aw = a;\n        long ax = a;\n        long\
    \ ay = a;\n        long az = a;\n        long ba = a;\n        long bb = a;\n\
    \        long bc = a;\n        long bd = a;\n        long be = a;\n        long\
    \ bf = a;\n        long bg = a;\n        long bh = a;\n        long bi = a;\n\
    \        long bj = a;\n        long bk = a;\n        long bl = a;\n        long\
    \ bm = a;\n        long bn = a;\n        long bo = a;\n        long bp = a;\n\
    \        long bq = a;\n        long br = a;\n        long bs = a;\n        long\
    \ bt = a;\n        long bu = a;\n        long bv = a;\n        long bw = a;\n\
    \        long bx = a;\n        long by = a;\n        long bz = a;\n        long\
    \ ca = a;\n        long cb = a;\n        long cc = a;\n        long cd = a;\n\
    \        long ce = a;\n        long cf = a;\n        long cg = a;\n        long\
    \ ch = a;\n        long ci = a;\n        long cj = a;\n        long ck = a;\n\
    \        long cl = a;\n        long cm\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwehof57d.java:115: error: ';' expected\n        long cm\n     \
    \          ^\n1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a;\n        long c = a;\n        long d =\
    \ a;\n        long e = a;\n        long f = a;\n        long g = a;\n        long\
    \ h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n    \
    \    long l = a;\n        long m = a;\n        long n = a;\n        long o = a;\n\
    \        long p = a;\n        long q = a;\n        long r = a;\n        long s\
    \ = a;\n        long t = a;\n        long u = a;\n        long v = a;\n      \
    \  long w = a;\n        long x = a;\n        long y = a;\n        long z = a;\n\
    \        long a = a;\n        long b = a;\n        long c = a;\n        long d\
    \ = a;\n        long e = a;\n        long f = a;\n        long g = a;\n      \
    \  long h = a;\n        long i = a;\n        long j = a;\n        long k = a;\n\
    \        long l = a;\n        long m = a;\n        long n = a;\n        long o\
    \ = a;\n        long p = a;\n        long q = a;\n        long r = a;\n      \
    \  long s = a;\n        long t = a;\n        long u = a;\n        long v = a;\n\
    \        long w = a;\n        long x = a;\n        long y = a;\n        long z\
    \ = a;\n        long a = a;\n        long b = a;\n        long c = a;\n      \
    \  long d = a;\n        long e = a;\n        long f = a;\n        long g = a;\n\
    \        long h = a;\n        long i = a;\n        long j = a;\n        long k\
    \ = a;\n        long l = a;\n        long m = a;\n        long n = a;\n      \
    \  long o = a;\n        long p = a;\n        long q = a;\n        long r = a;\n\
    \        long s = a;\n        long t = a;\n        long u = a;\n        long v\
    \ = a;\n        long w = a;\n        long x = a;\n        long y = a;\n      \
    \  long z = a;\n        long a = a;\n        long b = a;\n        long c = a;\n\
    \        long d = a;\n        long e = a;\n        long f = a;\n        long g\
    \ = a;\n        long h = a;\n        long i = a;\n        long j = a;\n      \
    \  long k = a;\n        long l = a;\n        long m = a;\n        long n = a;\n\
    \        long o = a;\n        long p = a;\n        long q = a;\n        long r\
    \ = a;\n        long s = a;\n        long t = a;\n        long u = a;\n      \
    \  long v = a;\n        long w = a;\n        long x = a;\n        long y = \n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7olvv4f.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659794779
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a == 0l) {\n            return true;\n       \
    \ }\n        if (a < 0l) {\n            return false;\n        }\n        if (a\
    \ % 4 == 0l) {\n            return iscube(a / 4l);\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprhe4ypmp.java:38)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0) {\n            return false;\n        }\n\
    \        if (a > Integer.MAX_VALUE) {\n            return false;\n        }\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxi9a7l53.java:57: error: variable a is already defined in method\
    \ iscube(long)\n        long a = 1;\n             ^\n/tmp/tmpxi9a7l53.java:58:\
    \ error: variable b is already defined in method iscube(long)\n        long b\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:59: error: variable c is already\
    \ defined in method iscube(long)\n        long c = 1;\n             ^\n/tmp/tmpxi9a7l53.java:60:\
    \ error: variable d is already defined in method iscube(long)\n        long d\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:61: error: variable e is already\
    \ defined in method iscube(long)\n        long e = 1;\n             ^\n/tmp/tmpxi9a7l53.java:62:\
    \ error: variable f is already defined in method iscube(long)\n        long f\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:63: error: variable g is already\
    \ defined in method iscube(long)\n        long g = 1;\n             ^\n/tmp/tmpxi9a7l53.java:64:\
    \ error: variable h is already defined in method iscube(long)\n        long h\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:65: error: variable i is already\
    \ defined in method iscube(long)\n        long i = 1;\n             ^\n/tmp/tmpxi9a7l53.java:66:\
    \ error: variable j is already defined in method iscube(long)\n        long j\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:67: error: variable k is already\
    \ defined in method iscube(long)\n        long k = 1;\n             ^\n/tmp/tmpxi9a7l53.java:68:\
    \ error: variable l is already defined in method iscube(long)\n        long l\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:69: error: variable m is already\
    \ defined in method iscube(long)\n        long m = 1;\n             ^\n/tmp/tmpxi9a7l53.java:70:\
    \ error: variable n is already defined in method iscube(long)\n        long n\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:71: error: variable o is already\
    \ defined in method iscube(long)\n        long o = 1;\n             ^\n/tmp/tmpxi9a7l53.java:72:\
    \ error: variable p is already defined in method iscube(long)\n        long p\
    \ = 1;\n             ^\n/tmp/tmpxi9a7l53.java:73: error: variable q is already\
    \ defined in method iscube(long)\n        long q = 1;\n      "
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = a * a;\n        long c = b * b;\n       \
    \ long d = c * c;\n        long e = d * d;\n        long f = e * e;\n        long\
    \ g = f * f;\n        long h = g * g;\n        long i = h * h;\n        long j\
    \ = i * i;\n        long k = j * j;\n        long l = k * k;\n        long m =\
    \ l * l;\n        long n = m * m;\n        long o = n * n;\n        long p = o\
    \ * o;\n        long q = p * p;\n        long r = q * q;\n        long s = r *\
    \ r;\n        long t = s * s;\n        long u = t * t;\n        long v = u * u;\n\
    \        long w = v * v;\n        long x = w * w;\n        long y = x * x;\n \
    \       long z = y * y;\n        long a = z * z;\n        return a == a;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(iscube((1l)) ==\
    \ (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) ==\
    \ (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) ==\
    \ (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) ==\
    \ (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptfz9xqnj.java:51: error: variable a is already defined in method\
    \ iscube(long)\n        long a = z * z;\n             ^\n1 error\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = a * a * a;\n        if (cube == 0l) {\n\
    \            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoj70h_tb.java:33)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a==1l) return true;\n        if (a==2l) return\
    \ true;\n        if (a==3l) return true;\n        if (a==4l) return true;\n  \
    \      if (a==5l) return true;\n        if (a==6l) return true;\n        if (a==7l)\
    \ return true;\n        if (a==8l) return true;\n        if (a==9l) return true;\n\
    \        if (a==10l) return true;\n        if (a==11l) return true;\n        if\
    \ (a==12l) return true;\n        if (a==13l) return true;\n        if (a==14l)\
    \ return true;\n        if (a==15l) return true;\n        if (a==16l) return true;\n\
    \        if (a==17l) return true;\n        if (a==18l) return true;\n        if\
    \ (a==19l) return true;\n        if (a==20l) return true;\n        if (a==21l)\
    \ return true;\n        if (a==22l) return true;\n        if (a==23l) return true;\n\
    \        if (a==24l) return true;\n        if (a==25l) return true;\n        if\
    \ (a==26l) return true;\n        if (a==27l) return true;\n        if (a==28l)\
    \ return true;\n        if (a==29l) return true;\n        if (a==30l) return true;\n\
    \        if (a==31l) return true;\n        if (a==32l) return true;\n        if\
    \ (a==33l) return true;\n        if (a==34l) return true;\n        if (a==35l)\
    \ return true;\n        if (a==36l) return true;\n        if (a==37l) return true;\n\
    \        if (a==38l) return true;\n        if (a==39l) return true;\n        if\
    \ (a==40l) return true;\n        if (a==41l) return true;\n        if (a==42l)\
    \ return true;\n        if (a==43l) return true;\n        if (a==44l) return true;\n\
    \        if (a==45l) return true;\n        if (a==46l) return true;\n        if\
    \ (a==47l) return true;\n        if (a==48l) return true;\n        if (a==49l)\
    \ return true;\n        if (a==50l) return true;\n        if (a==51l) return true;\n\
    \        if (a==52l) return true;\n        if (a==53l) return true;\n        if\
    \ (a==54l) return true;\n        if (a==55l) return true;\n        if (a==56l)\
    \ return true;\n        if (a==57l) return true;\n        if (a==58l) return true;\n\
    \        if (a==59l) return true;\n        if (a==60l) return true;\n        if\
    \ (a==61l) return true;\n        if (a==62l) return true;\n        if (a==63l)\
    \ return true;\n        if (a==64l) return true;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwbp99iot.java:91: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a==1l) || (a==3l) || (a==5l) || (a==7l) ||\
    \ (a==9l) || (a==11l) || (a==13l) || (a==15l) || (a==17l) || (a==19l) || (a==21l)\
    \ || (a==23l) || (a==25l) || (a==27l) || (a==29l) || (a==31l) || (a==33l) || (a==35l)\
    \ || (a==37l) || (a==39l) || (a==41l) || (a==43l) || (a==45l) || (a==47l) || (a==49l)\
    \ || (a==51l) || (a==53l) || (a==55l) || (a==57l) || (a==59l) || (a==61l) || (a==63l)\
    \ || (a==65l) || (a==67l) || (a==69l) || (a==71l) || (a==73l) || (a==75l) || (a==77l)\
    \ || (a==79l) || (a==81l) || (a==83l) || (a==85l) || (a==87l) || (a==89l) || (a==91l)\
    \ || (a==93l) || (a==95l) || (a==97l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l)) == (false));\n\
    \    assert(iscube((-1l)) == (true));\n    assert(iscube((64l)) == (true));\n\
    \    assert(iscube((180l)) == (false));\n    assert(iscube((1000l)) == (true));\n\
    \    assert(iscube((0l)) == (true));\n    assert(iscube((1729l)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfi5s517x.java:31)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return a%1==0&&a%2==0&&a%3==0&&a%4==0&&a%8==0&&a%16==0&&a%32==0&&a%64==0&&a%128==0&&a%256==0&&a%512==0&&a%1024==0&&a%2048==0&&a%4096==0&&a%8192==0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxg725tbu.java:29)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == a;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpul0ymg19.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long \n    }\n    public static void main(String[] args) {\n    assert(iscube((1l))\
    \ == (true));\n    assert(iscube((2l)) == (false));\n    assert(iscube((-1l))\
    \ == (true));\n    assert(iscube((64l)) == (true));\n    assert(iscube((180l))\
    \ == (false));\n    assert(iscube((1000l)) == (true));\n    assert(iscube((0l))\
    \ == (true));\n    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprxdxazqe.java:128: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmprxdxazqe.java:128: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794777
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long b = 1;\n        long c = 1;\n        long d =\
    \ 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long\
    \ ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n\
    \        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long\
    \ ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n\
    \        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long\
    \ ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n\
    \        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long\
    \ ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n\
    \        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long\
    \ bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n\
    \        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long\
    \ bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n\
    \        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long\
    \ bt1 = 1;\n        long bt2 = 1;\n        long bt3 = 1;\n        long bt4 = 1;\n\
    \        long bt5 = 1;\n        long bt6 = 1;\n        long bt7 = 1;\n       \
    \ long bt8 = 1;\n        long bt9 = 1;\n        long bt10 = 1;\n        long bt11\
    \ = 1;\n        long bt12 = 1;\n        long bt13 = 1;\n        long bt14 = 1;\n\
    \        long bt15 = 1;\n        long bt16 = 1;\n        long bt17 = 1;\n    \
    \    long bt18 = 1;\n        long bt19 = 1;\n        long bt20 = 1;\n        long\
    \ bt21 = 1;\n        long bt22 = 1;\n        long bt23 = 1;\n        long bt24\
    \ = 1;\n        long bt25 = 1;\n        long bt26 = 1;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n\
    \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n\
    \    assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n\
    \    assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpywq71hai.java:122: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmpywq71hai.java:122: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        return (a*a*a*a == 1);\n    }\n    public static void\
    \ main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmq_n9vat.java:32)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long n = a;\n        long d = 1;\n        long r =\
    \ 1;\n        long m = 1;\n        long s = 1;\n        long t = 1;\n        long\
    \ u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n    \
    \    long y = 1;\n        long z = 1;\n        long a1 = 1;\n        long a2 =\
    \ 1;\n        long a3 = 1;\n        long a4 = 1;\n        long a5 = 1;\n     \
    \   long a6 = 1;\n        long a7 = 1;\n        long a8 = 1;\n        long a9\
    \ = 1;\n        long a10 = 1;\n        long a11 = 1;\n        long a12 = 1;\n\
    \        long a13 = 1;\n        long a14 = 1;\n        long a15 = 1;\n       \
    \ long a16 = 1;\n        long a17 = 1;\n        long a18 = 1;\n        long a19\
    \ = 1;\n        long a20 = 1;\n        long a21 = 1;\n        long a22 = 1;\n\
    \        long a23 = 1;\n        long a24 = 1;\n        long a25 = 1;\n       \
    \ long a26 = 1;\n        long a27 = 1;\n        long a28 = 1;\n        long a29\
    \ = 1;\n        long a30 = 1;\n        long a31 = 1;\n        long a32 = 1;\n\
    \        long a33 = 1;\n        long a34 = 1;\n        long a35 = 1;\n       \
    \ long a36 = 1;\n        long a37 = 1;\n        long a38 = 1;\n        long a39\
    \ = 1;\n        long a40 = 1;\n        long a41 = 1;\n        long a42 = 1;\n\
    \        long a43 = 1;\n        long a44 = 1;\n        long a45 = 1;\n       \
    \ long a46 = 1;\n        long a47 = 1;\n        long a48 = 1;\n        long a49\
    \ = 1;\n        long a50 = 1;\n        long a51 = 1;\n        long a52 = 1;\n\
    \        long a53 = 1;\n        long a54 = 1;\n        long a55 = 1;\n       \
    \ long a56 = 1;\n        long a57 = 1;\n        long a58 = 1;\n        long a59\
    \ = 1;\n        long a60 = 1;\n        long a61 = 1;\n        long a62 = 1;\n\
    \        long a63 = 1;\n        long a64 = 1;\n        long a65 = 1;\n       \
    \ long a66 = 1;\n        long a67 = 1;\n        long a68 = 1;\n        long a69\
    \ = 1;\n        long a70 = 1;\n        long a71 = 1;\n        long a72 = 1;\n\
    \        long a73 = 1;\n        long a74 = 1;\n        long a75 = 1;\n       \
    \ long a76 = 1;\n        long a77 = 1;\n        long a78 = 1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(iscube((1l)) == (true));\n   \
    \ assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n   \
    \ assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n \
    \   assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n\
    \    assert(iscube((1729l)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg1mh7x1z.java:117: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpac0jci.java:32)\n"
  stdout: ''
  timestamp: 1659794778
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            throw new IllegalArgumentException(\"\
    Invalid input\");\n        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Invalid\
    \ input\n\tat Problem.iscube(tmpx3h400hl.java:27)\n\tat Problem.main(tmpx3h400hl.java:35)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1, a).filter(i\
    \ -> i * a * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbbs0da64.java:31)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        if (a < 0l || a > 180l) {\n            return false;\n\
    \        }\n        long cube = LongStream.rangeClosed(0l, 180l).filter(i -> i\
    \ * i * i == a).count();\n        return cube == 1l;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9gqf8b7z.java:35)\n"
  stdout: ''
  timestamp: 1659794782
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an integer a and returns True\
    \ \n    // if this ingeger is a cube of some integer number.\n    // Note: you\
    \ may assume the input is always valid.\n    // Examples:\n    // >>> iscube((1l))\n\
    \    // (true)\n    // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n\
    \    // (true)\n    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n\
    \    // (true)\n    // >>> iscube((180l))\n    // (false)\n    public static boolean\
    \ iscube(long a) {\n        long cube = LongStream.rangeClosed(1l, Long.MAX_VALUE).filter(i\
    \ -> i * i * i == a).count();\n        return cube == 1;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(iscube((1l)) == (true));\n    assert(iscube((2l))\
    \ == (false));\n    assert(iscube((-1l)) == (true));\n    assert(iscube((64l))\
    \ == (true));\n    assert(iscube((180l)) == (false));\n    assert(iscube((1000l))\
    \ == (true));\n    assert(iscube((0l)) == (true));\n    assert(iscube((1729l))\
    \ == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659794783

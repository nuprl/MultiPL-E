name: HumanEval_147_get_max_triples
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a positive integer n. You have to create an\
  \ integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value\
  \ of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
  \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n  \
  \  // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
  \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
  \    public static long getMaxTriples(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
  \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
  \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
completions: ["        long[] a = new long[n];\n        Arrays.fill(a, 1);\n     \
    \   Arrays.sort(a);\n        long ans = 0;\n        long sum = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            sum += a[i];\n            for(int j = i; j\
    \ < n; j++) {\n                sum += a[j];\n                for(int k = j; k\
    \ < n; k++) {\n                    sum += a[k];\n                    if(sum %\
    \ 3 == 0) {\n                        ans += 1;\n                        sum =\
    \ 0;\n                    }\n                }\n            }\n        }\n   \
    \     return ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long ans = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i; j < n; j++) {\n                for(int k\
    \ = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n    \
    \                    ans += 1;\n                    }\n                }\n   \
    \         }\n        }\n        return ans;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if (a[i] == a[j] && a[j] == a[k]) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 0);\n      \
    \  Arrays.sort(a);\n        long max = 0;\n        long triple = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n           \
    \     for(int k = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k]\
    \ == 0) {\n                        continue;\n                    }\n        \
    \            if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                    }\n                    if(a[i] + a[j] + a[k] > 3) {\n   \
    \                     max = Math.max(max, a[i] + a[j] + a[k]);\n             \
    \       }\n                }\n            }\n        }\n        return triple;",
  "        long[] a = new long[n];\n        Arrays.fill(a, 0);\n        Arrays.stream(a).forEach(i\
    \ -> {\n            long k = i * i - i + 1;\n            Arrays.stream(a).forEach(j\
    \ -> {\n                long l = j * j - j + 1;\n                if (l > k) {\n\
    \                    Arrays.stream(a).forEach(k -> {\n                       \
    \ if (k > l) {\n                            Arrays.stream(a).forEach(l -> {\n\
    \                                if (l > k) {\n                              \
    \      System.out.println(i + \" \" + j + \" \" + k);\n                      \
    \          }\n                            });\n                        }\n   \
    \                 });\n                }\n            });\n        });\n     \
    \   return Arrays.stream(a).filter(i -> i % 3 == 0).count();", "        long a[]\
    \ = new long[n];\n        Arrays.stream(a).forEach(i -> {\n            long j\
    \ = i * i - i + 1;\n            long k = i * i + j;\n            a[i] = j;\n \
    \           a[j] = k;\n            a[k] = i;\n        });\n        Arrays.sort(a);\n\
    \        long count = 0;\n        for (int i = 0; i < n; i++) {\n            long\
    \ j = a[i];\n            long k = a[i + 1];\n            long l = a[i + 2];\n\
    \            if (j == k) {\n                if (j == l) {\n                  \
    \  count++;\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n           \
    \     for(int k = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k]\
    \ == 3) {\n                        triple++;\n                    }\n        \
    \        }\n            }\n        }\n        return triple;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long max = 0;\n        long triple = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i + 1; j < n; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n  \
    \                      triple++;\n                    }\n                }\n \
    \           }\n        }\n        max = Math.max(triple, max);\n        return\
    \ max;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triple = 0;\n        long triples = 0;\n    \
    \    long triple = 0;\n        long triples = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for\
    \ (int k = j + 1; k < n; k++) {\n                    if (a[i] == a[j] && a[j]\
    \ == a[k]) {\n                        triple++;\n                    }\n     \
    \           }\n            }\n        }\n        return triple;", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        ", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n \
    \       long result = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        result\
    \ += 1;\n                    }\n                }\n            }\n        }\n\
    \        return result;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triple = 0;\n        long tripleCount\
    \ = 0;\n        long tripleMax = 0;\n        long tripleMaxCount = 0;\n      \
    \  long tripleMaxCount2 = 0;\n        long tripleMaxCount3 = 0;\n        long\
    \ tripleMaxCount4 = 0;\n        long tripleMaxCount5 = 0;\n        long tripleMaxCount6\
    \ = 0;\n        long tripleMaxCount7 = 0;\n        long tripleMaxCount8 = 0;\n\
    \        long tripleMaxCount9 = 0;\n        long tripleMaxCount10 = 0;\n     \
    \   long tripleMaxCount11 = 0;\n        long tripleMaxCount12 = 0;\n        long\
    \ tripleMaxCount13 = 0;\n        long tripleMaxCount14 = 0;\n        long tripleMaxCount15\
    \ = 0;\n        long tripleMaxCount16 = 0;\n        long tripleMaxCount17 = 0;\n\
    \        long tripleMaxCount18 = 0;\n        long tripleMaxCount19 = 0;\n    \
    \    long tripleMaxCount20 = 0;\n        long tripleMaxCount21 = 0;\n        long\
    \ tripleMaxCount22 = 0;\n        long tripleMaxCount23 = 0;\n        long tripleMaxCount24\
    \ = 0;\n        long tripleMaxCount25 = 0;\n        long tripleMaxCount26 = 0;\n\
    \        long tripleMaxCount27 = 0;\n        long tripleMaxCount28 = 0;\n    \
    \    long tripleMaxCount29 = 0;\n        long tripleMaxCount30 = 0;\n        long\
    \ tripleMaxCount31 = 0;\n        long tripleMaxCount32 = 0;\n        long tripleMaxCount33\
    \ = 0;\n        long tripleMaxCount34 = 0;\n        long tripleMaxCount35 = 0;\n\
    \        long tripleMaxCount36 = 0;\n        long tripleMaxCount37 = 0;\n    \
    \    long tripleMaxCount38 = 0;\n        long tripleMaxCount39 = 0;\n        long\
    \ tripleMaxCount40 = 0;\n        long tripleMaxCount41 = 0;\n        long tripleMaxCount42\
    \ = 0;\n        long tripleMaxCount43 = 0;\n        long tripleMaxCount44 = 0;\n\
    \        long tripleMaxCount45 = 0;\n        long tripleMaxCount46 = 0;\n    \
    \    long tripleMaxCount47 = 0;\n        long tripleMaxCount48 = 0;\n        long\
    \ tripleMaxCount49 = 0;\n        long tripleMaxCount50 = 0;\n        long tripleMaxCount51\
    \ = 0;\n        long tripleMaxCount52 = 0;\n        long tripleMaxCount53 = 0;\n\
    \        long tripleMaxCount54 = 0;\n        long tripleMaxCount55 = 0;\n    \
    \    long tripleMaxCount56 = 0;\n        long tripleMaxCount57 = 0;\n        long\
    \ tripleMaxCount58 = 0;\n        long tripleMaxCount59 = 0;\n        long tripleMaxCount60\
    \ = 0;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long sum = 0;\n        long max = 0;\n        long\
    \ count = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i+1;\
    \ j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n            \
    \        if(a[i] + a[j] + a[k] == 3) {\n                        count++;\n   \
    \                     sum += a[i];\n                        max = Math.max(max,\
    \ a[i]);\n                    }\n                }\n            }\n        }\n\
    \        return (sum + count * max);", "        long[] a = new long[n];\n    \
    \    Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long max = 0;\n    \
    \    long sum = 0;\n        for(int i = 0; i < a.length; i++) {\n            sum\
    \ += a[i];\n            if(sum % 3 == 0) {\n                max = Math.max(max,\
    \ sum);\n            }\n        }\n        return max;", "        long[] a = new\
    \ long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long\
    \ result = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if(a[i] + a[j] + a[k] == 3) {\n                        result++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n   \
    \     Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n     \
    \   for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n \
    \               for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        triple++;\n                    }\n \
    \               }\n            }\n        }\n        return triple;", "      \
    \  long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triples = 0;\n        for(int i = 1; i < n; i++) {\n           \
    \ for(int j = i+1; j < n; j++) {\n                for(int k = j+1; k < n; k++)\
    \ {\n                    if(a[i] + a[j] + a[k] == 3) {\n                     \
    \   triples += 1;\n                    }\n                }\n            }\n \
    \       }\n        return triples;", "        long a[] = new long[n];\n      \
    \  Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triples = 0;\n  \
    \      for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    if\
    \ (a[i] == a[j] && a[j] == a[k]) {\n                        triples++;\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ triples;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n  \
    \      Arrays.sort(a);\n        long max = 0;\n        long triple = 0;\n    \
    \    for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n\
    \                for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        triple++;\n                    }\n \
    \               }\n            }\n            if(triple > max) {\n           \
    \     max = triple;\n            }\n            triple = 0;\n        }\n     \
    \   return max;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long triple = 0;\n        long tripleMax = 0;\n\
    \        long tripleMaxIndex = 0;\n        for (int i = 0; i < a.length; i++)\
    \ {\n            for (int j = i + 1; j < a.length; j++) {\n                for\
    \ (int k = j + 1; k < a.length; k++) {\n                    if (a[i] < a[j] &&\
    \ a[i] < a[k]) {\n                        triple++;\n                        if\
    \ (a[i] + a[j] + a[k] == 3) {\n                            tripleMax = a[i] +\
    \ a[j] + a[k];\n                            tripleMaxIndex = i;\n            \
    \            }\n                    }\n                }\n            }\n    \
    \    }\n        return triple;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triple2 = 0;\n        long triple3 = 0;\n        long triple4\
    \ = 0;\n        long triple5 = 0;\n        long triple6 = 0;\n        long triple7\
    \ = 0;\n        long triple8 = 0;\n        long triple9 = 0;\n        long triple10\
    \ = 0;\n        long triple11 = 0;\n        long triple12 = 0;\n        long triple13\
    \ = 0;\n        long triple14 = 0;\n        long triple15 = 0;\n        long triple16\
    \ = 0;\n        long triple17 = 0;\n        long triple18 = 0;\n        long triple19\
    \ = 0;\n        long triple20 = 0;\n        long triple21 = 0;\n        long triple22\
    \ = 0;\n        long triple23 = 0;\n        long triple24 = 0;\n        long triple25\
    \ = 0;\n        long triple26 = 0;\n        long triple27 = 0;\n        long triple28\
    \ = 0;\n        long triple29 = 0;\n        long triple30 = 0;\n        long triple31\
    \ = 0;\n        long triple32 = 0;\n        long triple33 = 0;\n        long triple34\
    \ = 0;\n        long triple35 = 0;\n        long triple36 = 0;\n        long triple37\
    \ = 0;\n        long triple38 = 0;\n        long triple39 = 0;\n        long triple40\
    \ = 0;\n        long triple41 = 0;\n        long triple42 = 0;\n        long triple43\
    \ = 0;\n        long triple44 = 0;\n        long triple45 = 0;\n        long triple46\
    \ = 0;\n        long triple47 = 0;\n        long triple48 = 0;\n        long triple49\
    \ = 0;\n        long triple50 = 0;\n        long triple51 = 0;\n        long triple52\
    \ = 0;\n        long triple53 = 0;\n        long triple54 = 0;\n        long triple55\
    \ = 0;\n        long triple56 = 0;\n        long triple57 = 0;\n        long triple58\
    \ = 0;\n        long triple59 = 0;\n        long triple60 = 0;\n        long triple61\
    \ = 0;\n        long triple62 = 0;\n        long triple63 = 0;\n        long triple64\
    \ = 0;\n        long triple65 = 0;\n        long triple66 = 0;\n        long triple67\
    \ = 0;\n        long triple68 = 0;\n        long triple69 = 0;\n        long triple70\
    \ = 0;\n        long triple71 = 0;\n        long triple72 = 0;\n        long triple73\
    \ = 0;\n        long triple74 = 0;\n        long triple75 = 0;\n        long triple76\
    \ = 0;\n        long triple77 = 0;\n        long triple78 = 0;\n        long triple79\
    \ = 0;\n        long triple80 = 0;\n        long triple81 = 0;\n        long triple82\
    \ = 0;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long ans = 0;\n        for(int i = 1; i < n; i++)\
    \ {\n            for(int j = i; j < n; j++) {\n                for(int k = j;\
    \ k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n         \
    \               ans += 1;\n                    }\n                }\n        \
    \    }\n        }\n        return ans;", "        long[] a = new long[n];\n  \
    \      Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long max = 0;\n  \
    \      long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        ", "        long a[] = new long[n];\n     \
    \   Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n     \
    \   for(int i = 0; i < n; i++) {\n            sum += a[i];\n            for(int\
    \ j = i + 1; j < n; j++) {\n                sum += a[j];\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    sum += a[k];\n               \
    \     if(sum % 3 == 0) {\n                        return sum;\n              \
    \      }\n                }\n            }\n        }\n        return -1;", " \
    \       long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triples = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if (a[i] + a[j] + a[k] == 3) {\n            \
    \            triples += 1;\n                    }\n                }\n       \
    \     }\n        }\n        return triples;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        long sum = 0;\n        for(int i = 0; i < a.length; i++) {\n        \
    \    sum += a[i];\n            if(sum % 3 == 0) {\n                ans += 1;\n\
    \            }\n        }\n        return ans;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        long sum = 0;\n        for(int i = 1; i < n; i++) {\n            sum\
    \ += a[i];\n            for(int j = i; j < n; j++) {\n                sum += a[j];\n\
    \                for(int k = j; k < n; k++) {\n                    sum += a[k];\n\
    \                    if(sum % 3 == 0) {\n                        ans += 1;\n \
    \                       sum = 0;\n                    }\n                }\n \
    \           }\n        }\n        return ans;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 0);\n        Arrays.parallelSetAll(a, i -> i * i - i +\
    \ 1);\n        Arrays.sort(a);\n        long result = 0;\n        long triple\
    \ = 0;\n        for (int i = 0; i < a.length; i++) {\n            triple = a[i]\
    \ + a[j] + a[k];\n            if (triple % 3 == 0) {\n                result++;\n\
    \            }\n        }\n        return result;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n\
    \        long triple = 0;\n        for(int i = 0; i < a.length; i++) {\n     \
    \       for(int j = i + 1; j < a.length; j++) {\n                for(int k = j\
    \ + 1; k < a.length; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n\
    \                        triple++;\n                    }\n                }\n\
    \            }\n        }\n        return triple;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triples = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        triples++;\n                \
    \    }\n                }\n            }\n        }\n        return triples;",
  "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long sum = 0;\n        long max = 0;\n        long\
    \ triple = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i\
    \ + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n     \
    \               if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        sum += a[i];\n                        sum += a[j];\n\
    \                        sum += a[k];\n                        if(sum > max) {\n\
    \                            max = sum;\n                        }\n         \
    \           }\n                }\n            }\n        }\n        return triple;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long result = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        result++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;", "        long[] a = new long[n];\n        Arrays.fill(a, 1l);\n  \
    \      Arrays.sort(a);\n        long triples = 0;\n        long triple = 0;\n\
    \        long triple2 = 0;\n        long triple3 = 0;\n        long triple4 =\
    \ 0;\n        long triple5 = 0;\n        long triple6 = 0;\n        long triple7\
    \ = 0;\n        long triple8 = 0;\n        long triple9 = 0;\n        long triple10\
    \ = 0;\n        long triple11 = 0;\n        long triple12 = 0;\n        long triple13\
    \ = 0;\n        long triple14 = 0;\n        long triple15 = 0;\n        long triple16\
    \ = 0;\n        long triple17 = 0;\n        long triple18 = 0;\n        long triple19\
    \ = 0;\n        long triple20 = 0;\n        long triple21 = 0;\n        long triple22\
    \ = 0;\n        long triple23 = 0;\n        long triple24 = 0;\n        long triple25\
    \ = 0;\n        long triple26 = 0;\n        long triple27 = 0;\n        long triple28\
    \ = 0;\n        long triple29 = 0;\n        long triple30 = 0;\n        long triple31\
    \ = 0;\n        long triple32 = 0;\n        long triple33 = 0;\n        long triple34\
    \ = 0;\n        long triple35 = 0;\n        long triple36 = 0;\n        long triple37\
    \ = 0;\n        long triple38 = 0;\n        long triple39 = 0;\n        long triple40\
    \ = 0;\n        long triple41 = 0;\n        long triple42 = 0;\n        long triple43\
    \ = 0;\n        long triple44 = 0;\n        long triple45 = 0;\n        long triple46\
    \ = 0;\n        long triple47 = 0;\n        long triple48 = 0;\n        long triple49\
    \ = 0;\n        long triple50 = 0;\n        long triple51 = 0;\n        long triple52\
    \ = 0;\n        long triple53 = 0;\n        long triple54 = 0;\n        long triple55\
    \ = 0;\n        long triple56 = 0;\n        long triple57 = 0;\n        long triple58\
    \ = 0;\n        long triple59 = 0;\n        long triple60 = 0;\n        long triple61\
    \ = 0;\n        long triple62 = 0;\n        long triple63 = 0;\n        long triple64\
    \ = 0;\n        long triple65 = 0;\n        long triple66 = 0;\n        long triple67\
    \ = 0;\n        long triple68 = 0;\n        long triple69 = 0;\n        long triple70\
    \ = 0;\n        long triple71 = 0;\n        long triple72 = 0;\n        long triple73\
    \ = 0;\n        long triple74 = 0;\n        long triple75 = 0;\n        long triple76\
    \ = 0;\n        long triple77 = 0;\n        long triple78 = 0;\n        long triple79\
    \ = 0;\n        long triple80 = 0;\n        long triple81 = 0;\n        long triple82",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long max = 0;\n        long sum = 0;\n        long sum2 = 0;\n      \
    \  for(int i = 0; i < n; i++) {\n            sum += a[i];\n            sum2 +=\
    \ a[i] * a[i];\n            if(sum2 > sum) {\n                max = sum2;\n  \
    \          }\n        }\n        return max;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        ans += 1;\n                 \
    \   }\n                }\n            }\n        }\n        return ans;", "  \
    \      long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long triple = 0;\n        long tripleMax = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            triple = 0;\n            for\
    \ (int j = i; j < n; j++) {\n                for (int k = j; k < n; k++) {\n \
    \                   triple += a[k];\n                }\n            }\n      \
    \      if (triple > tripleMax) {\n                tripleMax = triple;\n      \
    \      }\n            sum += triple;\n        }\n        return sum;", "     \
    \   long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long max = 0;\n        long sum = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            sum += a[i];\n            if(sum % 3 != 0) {\n              \
    \  max = sum;\n                break;\n            }\n        }\n        return\
    \ max;", "        long a[] = new long[n];\n        Arrays.fill(a, 1l);\n     \
    \   Arrays.sort(a);\n        long result = 0;\n        long triple = 0;\n    \
    \    long triple2 = 0;\n        long triple3 = 0;\n        long triple4 = 0;\n\
    \        long triple5 = 0;\n        long triple6 = 0;\n        long triple7 =\
    \ 0;\n        long triple8 = 0;\n        long triple9 = 0;\n        long triple10\
    \ = 0;\n        long triple11 = 0;\n        long triple12 = 0;\n        long triple13\
    \ = 0;\n        long triple14 = 0;\n        long triple15 = 0;\n        long triple16\
    \ = 0;\n        long triple17 = 0;\n        long triple18 = 0;\n        long triple19\
    \ = 0;\n        long triple20 = 0;\n        long triple21 = 0;\n        long triple22\
    \ = 0;\n        long triple23 = 0;\n        long triple24 = 0;\n        long triple25\
    \ = 0;\n        long triple26 = 0;\n        long triple27 = 0;\n        long triple28\
    \ = 0;\n        long triple29 = 0;\n        long triple30 = 0;\n        long triple31\
    \ = 0;\n        long triple32 = 0;\n        long triple33 = 0;\n        long triple34\
    \ = 0;\n        long triple35 = 0;\n        long triple36 = 0;\n        long triple37\
    \ = 0;\n        long triple38 = 0;\n        long triple39 = 0;\n        long triple40\
    \ = 0;\n        long triple41 = 0;\n        long triple42 = 0;\n        long triple43\
    \ = 0;\n        long triple44 = 0;\n        long triple45 = 0;\n        long triple46\
    \ = 0;\n        long triple47 = 0;\n        long triple48 = 0;\n        long triple49\
    \ = 0;\n        long triple50 = 0;\n        long triple51 = 0;\n        long triple52\
    \ = 0;\n        long triple53 = 0;\n        long triple54 = 0;\n        long triple55\
    \ = 0;\n        long triple56 = 0;\n        long triple57 = 0;\n        long triple58\
    \ = 0;\n        long triple59 = 0;\n        long triple60 = 0;\n        long triple61\
    \ = 0;\n        long triple62 = 0;\n        long triple63 = 0;\n        long triple64\
    \ = 0;\n        long triple65 = 0;\n        long triple66 = 0;\n        long triple67\
    \ = 0;\n        long triple68 = 0;\n        long triple69 = 0;\n        long triple70\
    \ = 0;\n        long triple71 = 0;\n        long triple72 = 0;\n        long triple73\
    \ = 0;\n        long triple74 = 0;\n        long triple75 = 0;\n        long triple76\
    \ = 0;\n        long triple77 = 0;\n        long triple78 = 0;\n        long triple79\
    \ = 0;\n        long triple80 = 0;\n        long triple81 = 0;\n        long triple82",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        for(int i = 1; i\
    \ < n; i++) {\n            for(int j = i; j < n; j++) {\n                for(int\
    \ k = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n  \
    \                      triple++;\n                        if(triple > triples)\
    \ {\n                            triples = triple;\n                        }\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ triples;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n  \
    \      Arrays.sort(a);\n        long ans = 0;\n        long sum = 0;\n       \
    \ for(int i = 0; i < n; i++) {\n            sum += a[i];\n            if(sum %\
    \ 3 == 0) {\n                ans += 1;\n            }\n        }\n        return\
    \ ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n        for\
    \ (int i = 0; i < a.length; i++) {\n            sum += a[i];\n            if (sum\
    \ % 3 == 0) {\n                max = Math.max(max, sum);\n            }\n    \
    \    }\n        return max;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triple2 = 0;\n        long triple3 = 0;\n        long triple4\
    \ = 0;\n        long triple5 = 0;\n        long triple6 = 0;\n        long triple7\
    \ = 0;\n        long triple8 = 0;\n        long triple9 = 0;\n        long triple10\
    \ = 0;\n        long triple11 = 0;\n        long triple12 = 0;\n        long triple13\
    \ = 0;\n        long triple14 = 0;\n        long triple15 = 0;\n        long triple16\
    \ = 0;\n        long triple17 = 0;\n        long triple18 = 0;\n        long triple19\
    \ = 0;\n        long triple20 = 0;\n        long triple21 = 0;\n        long triple22\
    \ = 0;\n        long triple23 = 0;\n        long triple24 = 0;\n        long triple25\
    \ = 0;\n        long triple26 = 0;\n        long triple27 = 0;\n        long triple28\
    \ = 0;\n        long triple29 = 0;\n        long triple30 = 0;\n        long triple31\
    \ = 0;\n        long triple32 = 0;\n        long triple33 = 0;\n        long triple34\
    \ = 0;\n        long triple35 = 0;\n        long triple36 = 0;\n        long triple37\
    \ = 0;\n        long triple38 = 0;\n        long triple39 = 0;\n        long triple40\
    \ = 0;\n        long triple41 = 0;\n        long triple42 = 0;\n        long triple43\
    \ = 0;\n        long triple44 = 0;\n        long triple45 = 0;\n        long triple46\
    \ = 0;\n        long triple47 = 0;\n        long triple48 = 0;\n        long triple49\
    \ = 0;\n        long triple50 = 0;\n        long triple51 = 0;\n        long triple52\
    \ = 0;\n        long triple53 = 0;\n        long triple54 = 0;\n        long triple55\
    \ = 0;\n        long triple56 = 0;\n        long triple57 = 0;\n        long triple58\
    \ = 0;\n        long triple59 = 0;\n        long triple60 = 0;\n        long triple61\
    \ = 0;\n        long triple62 = 0;\n        long triple63 = 0;\n        long triple64\
    \ = 0;\n        long triple65 = 0;\n        long triple66 = 0;\n        long triple67\
    \ = 0;\n        long triple68 = 0;\n        long triple69 = 0;\n        long triple70\
    \ = 0;\n        long triple71 = 0;\n        long triple72 = 0;\n        long triple73\
    \ = 0;\n        long triple74 = 0;\n        long triple75 = 0;\n        long triple76\
    \ = 0;\n        long triple77 = 0;\n        long triple78 = 0;\n        long triple79\
    \ = 0;\n        long triple80 = 0;\n        long triple81 = 0;\n        long triple82\
    \ = 0;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long ans = 0;\n        long sum = 0;\n        for(int\
    \ i = 0; i < n; i++) {\n            sum += a[i];\n            for(int j = i+1;\
    \ j < n; j++) {\n                sum += a[j];\n                for(int k = j+1;\
    \ k < n; k++) {\n                    sum += a[k];\n                    if(sum\
    \ % 3 == 0) {\n                        ans += 1;\n                    }\n    \
    \            }\n            }\n        }\n        return ans;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long max = 0;\n        long sum = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            sum += a[i];\n            if(sum % 3 == 0) {\n              \
    \  max = Math.max(max, sum);\n            }\n        }\n        return max;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        sum += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ sum;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long ans = 0;\n        for (int i = 0; i < n; i++)\
    \ {\n            for (int j = i + 1; j < n; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] == a[j] && a[j] == a[k])\
    \ {\n                        ans += 1;\n                    }\n              \
    \  }\n            }\n        }\n        return ans;", "        long a[] = new\
    \ long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long\
    \ triples = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] == a[j] && a[j] == a[k]) {\n                   \
    \     triples += 1;\n                    }\n                }\n            }\n\
    \        }\n        return triples;", "        long[] a = new long[n];\n     \
    \   Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triples = 0;\n \
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if (a[i] == a[j] && a[j] == a[k]) {\n                        triples += 3;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ triples;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n  \
    \      Arrays.sort(a);\n        long max = 0;\n        long triple = 0;\n    \
    \    for (int i = 0; i < a.length; i++) {\n            for (int j = i + 1; j <\
    \ a.length; j++) {\n                for (int k = j + 1; k < a.length; k++) {\n\
    \                    if (a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (triple > max) {\n            max = triple;\n        }\n        return max;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long max = 0;\n        long min = 0;\n       \
    \ long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n        long\
    \ sum3 = 0;\n        long max3 = 0;\n        long min3 = 0;\n        long sum4\
    \ = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long sum5 = 0;\n\
    \        long max5 = 0;\n        long min5 = 0;\n        long sum6 = 0;\n    \
    \    long max6 = 0;\n        long min6 = 0;\n        long sum7 = 0;\n        long\
    \ max7 = 0;\n        long min7 = 0;\n        long sum8 = 0;\n        long max8\
    \ = 0;\n        long min8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n\
    \        long min9 = 0;\n        long sum10 = 0;\n        long max10 = 0;\n  \
    \      long min10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n   \
    \     long min11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n    \
    \    long min12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n     \
    \   long min13 = 0;\n        long sum14 = 0;\n        long max14 = 0;\n      \
    \  long min14 = 0;\n        long sum15 = 0;\n        long max15 = 0;\n       \
    \ long min15 = 0;\n        long sum16 = 0;\n        long max16 = 0;\n        long\
    \ min16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long min17\
    \ = 0;\n        long sum18 = 0;\n        long max18 = 0;\n        long min18 =\
    \ 0;\n        long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n\
    \        long sum20 = 0;\n        long max20 = 0;\n        long min20 = 0;\n \
    \       long sum21 = 0;\n        long max21 = 0;\n        long min21 = 0;\n  \
    \      long sum22 = 0;\n        long max22 = 0;\n        long min22 = 0;\n   \
    \     long sum23 = 0;\n        long max23 = 0;\n        long min23 = 0;\n    \
    \    long sum24 = 0;\n        long max24 = 0;\n        long min24 = 0;\n     \
    \   long sum25 = 0;\n        long max25 = 0;\n        long min25 = 0;\n      \
    \  long sum26 = 0;\n        long max26 = 0;\n        long min26 = 0;\n       \
    \ long sum27 = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long\
    \ sum28 = 0;\n        long max28 = 0;\n        long min28 = 0;\n        ", " \
    \       long a[] = new long[n];\n        Arrays.stream(a).forEach((i) -> {\n \
    \           long j = i * i - i + 1;\n            long k = i * i + j;\n       \
    \     a[i] = j;\n            a[j] = k;\n            a[k] = i;\n        });\n \
    \       long sum = 0;\n        Arrays.stream(a).forEach((i) -> {\n           \
    \ long j = i * i - i + 1;\n            long k = i * i + j;\n            sum +=\
    \ Math.max(Math.max(i, j), k);\n        });\n        return sum % 3 == 0 ? sum\
    \ : 0;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triple = 0;\n        long triples = 0;\n    \
    \    long triple = 0;\n        long triples = 0;\n        long triple = 0;\n \
    \       long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        ", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n   \
    \     Arrays.sort(a);\n        long sum = 0;\n        long max = 0;\n        long\
    \ triple = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i+1;\
    \ j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n            \
    \        if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n  \
    \                      sum += a[i];\n                        max = Math.max(max,\
    \ a[i]);\n                    }\n                }\n            }\n        }\n\
    \        return sum;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 0);\n        Arrays.stream(a).forEach(i -> {\n            long sum = 0;\n  \
    \          for(int j = 1; j <= i; j++){\n                sum += a[j];\n      \
    \      }\n            a[i] = sum;\n        });\n        Arrays.sort(a);\n    \
    \    long max = 0;\n        for(int i = 1; i < n; i++){\n            if(a[i] %\
    \ 3 == 0){\n                max = Math.max(max, a[i]);\n            }\n      \
    \  }\n        return max;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triples_sum = 0;\n        long triples_sum_temp = 0;\n  \
    \      long triples_sum_temp2 = 0;\n        long triples_sum_temp3 = 0;\n    \
    \    long triples_sum_temp4 = 0;\n        long triples_sum_temp5 = 0;\n      \
    \  long triples_sum_temp6 = 0;\n        long triples_sum_temp7 = 0;\n        long\
    \ triples_sum_temp8 = 0;\n        long triples_sum_temp9 = 0;\n        long triples_sum_temp10\
    \ = 0;\n        long triples_sum_temp11 = 0;\n        long triples_sum_temp12\
    \ = 0;\n        long triples_sum_temp13 = 0;\n        long triples_sum_temp14\
    \ = 0;\n        long triples_sum_temp15 = 0;\n        long triples_sum_temp16\
    \ = 0;\n        long triples_sum_temp17 = 0;\n        long triples_sum_temp18\
    \ = 0;\n        long triples_sum_temp19 = 0;\n        long triples_sum_temp20\
    \ = 0;\n        long triples_sum_temp21 = 0;\n        long triples_sum_temp22\
    \ = 0;\n        long triples_sum_temp23 = 0;\n        long triples_sum_temp24\
    \ = 0;\n        long triples_sum_temp25 = 0;\n        long triples_sum_temp26\
    \ = 0;\n        long triples_sum_temp27 = 0;\n        long triples_sum_temp28\
    \ = 0;\n        long triples_sum_temp29 = 0;\n        long triples_sum_temp30\
    \ = 0;\n        long triples_sum_temp31 = 0;\n        long triples_sum_temp32\
    \ = 0;\n        long triples_sum_temp33 = 0;\n        long triples_sum_temp34\
    \ = 0;\n        long triples_sum_temp35 = 0;\n        long triples_sum_temp36\
    \ = 0;\n        long triples_sum_temp37 = 0;\n        long triples_sum_temp38\
    \ = 0;\n        long triples_sum_temp39 = 0;\n        long triples_sum_temp40\
    \ = 0;\n        long triples_sum_temp41 = 0;\n        long triples_sum_temp42\
    \ = 0;\n        long triples_sum_temp43 = 0;\n        long triples_sum_temp44\
    \ = 0;\n        long triples_sum_temp45 = 0;\n        long triples_sum_temp46\
    \ = 0;\n        long triples_sum_temp47 = 0;\n        long triples_sum_temp48\
    \ = 0;\n        long triples_sum_temp49 = 0;\n        long triples_sum_temp50\
    \ = 0;\n        long triples_sum_temp51 = 0;\n        long triples_sum_temp52\
    \ = 0;\n        long triples_sum_temp53 = 0;\n        long ", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long triple = 0;\n        long tripleCount = 0;\n        long tripleMax = 0;\n\
    \        long tripleMaxCount = 0;\n        long tripleMaxCount2 = 0;\n       \
    \ long tripleMaxCount3 = 0;\n        long tripleMaxCount4 = 0;\n        long tripleMaxCount5\
    \ = 0;\n        long tripleMaxCount6 = 0;\n        long tripleMaxCount7 = 0;\n\
    \        long tripleMaxCount8 = 0;\n        long tripleMaxCount9 = 0;\n      \
    \  long tripleMaxCount10 = 0;\n        long tripleMaxCount11 = 0;\n        long\
    \ tripleMaxCount12 = 0;\n        long tripleMaxCount13 = 0;\n        long tripleMaxCount14\
    \ = 0;\n        long tripleMaxCount15 = 0;\n        long tripleMaxCount16 = 0;\n\
    \        long tripleMaxCount17 = 0;\n        long tripleMaxCount18 = 0;\n    \
    \    long tripleMaxCount19 = 0;\n        long tripleMaxCount20 = 0;\n        long\
    \ tripleMaxCount21 = 0;\n        long tripleMaxCount22 = 0;\n        long tripleMaxCount23\
    \ = 0;\n        long tripleMaxCount24 = 0;\n        long tripleMaxCount25 = 0;\n\
    \        long tripleMaxCount26 = 0;\n        long tripleMaxCount27 = 0;\n    \
    \    long tripleMaxCount28 = 0;\n        long tripleMaxCount29 = 0;\n        long\
    \ tripleMaxCount30 = 0;\n        long tripleMaxCount31 = 0;\n        long tripleMaxCount32\
    \ = 0;\n        long tripleMaxCount33 = 0;\n        long tripleMaxCount34 = 0;\n\
    \        long tripleMaxCount35 = 0;\n        long tripleMaxCount36 = 0;\n    \
    \    long tripleMaxCount37 = 0;\n        long tripleMaxCount38 = 0;\n        long\
    \ tripleMaxCount39 = 0;\n        long tripleMaxCount40 = 0;\n        long tripleMaxCount41\
    \ = 0;\n        long tripleMaxCount42 = 0;\n        long tripleMaxCount43 = 0;\n\
    \        long tripleMaxCount44 = 0;\n        long tripleMaxCount45 = 0;\n    \
    \    long tripleMaxCount46 = 0;\n        long tripleMaxCount47 = 0;\n        long\
    \ tripleMaxCount48 = 0;\n        long tripleMaxCount49 = 0;\n        long tripleMaxCount50\
    \ = 0;\n        long tripleMaxCount51 = 0;\n        long tripleMaxCount52 = 0;\n\
    \        long tripleMaxCount53 = 0;\n        long tripleMaxCount54 = 0;\n    \
    \    long tripleMaxCount55 = 0;\n        long tripleMaxCount56 = 0;\n        long\
    \ tripleMaxCount57 = 0;\n        long tripleMaxCount58 = 0;\n        long tripleMaxCount59\
    \ = 0;\n        long tripleMaxCount60 = 0;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if (a[i] == a[j] && a[j] == a[k]) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triple = 0;\n        long triples = 0;\n    \
    \    long triples_sum = 0;\n        for(int i = 0; i < n; i++) {\n           \
    \ for(int j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n;\
    \ k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n                \
    \        triple++;\n                        triples_sum += a[i];\n           \
    \             triples_sum += a[j];\n                        triples_sum += a[k];\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ triple;", "        long a[] = new long[n];\n        Arrays.fill(a, 1l);\n  \
    \      Arrays.sort(a);\n        long triples = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for\
    \ (int k = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] ==\
    \ 3) {\n                        triples++;\n                    }\n          \
    \      }\n            }\n        }\n        return triples;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long triples = 0;\n        long sum = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i+1; j < n; j++) {\n                for(int k = j+1;\
    \ k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n         \
    \               sum += a[i];\n                        sum += a[j];\n         \
    \               sum += a[k];\n                        triples += 1;\n        \
    \            }\n                }\n            }\n        }\n        return triples;",
  "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triples = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if (a[i] < a[j] && a[j] < a[k]) {\n         \
    \               long sum = a[i] + a[j] + a[k];\n                        if (sum\
    \ % 3 == 0) {\n                            triples += 1;\n                   \
    \     }\n                    }\n                }\n            }\n        }\n\
    \        return triples;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long result = 0;\n        for(int i =\
    \ 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n           \
    \     for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k]\
    \ == 3) {\n                        result = Math.max(result, a[i] + a[j] + a[k]);\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;", "        long a[] = new long[n];\n        Arrays.stream(a).forEach(i\
    \ -> {\n            long j = i * i - i + 1;\n            long k = i * i + j;\n\
    \            a[i] = j;\n            a[j] = k;\n            a[k] = i;\n       \
    \ });\n        Arrays.sort(a);\n        long result = 0;\n        long sum = 0;\n\
    \        for (int i = 0; i < a.length; i++) {\n            sum += a[i];\n    \
    \        if (sum % 3 == 0) {\n                result++;\n            }\n     \
    \   }\n        return result;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        for(int i = 1; i < n; i++) {\n           \
    \ for(int j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        sum += a[i];\n                        sum += a[j];\n\
    \                        sum += a[k];\n                        triples += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ sum;", "        long[] a = new long[n];\n        Arrays.fill(a, 0l);\n     \
    \   Arrays.parallelSetAll(a, i -> i * i - i + 1);\n        return Arrays.stream(a).filter(i\
    \ -> i < n && i < n && i < n).count();", "        long a[] = new long[n];\n  \
    \      Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triples = 0;\n\
    \        long sum = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        sum += a[i];\n\
    \                        sum += a[j];\n                        sum += a[k];\n\
    \                        triples += 1;\n                    }\n              \
    \  }\n            }\n        }\n        return triples;", "        long a[] =\
    \ new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long\
    \ triples = 0;\n        long triple = 0;\n        long triple2 = 0;\n        long\
    \ triple3 = 0;\n        long triple4 = 0;\n        long triple5 = 0;\n       \
    \ long triple6 = 0;\n        long triple7 = 0;\n        long triple8 = 0;\n  \
    \      long triple9 = 0;\n        long triple10 = 0;\n        long triple11 =\
    \ 0;\n        long triple12 = 0;\n        long triple13 = 0;\n        long triple14\
    \ = 0;\n        long triple15 = 0;\n        long triple16 = 0;\n        long triple17\
    \ = 0;\n        long triple18 = 0;\n        long triple19 = 0;\n        long triple20\
    \ = 0;\n        long triple21 = 0;\n        long triple22 = 0;\n        long triple23\
    \ = 0;\n        long triple24 = 0;\n        long triple25 = 0;\n        long triple26\
    \ = 0;\n        long triple27 = 0;\n        long triple28 = 0;\n        long triple29\
    \ = 0;\n        long triple30 = 0;\n        long triple31 = 0;\n        long triple32\
    \ = 0;\n        long triple33 = 0;\n        long triple34 = 0;\n        long triple35\
    \ = 0;\n        long triple36 = 0;\n        long triple37 = 0;\n        long triple38\
    \ = 0;\n        long triple39 = 0;\n        long triple40 = 0;\n        long triple41\
    \ = 0;\n        long triple42 = 0;\n        long triple43 = 0;\n        long triple44\
    \ = 0;\n        long triple45 = 0;\n        long triple46 = 0;\n        long triple47\
    \ = 0;\n        long triple48 = 0;\n        long triple49 = 0;\n        long triple50\
    \ = 0;\n        long triple51 = 0;\n        long triple52 = 0;\n        long triple53\
    \ = 0;\n        long triple54 = 0;\n        long triple55 = 0;\n        long triple56\
    \ = 0;\n        long triple57 = 0;\n        long triple58 = 0;\n        long triple59\
    \ = 0;\n        long triple60 = 0;\n        long triple61 = 0;\n        long triple62\
    \ = 0;\n        long triple63 = 0;\n        long triple64 = 0;\n        long triple65\
    \ = 0;\n        long triple66 = 0;\n        long triple67 = 0;\n        long triple68\
    \ = 0;\n        long triple69 = 0;\n        long triple70 = 0;\n        long triple71\
    \ = 0;\n        long triple72 = 0;\n        long triple73 = 0;\n        long triple74\
    \ = 0;\n        long triple75 = 0;\n        long triple76 = 0;\n        long triple77\
    \ = 0;\n        long triple78 = 0;\n        long triple79 = 0;\n        long triple80\
    \ = 0;\n        long triple81 = 0;\n        long triple82 = 0;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long triples = 0;\n        long triple = 0;\n        long triple2 = 0;\n\
    \        long triple3 = 0;\n        long triple4 = 0;\n        long triple5 =\
    \ 0;\n        long triple6 = 0;\n        long triple7 = 0;\n        long triple8\
    \ = 0;\n        long triple9 = 0;\n        long triple10 = 0;\n        long triple11\
    \ = 0;\n        long triple12 = 0;\n        long triple13 = 0;\n        long triple14\
    \ = 0;\n        long triple15 = 0;\n        long triple16 = 0;\n        long triple17\
    \ = 0;\n        long triple18 = 0;\n        long triple19 = 0;\n        long triple20\
    \ = 0;\n        long triple21 = 0;\n        long triple22 = 0;\n        long triple23\
    \ = 0;\n        long triple24 = 0;\n        long triple25 = 0;\n        long triple26\
    \ = 0;\n        long triple27 = 0;\n        long triple28 = 0;\n        long triple29\
    \ = 0;\n        long triple30 = 0;\n        long triple31 = 0;\n        long triple32\
    \ = 0;\n        long triple33 = 0;\n        long triple34 = 0;\n        long triple35\
    \ = 0;\n        long triple36 = 0;\n        long triple37 = 0;\n        long triple38\
    \ = 0;\n        long triple39 = 0;\n        long triple40 = 0;\n        long triple41\
    \ = 0;\n        long triple42 = 0;\n        long triple43 = 0;\n        long triple44\
    \ = 0;\n        long triple45 = 0;\n        long triple46 = 0;\n        long triple47\
    \ = 0;\n        long triple48 = 0;\n        long triple49 = 0;\n        long triple50\
    \ = 0;\n        long triple51 = 0;\n        long triple52 = 0;\n        long triple53\
    \ = 0;\n        long triple54 = 0;\n        long triple55 = 0;\n        long triple56\
    \ = 0;\n        long triple57 = 0;\n        long triple58 = 0;\n        long triple59\
    \ = 0;\n        long triple60 = 0;\n        long triple61 = 0;\n        long triple62\
    \ = 0;\n        long triple63 = 0;\n        long triple64 = 0;\n        long triple65\
    \ = 0;\n        long triple66 = 0;\n        long triple67 = 0;\n        long triple68\
    \ = 0;\n        long triple69 = 0;\n        long triple70 = 0;\n        long triple71\
    \ = 0;\n        long triple72 = 0;\n        long triple73 = 0;\n        long triple74\
    \ = 0;\n        long triple75 = 0;\n        long triple76 = 0;\n        long triple77\
    \ = 0;\n        long triple78 = 0;\n        long triple79 = 0;\n        long triple80\
    \ = 0;\n        long triple81 = 0;\n        long triple82 = 0;", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long triples = 0;\n        long triple = 0;\n        long triple2 = 0;\n\
    \        long triple3 = 0;\n        long triple4 = 0;\n        long triple5 =\
    \ 0;\n        long triple6 = 0;\n        long triple7 = 0;\n        long triple8\
    \ = 0;\n        long triple9 = 0;\n        long triple10 = 0;\n        long triple11\
    \ = 0;\n        long triple12 = 0;\n        long triple13 = 0;\n        long triple14\
    \ = 0;\n        long triple15 = 0;\n        long triple16 = 0;\n        long triple17\
    \ = 0;\n        long triple18 = 0;\n        long triple19 = 0;\n        long triple20\
    \ = 0;\n        long triple21 = 0;\n        long triple22 = 0;\n        long triple23\
    \ = 0;\n        long triple24 = 0;\n        long triple25 = 0;\n        long triple26\
    \ = 0;\n        long triple27 = 0;\n        long triple28 = 0;\n        long triple29\
    \ = 0;\n        long triple30 = 0;\n        long triple31 = 0;\n        long triple32\
    \ = 0;\n        long triple33 = 0;\n        long triple34 = 0;\n        long triple35\
    \ = 0;\n        long triple36 = 0;\n        long triple37 = 0;\n        long triple38\
    \ = 0;\n        long triple39 = 0;\n        long triple40 = 0;\n        long triple41\
    \ = 0;\n        long triple42 = 0;\n        long triple43 = 0;\n        long triple44\
    \ = 0;\n        long triple45 = 0;\n        long triple46 = 0;\n        long triple47\
    \ = 0;\n        long triple48 = 0;\n        long triple49 = 0;\n        long triple50\
    \ = 0;\n        long triple51 = 0;\n        long triple52 = 0;\n        long triple53\
    \ = 0;\n        long triple54 = 0;\n        long triple55 = 0;\n        long triple56\
    \ = 0;\n        long triple57 = 0;\n        long triple58 = 0;\n        long triple59\
    \ = 0;\n        long triple60 = 0;\n        long triple61 = 0;\n        long triple62\
    \ = 0;\n        long triple63 = 0;\n        long triple64 = 0;\n        long triple65\
    \ = 0;\n        long triple66 = 0;\n        long triple67 = 0;\n        long triple68\
    \ = 0;\n        long triple69 = 0;\n        long triple70 = 0;\n        long triple71\
    \ = 0;\n        long triple72 = 0;\n        long triple73 = 0;\n        long triple74\
    \ = 0;\n        long triple75 = 0;\n        long triple76 = 0;\n        long triple77\
    \ = 0;\n        long triple78 = 0;\n        long triple79 = 0;\n        long triple80\
    \ = 0;\n        long triple81 = 0;\n        long triple82 = 0;", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long sum = 0;\n        long count = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i+1; j < n; j++) {\n                for(int k = j+1;\
    \ k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n         \
    \               sum += a[i];\n                        sum += a[j];\n         \
    \               sum += a[k];\n                        count++;\n             \
    \       }\n                }\n            }\n        }\n        return sum;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    triple = a[i] + a[j] + a[k];\n              \
    \      if (triple % 3 == 0) {\n                        triples++;\n          \
    \          }\n                }\n            }\n        }\n        return triples;",
  "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        int count = 0;\n        for (int i = 0; i < n; i++) {\n            for\
    \ (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)\
    \ {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n               \
    \         count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;", "        long a[] = new long[n];\n       \
    \ Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n       \
    \ long triple = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i+1; j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n   \
    \                 if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        sum += a[i];\n                    }\n               \
    \ }\n            }\n        }\n        return sum;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    long sum = a[i] + a[j] + a[k];\n                    if (sum % 3 == 0) {\n\
    \                        triple++;\n                    }\n                }\n\
    \            }\n        }\n        return triple;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        ans += 1;\n                 \
    \   }\n                }\n            }\n        }\n        return ans;", "  \
    \      long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long max = 0;\n        long sum = 0;\n        for(int i = 1; i < n; i++)\
    \ {\n            for(int j = i; j < n; j++) {\n                for(int k = j;\
    \ k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n         \
    \               sum += a[i];\n                        sum += a[j];\n         \
    \               sum += a[k];\n                        max = Math.max(max, sum);\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ max;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triples = 0;\n        long triple = 0;\n    \
    \    long triple2 = 0;\n        long triple3 = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            triple = a[i] * a[i] + a[i];\n            if (triple\
    \ == 3) {\n                triples = triples + 1;\n            }\n        }\n\
    \        return triples;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long result = 0;\n        for (int i =\
    \ 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n          \
    \      for (int k = j + 1; k < n; k++) {\n                    long sum = a[i]\
    \ + a[j] + a[k];\n                    if (sum % 3 == 0) {\n                  \
    \      result++;\n                    }\n                }\n            }\n  \
    \      }\n        return result;", "        long a[] = new long[n];\n        Arrays.stream(a).forEach(i\
    \ -> {\n            long j = i * i - i + 1;\n            long k = i * i + j;\n\
    \            a[i] = j;\n            a[j] = k;\n            a[k] = i;\n       \
    \ });\n        long result = 0;\n        for (long i : a) {\n            for (long\
    \ j : a) {\n                for (long k : a) {\n                    if (i != j\
    \ && j != k && i != k) {\n                        long sum = a[i] + a[j] + a[k];\n\
    \                        if (sum % 3 == 0) {\n                            result++;\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return result;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long max = 0;\n\
    \        long sum = 0;\n        for(int i = 1; i < n; i++) {\n            sum\
    \ += a[i];\n            if(sum % 3 == 0) {\n                max = Math.max(max,\
    \ sum);\n            }\n        }\n        return max;", "        long[] a = new\
    \ long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long\
    \ ans = 0;\n        long sum = 0;\n        for(int i = 0; i < n; i++) {\n    \
    \        sum += a[i];\n            for(int j = i + 1; j < n; j++) {\n        \
    \        sum += a[j];\n                for(int k = j + 1; k < n; k++) {\n    \
    \                sum += a[k];\n                    if(sum % 3 == 0) {\n      \
    \                  ans += 1;\n                    }\n                }\n     \
    \       }\n        }\n        return ans;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n\
    \        long triples = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    long sum = a[i] + a[j] + a[k];\n            \
    \        if (sum % 3 == 0) {\n                        triple++;\n            \
    \        }\n                }\n            }\n        }\n        return triple;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 0);\n      \
    \  Arrays.sort(a);\n        long sum = 0;\n        long max = 0;\n        long\
    \ min = 0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfDifferences\
    \ = 0;\n        long sumOfDifferences = 0;\n        long sumOfDifferenceOfSquares\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferences = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferences\
    \ = 0;\n        long sumOfDifferenceOfSquareOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOfDifferenceOf",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long max = 0;\n        long sum = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            sum += a[i];\n            if(sum % 3 == 0) {\n              \
    \  max = Math.max(max, sum);\n            }\n        }\n        return max;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long max = 0;\n        long triple = 0;\n    \
    \    for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n\
    \                for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        sum += 1;\n                        if(sum\
    \ > max) {\n                            max = sum;\n                         \
    \   triple = i;\n                        }\n                    }\n          \
    \      }\n            }\n        }\n        return triple;", "        long[] a\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long max = 0;\n        long triple = 0;\n        for (int i = 0; i < n; i++)\
    \ {\n            for (int j = i + 1; j < n; j++) {\n                for (int k\
    \ = j + 1; k < n; k++) {\n                    if (a[i] + a[j] + a[k] == 3) {\n\
    \                        triple++;\n                    }\n                }\n\
    \            }\n            if (triple > max) {\n                max = triple;\n\
    \            }\n            triple = 0;\n        }\n        return max;", "  \
    \      long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        ", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long triples = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i+1; j < n; j++) {\n                for(int k = j+1; k < n; k++) {\n   \
    \                 if(a[i] + a[j] + a[k] == 3) {\n                        triples\
    \ += 1;\n                    }\n                }\n            }\n        }\n\
    \        return triples;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 0);\n        Arrays.sort(a);\n        long result = 0;\n        for(int i =\
    \ 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n               \
    \ for(int k = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3)\
    \ {\n                        result = Math.max(result, i + j + k);\n         \
    \           }\n                }\n            }\n        }\n        return result;",
  "        long a[] = new long[n];\n        Arrays.stream(a).forEach(i -> a[i] = i\
    \ * i - i + 1);\n        return Arrays.stream(a).filter(i -> i < n && i < n &&\
    \ i < n).count();", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long max = 0;\n        long triple = 0;\n  \
    \      for (int i = 0; i < a.length; i++) {\n            for (int j = i + 1; j\
    \ < a.length; j++) {\n                for (int k = j + 1; k < a.length; k++) {\n\
    \                    long sum = a[i] + a[j] + a[k];\n                    if (sum\
    \ % 3 == 0) {\n                        triple++;\n                        if (triple\
    \ > max) {\n                            max = triple;\n                      \
    \  }\n                    }\n                }\n            }\n        }\n   \
    \     return max;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long result = 0;\n        for(int i = 0; i <\
    \ n; i++) {\n            for(int j = i+1; j < n; j++) {\n                for(int\
    \ k = j+1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n\
    \                        result++;\n                    }\n                }\n\
    \            }\n        }\n        return result;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n        long triples =\
    \ 0;\n        long triple = 0;\n        long triple2 = 0;\n        long triple3\
    \ = 0;\n        long triple4 = 0;\n        long triple5 = 0;\n        long triple6\
    \ = 0;\n        long triple7 = 0;\n        long triple8 = 0;\n        long triple9\
    \ = 0;\n        long triple10 = 0;\n        long triple11 = 0;\n        long triple12\
    \ = 0;\n        long triple13 = 0;\n        long triple14 = 0;\n        long triple15\
    \ = 0;\n        long triple16 = 0;\n        long triple17 = 0;\n        long triple18\
    \ = 0;\n        long triple19 = 0;\n        long triple20 = 0;\n        long triple21\
    \ = 0;\n        long triple22 = 0;\n        long triple23 = 0;\n        long triple24\
    \ = 0;\n        long triple25 = 0;\n        long triple26 = 0;\n        long triple27\
    \ = 0;\n        long triple28 = 0;\n        long triple29 = 0;\n        long triple30\
    \ = 0;\n        long triple31 = 0;\n        long triple32 = 0;\n        long triple33\
    \ = 0;\n        long triple34 = 0;\n        long triple35 = 0;\n        long triple36\
    \ = 0;\n        long triple37 = 0;\n        long triple38 = 0;\n        long triple39\
    \ = 0;\n        long triple40 = 0;\n        long triple41 = 0;\n        long triple42\
    \ = 0;\n        long triple43 = 0;\n        long triple44 = 0;\n        long triple45\
    \ = 0;\n        long triple46 = 0;\n        long triple47 = 0;\n        long triple48\
    \ = 0;\n        long triple49 = 0;\n        long triple50 = 0;\n        long triple51\
    \ = 0;\n        long triple52 = 0;\n        long triple53 = 0;\n        long triple54\
    \ = 0;\n        long triple55 = 0;\n        long triple56 = 0;\n        long triple57\
    \ = 0;\n        long triple58 = 0;\n        long triple59 = 0;\n        long triple60\
    \ = 0;\n        long triple61 = 0;\n        long triple62 = 0;\n        long triple63\
    \ = 0;\n        long triple64 = 0;\n        long triple65 = 0;\n        long triple66\
    \ = 0;\n        long triple67 = 0;\n        long triple68 = 0;\n        long triple69\
    \ = 0;\n        long triple70 = 0;\n        long triple71 = 0;\n        long triple72\
    \ = 0;\n        long triple73 = 0;\n        long triple74 = 0;\n        long triple75\
    \ = 0;\n        long triple76 = 0;\n        long triple77 = 0;\n        long triple78\
    \ = 0;\n        long triple79 = 0;\n        long triple80 = 0;\n        long triple81\
    \ = 0;\n        long triple82", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long ans = 0;\n        long sum = 0;\n\
    \        long temp = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        temp\
    \ = a[i] + a[j] + a[k];\n                        if(temp > ans) {\n          \
    \                  ans = temp;\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        return ans;", "   \
    \     long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long triples_sum\
    \ = 0;\n        long triples_sum2 = 0;\n        long triples_sum3 = 0;\n     \
    \   long triples_sum4 = 0;\n        long triples_sum5 = 0;\n        long triples_sum6\
    \ = 0;\n        long triples_sum7 = 0;\n        long triples_sum8 = 0;\n     \
    \   long triples_sum9 = 0;\n        long triples_sum10 = 0;\n        long triples_sum11\
    \ = 0;\n        long triples_sum12 = 0;\n        long triples_sum13 = 0;\n   \
    \     long triples_sum14 = 0;\n        long triples_sum15 = 0;\n        long triples_sum16\
    \ = 0;\n        long triples_sum17 = 0;\n        long triples_sum18 = 0;\n   \
    \     long triples_sum19 = 0;\n        long triples_sum20 = 0;\n        long triples_sum21\
    \ = 0;\n        long triples_sum22 = 0;\n        long triples_sum23 = 0;\n   \
    \     long triples_sum24 = 0;\n        long triples_sum25 = 0;\n        long triples_sum26\
    \ = 0;\n        long triples_sum27 = 0;\n        long triples_sum28 = 0;\n   \
    \     long triples_sum29 = 0;\n        long triples_sum30 = 0;\n        long triples_sum31\
    \ = 0;\n        long triples_sum32 = 0;\n        long triples_sum33 = 0;\n   \
    \     long triples_sum34 = 0;\n        long triples_sum35 = 0;\n        long triples_sum36\
    \ = 0;\n        long triples_sum37 = 0;\n        long triples_sum38 = 0;\n   \
    \     long triples_sum39 = 0;\n        long triples_sum40 = 0;\n        long triples_sum41\
    \ = 0;\n        long triples_sum42 = 0;\n        long triples_sum43 = 0;\n   \
    \     long triples_sum44 = 0;\n        long triples_sum45 = 0;\n        long triples_sum46\
    \ = 0;\n        long triples_sum47 = 0;\n        long triples_sum48 = 0;\n   \
    \     long triples_sum49 = 0;\n        long triples_sum50 = 0;\n        long triples_sum51\
    \ = 0;\n        long triples_sum52 = 0;\n        long triples_sum53 = 0;\n   \
    \     long triples_sum54 = 0;\n        long triples_sum55 = 0;\n        long triples_sum56\
    \ = 0;\n        long triples_sum57 = 0;\n        long triples_sum58 = 0;\n   \
    \     long triples_sum59 = 0;\n        long triples_sum60 = 0;\n        long triples_sum61",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        ", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] < a[j] && a[j] < a[k]) {\n                     \
    \   ans += 1;\n                    }\n                }\n            }\n     \
    \   }\n        return ans;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long sum = 0;\n        long max = 0;\n\
    \        long triple = 0;\n        for (int i = 0; i < n; i++) {\n           \
    \ sum += a[i];\n            if (sum % 3 == 0) {\n                triple++;\n \
    \           }\n            if (sum > max) {\n                max = sum;\n    \
    \        }\n        }\n        return triple;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n\
    \        long max = 0;\n        long triple = 0;\n        long tripleMax = 0;\n\
    \        for(int i = 1; i < a.length; i++) {\n            for(int j = i; j < a.length;\
    \ j++) {\n                for(int k = j; k < a.length; k++) {\n              \
    \      if(a[i] + a[j] + a[k] == 3) {\n                        sum += a[i] + a[j]\
    \ + a[k];\n                        if(sum > max) {\n                         \
    \   max = sum;\n                            triple = a[i] + a[j] + a[k];\n   \
    \                         tripleMax = a[i] + a[j] + a[k];\n                  \
    \      }\n                    }\n                }\n            }\n        }\n\
    \        return tripleMax;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        triple++;\n                 \
    \   }\n                }\n            }\n        }\n        return triple;", " \
    \       long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triples = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n       \
    \                 triples++;\n                    }\n                }\n     \
    \       }\n        }\n        return triples;", "        long a[] = new long[n];\n\
    \        Arrays.stream(a).forEach(i -> a[i] = i * i - i + 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        for (int i = 0; i < n; i++) {\n           \
    \ for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n;\
    \ k++) {\n                    triple += a[i];\n                    triple += a[j];\n\
    \                    triple += a[k];\n                }\n            }\n     \
    \   }\n        return triple;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triple2 = 0;\n        long triple3 = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n      \
    \          for (int k = j + 1; k < n; k++) {\n                    triple = a[i]\
    \ + a[j] + a[k];\n                    if (triple == 3) {\n                   \
    \     triples += 1;\n                        triple = a[i] + a[j] + a[k];\n  \
    \                      if (triple == 3) {\n                            triples\
    \ += 1;\n                        }\n                    }\n                }\n\
    \            }\n        }\n        return triples;", "        long a[] = new long[n];\n\
    \        Arrays.stream(a).forEach(i -> i = i * i - i + 1);\n        long triple\
    \ = 0;\n        Arrays.stream(a).forEach(i -> Arrays.stream(a).forEach(j -> Arrays.stream(a).forEach(k\
    \ -> {\n            if (i < j && j < k && k > triple) {\n                triple\
    \ = i;\n            }\n        })));\n        return triple;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long triple = 0;\n        long sum = 0;\n        for(int i = 0; i < n; i++)\
    \ {\n            for(int j = i + 1; j < n; j++) {\n                for(int k =\
    \ j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n  \
    \                      triple++;\n                        sum += a[i] + a[j] +\
    \ a[k];\n                    }\n                }\n            }\n        }\n\
    \        return sum % 3 != 0 ? triple : 0;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n        long result = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    long triple = a[i] + a[j] + a[k];\n                    if (triple % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;", "        long a[]\
    \ = new long[n];\n        Arrays.stream(a).forEach(i -> i = i * i - i + 1);\n\
    \        long triple = 0;\n        Arrays.stream(a).forEach(i -> Arrays.stream(a).forEach(j\
    \ -> Arrays.stream(a).forEach(k -> {\n            if (i < j && j < k && i + j\
    \ + k == 3 * i) {\n                triple++;\n            }\n        })));\n \
    \       return triple;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long ans = 0;\n        for(int i = 1;\
    \ i < n; i++) {\n            for(int j = i; j < n; j++) {\n                for(int\
    \ k = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n  \
    \                      ans += 1;\n                    }\n                }\n \
    \           }\n        }\n        return ans;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long result = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        result++;\n                 \
    \   }\n                }\n            }\n        }\n        return result;", " \
    \       long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long max = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        triple++;\n                 \
    \   }\n                }\n            }\n            if(triple > max) {\n    \
    \            max = triple;\n                triples = 0;\n            }\n    \
    \        triple = 0;\n        }\n        return max;", "        long[] a = new\
    \ long[n];\n        Arrays.fill(a, 0);\n        Arrays.sort(a);\n        long\
    \ max = 0;\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n  \
    \          for(int j = i+1; j < n; j++) {\n                for(int k = j+1; k\
    \ < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n           \
    \             count++;\n                    }\n                }\n           \
    \ }\n        }\n        max = Math.max(max, count);\n        return max;", " \
    \       long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long result = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        result++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;", "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n   \
    \     Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n     \
    \   long triples = 0;\n        for(int i = 1; i < a.length; i++) {\n         \
    \   if(a[i] > a[i - 1]) {\n                triple++;\n                sum += a[i]\
    \ + a[i];\n                triples = sum;\n            }\n        }\n        return\
    \ triples;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n  \
    \      Arrays.sort(a);\n        long triple = 0;\n        long tripleCount = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        tripleCount++;\n            \
    \            triple++;\n                    }\n                }\n           \
    \ }\n        }\n        return tripleCount;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n\
    \        long sum = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        sum += a[i];\n                    }\n               \
    \ }\n            }\n        }\n        return sum;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        sum += 1;\n                 \
    \   }\n                }\n            }\n        }\n        return sum;", "  \
    \      long[] a = new long[n];\n        Arrays.fill(a, 0);\n        Arrays.stream(a).forEach(i\
    \ -> {\n            a[i] = i * i - i + 1;\n        });\n        long max = 0;\n\
    \        long triple = 0;\n        Arrays.stream(a).forEach(i -> {\n         \
    \   Arrays.stream(a).forEach(j -> {\n                Arrays.stream(a).forEach(k\
    \ -> {\n                    if (i + j + k == triple) {\n                     \
    \   max = Math.max(max, i + j + k);\n                    }\n                });\n\
    \            });\n        });\n        return max;", "        long a[] = new long[n];\n\
    \        Arrays.stream(a).forEach(i -> a[i] = i * i - i + 1);\n        return\
    \ Arrays.stream(a).filter(i -> i < n && i < n && i < n).count();", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long sum = 0;\n        long triple = 0;\n        long triples = 0;\n    \
    \    for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n\
    \                for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        sum += a[i];\n                     \
    \   triple += a[i];\n                        triples++;\n                    }\n\
    \                }\n            }\n        }\n        return sum;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long sum = 0;\n        long max = 0;\n        long triple = 0;\n        long\
    \ tripleMax = 0;\n        long tripleMaxCount = 0;\n        long tripleMaxCount2\
    \ = 0;\n        long tripleMaxCount3 = 0;\n        long tripleMaxCount4 = 0;\n\
    \        long tripleMaxCount5 = 0;\n        long tripleMaxCount6 = 0;\n      \
    \  long tripleMaxCount7 = 0;\n        long tripleMaxCount8 = 0;\n        long\
    \ tripleMaxCount9 = 0;\n        long tripleMaxCount10 = 0;\n        long tripleMaxCount11\
    \ = 0;\n        long tripleMaxCount12 = 0;\n        long tripleMaxCount13 = 0;\n\
    \        long tripleMaxCount14 = 0;\n        long tripleMaxCount15 = 0;\n    \
    \    long tripleMaxCount16 = 0;\n        long tripleMaxCount17 = 0;\n        long\
    \ tripleMaxCount18 = 0;\n        long tripleMaxCount19 = 0;\n        long tripleMaxCount20\
    \ = 0;\n        long tripleMaxCount21 = 0;\n        long tripleMaxCount22 = 0;\n\
    \        long tripleMaxCount23 = 0;\n        long tripleMaxCount24 = 0;\n    \
    \    long tripleMaxCount25 = 0;\n        long tripleMaxCount26 = 0;\n        long\
    \ tripleMaxCount27 = 0;\n        long tripleMaxCount28 = 0;\n        long tripleMaxCount29\
    \ = 0;\n        long tripleMaxCount30 = 0;\n        long tripleMaxCount31 = 0;\n\
    \        long tripleMaxCount32 = 0;\n        long tripleMaxCount33 = 0;\n    \
    \    long tripleMaxCount34 = 0;\n        long tripleMaxCount35 = 0;\n        long\
    \ tripleMaxCount36 = 0;\n        long tripleMaxCount37 = 0;\n        long tripleMaxCount38\
    \ = 0;\n        long tripleMaxCount39 = 0;\n        long tripleMaxCount40 = 0;\n\
    \        long tripleMaxCount41 = 0;\n        long tripleMaxCount42 = 0;\n    \
    \    long tripleMaxCount43 = 0;\n        long tripleMaxCount44 = 0;\n        long\
    \ tripleMaxCount45 = 0;\n        long tripleMaxCount46 = 0;\n        long tripleMaxCount47\
    \ = 0;\n        long tripleMaxCount48 = 0;\n        long tripleMaxCount49 = 0;\n\
    \        long tripleMaxCount50 = 0;\n        long tripleMaxCount51 = 0;\n    \
    \    long tripleMaxCount52 = 0;\n        long tripleMaxCount53 = 0;\n        long\
    \ tripleMaxCount54 = 0;\n        long tripleMaxCount55 = 0;\n        long tripleMaxCount56\
    \ = 0;\n        long tripleMaxCount57 = 0;\n        long tripleMaxCount58 = 0;\n\
    \        long tripleMaxCount59 = 0;\n        long triple", "        long a[] =\
    \ new long[n];\n        Arrays.fill(a, 0);\n        Arrays.parallelSetAll(a, (a,\
    \ i) -> i * i - i + 1);\n        return IntStream.range(0, n).filter(i -> a[i]\
    \ % 3 == 0).count();", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 0);\n        Arrays.sort(a);\n        long triples = 0;\n        for(int i =\
    \ 1; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n           \
    \     for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k]\
    \ == 3) {\n                        triples += 1;\n                    }\n    \
    \            }\n            }\n        }\n        return triples;", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long sum = 0;\n        long triple = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i; j < n; j++) {\n                for(int k\
    \ = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n    \
    \                    triple++;\n                    }\n                }\n   \
    \         }\n        }\n        return triple;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long result = 0;\n\
    \        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        result++;\n                 \
    \   }\n                }\n            }\n        }\n        return result;", " \
    \       long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triple = 0;\n        long triples = 0;\n    \
    \    long triples_sum = 0;\n        long triples_sum2 = 0;\n        long triples_sum3\
    \ = 0;\n        long triples_sum4 = 0;\n        long triples_sum5 = 0;\n     \
    \   long triples_sum6 = 0;\n        long triples_sum7 = 0;\n        long triples_sum8\
    \ = 0;\n        long triples_sum9 = 0;\n        long triples_sum10 = 0;\n    \
    \    long triples_sum11 = 0;\n        long triples_sum12 = 0;\n        long triples_sum13\
    \ = 0;\n        long triples_sum14 = 0;\n        long triples_sum15 = 0;\n   \
    \     long triples_sum16 = 0;\n        long triples_sum17 = 0;\n        long triples_sum18\
    \ = 0;\n        long triples_sum19 = 0;\n        long triples_sum20 = 0;\n   \
    \     long triples_sum21 = 0;\n        long triples_sum22 = 0;\n        long triples_sum23\
    \ = 0;\n        long triples_sum24 = 0;\n        long triples_sum25 = 0;\n   \
    \     long triples_sum26 = 0;\n        long triples_sum27 = 0;\n        long triples_sum28\
    \ = 0;\n        long triples_sum29 = 0;\n        long triples_sum30 = 0;\n   \
    \     long triples_sum31 = 0;\n        long triples_sum32 = 0;\n        long triples_sum33\
    \ = 0;\n        long triples_sum34 = 0;\n        long triples_sum35 = 0;\n   \
    \     long triples_sum36 = 0;\n        long triples_sum37 = 0;\n        long triples_sum38\
    \ = 0;\n        long triples_sum39 = 0;\n        long triples_sum40 = 0;\n   \
    \     long triples_sum41 = 0;\n        long triples_sum42 = 0;\n        long triples_sum43\
    \ = 0;\n        long triples_sum44 = 0;\n        long triples_sum45 = 0;\n   \
    \     long triples_sum46 = 0;\n        long triples_sum47 = 0;\n        long triples_sum48\
    \ = 0;\n        long triples_sum49 = 0;\n        long triples_sum50 = 0;\n   \
    \     long triples_sum51 = 0;\n        long triples_sum52 = 0;\n        long triples_sum53\
    \ = 0;\n        long triples_sum54 = 0;\n        long triples_sum55 = 0;\n   \
    \     long triples_sum56 = 0;\n        long triples_sum57 = 0;\n        long triples_sum58\
    \ = 0;\n        long triples_sum59 = 0;\n        long triples_sum60 = 0;\n   \
    \     long triples_sum61", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 0);\n        Arrays.stream(a).forEach(i -> a[i] = i * i - i + 1);\n        long\
    \ max = 0;\n        long sum = 0;\n        Arrays.stream(a).forEach(i -> {\n \
    \           Arrays.stream(a).forEach(j -> {\n                Arrays.stream(a).forEach(k\
    \ -> {\n                    if (i + j + k == n) {\n                        sum\
    \ += a[i];\n                        sum += a[j];\n                        sum\
    \ += a[k];\n                        if (sum % 3 == 0) {\n                    \
    \        max = Math.max(max, sum);\n                        }\n              \
    \      }\n                });\n            });\n        });\n        return max;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long max = 0;\n        long maxSum = 0;\n    \
    \    for(int i = 0; i < n; i++) {\n            sum += a[i];\n            if(sum\
    \ > max) {\n                max = sum;\n                maxSum = sum;\n      \
    \      }\n            for(int j = i + 1; j < n; j++) {\n                sum +=\
    \ a[j];\n                if(sum > max) {\n                    max = sum;\n   \
    \                 maxSum = sum;\n                }\n                for(int k\
    \ = j + 1; k < n; k++) {\n                    sum += a[k];\n                 \
    \   if(sum > max) {\n                        max = sum;\n                    \
    \    maxSum = sum;\n                    }\n                }\n            }\n\
    \        }\n        return maxSum;", "        long a[] = new long[n];\n      \
    \  Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n      \
    \  long max = 0;\n        long maxSum = 0;\n        long maxSumTriples = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            if(a[i] > max) {\n        \
    \        max = a[i];\n                maxSum = a[i] + a[i-1] + a[i-2];\n     \
    \           maxSumTriples = a[i];\n            }\n            if(a[i] < max) {\n\
    \                sum += a[i];\n            }\n        }\n        System.out.println(sum);\n\
    \        return sum;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n\
    \        for (int i = 0; i < a.length; i++) {\n            triple = a[i] * a[i]\
    \ + a[i] + a[i];\n            if (triple % 3 == 0) {\n                sum += triple;\n\
    \            }\n        }\n        return sum;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        long sum = 0;\n        for(int i = 1; i < n; i++) {\n            sum\
    \ += a[i];\n            ans = Math.max(ans, sum);\n            for(int j = i;\
    \ j < n; j++) {\n                sum += a[j];\n                ans = Math.max(ans,\
    \ sum);\n                for(int k = i; k < n; k++) {\n                    sum\
    \ += a[k];\n                    ans = Math.max(ans, sum);\n                }\n\
    \            }\n        }\n        return ans;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n\
    \        long tripleCount = 0;\n        for(int i = 1; i < n; i++) {\n       \
    \     for(int j = i; j < n; j++) {\n                for(int k = j; k < n; k++)\
    \ {\n                    if(a[i] + a[j] + a[k] == 3) {\n                     \
    \   tripleCount++;\n                        triple = a[i] + a[j] + a[k];\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ tripleCount;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n     \
    \   for(int i = 1; i < n; i++) {\n            sum += a[i];\n            if(sum\
    \ % 3 != 0) {\n                max = sum;\n            }\n        }\n        return\
    \ max;", "        long[] a = new long[n];\n        Arrays.fill(a, 1l);\n     \
    \   Arrays.sort(a);\n        long sum = 0;\n        long triple = 0;\n       \
    \ long triples = 0;\n        for (int i = 0; i < a.length; i++) {\n          \
    \  for (int j = i + 1; j < a.length; j++) {\n                for (int k = j +\
    \ 1; k < a.length; k++) {\n                    triple = a[i] + a[j] + a[k];\n\
    \                    if (triple % 3 == 0) {\n                        sum += triple;\n\
    \                        triples++;\n                    }\n                }\n\
    \            }\n        }\n        return sum;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triples = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if (a[i] == a[j] && a[j] == a[k]) {\n                        triples += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ triples;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n  \
    \      Arrays.sort(a);\n        long result = 0;\n        long sum = 0;\n    \
    \    for(int i = 0; i < n; i++) {\n            sum += a[i];\n            for(int\
    \ j = i + 1; j < n; j++) {\n                sum += a[j];\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    sum += a[k];\n               \
    \     if(sum % 3 == 0) {\n                        result += 1;\n             \
    \           sum = 0;\n                    }\n                }\n            }\n\
    \        }\n        return result;", "        long[] a = new long[n];\n      \
    \  Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n   \
    \     for (int i = 0; i < a.length - 1; i++) {\n            for (int j = i + 1;\
    \ j < a.length; j++) {\n                for (int k = j + 1; k < a.length; k++)\
    \ {\n                    long sum = a[i] + a[j] + a[k];\n                    if\
    \ (sum % 3 == 0) {\n                        triple++;\n                    }\n\
    \                }\n            }\n        }\n        return triple;", "     \
    \   long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        ", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triples = 0;\n        long sum = 0;\n       \
    \ long triple = 0;\n        long triple2 = 0;\n        long triple3 = 0;\n   \
    \     long triple4 = 0;\n        long triple5 = 0;\n        long triple6 = 0;\n\
    \        long triple7 = 0;\n        long triple8 = 0;\n        long triple9 =\
    \ 0;\n        long triple10 = 0;\n        long triple11 = 0;\n        long triple12\
    \ = 0;\n        long triple13 = 0;\n        long triple14 = 0;\n        long triple15\
    \ = 0;\n        long triple16 = 0;\n        long triple17 = 0;\n        long triple18\
    \ = 0;\n        long triple19 = 0;\n        long triple20 = 0;\n        long triple21\
    \ = 0;\n        long triple22 = 0;\n        long triple23 = 0;\n        long triple24\
    \ = 0;\n        long triple25 = 0;\n        long triple26 = 0;\n        long triple27\
    \ = 0;\n        long triple28 = 0;\n        long triple29 = 0;\n        long triple30\
    \ = 0;\n        long triple31 = 0;\n        long triple32 = 0;\n        long triple33\
    \ = 0;\n        long triple34 = 0;\n        long triple35 = 0;\n        long triple36\
    \ = 0;\n        long triple37 = 0;\n        long triple38 = 0;\n        long triple39\
    \ = 0;\n        long triple40 = 0;\n        long triple41 = 0;\n        long triple42\
    \ = 0;\n        long triple43 = 0;\n        long triple44 = 0;\n        long triple45\
    \ = 0;\n        long triple46 = 0;\n        long triple47 = 0;\n        long triple48\
    \ = 0;\n        long triple49 = 0;\n        long triple50 = 0;\n        long triple51\
    \ = 0;\n        long triple52 = 0;\n        long triple53 = 0;\n        long triple54\
    \ = 0;\n        long triple55 = 0;\n        long triple56 = 0;\n        long triple57\
    \ = 0;\n        long triple58 = 0;\n        long triple59 = 0;\n        long triple60\
    \ = 0;\n        long triple61 = 0;\n        long triple62 = 0;\n        long triple63\
    \ = 0;\n        long triple64 = 0;\n        long triple65 = 0;\n        long triple66\
    \ = 0;\n        long triple67 = 0;\n        long triple68 = 0;\n        long triple69\
    \ = 0;\n        long triple70 = 0;\n        long triple71 = 0;\n        long triple72\
    \ = 0;\n        long triple73 = 0;\n        long triple74 = 0;\n        long triple75\
    \ = 0;\n        long triple76 = 0;\n        long triple77 = 0;\n        long triple78\
    \ = 0;\n        long triple79 = 0;\n        long triple80 = 0;\n        long triple81\
    \ = 0;\n", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n    \
    \    Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            sum += a[i];\n            if(sum % 3 != 0)\
    \ {\n                max = sum;\n            }\n        }\n        return max;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n", "        long a[] = new\
    \ long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long\
    \ triples = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j\
    \ = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] == a[j] && a[j] == a[k]) {\n                   \
    \     triples += 1;\n                    }\n                }\n            }\n\
    \        }\n        return triples;", "        long a[] = new long[n];\n     \
    \   Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n  \
    \      long triples = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        if(triple > triples) {\n                            triples\
    \ = triple;\n                        }\n                    }\n              \
    \  }\n            }\n        }\n        return triples;", "        long a[] =\
    \ new long[n];\n        Arrays.stream(a).forEach(i -> a[i] = i * i - i + 1);\n\
    \        return Arrays.stream(a).filter(i -> i < n && n < i + 1 && i < n + 1 &&\
    \ i < n + 2)\n                .filter(i -> a[i] % 3 == 0).count();", "       \
    \ long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triples = 0;\n        long sum = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            sum += a[i];\n            if (sum % 3 == 0) {\n     \
    \           triples += 1;\n            }\n        }\n        return triples;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long max = 0;\n        long min = 0;\n       \
    \ long sumOfSquares = 0;\n        for(int i = 0; i < n; i++) {\n            sum\
    \ += a[i];\n            sumOfSquares += a[i] * a[i];\n        }\n        max =\
    \ sum;\n        min = sum;\n        for(int i = 0; i < n; i++) {\n           \
    \ if(a[i] != 0) {\n                max = Math.max(max, a[i]);\n              \
    \  min = Math.min(min, a[i]);\n            }\n        }\n        long sumOfSquaresOfTriples\
    \ = 0;\n        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {\n  \
    \              sumOfSquaresOfTriples += a[i] * a[i];\n            }\n        }\n\
    \        long sumOfSquaresOfTriplesWithoutZeros = 0;\n        for(int i = 0; i\
    \ < n; i++) {\n            if(a[i] != 0) {\n                sumOfSquaresOfTriplesWithoutZeros\
    \ += a[i] * a[i];\n            }\n        }\n        long sumOfSquaresOfTriplesWithoutZerosAndMin\
    \ = 0;\n        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {\n  \
    \              sumOfSquaresOfTriplesWithoutZerosAndMin += a[i] * a[i];\n     \
    \       }\n        }\n        long sumOfSquaresOfTriplesWithoutZerosAndMax = 0;\n\
    \        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {\n         \
    \       sumOfSquaresOfTriplesWithoutZerosAndMax += a[i] * a[i];\n            }\n\
    \        }\n        long sumOfSquaresOfTriplesWithoutZerosAndMinAndMax = 0;\n\
    \        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {\n         \
    \       sumOfSquaresOfTriplesWithoutZerosAndMinAndMax += a[i] * a[i];\n      \
    \      }\n        }\n        long sumOfSquaresOfTriplesWithoutZerosAndMinAndMaxAndSum\
    \ = 0;\n        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {\n  \
    \              sumOfSquaresOfTriplesWithoutZerosAndMinAndMaxAndSum += a[i] * a[i];\n\
    \            }\n        }\n        long sumOfSquaresOfTriplesWithoutZerosAndMinAndMaxAndSumAndMax\
    \ = 0;\n        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {\n  \
    \              sumOfSquaresOfTriplesWithoutZerosAndMinAndMaxAndSumAndMax += a[i]\
    \ * a[i];\n            }\n        }\n        long sumOfSquaresOfTriplesWithoutZerosAndMinAndMaxAndSumAndMaxAndMin\
    \ = 0;\n        for(int i = 0; i < n; i++) {\n            if(a[i] != 0) {", " \
    \       long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triples = 0;\n        for (int i = 0; i < n; i++) {\n          \
    \  for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k <\
    \ n; k++) {\n                    if (a[i] < a[j] && a[j] < a[k]) {\n         \
    \               long sum = a[i] + a[j] + a[k];\n                        if (sum\
    \ % 3 == 0) {\n                            triples++;\n                      \
    \  }\n                    }\n                }\n            }\n        }\n   \
    \     return triples;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n\
    \        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n    \
    \    long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long\
    \ sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11\
    \ = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 =\
    \ 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n\
    \        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n \
    \       long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n  \
    \      long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n   \
    \     long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n    \
    \    long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n     \
    \   long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n      \
    \  long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n       \
    \ long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long\
    \ sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45\
    \ = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 =\
    \ 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n\
    \        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n \
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n  \
    \      long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n   \
    \     long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n    \
    \    long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n     \
    \   long sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n      \
    \  long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n       \
    \ long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long\
    \ sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79\
    \ = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82 =\
    \ 0;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long triple = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i; j < n; j++) {\n                for(int k\
    \ = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n    \
    \                    sum += a[i];\n                        triple += a[i];\n \
    \                   }\n                }\n            }\n        }\n        return\
    \ sum;", "        long a[] = new long[n];\n        Arrays.fill(a, 1l);\n     \
    \   Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            sum += a[i];\n            if((sum % 3) ==\
    \ 0) {\n                max = Math.max(max, sum);\n            }\n        }\n\
    \        return max;", "        long a[] = new long[n];\n        Arrays.stream(a).forEach(i\
    \ -> i = i * i - i + 1);\n        long sum = 0;\n        Arrays.stream(a).forEach(i\
    \ -> sum += i);\n        return sum;", "        long a[] = new long[n];\n    \
    \    Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n    \
    \    for(int i = 0; i < n; i++) {\n            sum += a[i];\n            for(int\
    \ j = i + 1; j < n; j++) {\n                sum += a[j];\n                for(int\
    \ k = j + 1; k < n; k++) {\n                    sum += a[k];\n               \
    \     if(sum % 3 == 0) {\n                        return sum;\n              \
    \      }\n                }\n            }\n        }\n        return 0;", " \
    \       long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long tripleMax =\
    \ 0;\n        long tripleMaxIndex = 0;\n        for(int i = 1; i < n; i++) {\n\
    \            for(int j = i; j < n; j++) {\n                for(int k = j; k <\
    \ n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n             \
    \           triple++;\n                        if(triple > tripleMax) {\n    \
    \                        tripleMax = triple;\n                            tripleMaxIndex\
    \ = i;\n                            tripleMax = triple;\n                    \
    \        tripleMaxIndex = i;\n                        }\n                    }\n\
    \                }\n            }\n        }\n        return tripleMaxIndex;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ triple;", "        long a[] = new long[n];\n        Arrays.fill(a, 0);\n   \
    \     Arrays.stream(a).forEach(i -> {\n            long j = i * i - i + 1;\n \
    \           long k = i * i * i;\n            long sum = a[i] + a[j] + a[k];\n\
    \            if (sum % 3 == 0) {\n                a[i] = a[j];\n             \
    \   a[j] = a[k];\n                a[k] = sum;\n            }\n        });\n  \
    \      return Arrays.stream(a).filter(i -> i % 3 == 0).count();", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        ", "        long\
    \ a[] = new long[n];\n        Arrays.stream(a).forEach(i -> {\n            long\
    \ j = i * i - i + 1;\n            long k = i * i + j;\n            a[i] = j;\n\
    \            a[j] = k;\n            a[k] = i;\n        });\n        long result\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           long sum = a[i] + a[j] + a[k];\n                    if (sum % 3 ==\
    \ 0) {\n                        result++;\n                    }\n           \
    \     }\n            }\n        }\n        return result;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n     \
    \   long result = 0;\n        for (int i = 0; i < n; i++) {\n            for (int\
    \ j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n\
    \                    if (a[i] < a[j] && a[i] < a[k]) {\n                     \
    \   result = Math.max(result, a[i] + a[j] + a[k]);\n                    }\n  \
    \              }\n            }\n        }\n        return result;", "       \
    \ long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long[] a = new long[n];\n        Arrays.fill(a, 1l);\n     \
    \   Arrays.sort(a);\n        long triples = 0;\n        long triple = 0;\n   \
    \     long triple2 = 0;\n        for (int i = 0; i < n; i++) {\n            triple\
    \ = a[i] + a[j] + a[k];\n            if (triple % 3 == 0) {\n                triples\
    \ += 1;\n            }\n        }\n        return triples;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long sum = 0;\n        long triple = 0;\n        for(int i = 1; i < n; i++)\
    \ {\n            for(int j = i; j < n; j++) {\n                for(int k = j;\
    \ k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n         \
    \               triple++;\n                    }\n                }\n        \
    \    }\n        }\n        return triple;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long max = 0;\n\
    \        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n     \
    \   long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long\
    \ sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10\
    \ = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 =\
    \ 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n\
    \        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n \
    \       long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n  \
    \      long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n   \
    \     long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n    \
    \    long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n     \
    \   long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n      \
    \  long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n       \
    \ long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long\
    \ sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44\
    \ = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 =\
    \ 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n\
    \        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n \
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n  \
    \      long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n   \
    \     long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n    \
    \    long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n     \
    \   long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n      \
    \  long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n       \
    \ long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long\
    \ sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78\
    \ = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 =\
    \ 0;\n        long sum82 = 0;", "        long[] a = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        int count = 0;\n        for (int i = 0;\
    \ i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n             \
    \   for (int k = j + 1; k < n; k++) {\n                    if (a[i] < a[j] &&\
    \ a[j] < a[k]) {\n                        count++;\n                    }\n  \
    \              }\n            }\n        }\n        return count;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long ans = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        ans += 1;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ ans;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n      \
    \  Arrays.sort(a);\n        long triples = 0;\n        long sum = 0;\n       \
    \ for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n   \
    \             for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        sum += a[i];\n                     \
    \   sum += a[j];\n                        sum += a[k];\n                     \
    \   triples += 1;\n                    }\n                }\n            }\n \
    \       }\n        return triples;", "        long a[] = new long[n];\n      \
    \  Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n   \
    \     long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        ", "        long a[] = new long[n];\n    \
    \    Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long sum = 0;\n    \
    \    for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n\
    \                for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        sum += 1;\n                    }\n \
    \               }\n            }\n        }\n        return sum;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long result = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        result =\
    \ Math.max(result, i + j + k);\n                    }\n                }\n   \
    \         }\n        }\n        return result;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long triple = 0;\n\
    \        long sum = 0;\n        for(int i = 1; i < n; i++) {\n            for(int\
    \ j = i; j < n; j++) {\n                for(int k = j; k < n; k++) {\n       \
    \             if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        sum += a[i] + a[j] + a[k];\n                    }\n \
    \               }\n            }\n        }\n        return sum;", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long sum = 0;\n        long triple = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i; j < n; j++) {\n                for(int k\
    \ = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n    \
    \                    triple++;\n                    }\n                }\n   \
    \         }\n        }\n        return triple;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        ans++;\n                    }\n\
    \                }\n            }\n        }\n        return ans;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n    \
    \    long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum +=\
    \ a[i];\n        }\n        return sum % 3 == 0 ? sum : 0;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 0);\n        Arrays.sort(a);\n      \
    \  long triples = 0;\n        long triple = 0;\n        long triple2 = 0;\n  \
    \      long triple3 = 0;\n        long triple4 = 0;\n        long triple5 = 0;\n\
    \        long triple6 = 0;\n        long triple7 = 0;\n        long triple8 =\
    \ 0;\n        long triple9 = 0;\n        long triple10 = 0;\n        long triple11\
    \ = 0;\n        long triple12 = 0;\n        long triple13 = 0;\n        long triple14\
    \ = 0;\n        long triple15 = 0;\n        long triple16 = 0;\n        long triple17\
    \ = 0;\n        long triple18 = 0;\n        long triple19 = 0;\n        long triple20\
    \ = 0;\n        long triple21 = 0;\n        long triple22 = 0;\n        long triple23\
    \ = 0;\n        long triple24 = 0;\n        long triple25 = 0;\n        long triple26\
    \ = 0;\n        long triple27 = 0;\n        long triple28 = 0;\n        long triple29\
    \ = 0;\n        long triple30 = 0;\n        long triple31 = 0;\n        long triple32\
    \ = 0;\n        long triple33 = 0;\n        long triple34 = 0;\n        long triple35\
    \ = 0;\n        long triple36 = 0;\n        long triple37 = 0;\n        long triple38\
    \ = 0;\n        long triple39 = 0;\n        long triple40 = 0;\n        long triple41\
    \ = 0;\n        long triple42 = 0;\n        long triple43 = 0;\n        long triple44\
    \ = 0;\n        long triple45 = 0;\n        long triple46 = 0;\n        long triple47\
    \ = 0;\n        long triple48 = 0;\n        long triple49 = 0;\n        long triple50\
    \ = 0;\n        long triple51 = 0;\n        long triple52 = 0;\n        long triple53\
    \ = 0;\n        long triple54 = 0;\n        long triple55 = 0;\n        long triple56\
    \ = 0;\n        long triple57 = 0;\n        long triple58 = 0;\n        long triple59\
    \ = 0;\n        long triple60 = 0;\n        long triple61 = 0;\n        long triple62\
    \ = 0;\n        long triple63 = 0;\n        long triple64 = 0;\n        long triple65\
    \ = 0;\n        long triple66 = 0;\n        long triple67 = 0;\n        long triple68\
    \ = 0;\n        long triple69 = 0;\n        long triple70 = 0;\n        long triple71\
    \ = 0;\n        long triple72 = 0;\n        long triple73 = 0;\n        long triple74\
    \ = 0;\n        long triple75 = 0;\n        long triple76 = 0;\n        long triple77\
    \ = 0;\n        long triple78 = 0;\n        long triple79 = 0;\n        long triple80\
    \ = 0;\n        long triple81 = 0;\n        long triple82 = 0;", "        long[]\
    \ a = new long[n];\n        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n   \
    \     long sum = 0;\n        long max = 0;\n        long triple = 0;\n       \
    \ for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n   \
    \             for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        triple++;\n                        sum\
    \ += a[i];\n                        max = Math.max(max, a[i]);\n             \
    \       }\n                }\n            }\n        }\n        return sum;",
  "        long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        for (int i = 0; i < a.length; i++) {\n            for (int j = i + 1;\
    \ j < a.length; j++) {\n                for (int k = j + 1; k < a.length; k++)\
    \ {\n                    if (a[i] == a[j] && a[j] == a[k]) {\n               \
    \         triple++;\n                    }\n                }\n            }\n\
    \            if (triple > triples) {\n                triples = triple;\n    \
    \            sum = i;\n            }\n            triple = 0;\n        }\n   \
    \     return sum;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long max = 0;\n        long triple = 0;\n  \
    \      for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++)\
    \ {\n                for (int k = j + 1; k < n; k++) {\n                    triple\
    \ = a[i] + a[j] + a[k];\n                    if (triple > max) {\n           \
    \             max = triple;\n                    }\n                }\n      \
    \      }\n        }\n        return max;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1l);\n        Arrays.sort(a);\n        long triples =\
    \ 0;\n        long triple = 0;\n        long triple2 = 0;\n        long triple3\
    \ = 0;\n        long triple4 = 0;\n        long triple5 = 0;\n        long triple6\
    \ = 0;\n        long triple7 = 0;\n        long triple8 = 0;\n        long triple9\
    \ = 0;\n        long triple10 = 0;\n        long triple11 = 0;\n        long triple12\
    \ = 0;\n        long triple13 = 0;\n        long triple14 = 0;\n        long triple15\
    \ = 0;\n        long triple16 = 0;\n        long triple17 = 0;\n        long triple18\
    \ = 0;\n        long triple19 = 0;\n        long triple20 = 0;\n        long triple21\
    \ = 0;\n        long triple22 = 0;\n        long triple23 = 0;\n        long triple24\
    \ = 0;\n        long triple25 = 0;\n        long triple26 = 0;\n        long triple27\
    \ = 0;\n        long triple28 = 0;\n        long triple29 = 0;\n        long triple30\
    \ = 0;\n        long triple31 = 0;\n        long triple32 = 0;\n        long triple33\
    \ = 0;\n        long triple34 = 0;\n        long triple35 = 0;\n        long triple36\
    \ = 0;\n        long triple37 = 0;\n        long triple38 = 0;\n        long triple39\
    \ = 0;\n        long triple40 = 0;\n        long triple41 = 0;\n        long triple42\
    \ = 0;\n        long triple43 = 0;\n        long triple44 = 0;\n        long triple45\
    \ = 0;\n        long triple46 = 0;\n        long triple47 = 0;\n        long triple48\
    \ = 0;\n        long triple49 = 0;\n        long triple50 = 0;\n        long triple51\
    \ = 0;\n        long triple52 = 0;\n        long triple53 = 0;\n        long triple54\
    \ = 0;\n        long triple55 = 0;\n        long triple56 = 0;\n        long triple57\
    \ = 0;\n        long triple58 = 0;\n        long triple59 = 0;\n        long triple60\
    \ = 0;\n        long triple61 = 0;\n        long triple62 = 0;\n        long triple63\
    \ = 0;\n        long triple64 = 0;\n        long triple65 = 0;\n        long triple66\
    \ = 0;\n        long triple67 = 0;\n        long triple68 = 0;\n        long triple69\
    \ = 0;\n        long triple70 = 0;\n        long triple71 = 0;\n        long triple72\
    \ = 0;\n        long triple73 = 0;\n        long triple74 = 0;\n        long triple75\
    \ = 0;\n        long triple76 = 0;\n        long triple77 = 0;\n        long triple78\
    \ = 0;\n        long triple79 = 0;\n        long triple80 = 0;\n        long triple81\
    \ = 0;\n        long triple82", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triples = 0;\n        long sum =\
    \ 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j <\
    \ n; j++) {\n                for(int k = j + 1; k < n; k++) {\n              \
    \      sum += a[i];\n                    sum += a[j];\n                    sum\
    \ += a[k];\n                    if(sum % 3 == 0) {\n                        triples\
    \ += 1;\n                    }\n                }\n            }\n        }\n\
    \        return triples;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long max = 0;\n        long sum = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            sum += a[i];\n            if(sum\
    \ % 3 == 0) {\n                max = Math.max(max, sum);\n            }\n    \
    \    }\n        return max;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triples = 0;\n        long sum =\
    \ 0;\n        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n;\
    \ j++) {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        sum += a[i];\n              \
    \          sum += a[j];\n                        sum += a[k];\n              \
    \          triples += 1;\n                    }\n                }\n         \
    \   }\n        }\n        return triples;", "        long[] a = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long result = 0;\n\
    \        for (int i = 0; i < a.length; i++) {\n            for (int j = i + 1;\
    \ j < a.length; j++) {\n                for (int k = j + 1; k < a.length; k++)\
    \ {\n                    if (a[i] < a[j] && a[i] < a[k]) {\n                 \
    \       result = Math.max(result, (a[i] + a[j] + a[k]) % 3);\n               \
    \     }\n                }\n            }\n        }\n        return result;",
  "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long triple = 0;\n        for(int i = 1; i < n;\
    \ i++) {\n            for(int j = i; j < n; j++) {\n                for(int k\
    \ = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n    \
    \                    triple++;\n                    }\n                }\n   \
    \         }\n        }\n        return triple;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++)\
    \ {\n                for(int k = j + 1; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == (3 * i) + 3 * j + 3 * k) {\n                        ans +=\
    \ 1;\n                    }\n                }\n            }\n        }\n   \
    \     return ans;", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n\
    \        Arrays.sort(a);\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        long triple = 0;\n        long triples = 0;\n        long triple = 0;\n\
    \        long triples = 0;\n        long triple = 0;\n        long triples = 0;\n\
    \        ", "        long a[] = new long[n];\n        Arrays.fill(a, 1);\n   \
    \     Arrays.sort(a);\n        long ans = 0;\n        long sum = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        for(int i = 1; i < n; i++) {\n  \
    \          sum += a[i];\n            sum2 += a[i] * a[i];\n            sum3 +=\
    \ a[i] * a[i] * a[i];\n            ans = Math.max(ans, sum);\n            ans\
    \ = Math.max(ans, sum2);\n            ans = Math.max(ans, sum3);\n        }\n\
    \        return ans;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long sum = 0;\n        for(int i = 0;\
    \ i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n              \
    \  for(int k = j + 1; k < n; k++) {\n                    if(a[i] + a[j] + a[k]\
    \ == 3) {\n                        sum += 1;\n                    }\n        \
    \        }\n            }\n        }\n        return sum;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long triple = 0;\n        long triples = 0;\n        long sum = 0;\n      \
    \  for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n  \
    \              for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        triple++;\n                        sum\
    \ += a[i];\n                        sum += a[j];\n                        sum\
    \ += a[k];\n                    }\n                }\n            }\n        }\n\
    \        System.out.println(sum);\n        return triple;", "        long[] a\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long sum = 0;\n        long max = 0;\n        long maxSum = 0;\n        for(int\
    \ i = 1; i < n; i++) {\n            if(a[i] > max) {\n                max = a[i];\n\
    \                maxSum = a[i] + a[i] + a[i];\n            }\n            if(a[i]\
    \ > sum) {\n                sum = a[i];\n            }\n        }\n        System.out.println(maxSum);\n\
    \        return maxSum;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long sum = 0;\n        for(int i = 1;\
    \ i < n; i++) {\n            for(int j = i; j < n; j++) {\n                for(int\
    \ k = j; k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n  \
    \                      sum += 1;\n                    }\n                }\n \
    \           }\n        }\n        return sum;", "        long a[] = new long[n];\n\
    \        Arrays.fill(a, 1);\n        Arrays.sort(a);\n        long ans = 0;\n\
    \        for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++)\
    \ {\n                for(int k = j; k < n; k++) {\n                    if(a[i]\
    \ + a[j] + a[k] == 3) {\n                        ans += 1;\n                 \
    \   }\n                }\n            }\n        }\n        return ans;", "  \
    \      long a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        long max = 0;\n        long triple = 0;\n    \
    \    for(int i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n\
    \                for(int k = j; k < n; k++) {\n                    if(a[i] + a[j]\
    \ + a[k] == 3) {\n                        triple++;\n                    }\n \
    \               }\n            }\n            sum += triple;\n            triple\
    \ = 0;\n        }\n        max = sum;\n        return max;", "        long a[]\
    \ = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n      \
    \  long max = 0;\n        long triple = 0;\n        long triples = 0;\n      \
    \  for(int i = 0; i < n; i++) {\n            for(int j = i+1; j < n; j++) {\n\
    \                for(int k = j+1; k < n; k++) {\n                    if(a[i] +\
    \ a[j] + a[k] == 3) {\n                        triple++;\n                   \
    \     if(triple > max) {\n                            max = triple;\n        \
    \                }\n                        triples = 0;\n                   \
    \ }\n                }\n            }\n        }\n        return max;", "    \
    \    long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            long\
    \ j = a[i];\n            while (j > 0) {\n                sum += j;\n        \
    \        j -= 1;\n            }\n        }\n        return sum;", "        long\
    \ a[] = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n  \
    \      long sum = 0;\n        long max = 0;\n        for(int i = 1; i < n; i++)\
    \ {\n            for(int j = i; j < n; j++) {\n                for(int k = j;\
    \ k < n; k++) {\n                    if(a[i] + a[j] + a[k] == 3) {\n         \
    \               sum += 1;\n                        if(sum > max) {\n         \
    \                   max = sum;\n                        }\n                  \
    \  }\n                }\n            }\n        }\n        return max;", "   \
    \     long[] a = new long[n];\n        Arrays.fill(a, 1);\n        Arrays.sort(a);\n\
    \        long triple = 0;\n        long triples = 0;\n        long sum = 0;\n\
    \        long sum2 = 0;\n        for(int i = 0; i < n; i++) {\n            for(int\
    \ j = i + 1; j < n; j++) {\n                for(int k = j + 1; k < n; k++) {\n\
    \                    if(a[i] + a[j] + a[k] == 3) {\n                        triple++;\n\
    \                        sum += a[i] + a[j] + a[k];\n                        sum2\
    \ += a[i] * a[j] * a[k];\n                    }\n                }\n         \
    \   }\n        }\n        System.out.println(sum);\n        System.out.println(sum2);\n\
    \        return triple;", "        long a[] = new long[n];\n        Arrays.fill(a,\
    \ 1);\n        Arrays.sort(a);\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        long triple = 0;\n        long triples = 0;\n        long triple\
    \ = 0;\n        long triples = 0;\n        long triple = 0;\n        long triples\
    \ = 0;\n        "]
stop_tokens:
- "\n    }\n"

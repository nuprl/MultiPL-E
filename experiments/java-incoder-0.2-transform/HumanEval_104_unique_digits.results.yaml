language: java
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for (long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp68wut3iy.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (Long i : x) {\n            sum += i;\n           \
    \ if (sum % 10 != lastDigit) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3x0gmhfq.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        Collections.sort(result);\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7l4p7daf.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long max = (long)Math.pow(10,\
    \ x.length() - 1);\n        long min = sum / max;\n        long sum2 = sum % max;\n\
    \        for (Long i : x) {\n            long d = sum2 % max;\n            if\
    \ (d != 0) {\n                result.add(i);\n                sum2 /= max;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv2irlp16.java:23: error: cannot find symbol\n        long max =\
    \ (long)Math.pow(10, x.length() - 1);\n                                      \
    \ ^\n  symbol:   method length()\n  location: variable x of type ArrayList<Long>\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp > 0) {\n           \
    \     temp = temp / 10;\n                if(temp % 2 == 0) {\n               \
    \     result.add(i);\n                    break;\n                }\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0qs0yft.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long remainder\
    \ = sum % 10;\n        if (remainder == 0) {\n            for (Long i : x) {\n\
    \                if (i % 10 == 0) {\n                    result.add(i);\n    \
    \            }\n            }\n        } else {\n            for (Long i : x)\
    \ {\n                if (i % 10 != 0) {\n                    result.add(i);\n\
    \                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6hg_r62o.java:41)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long maxSum =\
    \ sum;\n        long maxSumIndex = 0;\n        for (long i : x) {\n          \
    \  sum += i;\n            if (sum > maxSum) {\n                maxSum = sum;\n\
    \                maxSumIndex = i;\n            }\n        }\n        for (long\
    \ i : x) {\n            if (i == maxSumIndex) {\n                continue;\n \
    \           }\n            if (sum % 2 == 0) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgz8gnk8y.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        HashSet<Long> set = new\
    \ HashSet<>();\n        for (Long i : x) {\n            if (set.contains(i)) {\n\
    \                continue;\n            }\n            set.add(i);\n         \
    \   result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdn5k7fkm.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(Long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dpk_mmh.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (long i : x) {\n  \
    \          long digit = i % 10;\n            if (digit == lastDigit) {\n     \
    \           lastDigitSum += i;\n            } else {\n                result.add(lastDigitSum);\n\
    \                lastDigitSum = i;\n                lastDigit = digit;\n     \
    \       }\n        }\n        result.add(lastDigitSum);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc9j_edbe.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long maxSum =\
    \ sum;\n        for (long i : x) {\n            long digit = i % 10;\n       \
    \     if (digit % 2 == 0) {\n                maxSum -= i;\n            } else\
    \ {\n                result.add(i);\n            }\n        }\n        if (maxSum\
    \ < 0) {\n            Collections.sort(result);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplogz30tu.java:38)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastSum = 0;\n        for (Long i : x) {\n       \
    \     sum += i;\n            if (sum % 10 != lastDigit) {\n                result.add(sum);\n\
    \                lastDigit = sum % 10;\n                lastSum = sum;\n     \
    \       }\n        }\n        if (lastDigit != 0) {\n            result.add(lastSum);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhewdbpk.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastSum = 0;\n        for (long i : x) {\n       \
    \     sum += i;\n            if (sum % 10 != lastDigit) {\n                result.add((sum\
    \ - lastSum) % 10);\n                lastSum = sum;\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph736iwj4.java:35)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i ->\
    \ i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv09shru.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   long lastDigit = 0;\n        long lastDigit2 = 0;\n        long lastDigit3\
    \ = 0;\n        long lastDigit4 = 0;\n        long lastDigit5 = 0;\n        long\
    \ lastDigit6 = 0;\n        long lastDigit7 = 0;\n        long lastDigit8 = 0;\n\
    \        long lastDigit9 = 0;\n        long lastDigit10 = 0;\n        long lastDigit11\
    \ = 0;\n        long lastDigit12 = 0;\n        long lastDigit13 = 0;\n       \
    \ long lastDigit14 = 0;\n        long lastDigit15 = 0;\n        long lastDigit16\
    \ = 0;\n        long lastDigit17 = 0;\n        long lastDigit18 = 0;\n       \
    \ long lastDigit19 = 0;\n        long lastDigit20 = 0;\n        long lastDigit21\
    \ = 0;\n        long lastDigit22 = 0;\n        long lastDigit23 = 0;\n       \
    \ long lastDigit24 = 0;\n        long lastDigit25 = 0;\n        long lastDigit26\
    \ = 0;\n        long lastDigit27 = 0;\n        long lastDigit28 = 0;\n       \
    \ long lastDigit29 = 0;\n        long lastDigit30 = 0;\n        long lastDigit31\
    \ = 0;\n        long lastDigit32 = 0;\n        long lastDigit33 = 0;\n       \
    \ long lastDigit34 = 0;\n        long lastDigit35 = 0;\n        long lastDigit36\
    \ = 0;\n        long lastDigit37 = 0;\n        long lastDigit38 = 0;\n       \
    \ long lastDigit39 = 0;\n        long lastDigit40 = 0;\n        long lastDigit41\
    \ = 0;\n        long lastDigit42 = 0;\n        long lastDigit43 = 0;\n       \
    \ long lastDigit44 = 0;\n        long lastDigit45 = 0;\n        long lastDigit46\
    \ = 0;\n        long lastDigit47 = 0;\n        long lastDigit48 = 0;\n       \
    \ long lastDigit49 = 0;\n        long lastDigit50 = 0;\n        long lastDigit51\
    \ = 0;\n        long lastDigit52 = 0;\n        long lastDigit53 = 0;\n       \
    \ long lastDigit54 = 0;\n        long lastDigit55 = 0;\n        long lastDigit56\
    \ = 0;\n        long lastDigit57 = 0;\n        long lastDigit58 = 0;\n       \
    \ long lastDigit59 = 0;\n        long lastDigit60 = 0;\n        long lastDigit61\
    \ = 0;\n        long lastDigit62 = 0;\n        long lastDigit63 = 0;\n       \
    \ long lastDigit64 = 0;\n        long lastDigit65 = 0;\n        long lastDigit66\
    \ = 0;\n        long lastDigit67 = 0;\n        long lastDigit68 = 0;\n       \
    \ long lastDigit69 = 0;\n        long lastDigit70 = 0;\n        long lastDigit71\
    \ = 0;\n        long lastDigit72 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp96jf2yc3.java:92: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                result.add(i);\n\
    \            } else {\n                if (lastDigit % 10 != 0) {\n          \
    \          result.add(lastDigit);\n                }\n                lastDigit\
    \ = i;\n            }\n        }\n        if (lastDigit % 10 != 0) {\n       \
    \     result.add(lastDigit);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbl__qrc.java:36)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (long i : x) {\n  \
    \          sum += i;\n            long digit = sum % 10;\n            if (digit\
    \ != lastDigit) {\n                result.add((lastDigitSum + lastDigit));\n \
    \               lastDigitSum = lastDigit;\n                lastDigit = digit;\n\
    \            } else {\n                lastDigitSum += digit;\n            }\n\
    \        }\n        result.add((lastDigitSum + lastDigit));\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppv947fu4.java:40)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp = 0;\n  \
    \      for(Long i : x) {\n            temp = i;\n            while(temp > 0) {\n\
    \                temp = temp / 10;\n                if(temp % 2 == 0) {\n    \
    \                result.add(temp);\n                }\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptkxk6d55.java:32)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long, Long>\
    \ map = new HashMap<Long, Long>();\n        for (Long i : x) {\n            Long\
    \ digit = i % 10;\n            if (map.containsKey(digit)) {\n               \
    \ Long value = map.get(digit);\n                if (value.equals(i)) {\n     \
    \               result.add(value);\n                } else {\n               \
    \     result.add(digit);\n                }\n            } else {\n          \
    \      result.add(i);\n            }\n            map.put(i, digit);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp158ynj1r.java:37)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for(Long i : x) {\n            temp = i;\n            while(temp != 0) {\n\
    \                if(temp % 2 == 0) {\n                    result.add(i);\n   \
    \                 break;\n                }\n                temp/=2;\n      \
    \      }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdu55ufdg.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpay4wnrd3.java:27)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for(long i : x) {\n            sum += i;\n        }\n        for(int i =\
    \ 0; i < x.size(); i++) {\n            long j = sum - x.get(i);\n            if(j\
    \ % 2 == 0) {\n                result.add(x.get(i));\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvw59_8z.java:32)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        long\
    \ sum = 0;\n        for (long i : x) {\n            temp = i;\n            while\
    \ (temp != 0) {\n                sum += temp % 10;\n                temp /= 10;\n\
    \            }\n            if (sum % 2 == 0) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0lck4zi7.java:34)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            int digit = i % 10;\n            if (set.contains(digit))\
    \ {\n                continue;\n            }\n            set.add(digit);\n \
    \           result.add(i);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9pwgwrvg.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n/tmp/tmp9pwgwrvg.java:25: error: incompatible types: int cannot be converted\
    \ to Long\n            set.add(digit);\n                    ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for(long i = 0; i < x.size(); i++) {\n            temp = x.get(i);\n      \
    \      while(temp != 0) {\n                if(temp % 2 == 0) {\n             \
    \       result.add(temp);\n                    break;\n                }\n   \
    \             temp = temp / 10;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9cyhjs8b.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            temp = x.get(i);\n                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for (Long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuvwqwr0.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        Collections.sort(result);\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ke7vwde.java:28)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i ->\
    \ i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv09shru.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 != 0) {\n   \
    \                 result.add(lastDigit);\n                    lastDigit = i;\n\
    \                }\n            }\n        }\n        if (lastDigit != Long.MIN_VALUE)\
    \ {\n            result.add(lastDigit);\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsju8t6hd.java:36)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = 0;\n \
    \       for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 != 0) {\n   \
    \                 result.add(lastDigit);\n                }\n                lastDigit\
    \ = i;\n            }\n        }\n        if (lastDigit % 10 != 0) {\n       \
    \     result.add(lastDigit);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo84pmlhi.java:36)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for(long i : x) {\n\
    \            if(i%2 == 0) {\n                result.add(i);\n            }\n \
    \       }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5lfhhpb.java:28)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i = 0; i < x.size(); i++) {\n            temp = x.get(i);\n            while(temp\
    \ != 0) {\n                if(temp % 2 == 0) {\n                    result.add(temp);\n\
    \                    break;\n                }\n                temp = temp /\
    \ 10;\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiatjkthb.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            temp = x.get(i);\n                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for (long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0x6nyhs.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for (long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp68wut3iy.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = 0;\n \
    \       for(long i : x) {\n            if(i%10 == 0) lastDigit = i;\n        \
    \    if(i%10 != 0 && lastDigit % 10 != 0) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1lvhukx.java:29)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   long lastDigit = 0;\n        for(long i : x) {\n            digit = i % 10;\n\
    \            if(digit != 0) {\n                lastDigit = digit;\n          \
    \  }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        for(long i : result) {\n            if(i % 2 == 0) {\n              \
    \  result.add(i);\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.util.ConcurrentModificationException\n\
    \tat java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)\n\
    \tat java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)\n\tat Problem.uniqueDigits(tmpu_7_u1d5.java:29)\n\
    \tat Problem.main(tmpu_7_u1d5.java:37)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            long digit = i % 10;\n            if\
    \ (digit != 0 && digit != lastDigit) {\n                result.add(i);\n     \
    \           lastDigit = digit;\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4llxo1sk.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for(long i : x){\n            temp = i;\n            while(temp > 0){\n   \
    \             temp = temp / 10;\n                if(temp % 2 == 0){\n        \
    \            result.add(i);\n                    break;\n                }\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5p6d5nd.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long max = (long)Math.pow(10,\
    \ x.length() - 1);\n        long min = sum / max;\n        long lastDigit = sum\
    \ % max;\n        long lastDigit2 = sum % max;\n        long lastDigit3 = sum\
    \ % max;\n        long lastDigit4 = sum % max;\n        long lastDigit5 = sum\
    \ % max;\n        long lastDigit6 = sum % max;\n        long lastDigit7 = sum\
    \ % max;\n        long lastDigit8 = sum % max;\n        long lastDigit9 = sum\
    \ % max;\n        long lastDigit10 = sum % max;\n        long lastDigit11 = sum\
    \ % max;\n        long lastDigit12 = sum % max;\n        long lastDigit13 = sum\
    \ % max;\n        long lastDigit14 = sum % max;\n        long lastDigit15 = sum\
    \ % max;\n        long lastDigit16 = sum % max;\n        long lastDigit17 = sum\
    \ % max;\n        long lastDigit18 = sum % max;\n        long lastDigit19 = sum\
    \ % max;\n        long lastDigit20 = sum % max;\n        long lastDigit21 = sum\
    \ % max;\n        long lastDigit22 = sum % max;\n        long lastDigit23 = sum\
    \ % max;\n        long lastDigit24 = sum % max;\n        long lastDigit25 = sum\
    \ % max;\n        long lastDigit26 = sum % max;\n        long lastDigit27 = sum\
    \ % max;\n        long lastDigit28 = sum % max;\n        long lastDigit29 = sum\
    \ % max;\n        long lastDigit30 = sum % max;\n        long lastDigit31 = sum\
    \ % max;\n        long lastDigit32 = sum % max;\n        long lastDigit33 = sum\
    \ % max;\n        long lastDigit34 = sum % max;\n        long lastDigit35 = sum\
    \ % max;\n        long lastDigit36 = sum % max;\n        long lastDigit37 = sum\
    \ % max;\n        long lastDigit38 = sum % max;\n        long lastDigit39 = sum\
    \ % max;\n        long lastDigit40 = sum % max;\n        long lastDigit41 = sum\
    \ % max;\n        long lastDigit42 = sum % max;\n        long lastDigit43 = sum\
    \ % max;\n        long lastDigit44\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0dzgyw7x.java:68: error: ';' expected\n        long lastDigit44\n\
    \                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 == 0) {\n   \
    \                 result.add(lastDigit);\n                    lastDigit = i;\n\
    \                } else {\n                    result.add(lastDigit);\n      \
    \              lastDigit = i;\n                }\n            }\n        }\n \
    \       if (lastDigit % 10 != 0) {\n            result.add(lastDigit);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23efqzb8.java:39)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for (long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0x6nyhs.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (long i : x) {\n  \
    \          long digit = i % 10;\n            if (digit != lastDigit) {\n     \
    \           result.add((lastDigitSum + lastDigit) * 10 + digit);\n           \
    \     lastDigitSum = 0;\n                lastDigit = digit;\n            } else\
    \ {\n                lastDigitSum += i;\n            }\n        }\n        if\
    \ (lastDigitSum > 0) {\n            result.add((lastDigitSum + lastDigit) * 10\
    \ + lastDigit);\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptso32cv0.java:41)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x){\n    \
    \        if(i%10==0){\n                result.add(i);\n            }\n       \
    \ }\n        Collections.sort(result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2wnmim5.java:28)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i ->\
    \ i % 2 == 0).sorted().forEach(i -> result.add(i));\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadh5amk5.java:23)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            sum += i;\n           \
    \ if (sum % 10 != lastDigit) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5pbpva2k.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitCount = 0;\n        for (Long i : x) {\n\
    \            if (i % 10 == lastDigit) {\n                lastDigitCount++;\n \
    \           } else {\n                result.add(i - lastDigit * lastDigitCount);\n\
    \                lastDigitCount = 1;\n                lastDigit = i % 10;\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptlsxfg74.java:37)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 2 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit != Long.MIN_VALUE)\
    \ {\n                    result.add(lastDigit);\n                }\n         \
    \       lastDigit = i;\n            }\n        }\n        if (lastDigit != Long.MIN_VALUE)\
    \ {\n            result.add(lastDigit);\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1cn6urk8.java:36)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        HashMap<Long, Long>\
    \ map = new HashMap<Long, Long>();\n        for (Long i : x) {\n            if\
    \ (map.containsKey(i)) {\n                Long value = map.get(i);\n         \
    \       map.put(i, value + 1);\n            } else {\n                map.put(i,\
    \ 1l);\n            }\n        }\n        for (Long i : map.keySet()) {\n    \
    \        if (map.get(i) % 2 == 0) {\n                result.add(i);\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqh_yc_h0.java:36)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp > 0) {\n    \
    \            temp = temp / 10;\n                if (temp % 2 == 0) {\n       \
    \             result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppfcjxlp2.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long temp;\n \
    \       long lastDigit = sum / 10;\n        long lastDigitSum = sum % 10;\n  \
    \      for (long i : x) {\n            temp = i;\n            if (temp % 2 ==\
    \ 0) {\n                while (temp % 2 == 0) {\n                    temp /= 10;\n\
    \                }\n                if (temp == lastDigit) {\n               \
    \     while (temp % 2 == 0) {\n                        temp /= 10;\n         \
    \           }\n                    if (temp == lastDigitSum) {\n             \
    \           result.add(i);\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpts4bftq_.java:45)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbz098xqy.java:32)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        Collections.sort(result);\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ke7vwde.java:28)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (Long i : x) {\n  \
    \          long digit = i % 10;\n            if (digit != lastDigit) {\n     \
    \           result.add((lastDigitSum + lastDigit) * 10);\n                lastDigitSum\
    \ = 0;\n                lastDigit = digit;\n            } else {\n           \
    \     lastDigitSum += i;\n            }\n        }\n        result.add((lastDigitSum\
    \ + lastDigit) * 10);\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpghsy4dau.java:39)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (long i : x) {\n  \
    \          sum += i;\n            if (sum % 10 != lastDigit) {\n             \
    \   result.add((lastDigitSum + lastDigit));\n                lastDigitSum = sum;\n\
    \                lastDigit = sum % 10;\n            }\n        }\n        if (lastDigitSum\
    \ != sum) {\n            result.add((lastDigitSum + lastDigit));\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo85gqhag.java:39)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpay4wnrd3.java:27)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        Collections.sort(result);\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ke7vwde.java:28)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set =\
    \ new HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03okgjax.java:30)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (Long i : x) {\n            sum += i;\n        }\n        long max =\
    \ (long)Math.pow(10, x.length() - 1);\n        long min = sum / max;\n       \
    \ long sum2 = sum % max;\n        for (Long i : x) {\n            long d = i %\
    \ max;\n            if (d > sum2) {\n                result.add(i);\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0pcazc_4.java:23: error: cannot find symbol\n        long max =\
    \ (long)Math.pow(10, x.length() - 1);\n                                      \
    \ ^\n  symbol:   method length()\n  location: variable x of type ArrayList<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        \n        // sort x\n\
    \        Collections.sort(x);\n        \n        // find all elements that hasn't\
    \ any even digit\n        for(Long i : x) {\n            if(i%2 == 0) {\n    \
    \            result.add(i);\n            }\n        }\n        \n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpftv7mi6g.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (long i : x) {\n  \
    \          sum += i;\n            long digit = sum % 10;\n            if (digit\
    \ != lastDigit) {\n                result.add((lastDigitSum + lastDigit));\n \
    \               lastDigitSum = lastDigit;\n                lastDigit = digit;\n\
    \            }\n        }\n        result.add((lastDigitSum + lastDigit));\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz16xa_7n.java:38)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long> map\
    \ = new HashMap<>();\n        for (Long i : x) {\n            Long val = map.get(i);\n\
    \            if (val == null) {\n                map.put(i, i);\n            }\
    \ else {\n                map.put(i, val + 1);\n            }\n        }\n   \
    \     for (Long i : map.keySet()) {\n            if (map.get(i) % 2 == 0) {\n\
    \                result.add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprs2w9y6m.java:36)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      if(temp % 2 == 0) {\n                    result.add(i);\n             \
    \       break;\n                }\n                temp/=10;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3bm1niq_.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        if (lastDigit == 0) {\n            for (long i : x) {\n\
    \                if (i % 10 == 0) {\n                    result.add(i);\n    \
    \            }\n            }\n        } else {\n            for (long i : x)\
    \ {\n                if (i % 10 != 0) {\n                    result.add(i);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdlv5m1e.java:40)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            sum += i;\n           \
    \ if (sum % 10 != lastDigit) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp81yi736k.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         String s = Long.toString(i);\n            for(char c : s.toCharArray())\
    \ {\n                if(!Character.isDigit(c)) {\n                    result.add(i);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return result;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm_91bgh3.java:31)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        if (lastDigit == 0) {\n            sum -= lastDigit;\n\
    \        }\n        long lastDigitSum = sum;\n        for (long i : x) {\n   \
    \         sum += i;\n            if (sum % 10 == 0) {\n                sum -=\
    \ lastDigit;\n                if (sum == lastDigitSum) {\n                   \
    \ result.add(i);\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9hwes0zc.java:40)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for(long i : x) {\n            temp = i;\n            while(temp != 0) {\n\
    \                temp = temp / 10;\n                if(temp % 2 == 0) {\n    \
    \                result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmbcpwez8.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for (long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0x6nyhs.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbz098xqy.java:32)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 != 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8pti_yyx.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            String s = i.toString();\n\
    \            int len = s.length();\n            if (len % 2 == 0) {\n        \
    \        set.add(Long.valueOf(s));\n            }\n        }\n        for (Long\
    \ i : set) {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmojnzawx.java:35)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for (long i : x) {\n            if (i % 2 == 0) {\n                temp = i;\n\
    \            } else {\n                while (temp % 10 != 0) {\n            \
    \        temp = temp / 10;\n                }\n                if (temp % 2 ==\
    \ 0) {\n                    result.add(temp);\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpqa__16.java:35)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   long sum = 0;\n        for (long i : x) {\n            sum += i;\n       \
    \     if (sum % 2 == 0) {\n                digit = sum / 2;\n            } else\
    \ {\n                digit = sum / 2;\n            }\n            if (result.contains(digit))\
    \ {\n                continue;\n            }\n            result.add(digit);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6h1k87_s.java:36)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long digit = 0;\n \
    \       long lastDigit = 0;\n        long lastDigit2 = 0;\n        long lastDigit3\
    \ = 0;\n        long lastDigit4 = 0;\n        long lastDigit5 = 0;\n        long\
    \ lastDigit6 = 0;\n        long lastDigit7 = 0;\n        long lastDigit8 = 0;\n\
    \        long lastDigit9 = 0;\n        long lastDigit10 = 0;\n        long lastDigit11\
    \ = 0;\n        long lastDigit12 = 0;\n        long lastDigit13 = 0;\n       \
    \ long lastDigit14 = 0;\n        long lastDigit15 = 0;\n        long lastDigit16\
    \ = 0;\n        long lastDigit17 = 0;\n        long lastDigit18 = 0;\n       \
    \ long lastDigit19 = 0;\n        long lastDigit20 = 0;\n        long lastDigit21\
    \ = 0;\n        long lastDigit22 = 0;\n        long lastDigit23 = 0;\n       \
    \ long lastDigit24 = 0;\n        long lastDigit25 = 0;\n        long lastDigit26\
    \ = 0;\n        long lastDigit27 = 0;\n        long lastDigit28 = 0;\n       \
    \ long lastDigit29 = 0;\n        long lastDigit30 = 0;\n        long lastDigit31\
    \ = 0;\n        long lastDigit32 = 0;\n        long lastDigit33 = 0;\n       \
    \ long lastDigit34 = 0;\n        long lastDigit35 = 0;\n        long lastDigit36\
    \ = 0;\n        long lastDigit37 = 0;\n        long lastDigit38 = 0;\n       \
    \ long lastDigit39 = 0;\n        long lastDigit40 = 0;\n        long lastDigit41\
    \ = 0;\n        long lastDigit42 = 0;\n        long lastDigit43 = 0;\n       \
    \ long lastDigit44 = 0;\n        long lastDigit45 = 0;\n        long lastDigit46\
    \ = 0;\n        long lastDigit47 = 0;\n        long lastDigit48 = 0;\n       \
    \ long lastDigit49 = 0;\n        long lastDigit50 = 0;\n        long lastDigit51\
    \ = 0;\n        long lastDigit52 = 0;\n        long lastDigit53 = 0;\n       \
    \ long lastDigit54 = 0;\n        long lastDigit55 = 0;\n        long lastDigit56\
    \ = 0;\n        long lastDigit57 = 0;\n        long lastDigit58 = 0;\n       \
    \ long lastDigit59 = 0;\n        long lastDigit60 = 0;\n        long lastDigit61\
    \ = 0;\n        long lastDigit62 = 0;\n        long lastDigit63 = 0;\n       \
    \ long lastDigit64 = 0;\n        long lastDigit65 = 0;\n        long lastDigit66\
    \ = 0;\n        long lastDigit67 = 0;\n        long lastDigit68 = 0;\n       \
    \ long lastDigit69 = 0;\n        long lastDigit70 = 0;\n        long lastDigit71\
    \ = 0;\n        long lastDigit72\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsrhsr55h.java:91: error: ';' expected\n        long lastDigit72\n\
    \                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        long lastDigitSum = 0;\n        for (Long i : x) {\n  \
    \          sum += i;\n            long digit = sum % 10;\n            if (digit\
    \ != lastDigit) {\n                lastDigitSum = lastDigit;\n               \
    \ lastDigit = digit;\n            }\n        }\n        if (lastDigit != lastDigitSum)\
    \ {\n            result.add(lastDigitSum);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0swly_b1.java:39)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = 0;\n \
    \       long lastDigitCount = 0;\n        for (long i : x) {\n            if (i\
    \ % 10 == 0) {\n                lastDigit = i;\n                lastDigitCount\
    \ = 1;\n            } else {\n                lastDigitCount *= 10;\n        \
    \        if (lastDigitCount > i) {\n                    lastDigit = i;\n     \
    \               lastDigitCount = 1;\n                } else {\n              \
    \      lastDigitCount *= 10;\n                    if (lastDigitCount > i) {\n\
    \                        lastDigit = i;\n                        lastDigitCount\
    \ = 1;\n                    }\n                }\n            }\n            if\
    \ (lastDigitCount % 2 == 0) {\n                result.add(lastDigit);\n      \
    \      }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphnumj8og.java:45)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp > 0) {\n           \
    \     temp = temp / 10;\n                if(!result.contains(temp)) {\n      \
    \              result.add(temp);\n                }\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzrf1we8v.java:32)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   for(long i : x) {\n            digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(digit);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vtplw3a.java:29)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set =\
    \ new HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03okgjax.java:30)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long evenSum =\
    \ 0;\n        for (long i : x) {\n            if (i % 2 == 0) {\n            \
    \    evenSum += i;\n            }\n        }\n        long evenSum2 = sum - evenSum;\n\
    \        long evenSum3 = evenSum2;\n        long evenSum4 = evenSum3;\n      \
    \  long evenSum5 = evenSum4;\n        long evenSum6 = evenSum5;\n        long\
    \ evenSum7 = evenSum6;\n        long evenSum8 = evenSum7;\n        long evenSum9\
    \ = evenSum8;\n        long evenSum10 = evenSum9;\n        long evenSum11 = evenSum10;\n\
    \        long evenSum12 = evenSum11;\n        long evenSum13 = evenSum12;\n  \
    \      long evenSum14 = evenSum13;\n        long evenSum15 = evenSum14;\n    \
    \    long evenSum16 = evenSum15;\n        long evenSum17 = evenSum16;\n      \
    \  long evenSum18 = evenSum17;\n        long evenSum19 = evenSum18;\n        long\
    \ evenSum20 = evenSum19;\n        long evenSum21 = evenSum20;\n        long evenSum22\
    \ = evenSum21;\n        long evenSum23 = evenSum22;\n        long evenSum24 =\
    \ evenSum23;\n        long evenSum25 = evenSum24;\n        long evenSum26 = evenSum25;\n\
    \        long evenSum27 = evenSum26;\n        long evenSum28 = evenSum27;\n  \
    \      long evenSum29 = evenSum28;\n        long evenSum30 = evenSum29;\n    \
    \    long evenSum31 = evenSum30;\n        long evenSum32 = evenSum31;\n      \
    \  long evenSum33 = evenSum32;\n        long evenSum34 = evenSum33;\n        long\
    \ evenSum35 = evenSum34;\n        long evenSum36 = evenSum35;\n        long evenSum37\
    \ = evenSum36;\n        long evenSum38 = evenSum37;\n        long evenSum39 =\
    \ evenSum38;\n        long evenSum40 = evenSum39;\n        long evenSum41 = evenSum40;\n\
    \        long evenSum42 = evenSum41;\n        long evenSum43 = evenSum42;\n  \
    \      long evenSum44 = evenSum43;\n        long evenSum45 = evenSum44;\n    \
    \    long \n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp67zppw9s.java:73: error: not a statement\n        long \n     \
    \   ^\n/tmp/tmp67zppw9s.java:73: error: ';' expected\n        long \n        \
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for(Long i : x) {\n            if(i%2 == 0) {\n  \
    \              if(i%10 == 0) set.add(Long.valueOf(i));\n                else if(!set.contains(Long.valueOf(i)))\
    \ result.add(i);\n            }\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzby3too3.java:29)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 != 0) {\n   \
    \                 result.add(lastDigit);\n                }\n                lastDigit\
    \ = i;\n            }\n        }\n        if (lastDigit % 10 != 0) {\n       \
    \     result.add(lastDigit);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbg5yfhaw.java:36)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (Long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzgzjwba.java:32)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for(Long i : x) {\n            if(i%2 == 0) {\n  \
    \              if(i%10 != 0) {\n                    set.add(i);\n            \
    \    }\n            }\n        }\n        for(Long i : set) {\n            if(!result.contains(i))\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmw1yiaz7.java:35)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long evenSum =\
    \ 0;\n        for (long i : x) {\n            evenSum += i % 2 == 0 ? i : -i;\n\
    \        }\n        for (long i : x) {\n            if (i % 2 == 0) {\n      \
    \          if (sum % 2 == 0) {\n                    result.add(i);\n         \
    \       }\n                else {\n                    result.add(sum - i);\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu7cd74f3.java:40)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for(Long i : x) {\n\
    \            if(i%2 == 0) {\n                result.add(i);\n            }\n \
    \       }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0o3hb34.java:27)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit = Long.parseLong(String.valueOf(x.get(0)));\n        long\
    \ lastDigit2 = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit3\
    \ = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit4 = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit5 = Long.parseLong(String.valueOf(x.get(0)));\n       \
    \ long lastDigit6 = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit7\
    \ = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit8 = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit9 = Long.parseLong(String.valueOf(x.get(0)));\n       \
    \ long lastDigit10 = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit11\
    \ = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit12 = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit13 = Long.parseLong(String.valueOf(x.get(0)));\n      \
    \  long lastDigit14 = Long.parseLong(String.valueOf(x.get(0)));\n        long\
    \ lastDigit15 = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit16\
    \ = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit17 = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit18 = Long.parseLong(String.valueOf(x.get(0)));\n      \
    \  long lastDigit19 = Long.parseLong(String.valueOf(x.get(0)));\n        long\
    \ lastDigit20 = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit21\
    \ = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit22 = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit23 = Long.parseLong(String.valueOf(x.get(0)));\n      \
    \  long lastDigit24 = Long.parseLong(String.valueOf(x.get(0)));\n        long\
    \ lastDigit25 = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit26\
    \ = Long.parseLong(String.valueOf(x.get(0)));\n        long lastDigit27 = Long.parseLong(String.valueOf(x.get(0)));\n\
    \        long lastDigit28 = Long.parseLong(String.valueOf\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv66204en.java:47: error: ')' expected\n        long lastDigit28\
    \ = Long.parseLong(String.valueOf\n                                          \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   for(long i : x) {\n            digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(digit);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vtplw3a.java:29)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        boolean isEven = false;\n        for (long i : x) {\n \
    \           if (i % 10 == lastDigit) {\n                isEven = true;\n     \
    \           break;\n            }\n        }\n        if (isEven) {\n        \
    \    result.add(sum);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp55nrimke.java:37)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbz098xqy.java:32)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         int digit = i % 10;\n            if(!result.contains(digit)) {\n   \
    \             result.add(digit);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp10ve4ugk.java:20: error: incompatible types: possible lossy conversion\
    \ from long to int\n            int digit = i % 10;\n                        \
    \  ^\n/tmp/tmp10ve4ugk.java:22: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(digit);\n                           ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n2 errors\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp / 10 != 0) {\n\
    \                temp = temp / 10;\n            }\n            if (temp % 2 ==\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8g4_eqn.java:32)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for(long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for(long i : x) {\n            sum += i;\n            if(sum\
    \ % 10 != lastDigit) {\n                result.add(i);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmceflrhe.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        HashMap<Long, Long> map\
    \ = new HashMap<>();\n        for (Long i : x) {\n            if (map.containsKey(i))\
    \ {\n                Long value = map.get(i);\n                if (value % 2 ==\
    \ 0) {\n                    result.add(i);\n                }\n            } else\
    \ {\n                map.put(i, i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wo4u0az.java:33)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long digit = 0;\n \
    \       long temp = 0;\n        for(long i : x) {\n            digit = i % 10;\n\
    \            temp = i;\n            while(temp != 0) {\n                if(temp\
    \ % 10 == digit) {\n                    result.add(temp);\n                  \
    \  break;\n                }\n                temp = temp / 10;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzdczxwgv.java:35)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        boolean isEven = true;\n        for (Long i : x) {\n  \
    \          if (i % 10 != lastDigit) {\n                isEven = false;\n     \
    \           break;\n            }\n        }\n        if (isEven) {\n        \
    \    result.addAll(x.stream().filter(i -> i % 10 != 0).collect(Collectors.toList()));\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxfr4h6y3.java:37)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(Long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dpk_mmh.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        Collections.sort(result);\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7l4p7daf.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (Long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwwbl2gm.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = 0;\n \
    \       long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n        long\
    \ lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n        long lastDigitCount5\
    \ = 0;\n        long lastDigitCount6 = 0;\n        long lastDigitCount7 = 0;\n\
    \        long lastDigitCount8 = 0;\n        long lastDigitCount9 = 0;\n      \
    \  long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n        long\
    \ lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n        long lastDigitCount14\
    \ = 0;\n        long lastDigitCount15 = 0;\n        long lastDigitCount16 = 0;\n\
    \        long lastDigitCount17 = 0;\n        long lastDigitCount18 = 0;\n    \
    \    long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n        long\
    \ lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n        long lastDigitCount23\
    \ = 0;\n        long lastDigitCount24 = 0;\n        long lastDigitCount25 = 0;\n\
    \        long lastDigitCount26 = 0;\n        long lastDigitCount27 = 0;\n    \
    \    long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n        long\
    \ lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n        long lastDigitCount32\
    \ = 0;\n        long lastDigitCount33 = 0;\n        long lastDigitCount34 = 0;\n\
    \        long lastDigitCount35 = 0;\n        long lastDigitCount36 = 0;\n    \
    \    long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n        long\
    \ lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n        long lastDigitCount41\
    \ = 0;\n        long lastDigitCount42 = 0;\n        long lastDigitCount43 = 0;\n\
    \        long lastDigitCount44 = 0;\n        long lastDigitCount45 = 0;\n    \
    \    long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n        long\
    \ lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n        long lastDigitCount50\
    \ = 0;\n        long lastDigitCount51 = 0;\n        long lastDigitCount52 = 0;\n\
    \        long lastDigitCount53 = 0;\n        long lastDigitCount54 = 0;\n    \
    \    long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n        long\
    \ lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n        long lastDigitCount59\
    \ = 0;\n        long lastDigitCount60 = 0;\n        long lastDigitCount61 = 0;\n\
    \        long lastDigitCount62 = 0;\n        long lastDigitCount63\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn7hw0sfe.java:82: error: ';' expected\n        long lastDigitCount63\n\
    \                             ^\n1 error\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp > 0) {\n           \
    \     temp = temp / 10;\n                if(temp % 2 == 0) {\n               \
    \     result.add(i);\n                    break;\n                }\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0qs0yft.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for(Long i : x) {\n            if(i%2 == 0) {\n                if(!set.contains(i))\
    \ {\n                    result.add(i);\n                    set.add(i);\n   \
    \             }\n            }\n        }\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ceq4t9v.java:31)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                result.add(i);\n\
    \            }\n            if (i % 10 != 0 && lastDigit % 10 == 0) {\n      \
    \          result.add(lastDigit);\n            }\n            lastDigit = i;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2e06p9y7.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        HashSet<Long> set =\
    \ new HashSet<Long>();\n        for (Long i : x) {\n            String s = i.toString();\n\
    \            int len = s.length();\n            if (len > 0) {\n             \
    \   for (int j = 0; j < len; j++) {\n                    char c = s.charAt(j);\n\
    \                    if (Character.isDigit(c)) {\n                        Long\
    \ digit = Long.valueOf(c);\n                        if (set.contains(digit)) {\n\
    \                            continue;\n                        }\n          \
    \              set.add(digit);\n                        result.add(i);\n     \
    \                   break;\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp18q99oqx.java:41)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for(long i : x) {\n            temp = i;\n            while(temp != 0) {\n\
    \                if(temp % 2 == 0) {\n                    result.add(i);\n   \
    \                 break;\n                }\n                temp = temp / 10;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvb0kg5o8.java:33)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = 0;\n \
    \       long lastEvenDigit = 0;\n        for(long i : x) {\n            if(i%10\
    \ == 0) {\n                lastDigit = i;\n                lastEvenDigit = i;\n\
    \            } else {\n                if(lastDigit % 10 == 0) {\n           \
    \         lastEvenDigit = i;\n                } else {\n                    if(lastEvenDigit\
    \ % 10 == 0) {\n                        result.add(lastDigit);\n             \
    \           lastDigit = lastEvenDigit;\n                        lastEvenDigit\
    \ = i;\n                    } else {\n                        result.add(lastEvenDigit);\n\
    \                        lastEvenDigit = i;\n                    }\n         \
    \       }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6q2uq4q.java:43)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (Long i : x) {\n            sum += i;\n           \
    \ if (sum % 10 != lastDigit) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97a4r4uz.java:33)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i ->\
    \ i % 2 == 0).forEach(i -> result.add(i));\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_hh0x9yq.java:23)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            sum += i;\n           \
    \ if (sum % 10 != lastDigit) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5pbpva2k.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        if (lastDigit == 0) {\n            result.add(sum);\n \
    \           return result;\n        }\n        long lastDigitSum = 0;\n      \
    \  for (Long i : x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_13siv6.java:38)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for (long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp68wut3iy.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        if (lastDigit == 0) {\n            return result;\n   \
    \     }\n        boolean found = false;\n        for (long i : x) {\n        \
    \    if (i % 10 == lastDigit) {\n                found = true;\n             \
    \   break;\n            }\n        }\n        if (!found) {\n            result.add(sum);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphl5rgg6t.java:40)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long temp = 0;\n\
    \        for (long i : x) {\n            temp = sum % 10;\n            if (temp\
    \ == 0) result.add(i);\n            sum -= temp;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10j43qpw.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       int count = 0;\n            while (i > 0) {\n                count++;\n\
    \                i /= 10;\n            }\n            if (count == 0) {\n    \
    \            result.add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1lvdd59.java:37)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long evenSum =\
    \ 0;\n        for (long i : x) {\n            if (i % 2 == 0) {\n            \
    \    evenSum += i;\n            }\n        }\n        long evenSum2 = evenSum;\n\
    \        long evenSum3 = evenSum;\n        long evenSum4 = evenSum;\n        long\
    \ evenSum5 = evenSum;\n        long evenSum6 = evenSum;\n        long evenSum7\
    \ = evenSum;\n        long evenSum8 = evenSum;\n        long evenSum9 = evenSum;\n\
    \        long evenSum10 = evenSum;\n        long evenSum11 = evenSum;\n      \
    \  long evenSum12 = evenSum;\n        long evenSum13 = evenSum;\n        long\
    \ evenSum14 = evenSum;\n        long evenSum15 = evenSum;\n        long evenSum16\
    \ = evenSum;\n        long evenSum17 = evenSum;\n        long evenSum18 = evenSum;\n\
    \        long evenSum19 = evenSum;\n        long evenSum20 = evenSum;\n      \
    \  long evenSum21 = evenSum;\n        long evenSum22 = evenSum;\n        long\
    \ evenSum23 = evenSum;\n        long evenSum24 = evenSum;\n        long evenSum25\
    \ = evenSum;\n        long evenSum26 = evenSum;\n        long evenSum27 = evenSum;\n\
    \        long evenSum28 = evenSum;\n        long evenSum29 = evenSum;\n      \
    \  long evenSum30 = evenSum;\n        long evenSum31 = evenSum;\n        long\
    \ evenSum32 = evenSum;\n        long evenSum33 = evenSum;\n        long evenSum34\
    \ = evenSum;\n        long evenSum35 = evenSum;\n        long evenSum36 = evenSum;\n\
    \        long evenSum37 = evenSum;\n        long evenSum38 = evenSum;\n      \
    \  long evenSum39 = evenSum;\n        long evenSum40 = evenSum;\n        long\
    \ evenSum41 = evenSum;\n        long evenSum42 = evenSum;\n        long evenSum43\
    \ = evenSum;\n        long evenSum44 = evenSum;\n        long evenSum45 = evenSum;\n\
    \        long evenSum46 = evenSum;\n        long evenSum47 = evenSum;\n      \
    \  long evenSum48 = evenSum;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_jc8ploc.java:76: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for(long i = 0; i < x.size(); i++) {\n            temp = x.get(i);\n      \
    \      while(temp != 0) {\n                if(temp % 2 == 0) {\n             \
    \       result.add(temp);\n                    break;\n                }\n   \
    \             temp/=2;\n            }\n        }\n        return result;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxjw_n6i5.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            temp = x.get(i);\n                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4s_8c_y.java:27)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 != 0) {\n   \
    \                 result.add(lastDigit);\n                    lastDigit = i;\n\
    \                }\n            }\n        }\n        if (lastDigit != Long.MIN_VALUE)\
    \ {\n            result.add(lastDigit);\n        }\n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsju8t6hd.java:36)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        if (lastDigit == 0) {\n            return result;\n   \
    \     }\n        long lastDigitSum = 0;\n        for (long i : x) {\n        \
    \    lastDigitSum += i % 10;\n            if (lastDigitSum == lastDigit) {\n \
    \               result.add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbs9sa65g.java:37)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   for(long i : x) {\n            digit = i % 10;\n            if(!result.contains(digit))\
    \ {\n                result.add(digit);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5vtplw3a.java:29)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   for(long i : x) {\n            digit = i;\n            while(digit > 0) {\n\
    \                digit = digit / 10;\n            }\n            if(digit % 2\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp619qj1zt.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(long i : x) {\n   \
    \         if(i%2 == 0) {\n                result.add(i);\n            }\n    \
    \    }\n        Collections.sort(result);\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7l4p7daf.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                if\
    \ (lastDigit % 10 != 0) {\n                    result.add(i);\n              \
    \  }\n            } else {\n                lastDigit = i;\n            }\n  \
    \      }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp76mc3pg6.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (Long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzgzjwba.java:32)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i ->\
    \ i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv09shru.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for(Long i : x){\n            if(i%2 == 0){\n    \
    \            if(i%10 == 0){\n                    set.add(i);\n               \
    \ }\n            }\n        }\n        for(Long i : set){\n            if(!result.contains(i)){\n\
    \                result.add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9832c82.java:35)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = Long.MIN_VALUE;\n\
    \        for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 != 0) {\n   \
    \                 result.add(lastDigit);\n                }\n                lastDigit\
    \ = i;\n            }\n        }\n        if (lastDigit % 10 != 0) {\n       \
    \     result.add(lastDigit);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbg5yfhaw.java:36)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp = 0;\n  \
    \      for(long i : x) {\n            temp = i;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(!result.contains(temp))\
    \ {\n                    result.add(temp);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpti_8qvs4.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for(long num : x) {\n            temp = num;\n            while(temp != 0)\
    \ {\n                temp = temp / 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(num);\n                    break;\n          \
    \      }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1d07z0mh.java:33)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        Set<Long> set = new HashSet<>();\n\
    \        for (Long i : x) {\n            if (set.contains(i)) {\n            \
    \    continue;\n            }\n            set.add(i);\n            result.add(i);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkiotawyo.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclh99d9l.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for(long i : x) {\n            temp = i;\n            while(temp != 0) {\n\
    \                temp = temp / 10;\n                if(temp % 2 == 0) {\n    \
    \                result.add(temp);\n                }\n            }\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_qc1_r9z.java:32)\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for(long num : x) {\n            temp = num;\n            while(temp != 0)\
    \ {\n                temp = temp % 10;\n                if(temp % 2 == 0) {\n\
    \                    result.add(num);\n                    break;\n          \
    \      }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659793098
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   long lastDigit = 0;\n        long lastDigit2 = 0;\n        long lastDigit3\
    \ = 0;\n        long lastDigit4 = 0;\n        long lastDigit5 = 0;\n        long\
    \ lastDigit6 = 0;\n        long lastDigit7 = 0;\n        long lastDigit8 = 0;\n\
    \        long lastDigit9 = 0;\n        long lastDigit10 = 0;\n        long lastDigit11\
    \ = 0;\n        long lastDigit12 = 0;\n        long lastDigit13 = 0;\n       \
    \ long lastDigit14 = 0;\n        long lastDigit15 = 0;\n        long lastDigit16\
    \ = 0;\n        long lastDigit17 = 0;\n        long lastDigit18 = 0;\n       \
    \ long lastDigit19 = 0;\n        long lastDigit20 = 0;\n        long lastDigit21\
    \ = 0;\n        long lastDigit22 = 0;\n        long lastDigit23 = 0;\n       \
    \ long lastDigit24 = 0;\n        long lastDigit25 = 0;\n        long lastDigit26\
    \ = 0;\n        long lastDigit27 = 0;\n        long lastDigit28 = 0;\n       \
    \ long lastDigit29 = 0;\n        long lastDigit30 = 0;\n        long lastDigit31\
    \ = 0;\n        long lastDigit32 = 0;\n        long lastDigit33 = 0;\n       \
    \ long lastDigit34 = 0;\n        long lastDigit35 = 0;\n        long lastDigit36\
    \ = 0;\n        long lastDigit37 = 0;\n        long lastDigit38 = 0;\n       \
    \ long lastDigit39 = 0;\n        long lastDigit40 = 0;\n        long lastDigit41\
    \ = 0;\n        long lastDigit42 = 0;\n        long lastDigit43 = 0;\n       \
    \ long lastDigit44 = 0;\n        long lastDigit45 = 0;\n        long lastDigit46\
    \ = 0;\n        long lastDigit47 = 0;\n        long lastDigit48 = 0;\n       \
    \ long lastDigit49 = 0;\n        long lastDigit50 = 0;\n        long lastDigit51\
    \ = 0;\n        long lastDigit52 = 0;\n        long lastDigit53 = 0;\n       \
    \ long lastDigit54 = 0;\n        long lastDigit55 = 0;\n        long lastDigit56\
    \ = 0;\n        long lastDigit57 = 0;\n        long lastDigit58 = 0;\n       \
    \ long lastDigit59 = 0;\n        long lastDigit60 = 0;\n        long lastDigit61\
    \ = 0;\n        long lastDigit62 = 0;\n        long lastDigit63 = 0;\n       \
    \ long lastDigit64 = 0;\n        long lastDigit65 = 0;\n        long lastDigit66\
    \ = 0;\n        long lastDigit67 = 0;\n        long lastDigit68 = 0;\n       \
    \ long lastDigit69 = 0;\n        long lastDigit70 = 0;\n        long lastDigit71\
    \ = 0;\n        long lastDigit72 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp96jf2yc3.java:92: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (long i : x) {\n            sum += i;\n        }\n        long max = (long)Math.pow(10,\
    \ x.length() - 1);\n        long min = (long)Math.pow(10, x.length() - 1);\n \
    \       long maxSum = sum;\n        long minSum = sum;\n        for (long i :\
    \ x) {\n            sum += i;\n            if (sum > maxSum) {\n             \
    \   maxSum = sum;\n            }\n            if (sum < minSum) {\n          \
    \      minSum = sum;\n            }\n        }\n        long maxDiff = maxSum\
    \ - minSum;\n        long minDiff = minSum - maxSum;\n        for (long i : x)\
    \ {\n            sum += i;\n            if (sum > maxSum) {\n                maxSum\
    \ = sum;\n            }\n            if (sum < minSum) {\n                minSum\
    \ = sum;\n            }\n        }\n        long maxDiff = maxSum - minSum;\n\
    \        long minDiff = minSum - maxSum;\n        for (long i : x) {\n       \
    \     sum += i;\n            if (sum > maxSum) {\n                maxSum = sum;\n\
    \            }\n            if (sum < minSum) {\n                minSum = sum;\n\
    \            }\n        }\n        long maxDiff = maxSum - minSum;\n        long\
    \ minDiff = minSum - maxSum;\n        for (long i : x) {\n            sum += i;\n\
    \            if (sum > maxSum) {\n                maxSum = sum;\n            }\n\
    \            if (sum < minSum) {\n                minSum = sum;\n            }\n\
    \        }\n        long maxDiff = maxSum - minSum;\n        long minDiff = minSum\
    \ - maxSum;\n        for (long i : x) {\n            sum += i;\n            if\
    \ (sum > maxSum) {\n                maxSum = sum;\n            }\n           \
    \ if (sum < minSum) {\n                minSum = sum;\n            }\n        }\n\
    \        long maxDiff = maxSum - minSum;\n        long minDiff = minSum - maxSum;\n\
    \        for (long i : x) {\n            sum += i;\n            if (sum > maxSum)\
    \ {\n                maxSum = sum;\n            }\n            if (sum < minSum)\
    \ {\n                minSum = sum;\n            }\n        }\n        long maxDiff\
    \ = maxSum - minSum;\n        long minDiff = minSum - maxSum;\n        for (long\
    \ i : x) {\n            sum += i;\n            if (sum > maxSum) {\n         \
    \       maxSum = sum;\n            }\n            if (sum < minSum) {\n      \
    \          minSum = sum\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6r84a1a0.java:99: error: ';' expected\n                minSum =\
    \ sum\n                            ^\n/tmp/tmp6r84a1a0.java:101: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n2\
    \ errors\n"
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(Long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dpk_mmh.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for(Long i : x) {\n\
    \            if(i%2 == 0) {\n                result.add(i);\n            }\n \
    \       }\n        Collections.sort(result);\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxlk5jsev.java:28)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   long lastDigit = 0;\n        long lastDigit2 = 0;\n        long lastDigit3\
    \ = 0;\n        long lastDigit4 = 0;\n        long lastDigit5 = 0;\n        long\
    \ lastDigit6 = 0;\n        long lastDigit7 = 0;\n        long lastDigit8 = 0;\n\
    \        long lastDigit9 = 0;\n        long lastDigit10 = 0;\n        long lastDigit11\
    \ = 0;\n        long lastDigit12 = 0;\n        long lastDigit13 = 0;\n       \
    \ long lastDigit14 = 0;\n        long lastDigit15 = 0;\n        long lastDigit16\
    \ = 0;\n        long lastDigit17 = 0;\n        long lastDigit18 = 0;\n       \
    \ long lastDigit19 = 0;\n        long lastDigit20 = 0;\n        long lastDigit21\
    \ = 0;\n        long lastDigit22 = 0;\n        long lastDigit23 = 0;\n       \
    \ long lastDigit24 = 0;\n        long lastDigit25 = 0;\n        long lastDigit26\
    \ = 0;\n        long lastDigit27 = 0;\n        long lastDigit28 = 0;\n       \
    \ long lastDigit29 = 0;\n        long lastDigit30 = 0;\n        long lastDigit31\
    \ = 0;\n        long lastDigit32 = 0;\n        long lastDigit33 = 0;\n       \
    \ long lastDigit34 = 0;\n        long lastDigit35 = 0;\n        long lastDigit36\
    \ = 0;\n        long lastDigit37 = 0;\n        long lastDigit38 = 0;\n       \
    \ long lastDigit39 = 0;\n        long lastDigit40 = 0;\n        long lastDigit41\
    \ = 0;\n        long lastDigit42 = 0;\n        long lastDigit43 = 0;\n       \
    \ long lastDigit44 = 0;\n        long lastDigit45 = 0;\n        long lastDigit46\
    \ = 0;\n        long lastDigit47 = 0;\n        long lastDigit48 = 0;\n       \
    \ long lastDigit49 = 0;\n        long lastDigit50 = 0;\n        long lastDigit51\
    \ = 0;\n        long lastDigit52 = 0;\n        long lastDigit53 = 0;\n       \
    \ long lastDigit54 = 0;\n        long lastDigit55 = 0;\n        long lastDigit56\
    \ = 0;\n        long lastDigit57 = 0;\n        long lastDigit58 = 0;\n       \
    \ long lastDigit59 = 0;\n        long lastDigit60 = 0;\n        long lastDigit61\
    \ = 0;\n        long lastDigit62 = 0;\n        long lastDigit63 = 0;\n       \
    \ long lastDigit64 = 0;\n        long lastDigit65 = 0;\n        long lastDigit66\
    \ = 0;\n        long lastDigit67 = 0;\n        long lastDigit68 = 0;\n       \
    \ long lastDigit69 = 0;\n        long lastDigit70 = 0;\n        long lastDigit71\
    \ = 0;\n        long lastDigit72 = 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp96jf2yc3.java:92: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long maxSum =\
    \ sum;\n        for (Long i : x) {\n            if (i % 2 == 0) {\n          \
    \      maxSum -= i;\n            } else {\n                result.add(i);\n  \
    \          }\n        }\n        if (maxSum > 0) {\n            result.add(maxSum);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp4ld8ago.java:37)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for(long i : x){\n\
    \            if(i%2 == 0){\n                result.add(i);\n            }\n  \
    \      }\n        Collections.sort(result);\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3t9wtmce.java:28)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (Long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc4oh1m1.java:33)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n       \
    \ for (Long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (Long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzgzjwba.java:32)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long lastDigit = 0;\n \
    \       for (long i : x) {\n            if (i % 10 == 0) {\n                lastDigit\
    \ = i;\n            } else {\n                if (lastDigit % 10 != 0) {\n   \
    \                 result.add(lastDigit);\n                    lastDigit = 0;\n\
    \                }\n            }\n        }\n        if (lastDigit != 0) {\n\
    \            result.add(lastDigit);\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoos82fxo.java:36)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i = 0; i < x.size(); i++) {\n            temp = x.get(i);\n            while(temp\
    \ % 10 != 0) {\n                temp = temp / 10;\n            }\n           \
    \ if(result.contains(temp)) {\n                break;\n            }\n       \
    \     result.add(temp);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpihxpq6ck.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            temp = x.get(i);\n                         ^\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp = 0;\n      \
    \  for(long i : x) {\n            temp = i;\n            while(temp > 0) {\n \
    \               temp = temp / 10;\n                if(temp % 2 == 0) {\n     \
    \               result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu490588m.java:33)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        x.stream().filter(i ->\
    \ i % 2 == 0).forEach(i -> result.add(i));\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv09shru.java:24)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long temp;\n      \
    \  for (Long i : x) {\n            temp = i;\n            while (temp != 0) {\n\
    \                temp = temp / 10;\n                if (temp % 2 == 0) {\n   \
    \                 result.add(i);\n                    break;\n               \
    \ }\n            }\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp29egpp_g.java:33)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(Long\
    \ i : x) {\n            temp = i;\n            while(temp > 0) {\n           \
    \     temp = temp / 10;\n                if(temp % 2 == 0) {\n               \
    \     result.add(i);\n                    break;\n                }\n        \
    \    }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkv1yfei5.java:33)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long digit = 0;\n     \
    \   for (long i : x) {\n            digit = i % 10;\n            if (digit !=\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsisbw2vf.java:29)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        for(Long num : x) {\n \
    \           long digit = num % 10;\n            if(!result.contains(digit)) {\n\
    \                result.add(num);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9x1xzin9.java:28)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            sum += i;\n           \
    \ if (sum % 10 != lastDigit) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5pbpva2k.java:33)\n"
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        Set<Long> set = new\
    \ HashSet<Long>();\n        for (Long i : x) {\n            if (set.contains(i))\
    \ {\n                continue;\n            }\n            set.add(i);\n     \
    \       result.add(i);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8unigup.java:30)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        \n        for(int i\
    \ = 0; i < x.size(); i++) {\n            long n = x.get(i);\n            \n  \
    \          while(n > 0) {\n                long remainder = n % 10;\n        \
    \        \n                if(remainder % 2 == 0) {\n                    result.add(n);\n\
    \                    break;\n                }\n                \n           \
    \     n /= 10;\n            }\n        }\n        \n        return result;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvafknz9i.java:38)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        long sum = 0;\n   \
    \     for (long i : x) {\n            sum += i;\n        }\n        long lastDigit\
    \ = sum % 10;\n        for (long i : x) {\n            if (i % 10 != lastDigit)\
    \ {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbz098xqy.java:32)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (Long i : x) {\n            temp = i;\n            while (temp % 10 != 0) {\n\
    \                temp = temp / 10;\n            }\n            if (temp % 2 ==\
    \ 0) {\n                result.add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83e87txj.java:32)\n"
  stdout: ''
  timestamp: 1659793094
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for\
    \ (long i : x) {\n            temp = i;\n            while (temp != 0) {\n   \
    \             temp = temp / 10;\n                if (temp % 2 == 0) {\n      \
    \              result.add(i);\n                    break;\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxb2txywl.java:33)\n"
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long temp;\n        for(long\
    \ i : x) {\n            temp = i;\n            while(temp != 0) {\n          \
    \      temp = temp / 10;\n                if(temp % 2 == 0) {\n              \
    \      result.add(i);\n                    break;\n                }\n       \
    \     }\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz53_18gj.java:33)\n"
  stdout: ''
  timestamp: 1659793091

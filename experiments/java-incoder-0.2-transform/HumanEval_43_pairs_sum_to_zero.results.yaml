language: java
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (Long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o8tpbsy.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return true;\n        }\n       \
    \ return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpblvvpirh.java:50)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        for(long i : l) {\n        \
    \    result += (i == 0);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe0zwl3m0.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += (i == 0);\n                   ^\n  first type:  boolean\n\
    \  second type: boolean\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                continue;\n            }\n            count += i;\n         \
    \   if (sum == count) {\n                return true;\n            }\n       \
    \ }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1d9xfxdx.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = sum;\n        for (Long i : l) {\n            sum += i;\n\
    \            if (sum != lastSum) {\n                return false;\n          \
    \  }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1lqr78n.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i - l.get(0))) {\n                return true;\n     \
    \       }\n            set.add(i - l.get(0));\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6kbtds_5.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnddxpbu_.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return count == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxjymbsb.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (sum - i == 0)\
    \ {\n                count++;\n            }\n        }\n        return count\
    \ == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhgy2dpb.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == 1 && l.stream().distinct().filter(i\
    \ -> i == sum).count() == 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0nhk9s6_.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().count()\
    \ == 1 && l.stream().distinct().filter(i -> i == sum).count() == 1;\n        \
    \                                                                            \
    \        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long twoSum = 0;\n        for (long i : l) {\n            twoSum += i;\n\
    \            if (twoSum == sum) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7c7_17ve.java:40)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  long sum4 = 0;\n        for (long i : l) {\n            sum4 += i;\n      \
    \  }\n        if (sum4 == 0) {\n            return false;\n        }\n       \
    \ long sum5 = 0;\n        for (long i : l) {\n            sum5 += i;\n       \
    \ }\n        if (sum5 == 0) {\n            return false;\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6l30oitg.java:61)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            count\
    \ += i;\n            if (sum == 0) {\n                return false;\n        \
    \    }\n        }\n        if (count == l.size()) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yty30zx.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47erlnt8.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_t1ohk53.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdukhi9v.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n7q5qmc.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptd7t4fsn.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = 0;\n        for (Long i : l) {\n            lastSum += i;\n\
    \            if (lastSum == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbis4g632.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfg2sqf1.java:36)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdukhi9v.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        if (count == l.size())\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjimv9_k.java:45)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n  \
    \          if (set.contains(i)) {\n                return false;\n           \
    \ }\n            set.add(i);\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptze9wxab.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxisyic6.java:47)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(i - l);\n        }\n        return set.size() == 2;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpih9kdfr_.java:25: error: bad operand types for binary operator\
    \ '-'\n            set.add(i - l);\n                      ^\n  first type:  Long\n\
    \  second type: ArrayList<Long>\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == l.size() && sum == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuri77q4z.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (Long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o8tpbsy.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().count() == 1 && l.stream().distinct().filter(i\
    \ -> i == sum).count() == 1;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4gu_0m9p.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().count()\
    \ == 1 && l.stream().distinct().filter(i -> i == sum).count() == 1;\n        \
    \                                                                            \
    \        ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \        if (sum2 == 0) {\n                return true;\n            }\n     \
    \   }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z70mbyq.java:43)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.size() + 1 && sum == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzre5ezq.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ 0).count() == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp46lq8g3z.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckrgmys7.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        if (sum == 0) {\n         \
    \   result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafdmwrli.java:37)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = sum;\n        for (long i : l) {\n            sum += i;\n\
    \            if (sum != lastSum) {\n                return false;\n          \
    \  }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94n5kky0.java:43)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (sum - i == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6y_ycc3.java:41)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstv4tqfb.java:36)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i - l.get(0)))\n                return false;\n      \
    \      else\n                set.add(i - l.get(0));\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo27x22ba.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            count\
    \ += i;\n            if (sum == 0) {\n                return false;\n        \
    \    }\n        }\n        if (count == l.size()) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yty30zx.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.size() & sum == 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc62q2w5z.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        long zero = 0;\n        for (long i : l) {\n \
    \           sum += i;\n            if (sum == zero) {\n                return\
    \ true;\n            }\n        }\n        return false;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpruto5xf4.java:37)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long twoSum = 0;\n        for (Long i : l) {\n            twoSum += i;\n\
    \            if (twoSum == sum) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx1x76rkx.java:40)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>(l);\n        long sum = 0;\n      \
    \  for (long i : set) {\n            sum += i;\n        }\n        return set.size()\
    \ == 2 && sum == 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_6a2fm6y.java:34)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.stream().distinct().count() == 1 &&\
    \ l.stream().distinct().filter(i -> i == sum).count() == 1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpukgv1diu.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.size() > 1 &&\
    \ l.stream().distinct().count() == 1 && l.stream().distinct().filter(i -> i ==\
    \ sum).count() == 1;\n                                                       \
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_t1ohk53.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l)\n        \
    \    set.add(Math.abs(i));\n        return set.size() == 2;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5cc4_vx.java:32)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \        if (sum2 == 0) {\n                return true;\n            }\n     \
    \   }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z70mbyq.java:43)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l)\n        \
    \    set.add(Math.abs(i));\n        return set.size() == 2;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5cc4_vx.java:32)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnddxpbu_.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ 0).count() == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp46lq8g3z.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(i - 1);\n        }\n        return set.size() == 2;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmg8g8wc4.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().count() == l.size() && sum == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnv987fvu.java:33)\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n  \
    \          if (set.contains(i)) {\n                return false;\n           \
    \ }\n            set.add(i);\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptze9wxab.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ sum).count() == 2;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp72fcgkxj.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() <= l.stream().filter(i -> i\
    \ == sum).count() == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf46ar5ub.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (long i : l) {\n            count += i;\n  \
    \          if (sum - i == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzjdu9xr.java:41)\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i - l.get(0))) {\n                return true;\n     \
    \       }\n            set.add(i);\n        }\n        return false;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9gpjea9.java:35)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().count() == l.size() - 1 && sum\
    \ == 0;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafvl1reb.java:33)\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmjbsuay.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \        if (sum2 == 0) {\n                return true;\n            }\n     \
    \   }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z70mbyq.java:43)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    boolean found = false;\n        for (long i : l) {\n            sum += i;\n\
    \            if (sum == 0) {\n                found = true;\n                break;\n\
    \            }\n        }\n        return found;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqe4yuxpv.java:44)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i - l.get(0)))\n                return true;\n       \
    \     else\n                set.add(i - l.get(0));\n        }\n        return\
    \ false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzqzzz6ze.java:34)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjn_9zhqc.java:37)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  long sum4 = 0;\n        for (Long i : l) {\n            sum4 += i;\n      \
    \  }\n        if (sum4 == 0) {\n            return false;\n        }\n       \
    \ long sum5 = 0;\n        for (Long i : l) {\n            sum5 += i;\n       \
    \ }\n        if (sum5 == 0) {\n            return false;\n        }\n        long\
    \ sum6 = 0;\n        for (Long i : l) {\n            sum6 += i;\n        }\n \
    \       if (sum6 == 0) {\n            return false;\n        }\n        return\
    \ true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpifu_svjs.java:68)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        if (sum == 0) {\n         \
    \   result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafdmwrli.java:37)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  long sum4 = 0;\n        for (Long i : l) {\n            sum4 += i;\n      \
    \  }\n        if (sum4 == 0) {\n            return false;\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84cquowx.java:54)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmjbsuay.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (long i : l) {\n            if\
    \ (sum - i == 0) {\n                count++;\n            }\n        }\n     \
    \   return count == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpycvhyfim.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ 0).count() == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp46lq8g3z.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        for(Long i : l) {\n            if(i == sum) {\n             \
    \   return true;\n            }\n        }\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppiugehxx.java:36)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        if (sum == 0) {\n         \
    \   result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafdmwrli.java:37)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckrgmys7.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp47erlnt8.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (sum == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0869mxv.java:40)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (Long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o8tpbsy.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnddxpbu_.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() <= l.stream().filter(i -> i\
    \ == sum).count() == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqi25d4qe.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjn_9zhqc.java:37)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckrgmys7.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() <= l.stream().filter(i -> i\
    \ == sum).count() == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqi25d4qe.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() % 2 == 0 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1aql5186.java:33)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = 0;\n        for (long i : l) {\n            lastSum += i;\n\
    \            if (lastSum == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09ym549n.java:43)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            count\
    \ += i;\n            if (sum == 0) {\n                return false;\n        \
    \    }\n        }\n        return count == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsn34i8zd.java:40)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        for (Long i : l) {\n      \
    \      if (sum - i == 0) {\n                result = true;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq170gigp.java:38)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n7q5qmc.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().count() == l.size() && sum == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxea3t_69.java:33)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().count() == 2 && sum == 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp615p9hnt.java:33)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.stream().distinct().count() == 1 &&\
    \ l.stream().distinct().filter(i -> i == sum).count() == 1;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7b0l6dga.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.size() > 1 &&\
    \ l.stream().distinct().count() == 1 && l.stream().distinct().filter(i -> i ==\
    \ sum).count() == 1;\n                                                       \
    \                                                     ^\n1 error\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (sum - i == 0) {\n                count++;\n            }\n        }\n     \
    \   return count == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_webge0k.java:39)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ 0).count() == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp46lq8g3z.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstv4tqfb.java:36)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum2 == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxkmz_ss.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        for (Long i : l) {\n      \
    \      result |= (sum == 0);\n            sum += i;\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo10o0yxq.java:38)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (Long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7o8tpbsy.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(i - 1);\n        }\n        return set.size() == 2;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmg8g8wc4.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l)\n        \
    \    set.add(Math.abs(i));\n        if (set.size() < 2)\n            return false;\n\
    \        Long a = set.stream().min(Comparator.naturalOrder()).get();\n       \
    \ Long b = set.stream().max(Comparator.naturalOrder()).get();\n        return\
    \ Math.abs(a - b) == 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpua4bvrkz.java:36)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_t1ohk53.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstv4tqfb.java:36)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ 0).count() == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp46lq8g3z.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \             ^\n1 error\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = 0;\n        for (long i : l) {\n            lastSum += i;\n\
    \            if (lastSum == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09ym549n.java:43)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = 0;\n        for (Long i : l) {\n            lastSum += i;\n\
    \            if (lastSum == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbis4g632.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        if (count == l.size())\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjimv9_k.java:45)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \        if (sum2 == 0) {\n                return true;\n            }\n     \
    \   }\n        return false;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6z70mbyq.java:43)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = 0;\n        for (Long i : l) {\n            lastSum += i;\n\
    \            if (lastSum == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbis4g632.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        long zero = 0;\n        for(long i : l) {\n            zero +=\
    \ i;\n        }\n        return sum == zero;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0090ukh.java:34)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>(l);\n        Long sum = 0;\n      \
    \  for (Long i : l) {\n            sum += i;\n            if (set.contains(sum))\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppb186286.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  long sum4 = 0;\n        for (Long i : l) {\n            sum4 += i;\n      \
    \  }\n        if (sum4 == 0) {\n            return false;\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84cquowx.java:54)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n  \
    \          if (set.contains(i)) {\n                return false;\n           \
    \ }\n            set.add(i);\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptze9wxab.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        if (sum == 0) {\n         \
    \   result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafdmwrli.java:37)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.stream().distinct().count() == l.size() - 1 && sum ==\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwf9mbttt.java:33)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n       \
    \     if(i == 0) return false;\n            set.add(Math.abs(i));\n        }\n\
    \        return set.size() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4g0r37c.java:34)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() == 2 && (l.contains(0l) && l.contains(sum));\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vckviep.java:33)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        for(Long i : l) {\n        \
    \    result |= (sum == 0);\n            sum += i;\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_whdoes4.java:38)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (long i : l) {\n            count\
    \ += i;\n            if (sum == 0) {\n                return false;\n        \
    \    }\n        }\n        if (count == l.size()) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0j8d_72.java:43)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        for(long i : l) {\n        \
    \    result += (i == 0);\n        }\n        return result && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprnye_prf.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += (i == 0);\n                   ^\n  first type:  boolean\n\
    \  second type: boolean\n1 error\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmjbsuay.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().filter(i -> sum - i == 0).count()\
    \ == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7kg7gdp1.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> sum - i == 0).count() == 2;\n                                           \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (Long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  long sum4 = 0;\n        for (Long i : l) {\n            sum4 += i;\n      \
    \  }\n        if (sum4 == 0) {\n            return false;\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84cquowx.java:54)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (sum == count) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfn0e9bkl.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = false;\n        if (sum == 0) {\n         \
    \   result = true;\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafdmwrli.java:37)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnddxpbu_.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (sum == count) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfn0e9bkl.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum2 == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsjjo91j.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() <= l.stream().filter(i -> i\
    \ == sum).count() == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf46ar5ub.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = sum;\n        for (long i : l) {\n            sum += i;\n\
    \            if (sum != lastSum) {\n                return false;\n          \
    \  }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94n5kky0.java:43)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmjbsuay.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return false;\n        }\n      \
    \  long sum4 = 0;\n        for (long i : l) {\n            sum4 += i;\n      \
    \  }\n        if (sum4 == 0) {\n            return false;\n        }\n       \
    \ return true;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9vuz4eih.java:54)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (sum - i == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6y_ycc3.java:41)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmjbsuay.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        for(Long i : l) {\n        \
    \    if(i == sum) {\n                result = true;\n                break;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp63r83usy.java:38)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (Long i : l) {\n            if (i\
    \ == 0) {\n                zero = 0;\n            } else {\n                zero\
    \ += i;\n            }\n        }\n        return sum == zero;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7u5pfh0m.java:39)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2 && set.contains(0l);\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphrbjr6n5.java:33)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum2 == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsjjo91j.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum2 == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsjjo91j.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n  \
    \          if (set.contains(i)) {\n                return false;\n           \
    \ }\n            set.add(i);\n        }\n        return true;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptze9wxab.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjn_9zhqc.java:37)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n   \
    \         if(i == 0) return false;\n            set.add(i - 1);\n        }\n \
    \       return set.size() == 2;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7g3b0cyk.java:34)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (count == sum) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5debxf7i.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (!set.contains(i)) {\n                set.add(i);\n            }\n \
    \       }\n        return set.size() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk0fc278.java:35)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n       \
    \     set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptd7t4fsn.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n       \
    \     if(i == 0) continue;\n            set.add(i - 1);\n        }\n        return\
    \ set.size() == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjvsf52r.java:34)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum2 == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsjjo91j.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (sum - i == 0) {\n                count++;\n            }\n        }\n     \
    \   return count == 2;\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_webge0k.java:39)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() % 2 == 0 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr5rwiwc_.java:33)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() <= l.stream().filter(i -> i\
    \ == 0).count() == 2;\n    }\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp87ol0u6l.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() <= l.stream().filter(i -> i == 0).count()\
    \ == 2;\n                                                                    \
    \              ^\n1 error\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().count() == l.size() && sum == 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxea3t_69.java:33)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && (l.size() == l.stream().filter(i -> i\
    \ == sum).count() == 2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp89bmpl78.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && (l.size() == l.stream().filter(i -> i == sum).count()\
    \ == 2);\n                                                                   \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().filter(i -> sum - i == 0).count()\
    \ == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7kg7gdp1.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> sum - i == 0).count() == 2;\n                                           \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return true;\n        }\n     \
    \   return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstv4tqfb.java:36)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpad98t7t2.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 2;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = 0;\n        for (long i : l) {\n            lastSum += i;\n\
    \            if (lastSum == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09ym549n.java:43)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjn_9zhqc.java:37)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        for(long i : l) {\n            if(i == sum) {\n             \
    \   return true;\n            }\n        }\n        return false;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl__h30tg.java:36)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        if (count == l.size())\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjimv9_k.java:45)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() % 2 == 0 && sum == 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1aql5186.java:33)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n7q5qmc.java:39)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (count == sum) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5debxf7i.java:40)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (long i : l) {\n            sum2 += i;\n    \
    \    }\n        if (sum2 == 0) {\n            return false;\n        }\n     \
    \   long sum3 = 0;\n        for (long i : l) {\n            sum3 += i;\n     \
    \   }\n        if (sum3 == 0) {\n            return true;\n        }\n       \
    \ return false;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptk___nze.java:50)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for(Long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        if(count == l.size()) {\n            return true;\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpihnr52b6.java:43)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() == 2 && (l.contains(sum) && l.contains(sum -\
    \ l.get(0)));\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsohe0yio.java:33)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        long count = 0;\n        for (Long i : l) {\n            if\
    \ (i == 0) {\n                count++;\n            }\n        }\n        return\
    \ count == 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmjbsuay.java:39)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for(Long i : l) {\n       \
    \     if(i!=0) {\n                set.add(Math.abs(i));\n            }\n     \
    \   }\n        return set.size() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaakxoa_h.java:35)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_4d7ztu.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 2;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        if (count == l.size())\
    \ {\n            return true;\n        }\n        return false;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjimv9_k.java:45)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (!set.contains(i)) {\n                set.add(i);\n            }\n \
    \       }\n        return set.size() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmk0fc278.java:35)\n"
  stdout: ''
  timestamp: 1659799503
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (long i : l) {\n            count += i;\n  \
    \          if (sum - i == 0) {\n                return true;\n            }\n\
    \        }\n        return false;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzjdu9xr.java:41)\n"
  stdout: ''
  timestamp: 1659799501
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        boolean result = true;\n        for (long i : l) {\n       \
    \     if (i != 0) {\n                result &= (sum - i) == 0;\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdb8n96s.java:39)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        for(long i : l) {\n        \
    \    long j = sum - i;\n            if(j == 0) {\n                result = true;\n\
    \                break;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0tq40jn.java:39)\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long twoSum = 0;\n        long threeSum = 0;\n        for (Long i : l) {\n\
    \            if (i == 0) {\n                continue;\n            }\n       \
    \     if (sum - i == 0) {\n                twoSum += i;\n            } else if\
    \ (sum - i == 1) {\n                threeSum += i;\n            }\n        }\n\
    \        return twoSum == threeSum;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyol5ls52.java:45)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                count++;\n            }\n        }\n        return count == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnddxpbu_.java:42)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckrgmys7.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for(Long i : l) {\n   \
    \         if(i!=0) {\n                set.add(Math.abs(i));\n            }\n \
    \       }\n        return set.size() == 2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnc2zk1b1.java:35)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      if (set.contains(i)) {\n                return false;\n            }\n\
    \            set.add(i);\n        }\n        return true;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpckrgmys7.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            count += i;\n  \
    \          if (sum == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0869mxv.java:40)\n"
  stdout: ''
  timestamp: 1659799502
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        long count = 0;\n        for(long i : l) {\n            count\
    \ += i;\n            if(sum == 0) {\n                return false;\n         \
    \   }\n        }\n        return count == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xlvoo_2.java:40)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>(l);\n        Long sum = 0;\n      \
    \  for (Long i : set) {\n            sum += i;\n        }\n        return set.size()\
    \ == 2 && sum == 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnq48zlwf.java:24: error: incompatible types: int cannot be converted\
    \ to Long\n        Long sum = 0;\n                   ^\n1 error\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long lastSum = sum;\n        for (Long i : l) {\n            sum += i;\n\
    \            if (sum != lastSum) {\n                return false;\n          \
    \  }\n        }\n        return true;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1lqr78n.java:43)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        return l.stream().distinct().filter(i -> i == sum).count() ==\
    \ 2;\n    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpad98t7t2.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.stream().distinct().filter(i\
    \ -> i == sum).count() == 2;\n                                               \
    \       ^\n1 error\n"
  stdout: ''
  timestamp: 1659799504
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && l.size() < l.stream().filter(i -> i ==\
    \ sum).count() == 2;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmputd42lc7.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && l.size() < l.stream().filter(i -> i == sum).count()\
    \ == 2;\n                                                                    \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(Long i : l) {\n            sum += i;\n   \
    \     }\n        return l.size() > 1 && l.size() < l.size() && (sum == 0 || sum\
    \ == -l.get(l.size() - 1));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsm5swzqz.java:33)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (long i : l) {\n            sum += i;\n  \
    \      }\n        long zero = 0;\n        for (long i : l) {\n            zero\
    \ += i;\n        }\n        return sum == zero;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdukhi9v.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long sum2 = 0;\n        for (Long i : l) {\n            sum2 += i;\n    \
    \    }\n        return sum == sum2;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_t1ohk53.java:37)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<>();\n        for (Long i : l) {\n      \
    \      set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_f4hf1c2.java:33)\n"
  stdout: ''
  timestamp: 1659799500
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for(long i : l) {\n            sum += i;\n   \
    \     }\n        boolean result = false;\n        for(long i : l) {\n        \
    \    result += (i == 0);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe0zwl3m0.java:29: error: bad operand types for binary operator\
    \ '+'\n            result += (i == 0);\n                   ^\n  first type:  boolean\n\
    \  second type: boolean\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        Set<Long> set = new HashSet<Long>();\n        for (Long i : l) {\n  \
    \          set.add(Math.abs(i));\n        }\n        return set.size() == 2;\n\
    \    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmaexibb.java:33)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && (l.size() - 2) == l.stream().filter(i\
    \ -> i == sum).count();\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpver8lbcw.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n        return l.size() > 1 &&\
    \ (l.size() - 2) == l.stream().filter(i -> i == sum).count();\n              \
    \                                                               ^\n1 error\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        if (sum == 0) {\n            return false;\n        }\n    \
    \    long count = 0;\n        for (Long i : l) {\n            if (i == 0) {\n\
    \                return false;\n            }\n            count += i;\n     \
    \   }\n        return count == 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)31l)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcqka4re5.java:43)\n"
  stdout: ''
  timestamp: 1659799505
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n\
    \    // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
    \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
    \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n\
    \        long sum = 0;\n        for (Long i : l) {\n            sum += i;\n  \
    \      }\n        return l.size() > 1 && (l.size() == l.stream().filter(i -> i\
    \ == sum).count() == 2);\n    }\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
    \ (long)5l, (long)0l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)3l, (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)7l)))) ==\
    \ (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)-5l, (long)3l, (long)5l, (long)7l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)1l)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
    \ (long)30l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)31l)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
    \ (long)30l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
    \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)31l)))) == (false));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp89bmpl78.java:27: error: incomparable types: boolean and int\n\
    \        return l.size() > 1 && (l.size() == l.stream().filter(i -> i == sum).count()\
    \ == 2);\n                                                                   \
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659799504

language: java
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkl3_8lkx.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpkl3_8lkx.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = Math.abs(guess.get(i) - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 =\
    \ 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n\
    \        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n\
    \        long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggcck9dc.java:107: error: ';' expected\n        long diff84\n \
    \                  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        Arrays.sort(difference);\n        long diff\
    \ = 0;\n        for(int i = 0; i < difference.size(); i++) {\n            diff\
    \ = game.get(i) - guess.get(i);\n            if(diff < 0) {\n                result.add(game.get(i)\
    \ - diff);\n            } else {\n                result.add(game.get(i) + diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpecf9hdjl.java:24: error: no suitable method found for sort(ArrayList<Long>)\n\
    \        Arrays.sort(difference);\n              ^\n    method Arrays.sort(int[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to int[])\n    method Arrays.sort(long[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to long[])\n    method Arrays.sort(short[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to short[])\n    method Arrays.sort(char[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to char[])\n    method Arrays.sort(byte[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to byte[])\n    method Arrays.sort(float[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to float[])\n    method Arrays.sort(double[])\
    \ is not applicable\n      (argument mismatch; ArrayList<Long> cannot be converted\
    \ to double[])\n    method Arrays.sort(Object[]) is not applicable\n      (argument\
    \ mismatch; ArrayList<Long> cannot be converted to Object[])\n    method Arrays.<T#1>sort(T#1[],Comparator<?\
    \ super T#1>) is not applicable\n      (cannot infer type-variable(s) T#1\n  \
    \      (actual and formal argument lists differ in length))\n    method Arrays.<T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>) is not applicable\n      (cannot infer type-variable(s) T#2\n  \
    \      (actual and formal argument lists differ in length))\n  where T#1,T#2 are\
    \ type-variables:\n    T#1 extends Object declared in method <T#1>sort(T#1[],Comparator<?\
    \ super T#1>)\n    T#2 extends Object declared in method <T#2>sort(T#2[],int,int,Comparator<?\
    \ super T#2>)\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuesses = 0;\n        long totalGuesses2 = 0;\n    \
    \    long totalGuesses3 = 0;\n        long totalGuesses4 = 0;\n        long totalGuesses5\
    \ = 0;\n        long totalGuesses6 = 0;\n        long totalGuesses7 = 0;\n   \
    \     long totalGuesses8 = 0;\n        long totalGuesses9 = 0;\n        long totalGuesses10\
    \ = 0;\n        long totalGuesses11 = 0;\n        long totalGuesses12 = 0;\n \
    \       long totalGuesses13 = 0;\n        long totalGuesses14 = 0;\n        long\
    \ totalGuesses15 = 0;\n        long totalGuesses16 = 0;\n        long totalGuesses17\
    \ = 0;\n        long totalGuesses18 = 0;\n        long totalGuesses19 = 0;\n \
    \       long totalGuesses20 = 0;\n        long totalGuesses21 = 0;\n        long\
    \ totalGuesses22 = 0;\n        long totalGuesses23 = 0;\n        long totalGuesses24\
    \ = 0;\n        long totalGuesses25 = 0;\n        long totalGuesses26 = 0;\n \
    \       long totalGuesses27 = 0;\n        long totalGuesses28 = 0;\n        long\
    \ totalGuesses29 = 0;\n        long totalGuesses30 = 0;\n        long totalGuesses31\
    \ = 0;\n        long totalGuesses32 = 0;\n        long totalGuesses33 = 0;\n \
    \       long totalGuesses34 = 0;\n        long totalGuesses35 = 0;\n        long\
    \ totalGuesses36 = 0;\n        long totalGuesses37 = 0;\n        long totalGuesses38\
    \ = 0;\n        long totalGuesses39 = 0;\n        long totalGuesses40 = 0;\n \
    \       long totalGuesses41 = 0;\n        long totalGuesses42 = 0;\n        long\
    \ totalGuesses43 = 0;\n        long totalGuesses44 = 0;\n        long totalGuesses45\
    \ = 0;\n        long totalGuesses46 = 0;\n        long totalGuesses47 = 0;\n \
    \       long totalGuesses48 = 0;\n        long totalGuesses49 = 0;\n        long\
    \ totalGuesses50 = 0;\n        long totalGuesses51 = 0;\n        long totalGuesses52\
    \ = 0;\n        long totalGuesses53 = 0;\n        long totalGuesses54 = 0;\n \
    \       long totalGuesses55 = 0;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbihe3i80.java:81: error: missing return statement\n    }\n    ^\n\
    1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long guess\
    \ : guess) {\n            score = Math.abs(guess - game.get(0));\n           \
    \ result.add(score);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu9_x1v2h.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        for (long guess : guess) {\n\
    \                  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            result.add(diff);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2xg2n4h.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpq2xg2n4h.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(diff);\n            } else {\n               \
    \ result.add(diff);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4myypanb.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp4myypanb.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2x6vpk2_.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp2x6vpk2_.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoc4p1564.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpoc4p1564.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(diff);\n            } else {\n               \
    \ result.add(diff);\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxt1ir_s.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpqxt1ir_s.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjaozhp5z.java:34)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 =\
    \ 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n\
    \        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n\
    \        long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggcck9dc.java:107: error: ';' expected\n        long diff84\n \
    \                  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = guess - score;\n            if(diff < 0)\
    \ {\n                diff = -diff;\n                correct = true;\n        \
    \    }\n            result.add(diff);\n        }\n        if(correct) {\n    \
    \        return result;\n        }\n        for(int i = 0; i < guess.size(); i++)\
    \ {\n            score = game.get(i);\n            guess = guess.get(i);\n   \
    \         diff = guess - score;\n            if(diff < 0) {\n                diff\
    \ = -diff;\n                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxn7lfwgd.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpxn7lfwgd.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpxn7lfwgd.java:40:\
    \ error: long cannot be dereferenced\n        for(int i = 0; i < guess.size();\
    \ i++) {\n                                ^\n/tmp/tmpxn7lfwgd.java:42: error:\
    \ long cannot be dereferenced\n            guess = guess.get(i);\n           \
    \              ^\n4 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        long diff = 0;\n        long diff2 = 0;\n\
    \        long diff3 = 0;\n        long diff4 = 0;\n        long diff5 = 0;\n \
    \       long diff6 = 0;\n        long diff7 = 0;\n        long diff8 = 0;\n  \
    \      long diff9 = 0;\n        long diff10 = 0;\n        long diff11 = 0;\n \
    \       long diff12 = 0;\n        long diff13 = 0;\n        long diff14 = 0;\n\
    \        long diff15 = 0;\n        long diff16 = 0;\n        long diff17 = 0;\n\
    \        long diff18 = 0;\n        long diff19 = 0;\n        long diff20 = 0;\n\
    \        long diff21 = 0;\n        long diff22 = 0;\n        long diff23 = 0;\n\
    \        long diff24 = 0;\n        long diff25 = 0;\n        long diff26 = 0;\n\
    \        long diff27 = 0;\n        long diff28 = 0;\n        long diff29 = 0;\n\
    \        long diff30 = 0;\n        long diff31 = 0;\n        long diff32 = 0;\n\
    \        long diff33 = 0;\n        long diff34 = 0;\n        long diff35 = 0;\n\
    \        long diff36 = 0;\n        long diff37 = 0;\n        long diff38 = 0;\n\
    \        long diff39 = 0;\n        long diff40 = 0;\n        long diff41 = 0;\n\
    \        long diff42 = 0;\n        long diff43 = 0;\n        long diff44 = 0;\n\
    \        long diff45 = 0;\n        long diff46 = 0;\n        long diff47 = 0;\n\
    \        long diff48 = 0;\n        long diff49 = 0;\n        long diff50 = 0;\n\
    \        long diff51 = 0;\n        long diff52 = 0;\n        long diff53 = 0;\n\
    \        long diff54 = 0;\n        long diff55 = 0;\n        long diff56 = 0;\n\
    \        long diff57 = 0;\n        long diff58 = 0;\n        long diff59 = 0;\n\
    \        long diff60 = 0;\n        long diff61 = 0;\n        long diff62 = 0;\n\
    \        long diff63 = 0;\n        long diff64 = 0;\n        long diff65 = 0;\n\
    \        long diff66 = 0;\n        long diff67 = 0;\n        long diff68 = 0;\n\
    \        long diff69 = 0;\n        long diff70 = 0;\n        long diff71 = 0;\n\
    \        long diff72 = 0;\n        long diff73 = 0;\n        long diff74 = 0;\n\
    \        long diff75 = 0;\n        long diff76 = 0;\n        long diff77 = 0;\n\
    \        long diff78 = 0;\n        long diff79 = 0;\n        long diff80 = 0;\n\
    \        long diff81 = 0;\n        long diff82 = 0;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8e27jeqo.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjaozhp5z.java:34)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  if(diff < 0) {\n                diff *= -1;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53_ninuc.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long score = 0;\n\
    \        long guess = 0;\n        long difference = 0;\n        boolean correct\
    \ = false;\n        boolean guessedCorrectly = false;\n        boolean guessedCorrectly2\
    \ = false;\n        boolean guessedCorrectly3 = false;\n        boolean guessedCorrectly4\
    \ = false;\n        boolean guessedCorrectly5 = false;\n        boolean guessedCorrectly6\
    \ = false;\n        boolean guessedCorrectly7 = false;\n        boolean guessedCorrectly8\
    \ = false;\n        boolean guessedCorrectly9 = false;\n        boolean guessedCorrectly10\
    \ = false;\n        boolean guessedCorrectly11 = false;\n        boolean guessedCorrectly12\
    \ = false;\n        boolean guessedCorrectly13 = false;\n        boolean guessedCorrectly14\
    \ = false;\n        boolean guessedCorrectly15 = false;\n        boolean guessedCorrectly16\
    \ = false;\n        boolean guessedCorrectly17 = false;\n        boolean guessedCorrectly18\
    \ = false;\n        boolean guessedCorrectly19 = false;\n        boolean guessedCorrectly20\
    \ = false;\n        boolean guessedCorrectly21 = false;\n        boolean guessedCorrectly22\
    \ = false;\n        boolean guessedCorrectly23 = false;\n        boolean guessedCorrectly24\
    \ = false;\n        boolean guessedCorrectly25 = false;\n        boolean guessedCorrectly26\
    \ = false;\n        boolean guessedCorrectly27 = false;\n        boolean guessedCorrectly28\
    \ = false;\n        boolean guessedCorrectly29 = false;\n        boolean guessedCorrectly30\
    \ = false;\n        boolean guessedCorrectly31 = false;\n        boolean guessedCorrectly32\
    \ = false;\n        boolean guessedCorrectly33 = false;\n        boolean guessedCorrectly34\
    \ = false;\n        boolean guessedCorrectly35 = false;\n        boolean guessedCorrectly36\
    \ = false;\n        boolean guessedCorrectly37 = false;\n        boolean guessedCorrectly38\
    \ = false;\n        boolean guessedCorrectly39 = false;\n        boolean guessedCorrectly40\
    \ = false;\n        boolean guessedCorrectly41 = false;\n        boolean guessedCorrectly42\
    \ = false;\n        boolean guessedCorrectly43 = false;\n        boolean guessedCorrectly44\
    \ = false;\n        boolean guessedCorrectly45 = false;\n        boolean guessedCorrectly46\
    \ = false;\n        boolean guessedCorrectly47 = false;\n        boolean guessedCorrectly48\
    \ = false;\n        boolean guessedCorrectly49 = false;\n        boolean guessedCorrectly50\
    \ = false;\n        boolean guessedCorrectly51 = false;\n        boolean guessedCorrectly52\
    \ = false;\n        boolean gues\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpksdagbjr.java:80: error: ';' expected\n        boolean gues\n \
    \                   ^\n1 error\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2x6vpk2_.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp2x6vpk2_.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  if(diff < 0) {\n                diff = -diff;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 =\
    \ 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n\
    \        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n\
    \        long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggcck9dc.java:107: error: ';' expected\n        long diff84\n \
    \                  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long score = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9q24ez0l.java:109: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? -diff : diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            if(guess == score) {\n      \
    \          result.add(0l);\n            } else {\n                diff = guess\
    \ - score;\n                result.add(Math.abs(diff));\n            }\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpstkib8f0.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpstkib8f0.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long total = 0;\n      \
    \  long totalGuess = 0;\n        long totalGuesses = 0;\n        long totalGuessesPerGame\
    \ = 0;\n        long totalGuessesPerGamePerGame = 0;\n        long totalGuessesPerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGame = 0;\n        long\
    \ totalGuessesPerGamePerGamePerGamePerGamePerGame = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePer\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqh7k0w_b.java:43: error: ';' expected\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePer\n\
    \                                                                            \
    \                                                                ^\n1 error\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long total = 0;\n      \
    \  long totalGuess = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessedIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyButIncorrectlyButCorrectly = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqwsx5foh.java:47: error: ';' expected\n        long totalGuessedIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\n\
    \                                                                            \
    \                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigv0qljs.java:33)\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for (long i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if (diff < 0) {\n                result.add(-diff);\n           \
    \ } else {\n                result.add(diff);\n            }\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphf02burx.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            diff = game.get(i) - guess.get(i);\n         \
    \                   ^\n/tmp/tmphf02burx.java:25: error: incompatible types: possible\
    \ lossy conversion from long to int\n            diff = game.get(i) - guess.get(i);\n\
    \                                           ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long maxDiff = 0;\n        long maxScore = 0;\n        long maxScoreIndex\
    \ = 0;\n        long maxGuess = 0;\n        long maxGuessIndex = 0;\n        long\
    \ maxScoreDiff = 0;\n        long maxScoreDiffIndex = 0;\n        long maxGuessDiff\
    \ = 0;\n        long maxGuessDiffIndex = 0;\n        boolean isCorrect = false;\n\
    \        boolean isCorrectIndex = false;\n        boolean isCorrectDiff = false;\n\
    \        boolean isCorrectDiffIndex = false;\n        boolean isCorrectScore =\
    \ false;\n        boolean isCorrectScoreIndex = false;\n        boolean isCorrectGuess\
    \ = false;\n        boolean isCorrectGuessIndex = false;\n        boolean isCorrectGuessDiff\
    \ = false;\n        boolean isCorrectGuessDiffIndex = false;\n        boolean\
    \ isCorrectScoreDiff = false;\n        boolean isCorrectScoreDiffIndex = false;\n\
    \        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffDiffIndex\
    \ = false;\n        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiffDiff = false;\n        boolean\
    \ isCorrectGuessDiffDiffIndex = false;\n        boolean isCorrectScoreDiffDiff\
    \ = false;\n        boolean isCorrectScoreDiffDiffIndex = false;\n        boolean\
    \ isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffIndex = false;\n\
    \        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffIndex\
    \ = false;\n        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffIndex\
    \ = false;\n        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffIndex\
    \ = false;\n        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffIndex\
    \ = false;\n        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGuessDiffIndex\
    \ = false;\n        boolean isCorrectScoreDiffDiff = false;\n        boolean isCorrectScoreDiffDiffIndex\
    \ = false;\n        boolean isCorrectGuessDiffDiff = false;\n        boolean isCorrectGue\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj6l5ouil.java:79: error: ';' expected\n        boolean isCorrectGue\n\
    \                            ^\n1 error\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyCorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIn\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkqk2fy23.java:55: error: ';' expected\n        long totalGuessedIn\n\
    \                           ^\n1 error\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long i = 0;\
    \ i < game.size(); i++) {\n            long score = game.get(i);\n           \
    \ long guess = guess.get(i);\n            if (guess == score) {\n            \
    \    result.add(0);\n            } else {\n                diff = guess - score;\n\
    \                if (diff > 0) {\n                    result.add(diff);\n    \
    \            } else {\n                    result.add(Math.abs(diff));\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi0pkznsv.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long score = game.get(i);\n                  \
    \                ^\n/tmp/tmpi0pkznsv.java:26: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n            long\
    \ guess = guess.get(i);\n                 ^\n/tmp/tmpi0pkznsv.java:26: error:\
    \ long cannot be dereferenced\n            long guess = guess.get(i);\n      \
    \                        ^\n/tmp/tmpi0pkznsv.java:28: error: incompatible types:\
    \ int cannot be converted to Long\n                result.add(0);\n          \
    \                 ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrmtwx0w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzrmtwx0w.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9tj0uggm.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp9tj0uggm.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            difference = Math.abs(guess.get(i) - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5qf9muxn.java:33)\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for (long i = 0; i < game.size(); i++) {\n            score =\
    \ game.get(i);\n            diff = guess.get(i) - score;\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2bqhib89.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp2bqhib89.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = guess.get(i) - score;\n    \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf75usdhk.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpf75usdhk.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long total = 0;\n        long diff\
    \ = 0;\n        for (long i = 0; i < game.size(); i++) {\n            total +=\
    \ game.get(i);\n            diff = game.get(i) - guess.get(i);\n            if\
    \ (diff < 0) {\n                result.add(-diff);\n            } else {\n   \
    \             result.add(diff);\n            }\n        }\n        if (result.size()\
    \ != game.size()) {\n            throw new RuntimeException(\"Not enough guesses\"\
    );\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoqhwwm83.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            total += game.get(i);\n                      \
    \        ^\n/tmp/tmpoqhwwm83.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = game.get(i) - guess.get(i);\n\
    \                            ^\n/tmp/tmpoqhwwm83.java:27: error: incompatible\
    \ types: possible lossy conversion from long to int\n            diff = game.get(i)\
    \ - guess.get(i);\n                                           ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> guesses = new ArrayList<Long>(guess);\n\
    \        long total = 0;\n        long total2 = 0;\n        long total3 = 0;\n\
    \        long total4 = 0;\n        long total5 = 0;\n        long total6 = 0;\n\
    \        long total7 = 0;\n        long total8 = 0;\n        long total9 = 0;\n\
    \        long total10 = 0;\n        long total11 = 0;\n        long total12 =\
    \ 0;\n        long total13 = 0;\n        long total14 = 0;\n        long total15\
    \ = 0;\n        long total16 = 0;\n        long total17 = 0;\n        long total18\
    \ = 0;\n        long total19 = 0;\n        long total20 = 0;\n        long total21\
    \ = 0;\n        long total22 = 0;\n        long total23 = 0;\n        long total24\
    \ = 0;\n        long total25 = 0;\n        long total26 = 0;\n        long total27\
    \ = 0;\n        long total28 = 0;\n        long total29 = 0;\n        long total30\
    \ = 0;\n        long total31 = 0;\n        long total32 = 0;\n        long total33\
    \ = 0;\n        long total34 = 0;\n        long total35 = 0;\n        long total36\
    \ = 0;\n        long total37 = 0;\n        long total38 = 0;\n        long total39\
    \ = 0;\n        long total40 = 0;\n        long total41 = 0;\n        long total42\
    \ = 0;\n        long total43 = 0;\n        long total44 = 0;\n        long total45\
    \ = 0;\n        long total46 = 0;\n        long total47 = 0;\n        long total48\
    \ = 0;\n        long total49 = 0;\n        long total50 = 0;\n        long total51\
    \ = 0;\n        long total52 = 0;\n        long total53 = 0;\n        long total54\
    \ = 0;\n        long total55 = 0;\n        long total56 = 0;\n        long total57\
    \ = 0;\n        long total58 = 0;\n        long total59 = 0;\n        long total60\
    \ = 0;\n        long total61 = 0;\n        long total62 = 0;\n        long total63\
    \ = 0;\n        long total64 = 0;\n        long total65 = 0;\n        long total66\
    \ = 0;\n        long total67 = 0;\n        long total68 = 0;\n        long total69\
    \ = 0;\n        long total70 = 0;\n        long total71 = 0;\n        long total72\
    \ = 0;\n        long total73 = 0;\n        long total74 = 0;\n        long total75\
    \ = 0;\n        long total76 = 0;\n        long total77 = 0;\n        long total78\
    \ = 0;\n        long total79 = 0;\n        long total80 = 0;\n        long total81\
    \ = 0;\n        long total82 = 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc88dnpxt.java:107: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc2f3v2ao.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpc2f3v2ao.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        long total = 0;\n        long totalScore\
    \ = 0;\n        long totalGuess = 0;\n        long totalDifference = 0;\n    \
    \    long totalTotal = 0;\n        long totalTotalScore = 0;\n        long totalTotalGuess\
    \ = 0;\n        long totalTotalDifference = 0;\n        long totalTotalTotal =\
    \ 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            total++;\n            totalScore += score;\n          \
    \  totalGuess += guess;\n            totalDifference += difference;\n        \
    \    totalTotal += score;\n            totalTotalScore += score;\n           \
    \ totalTotalGuess += guess;\n            totalTotalDifference += difference;\n\
    \            totalTotalTotal += score;\n        }\n        if(total == guess.size())\
    \ {\n            result.add(0);\n        } else {\n            result.add(totalDifference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy9fyx508.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpy9fyx508.java:37: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpy9fyx508.java:49:\
    \ error: long cannot be dereferenced\n        if(total == guess.size()) {\n  \
    \                       ^\n/tmp/tmpy9fyx508.java:50: error: incompatible types:\
    \ int cannot be converted to Long\n            result.add(0);\n              \
    \         ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        for(long i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            difference = Math.abs(guess - score);\n       \
    \     result.add(difference);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3arckj7e.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp3arckj7e.java:26: error: variable game is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long game = 0;\n  \
    \           ^\n/tmp/tmp3arckj7e.java:27: error: long cannot be dereferenced\n\
    \        for(long i = 0; i < game.size(); i++) {\n                           \
    \     ^\n/tmp/tmp3arckj7e.java:28: error: long cannot be dereferenced\n      \
    \      score = game.get(i);\n                        ^\n/tmp/tmp3arckj7e.java:29:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n5 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            guess = guess.get(i);\n           \
    \ diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdc806c3i.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdc806c3i.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf75usdhk.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpf75usdhk.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            if(!game.get(i).equals(guess.get(i)))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70dm_c2d.java:37)\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        boolean first\
    \ = true;\n        for(long i = 0; i < game.size(); i++) {\n            score\
    \ = game.get(i);\n            guess = guess.get(i);\n            diff = guess\
    \ - score;\n            if(!first) {\n                result.add(diff);\n    \
    \        } else {\n                result.add(0);\n                first = false;\n\
    \            }\n            if(diff < 0) {\n                correct = true;\n\
    \            }\n        }\n        if(correct) {\n            result.add(0);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6qzvfmuy.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp6qzvfmuy.java:29: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp6qzvfmuy.java:30: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmp6qzvfmuy.java:35:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\n/tmp/tmp6qzvfmuy.java:43: error:\
    \ incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            guess = guess.get(i);\n           \
    \ diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdc806c3i.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdc806c3i.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            result.add(diff < 0 ? guess.get(i)\
    \ : diff);\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfaypakzd.java:35)\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        boolean first\
    \ = true;\n        boolean last = false;\n        boolean firstGuess = true;\n\
    \        boolean lastGuess = true;\n        boolean firstScore = true;\n     \
    \   boolean lastScore = true;\n        boolean firstGuess = true;\n        boolean\
    \ lastGuess = true;\n        boolean firstScore = true;\n        boolean lastScore\
    \ = true;\n        boolean firstGuess = true;\n        boolean lastGuess = true;\n\
    \        boolean firstScore = true;\n        boolean lastScore = true;\n     \
    \   boolean firstGuess = true;\n        boolean lastGuess = true;\n        boolean\
    \ firstScore = true;\n        boolean lastScore = true;\n        boolean firstGuess\
    \ = true;\n        boolean lastGuess = true;\n        boolean firstScore = true;\n\
    \        boolean lastScore = true;\n        boolean firstGuess = true;\n     \
    \   boolean lastGuess = true;\n        boolean firstScore = true;\n        boolean\
    \ lastScore = true;\n        boolean firstGuess = true;\n        boolean lastGuess\
    \ = true;\n        boolean firstScore = true;\n        boolean lastScore = true;\n\
    \        boolean firstGuess = true;\n        boolean lastGuess = true;\n     \
    \   boolean firstScore = true;\n        boolean lastScore = true;\n        boolean\
    \ firstGuess = true;\n        boolean lastGuess = true;\n        boolean firstScore\
    \ = true;\n        boolean lastScore = true;\n        boolean firstGuess = true;\n\
    \        boolean lastGuess = true;\n        boolean firstScore = true;\n     \
    \   boolean lastScore = true;\n        boolean firstGuess = true;\n        boolean\
    \ lastGuess = true;\n        boolean firstScore = true;\n        boolean lastScore\
    \ = true;\n        boolean firstGuess = true;\n        boolean lastGuess = true;\n\
    \        boolean firstScore = true;\n        boolean lastScore = true;\n     \
    \   boolean firstGuess = true;\n        boolean lastGuess = true;\n        boolean\
    \ firstScore = true;\n        boolean lastScore = true;\n        boolean firstGuess\
    \ = true;\n        boolean lastGuess = true;\n        boolean firstScore = true;\n\
    \        boolean lastScore = true;\n        boolean firstGuess = true;\n     \
    \   boolean lastGuess = true;\n        boolean firstScore = true;\n        boolean\
    \ lastScore = true;\n        boolean firstGuess = true;\n        boolean lastGuess\
    \ = true;\n        boolean firstScore = true;\n        boolean lastScore = true;\n\
    \        boolean firstGuess = true;\n        boolean lastGuess = true;\n     \
    \   boolean firstScore = true;\n        boolean lastScore = true;\n        boolean\
    \ firstGuess = true;\n        boolean lastGuess = true;\n        boolean firstScore\
    \ = true;\n        boolean lastScore = true;\n        boolean firstGues\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuj1vl15l.java:101: error: ';' expected\n        boolean firstGues\n\
    \                         ^\n1 error\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  if(diff < 0) {\n                diff = -diff;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n\
    \            long guess = guess.get(i);\n            diff = guess - score;\n \
    \           if(guess == score) {\n                result.add(0l);\n          \
    \  } else {\n                result.add(Math.abs(diff));\n            }\n    \
    \    }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm1gr62xt.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpm1gr62xt.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long total = 0;\n      \
    \  for (long i = 0; i < game.size(); i++) {\n            total += game.get(i);\n\
    \        }\n        for (long i = 0; i < guess.size(); i++) {\n            long\
    \ guess = guess.get(i);\n            long diff = guess - total;\n            if\
    \ (diff > 0) {\n                result.add(diff);\n            } else if (diff\
    \ < 0) {\n                result.add(Math.abs(diff));\n            } else {\n\
    \                result.add(0l);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9c3k2n1e.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            total += game.get(i);\n                      \
    \        ^\n/tmp/tmp9c3k2n1e.java:28: error: variable guess is already defined\
    \ in method compare(ArrayList<Long>,ArrayList<Long>)\n            long guess =\
    \ guess.get(i);\n                 ^\n/tmp/tmp9c3k2n1e.java:28: error: long cannot\
    \ be dereferenced\n            long guess = guess.get(i);\n                  \
    \            ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            diff += Math.abs(guess.get(i) - score);\n        }\n        if(diff\
    \ == 0) {\n            result.add(0);\n        } else {\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt9syqmeu.java:30: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(0);\n                       ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        for (long i = 0; i < game.size(); i++) {\n       \
    \     guess = guess.get(i);\n            score = game.get(i);\n            if\
    \ (guess == score) {\n                result.add((long)0);\n            } else\
    \ {\n                result.add((long)Math.abs(guess - score));\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpffduvfnh.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpffduvfnh.java:26: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpffduvfnh.java:27:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \        score = game.get(i);\n                             ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < guess.size();\
    \ i++) {\n            long guess = guess.get(i);\n            long score = game.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            if(!result.contains(difference))\
    \ {\n                result.add(difference);\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcycga0fq.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpcycga0fq.java:24: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for (long\
    \ i = 0; i < game.size(); i++) {\n            long score = game.get(i);\n    \
    \        long guess = guess.get(i);\n            if (guess == score) {\n     \
    \           result.add((long)0);\n            } else {\n                diff =\
    \ guess - score;\n                if (diff > 0) {\n                    result.add((long)diff);\n\
    \                } else {\n                    result.add((long)Math.abs(diff));\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxknd1l8n.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long score = game.get(i);\n                  \
    \                ^\n/tmp/tmpxknd1l8n.java:26: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n            long\
    \ guess = guess.get(i);\n                 ^\n/tmp/tmpxknd1l8n.java:26: error:\
    \ long cannot be dereferenced\n            long guess = guess.get(i);\n      \
    \                        ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long difference\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long \n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5snaz156.java:123: error: not a statement\n        long \n    \
    \    ^\n/tmp/tmp5snaz156.java:123: error: ';' expected\n        long \n      \
    \      ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                diff = -diff;\n            }\n  \
    \          result.add(diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long game2 =\
    \ 0;\n        long game3 = 0;\n        long game4 = 0;\n        long game5 = 0;\n\
    \        long game6 = 0;\n        long game7 = 0;\n        long game8 = 0;\n \
    \       long game9 = 0;\n        long game10 = 0;\n        long game11 = 0;\n\
    \        long game12 = 0;\n        long game13 = 0;\n        long game14 = 0;\n\
    \        long game15 = 0;\n        long game16 = 0;\n        long game17 = 0;\n\
    \        long game18 = 0;\n        long game19 = 0;\n        long game20 = 0;\n\
    \        long game21 = 0;\n        long game22 = 0;\n        long game23 = 0;\n\
    \        long game24 = 0;\n        long game25 = 0;\n        long game26 = 0;\n\
    \        long game27 = 0;\n        long game28 = 0;\n        long game29 = 0;\n\
    \        long game30 = 0;\n        long game31 = 0;\n        long game32 = 0;\n\
    \        long game33 = 0;\n        long game34 = 0;\n        long game35 = 0;\n\
    \        long game36 = 0;\n        long game37 = 0;\n        long game38 = 0;\n\
    \        long game39 = 0;\n        long game40 = 0;\n        long game41 = 0;\n\
    \        long game42 = 0;\n        long game43 = 0;\n        long game44 = 0;\n\
    \        long game45 = 0;\n        long game46 = 0;\n        long game47 = 0;\n\
    \        long game48 = 0;\n        long game49 = 0;\n        long game50 = 0;\n\
    \        long game51 = 0;\n        long game52 = 0;\n        long game53 = 0;\n\
    \        long game54 = 0;\n        long game55 = 0;\n        long game56 = 0;\n\
    \        long game57 = 0;\n        long game58 = 0;\n        long game59 = 0;\n\
    \        long game60 = 0;\n        long game61 = 0;\n        long game62 = 0;\n\
    \        long game63 = 0;\n        long game64 = 0;\n        long game65 = 0;\n\
    \        long game66 = 0;\n        long game67 = 0;\n        long game68 = 0;\n\
    \        long game69 = 0;\n        long game70 = 0;\n        long game71 = 0;\n\
    \        long game72 = 0;\n        long game73 = 0;\n        long game74 = 0;\n\
    \        long game75 = 0;\n        long game76 = 0;\n        long game77 = 0;\n\
    \        long game78 = 0;\n        long game79 = 0;\n        long game80 = 0;\n\
    \        long game81 = 0;\n        long game82 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4fky4n3t.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp4fky4n3t.java:26: error: variable game is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long game = 0;\n  \
    \           ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long diff = 0;\n        long score\
    \ = 0;\n        long guess = 0;\n        long game = 0;\n        long diff2 =\
    \ 0;\n        long score2 = 0;\n        long guess2 = 0;\n        long game2 =\
    \ 0;\n        long diff3 = 0;\n        long score3 = 0;\n        long guess3 =\
    \ 0;\n        long game3 = 0;\n        long diff4 = 0;\n        long score4 =\
    \ 0;\n        long guess4 = 0;\n        long game4 = 0;\n        long diff5 =\
    \ 0;\n        long score5 = 0;\n        long guess5 = 0;\n        long game5 =\
    \ 0;\n        long diff6 = 0;\n        long score6 = 0;\n        long guess6 =\
    \ 0;\n        long game6 = 0;\n        long diff7 = 0;\n        long score7 =\
    \ 0;\n        long guess7 = 0;\n        long game7 = 0;\n        long diff8 =\
    \ 0;\n        long score8 = 0;\n        long guess8 = 0;\n        long game8 =\
    \ 0;\n        long diff9 = 0;\n        long score9 = 0;\n        long guess9 =\
    \ 0;\n        long game9 = 0;\n        long diff10 = 0;\n        long score10\
    \ = 0;\n        long guess10 = 0;\n        long game10 = 0;\n        long diff11\
    \ = 0;\n        long score11 = 0;\n        long guess11 = 0;\n        long game11\
    \ = 0;\n        long diff12 = 0;\n        long score12 = 0;\n        long guess12\
    \ = 0;\n        long game12 = 0;\n        long diff13 = 0;\n        long score13\
    \ = 0;\n        long guess13 = 0;\n        long game13 = 0;\n        long diff14\
    \ = 0;\n        long score14 = 0;\n        long guess14 = 0;\n        long game14\
    \ = 0;\n        long diff15 = 0;\n        long score15 = 0;\n        long guess15\
    \ = 0;\n        long game15 = 0;\n        long diff16 = 0;\n        long score16\
    \ = 0;\n        long guess16 = 0;\n        long game16 = 0;\n        long diff17\
    \ = 0;\n        long score17 = 0;\n        long guess17 = 0;\n        long game17\
    \ = 0;\n        long diff18 = 0;\n        long score18 = 0;\n        long guess18\
    \ = 0;\n        long game18 = 0;\n        long diff19 = 0;\n        long score19\
    \ = 0;\n        long guess19 = 0;\n        long game19 = 0;\n        long diff20\
    \ = 0;\n        long score20 = 0;\n        long guess20 = 0;\n        long game20\
    \ = 0;\n        long diff21 = 0;\n        long score21 = 0;\n        long guess21\
    \ = 0;\n        long game21 = 0;\n        long diff22 = 0;\n        long score22\
    \ = 0;\n        long guess22 = 0;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5r_0m89h.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp5r_0m89h.java:26: error: variable game is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long game = 0;\n  \
    \           ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        long difference2 = 0;\n        long\
    \ difference3 = 0;\n        long difference4 = 0;\n        long difference5 =\
    \ 0;\n        long difference6 = 0;\n        long difference7 = 0;\n        long\
    \ difference8 = 0;\n        long difference9 = 0;\n        long difference10 =\
    \ 0;\n        long difference11 = 0;\n        long difference12 = 0;\n       \
    \ long difference13 = 0;\n        long difference14 = 0;\n        long difference15\
    \ = 0;\n        long difference16 = 0;\n        long difference17 = 0;\n     \
    \   long difference18 = 0;\n        long difference19 = 0;\n        long difference20\
    \ = 0;\n        long difference21 = 0;\n        long difference22 = 0;\n     \
    \   long difference23 = 0;\n        long difference24 = 0;\n        long difference25\
    \ = 0;\n        long difference26 = 0;\n        long difference27 = 0;\n     \
    \   long difference28 = 0;\n        long difference29 = 0;\n        long difference30\
    \ = 0;\n        long difference31 = 0;\n        long difference32 = 0;\n     \
    \   long difference33 = 0;\n        long difference34 = 0;\n        long difference35\
    \ = 0;\n        long difference36 = 0;\n        long difference37 = 0;\n     \
    \   long difference38 = 0;\n        long difference39 = 0;\n        long difference40\
    \ = 0;\n        long difference41 = 0;\n        long difference42 = 0;\n     \
    \   long difference43 = 0;\n        long difference44 = 0;\n        long difference45\
    \ = 0;\n        long difference46 = 0;\n        long difference47 = 0;\n     \
    \   long difference48 = 0;\n        long difference49 = 0;\n        long difference50\
    \ = 0;\n        long difference51 = 0;\n        long difference52 = 0;\n     \
    \   long difference53 = 0;\n        long difference54 = 0;\n        long difference55\
    \ = 0;\n        long difference56 = 0;\n        long difference57 = 0;\n     \
    \   long difference58 = 0;\n        long difference59 = 0;\n        long difference60\
    \ = 0;\n        long difference61 = 0;\n        long difference62 = 0;\n     \
    \   long difference63 = 0;\n        long difference64 = 0;\n        long difference65\
    \ = 0;\n        long difference66 = 0;\n        long difference67 = 0;\n     \
    \   long difference68 = 0;\n        long difference69 = 0;\n        long difference70\
    \ = 0;\n        long difference71 = 0;\n        long difference72 = 0;\n     \
    \   long difference73 = 0;\n        long difference74 = 0;\n        long difference75\
    \ = 0;\n        long difference76 = 0;\n        long difference77 = 0;\n     \
    \   long difference78 = 0;\n        long difference79 = 0;\n        long difference80\
    \ = 0;\n        long difference81 = 0;\n        long difference82 = 0;\n     \
    \   long difference83 = 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf0_6fo_o.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long total = 0;\n      \
    \  long totalGuess = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessed = 0;\n        long total\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwf_msbs3.java:65: error: ';' expected\n        long total\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            guess += guess.get(i);\n        }\n        for(int i = 0; i < guess.size();\
    \ i++) {\n            guess = Math.abs(guess - score);\n            result.add(guess);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6wv80542.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp6wv80542.java:27: error: long cannot be dereferenced\n      \
    \      guess += guess.get(i);\n                          ^\n/tmp/tmp6wv80542.java:29:\
    \ error: long cannot be dereferenced\n        for(int i = 0; i < guess.size();\
    \ i++) {\n                                ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            result.add(diff);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2xg2n4h.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpq2xg2n4h.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (int i = 0; i < game.size(); i++) {\n         \
    \   score = game.get(i);\n            diff = guess.get(i) - score;\n         \
    \   if (diff < 0) {\n                diff *= -1;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(difference == 0) {\n                correct = true;\n\
    \            }\n            result.add(difference);\n        }\n        if(correct)\
    \ {\n            return result;\n        }\n        else {\n            return\
    \ result;\n        }\n    }\n    public static void main(String[] args) {\n  \
    \  assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpflzxbv_w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpflzxbv_w.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n  \
    \          if(diff < 0) {\n                result.add(Math.abs(diff));\n     \
    \       } else {\n                result.add(diff);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795508
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < guess.size(); i++)\
    \ {\n            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff * -1 : diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795508
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long diff = game.get(i) - guess.get(i);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795508
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (int i = 0; i < game.size(); i++) {\n         \
    \   if (game.get(i) == guess.get(i)) {\n                score = 0;\n         \
    \   } else {\n                score = Math.abs(game.get(i) - guess.get(i));\n\
    \            }\n            result.add(score);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        boolean correct = false;\n        for (long guesstime : guess)\
    \ {\n            if (game.contains(guesstime)) {\n                score++;\n \
    \           } else {\n                difference = Math.abs(guesstime - score);\n\
    \                result.add(difference);\n                score = 0;\n       \
    \         correct = false;\n            }\n        }\n        if (correct) {\n\
    \            result.add(0);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaubp2ax0.java:37: error: incompatible types: int cannot be converted\
    \ to Long\n            result.add(0);\n                       ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for (long i\
    \ = 0; i < game.size(); i++) {\n            if (game.get(i) == guess.get(i)) {\n\
    \                correct = true;\n                score = 0;\n            } else\
    \ {\n                score = Math.abs(game.get(i) - guess.get(i));\n         \
    \   }\n            result.add(score);\n        }\n        if (correct) {\n   \
    \         result.add(0);\n        } else {\n            for (long i = 0; i < game.size();\
    \ i++) {\n                diff = Math.abs(game.get(i) - guess.get(i));\n     \
    \           if (diff != 0) {\n                    result.add(diff);\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzbdqfbxy.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzbdqfbxy.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (game.get(i) == guess.get(i)) {\n         \
    \                ^\n/tmp/tmpzbdqfbxy.java:28: error: long cannot be dereferenced\n\
    \            if (game.get(i) == guess.get(i)) {\n                            \
    \        ^\n/tmp/tmpzbdqfbxy.java:32: error: incompatible types: possible lossy\
    \ conversion from long to int\n                score = Math.abs(game.get(i) -\
    \ guess.get(i));\n                                          ^\n/tmp/tmpzbdqfbxy.java:32:\
    \ error: long cannot be dereferenced\n                score = Math.abs(game.get(i)\
    \ - guess.get(i));\n                                                    ^\n/tmp/tmpzbdqfbxy.java:37:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\n/tmp/tmpzbdqfbxy.java:40: error: incompatible types:\
    \ possible lossy conversion from long to int\n                diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n                                         ^\n/tmp/tmpzbdqfbxy.java:40:\
    \ error: long cannot be dereferenced\n                diff = Math.abs(game.get(i)\
    \ - guess.get(i));\n                                                   ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n8 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long diff = 0;\n\
    \        for (long i = 0; i < game.size(); i++) {\n            total += game.get(i);\n\
    \            diff = game.get(i) - guess.get(i);\n            if (diff < 0) {\n\
    \                result.add(diff);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        if (result.size() == game.size()) {\n     \
    \       return result;\n        } else {\n            ArrayList<Long> temp = new\
    \ ArrayList<>();\n            for (long i = 0; i < game.size(); i++) {\n     \
    \           temp.add(Math.abs(game.get(i) - guess.get(i)));\n            }\n \
    \           return temp;\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsw1uqvqu.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            total += game.get(i);\n                      \
    \        ^\n/tmp/tmpsw1uqvqu.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = game.get(i) - guess.get(i);\n\
    \                            ^\n/tmp/tmpsw1uqvqu.java:27: error: incompatible\
    \ types: possible lossy conversion from long to int\n            diff = game.get(i)\
    \ - guess.get(i);\n                                           ^\n/tmp/tmpsw1uqvqu.java:39:\
    \ error: incompatible types: possible lossy conversion from long to int\n    \
    \            temp.add(Math.abs(game.get(i) - guess.get(i)));\n               \
    \                            ^\n/tmp/tmpsw1uqvqu.java:39: error: incompatible\
    \ types: possible lossy conversion from long to int\n                temp.add(Math.abs(game.get(i)\
    \ - guess.get(i)));\n                                                        \
    \  ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n5 errors\n"
  stdout: ''
  timestamp: 1659795508
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        for (long guesstime\
    \ : guess) {\n            score = Math.abs(guess - game);\n            result.add(score);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgidvfa7_.java:25: error: bad operand types for binary operator\
    \ '-'\n            score = Math.abs(guess - game);\n                         \
    \          ^\n  first type:  ArrayList<Long>\n  second type: ArrayList<Long>\n\
    1 error\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long diff = 0;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            result.add(diff);\n        }\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrmtwx0w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzrmtwx0w.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        boolean correct = false;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            diff = guess - score;\n            if(diff\
    \ < 0) {\n                correct = false;\n                diff = -diff;\n  \
    \          }\n            result.add(diff);\n        }\n        if(correct) {\n\
    \            return result;\n        } else {\n            return result;\n  \
    \      }\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwm1z2d89.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpwm1z2d89.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigv0qljs.java:33)\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqvv_ns4q.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpqvv_ns4q.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwe4gcbm.java:33)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  for (long i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            if (guess.contains(i)) {\n                score -= guess.get(i);\n\
    \            }\n            result.add(score);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpizd55ckj.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score += game.get(i);\n                      \
    \        ^\n/tmp/tmpizd55ckj.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n                score -= guess.get(i);\n      \
    \                             ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        long scoreDifference = 0;\n        boolean\
    \ correct = false;\n        boolean guessedCorrectly = false;\n        boolean\
    \ guessedIncorrectly = false;\n        boolean guessedCorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectly = false;\n        boolean guessedCorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly\
    \ = false;\n        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n\
    \        boolean guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean\
    \ guessedIncorrectlyIncorrectlyIncorrectly = false;\n        boolean guessedIncorrectlyIncorrectlyIn\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg_rghufc.java:68: error: ';' expected\n        boolean guessedIncorrectlyIncorrectlyIn\n\
    \                                               ^\n1 error\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            if(diff < 0)\
    \ {\n                result.add(Math.abs(diff));\n            } else {\n     \
    \           result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795510
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  if(diff < 0) {\n                diff = -diff;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795506
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < guess.size(); i++) {\n\
    \            long diff = guess.get(i) - game.get(i);\n            result.add(diff\
    \ < 0 ? -diff : diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for (long g : guess) {\n            score = Math.abs(g - score);\n\
    \            diff = g - score;\n            if (score == 0) {\n              \
    \  result.add(0);\n            } else {\n                result.add(diff);\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptiqp57id.java:29: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(0);\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            if(difference < 0)\
    \ {\n                difference = difference * -1;\n            }\n          \
    \  result.add(difference);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalScore = 0;\n        long totalGuesses = 0;\n       \
    \ long totalScores = 0;\n        long totalGuesses2 = 0;\n        long totalScores2\
    \ = 0;\n        long totalGuesses3 = 0;\n        long totalScores3 = 0;\n    \
    \    long totalGuesses4 = 0;\n        long totalScores4 = 0;\n        long totalGuesses5\
    \ = 0;\n        long totalScores5 = 0;\n        long totalGuesses6 = 0;\n    \
    \    long totalScores6 = 0;\n        long totalGuesses7 = 0;\n        long totalScores7\
    \ = 0;\n        long totalGuesses8 = 0;\n        long totalScores8 = 0;\n    \
    \    long totalGuesses9 = 0;\n        long totalScores9 = 0;\n        long totalGuesses10\
    \ = 0;\n        long totalScores10 = 0;\n        long totalGuesses11 = 0;\n  \
    \      long totalScores11 = 0;\n        long totalGuesses12 = 0;\n        long\
    \ totalScores12 = 0;\n        long totalGuesses13 = 0;\n        long totalScores13\
    \ = 0;\n        long totalGuesses14 = 0;\n        long totalScores14 = 0;\n  \
    \      long totalGuesses15 = 0;\n        long totalScores15 = 0;\n        long\
    \ totalGuesses16 = 0;\n        long totalScores16 = 0;\n        long totalGuesses17\
    \ = 0;\n        long totalScores17 = 0;\n        long totalGuesses18 = 0;\n  \
    \      long totalScores18 = 0;\n        long totalGuesses19 = 0;\n        long\
    \ totalScores19 = 0;\n        long totalGuesses20 = 0;\n        long totalScores20\
    \ = 0;\n        long totalGuesses21 = 0;\n        long totalScores21 = 0;\n  \
    \      long totalGuesses22 = 0;\n        long totalScores22 = 0;\n        long\
    \ totalGuesses23 = 0;\n        long totalScores23 = 0;\n        long totalGuesses24\
    \ = 0;\n        long totalScores24 = 0;\n        long totalGuesses25 = 0;\n  \
    \      long totalScores25 = 0;\n        long totalGuesses26 = 0;\n        long\
    \ totalScores26 = 0;\n        long totalGuesses27 = 0;\n        long totalScores27\
    \ = 0;\n        long totalGuesses28 = 0;\n        long totalScores28 = 0;\n  \
    \      long totalGuesses29 = 0;\n        long totalScores29 = 0;\n        long\
    \ total\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaxt9mei0.java:84: error: ';' expected\n        long total\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        \n    }\n\
    \    public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi_c_7ink.java:32: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:33: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:34: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:35: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:36: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:37: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:38: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmpi_c_7ink.java:39: error: variable totalGuessedIncorrectlyIncorrectly is\
    \ already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n       \
    \ long totalGuessedIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmpi_c_7ink.java:40:\
    \ error: variable totalGuessedIncorrectlyIncorrectly is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIn"
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwe4gcbm.java:33)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwe4gcbm.java:33)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            difference = guess.get(i) - score;\n\
    \            if(difference < 0) {\n                difference = difference * -1;\n\
    \            }\n            result.add(difference);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n  \
    \          if(diff < 0) {\n                result.add(diff);\n            } else\
    \ {\n                result.add(Math.abs(diff));\n            }\n        }\n \
    \       return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrmtwx0w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzrmtwx0w.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? diff * -1 : diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n  \
    \          if (game.get(i) == guess.get(i)) {\n                score++;\n    \
    \        } else {\n                guess = game.get(i);\n                diff\
    \ = guess - score;\n                result.add(diff);\n                score =\
    \ 0;\n            }\n        }\n        if (score > 0) {\n            guess =\
    \ game.get(game.size() - 1);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuoypcj26.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpuoypcj26.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n            if (game.get(i) == guess.get(i)) {\n         \
    \                ^\n/tmp/tmpuoypcj26.java:27: error: long cannot be dereferenced\n\
    \            if (game.get(i) == guess.get(i)) {\n                            \
    \        ^\n/tmp/tmpuoypcj26.java:30: error: incompatible types: possible lossy\
    \ conversion from long to int\n                guess = game.get(i);\n        \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            long diff = Math.abs(guess - score);\n\
    \            result.add(diff);\n        }\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptd5rzwbw.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmptd5rzwbw.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff != 0) {\n                result.add(diff);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc64xb9ir.java:33)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            long guess = guess.get(i);\n   \
    \         long score = game.get(i);\n            diff = abs(guess - score);\n\
    \            if(guess == score) {\n                result.add((long)0);\n    \
    \        } else {\n                result.add(diff);\n            }\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptv5s1kzc.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmptv5s1kzc.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n/tmp/tmptv5s1kzc.java:27:\
    \ error: cannot find symbol\n            diff = abs(guess - score);\n        \
    \           ^\n  symbol:   method abs(long)\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(guess == score) {\n                correct = true;\n\
    \            }\n            result.add(difference);\n        }\n        if(correct)\
    \ {\n            return result;\n        }\n        for(int i = 0; i < guess.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp36eh6phw.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp36eh6phw.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmp36eh6phw.java:39:\
    \ error: long cannot be dereferenced\n        for(int i = 0; i < guess.size();\
    \ i++) {\n                                ^\n/tmp/tmp36eh6phw.java:41: error:\
    \ long cannot be dereferenced\n            guess = guess.get(i);\n           \
    \              ^\n4 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            guess = guess.get(i);\n           \
    \ diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdc806c3i.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdc806c3i.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            result.add(diff);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2xg2n4h.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpq2xg2n4h.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            long score = game.get(i);\n           \
    \ long guess = guess.get(i);\n            diff = guess - score;\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_e5p5ce.java:26: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpm_e5p5ce.java:26: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ < 0) {\n                result.add(-diff);\n            } else {\n         \
    \       result.add(diff);\n            }\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ != 0) {\n                result.add(-diff);\n            }\n        }\n    \
    \    return result;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo899y0ss.java:32)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long i = 0;\
    \ i < game.size(); i++) {\n            long score = game.get(i);\n           \
    \ long guess = guess.get(i);\n            if (guess == score) {\n            \
    \    result.add(0);\n            } else {\n                diff = guess - score;\n\
    \                result.add(Math.abs(diff));\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22bm55j8.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long score = game.get(i);\n                  \
    \                ^\n/tmp/tmp22bm55j8.java:26: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n            long\
    \ guess = guess.get(i);\n                 ^\n/tmp/tmp22bm55j8.java:26: error:\
    \ long cannot be dereferenced\n            long guess = guess.get(i);\n      \
    \                        ^\n/tmp/tmp22bm55j8.java:28: error: incompatible types:\
    \ int cannot be converted to Long\n                result.add(0);\n          \
    \                 ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        for (long score\
    \ : game) {\n            total += score;\n        }\n        for (long guess :\
    \ guess) {\n            total -= guess;\n        }\n        if (total == 0) {\n\
    \            result.add(0l);\n        } else {\n            result.add(Math.abs(total\
    \ - game.get(game.size() - 1)));\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6i3iwt4y.java:27: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        for (long guess : guess) {\n\
    \                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwe4gcbm.java:33)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53_ninuc.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        boolean correct = false;\n        boolean\
    \ correct2 = false;\n        boolean correct3 = false;\n        boolean correct4\
    \ = false;\n        boolean correct5 = false;\n        boolean correct6 = false;\n\
    \        boolean correct7 = false;\n        boolean correct8 = false;\n      \
    \  boolean correct9 = false;\n        boolean correct10 = false;\n        boolean\
    \ correct11 = false;\n        boolean correct12 = false;\n        boolean correct13\
    \ = false;\n        boolean correct14 = false;\n        boolean correct15 = false;\n\
    \        boolean correct16 = false;\n        boolean correct17 = false;\n    \
    \    boolean correct18 = false;\n        boolean correct19 = false;\n        boolean\
    \ correct20 = false;\n        boolean correct21 = false;\n        boolean correct22\
    \ = false;\n        boolean correct23 = false;\n        boolean correct24 = false;\n\
    \        boolean correct25 = false;\n        boolean correct26 = false;\n    \
    \    boolean correct27 = false;\n        boolean correct28 = false;\n        boolean\
    \ correct29 = false;\n        boolean correct30 = false;\n        boolean correct31\
    \ = false;\n        boolean correct32 = false;\n        boolean correct33 = false;\n\
    \        boolean correct34 = false;\n        boolean correct35 = false;\n    \
    \    boolean correct36 = false;\n        boolean correct37 = false;\n        boolean\
    \ correct38 = false;\n        boolean correct39 = false;\n        boolean correct40\
    \ = false;\n        boolean correct41 = false;\n        boolean correct42 = false;\n\
    \        boolean correct43 = false;\n        boolean correct44 = false;\n    \
    \    boolean correct45 = false;\n        boolean correct46 = false;\n        boolean\
    \ correct47 = false;\n        boolean correct48 = false;\n        boolean correct49\
    \ = false;\n        boolean correct50 = false;\n        boolean correct51 = false;\n\
    \        boolean correct52 = false;\n        boolean correct53 = false;\n    \
    \    boolean correct54 = false;\n        boolean correct55 = false;\n        boolean\
    \ correct56 = false;\n        boolean correct57 = false;\n        boolean correct58\
    \ = false;\n        boolean correct59 = false;\n        boolean correct60 = false;\n\
    \        boolean correct61 = false;\n        boolean correct62 = false;\n    \
    \    boolean correct63 = false;\n        boolean correct64 = false;\n        boolean\
    \ correct65 = false;\n        boolean correct66 = false;\n        boolean correct67\
    \ = false;\n        boolean correct68 = false;\n        boolean correct69 = false;\n\
    \        boolean correct70 = false;\n        boolean correct71 = false;\n    \
    \    boolean correct72 = false;\n        boolean correct73 = false;\n        boolean\
    \ correct74 = false;\n        boolean correct75 = false;\n        boolean correct76\
    \ = false;\n        boolean correct77 = false;\n        boolean correct78 = false;\n\
    \        boolean correct\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdmc_fm7r.java:104: error: ';' expected\n        boolean correct\n\
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        for (long\
    \ guess: guess) {\n            score += Math.abs(guess - game.get((int)(Math.random()\
    \ * game.size())));\n        }\n        for (long guess: guess) {\n          \
    \  long difference = Math.abs(guess - game.get((int)(Math.random() * game.size())));\n\
    \            if (difference == 0) {\n                result.add(0);\n        \
    \    } else {\n                result.add(difference);\n            }\n      \
    \  }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwlgkvuh9.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        for (long guess: guess) {\n\
    \                  ^\n/tmp/tmpwlgkvuh9.java:27: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n        for (long\
    \ guess: guess) {\n                  ^\n/tmp/tmpwlgkvuh9.java:30: error: incompatible\
    \ types: int cannot be converted to Long\n                result.add(0);\n   \
    \                        ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            result.add(diff);\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2xg2n4h.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpq2xg2n4h.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyButIncorrectly = 0;\n        long\
    \ totalGuessedIncorrectlyButIncorrectlyButCorrectly = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButCorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectlyButIncorrectly\
    \ = 0;\n        long totalGues\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps5efxso3.java:48: error: ';' expected\n        long totalGues\n\
    \                      ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long total = 0;\n      \
    \  long totalGuess = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_aw73fuq.java:32: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp_aw73fuq.java:33: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp_aw73fuq.java:34: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp_aw73fuq.java:35: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp_aw73fuq.java:36: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp_aw73fuq.java:37: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp_aw73fuq.java:38: error: variable totalGuessedIncorrectlyIncorrectly is\
    \ already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n       \
    \ long totalGuessedIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmp_aw73fuq.java:39:\
    \ error: variable totalGuessedIncorrectlyIncorrectly is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n             ^\n/tmp/tmp_aw73fuq.java:40: error: variable totalGuessedIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectly ="
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53_ninuc.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < guess.size();\
    \ i++) {\n            long diff = guess.get(i) - game.get(i);\n            if(diff\
    \ != 0) {\n                result.add(diff);\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprv3chwng.java:32)\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            if(guess\
    \ == score) {\n                difference = 0;\n            }\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2qlote77.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp2qlote77.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        long diff2 = 0;\n        long diff3 =\
    \ 0;\n        long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n\
    \        long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n \
    \       long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n\
    \        long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcvqnvogv.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(!result.contains(diff))\
    \ {\n                result.add(diff);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf04cx31f.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpf04cx31f.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score += game.get(i);\n\
    \            difference += Math.abs(guess.get(i) - score);\n        }\n      \
    \  if(difference == 0) {\n            result.add(0l);\n        } else {\n    \
    \        result.add(difference);\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa2vdsl6v.java:37)\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n        \
    \    score = game.get(i);\n            diff = guess.get(i) - score;\n        \
    \    if (diff < 0) {\n                diff = -diff;\n            }\n         \
    \   result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpye5girno.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpye5girno.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = guess.get(i) - score;\n    \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(guess == score) {\n                correct = true;\n\
    \            }\n            result.add(difference);\n        }\n        if(correct)\
    \ {\n            return result;\n        } else {\n            return result;\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpge8_g0hd.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpge8_g0hd.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        for(int i = 0; i < game.size(); i++) {\n  \
    \          int index = result.indexOf(i);\n            int guessIndex = difference.indexOf(i);\n\
    \            int differenceIndex = guessIndex - index;\n            int differenceAbs\
    \ = Math.abs(differenceIndex);\n            difference.set(differenceIndex, differenceAbs);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5t0fpb7_.java:29: error: incompatible types: int cannot be converted\
    \ to Long\n            difference.set(differenceIndex, differenceAbs);\n     \
    \                                       ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n1 error\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2x6vpk2_.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp2x6vpk2_.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   boolean found = false;\n        boolean found2 = false;\n        boolean found3\
    \ = false;\n        boolean found4 = false;\n        boolean found5 = false;\n\
    \        boolean found6 = false;\n        boolean found7 = false;\n        boolean\
    \ found8 = false;\n        boolean found9 = false;\n        boolean found10 =\
    \ false;\n        boolean found11 = false;\n        boolean found12 = false;\n\
    \        boolean found13 = false;\n        boolean found14 = false;\n        boolean\
    \ found15 = false;\n        boolean found16 = false;\n        boolean found17\
    \ = false;\n        boolean found18 = false;\n        boolean found19 = false;\n\
    \        boolean found20 = false;\n        boolean found21 = false;\n        boolean\
    \ found22 = false;\n        boolean found23 = false;\n        boolean found24\
    \ = false;\n        boolean found25 = false;\n        boolean found26 = false;\n\
    \        boolean found27 = false;\n        boolean found28 = false;\n        boolean\
    \ found29 = false;\n        boolean found30 = false;\n        boolean found31\
    \ = false;\n        boolean found32 = false;\n        boolean found33 = false;\n\
    \        boolean found34 = false;\n        boolean found35 = false;\n        boolean\
    \ found36 = false;\n        boolean found37 = false;\n        boolean found38\
    \ = false;\n        boolean found39 = false;\n        boolean found40 = false;\n\
    \        boolean found41 = false;\n        boolean found42 = false;\n        boolean\
    \ found43 = false;\n        boolean found44 = false;\n        boolean found45\
    \ = false;\n        boolean found46 = false;\n        boolean found47 = false;\n\
    \        boolean found48 = false;\n        boolean found49 = false;\n        boolean\
    \ found50 = false;\n        boolean found51 = false;\n        boolean found52\
    \ = false;\n        boolean found53 = false;\n        boolean found54 = false;\n\
    \        boolean found55 = false;\n        boolean found56 = false;\n        boolean\
    \ found57 = false;\n        boolean found58 = false;\n        boolean found59\
    \ = false;\n        boolean found60 = false;\n        boolean found61 = false;\n\
    \        boolean found62 = false;\n        boolean found63 = false;\n        boolean\
    \ found64 = false;\n        boolean found65 = false;\n        boolean found66\
    \ = false;\n        boolean found67 = false;\n        boolean found68 = false;\n\
    \        boolean found69 = false;\n        boolean found70 = false;\n        boolean\
    \ found71 = false;\n        boolean found72 = false;\n        boolean found73\
    \ = false;\n        boolean found74 = false;\n        boolean found75 = false;\n\
    \        boolean found76 = false;\n        boolean found77 = false;\n        boolean\
    \ found78\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphe22nn1a.java:104: error: ';' expected\n        boolean found78\n\
    \                       ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        boolean\
    \ guessedCorrectly = false;\n        boolean guessedCorrectly2 = false;\n    \
    \    boolean guessedCorrectly3 = false;\n        boolean guessedCorrectly4 = false;\n\
    \        boolean guessedCorrectly5 = false;\n        boolean guessedCorrectly6\
    \ = false;\n        boolean guessedCorrectly7 = false;\n        boolean guessedCorrectly8\
    \ = false;\n        boolean guessedCorrectly9 = false;\n        boolean guessedCorrectly10\
    \ = false;\n        boolean guessedCorrectly11 = false;\n        boolean guessedCorrectly12\
    \ = false;\n        boolean guessedCorrectly13 = false;\n        boolean guessedCorrectly14\
    \ = false;\n        boolean guessedCorrectly15 = false;\n        boolean guessedCorrectly16\
    \ = false;\n        boolean guessedCorrectly17 = false;\n        boolean guessedCorrectly18\
    \ = false;\n        boolean guessedCorrectly19 = false;\n        boolean guessedCorrectly20\
    \ = false;\n        boolean guessedCorrectly21 = false;\n        boolean guessedCorrectly22\
    \ = false;\n        boolean guessedCorrectly23 = false;\n        boolean guessedCorrectly24\
    \ = false;\n        boolean guessedCorrectly25 = false;\n        boolean guessedCorrectly26\
    \ = false;\n        boolean guessedCorrectly27 = false;\n        boolean guessedCorrectly28\
    \ = false;\n        boolean guessedCorrectly29 = false;\n        boolean guessedCorrectly30\
    \ = false;\n        boolean guessedCorrectly31 = false;\n        boolean guessedCorrectly32\
    \ = false;\n        boolean guessedCorrectly33 = false;\n        boolean guessedCorrectly34\
    \ = false;\n        boolean guessedCorrectly35 = false;\n        boolean guessedCorrectly36\
    \ = false;\n        boolean guessedCorrectly37 = false;\n        boolean guessedCorrectly38\
    \ = false;\n        boolean guessedCorrectly39 = false;\n        boolean guessedCorrectly40\
    \ = false;\n        boolean guessedCorrectly41 = false;\n        boolean guessedCorrectly42\
    \ = false;\n        boolean guessedCorrectly43 = false;\n        boolean guessedCorrectly44\
    \ = false;\n        boolean guessedCorrectly45 = false;\n        boolean guessedCorrectly46\
    \ = false;\n        boolean guessedCorrectly47 = false;\n        boolean guessedCorrectly48\
    \ = false;\n        boolean guessedCorrectly49 = false;\n        boolean guessedCorrectly50\
    \ = false;\n        boolean guessedCorrectly51 = false;\n        boolean guessedCorrectly52\
    \ = false;\n        boolean guessedCorrectly53 = \n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuqaukv7v.java:80: error: illegal start of expression\n    }\n \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessed =\
    \ 0;\n        long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long total\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw571c4m_.java:64: error: ';' expected\n        long total\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(long g : guess) {\n            score += g;\n        }\n        for(long\
    \ g : guess) {\n            diff = g - score;\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsvmm9e18.java:35)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptwe4gcbm.java:33)\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53_ninuc.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 =\
    \ 0;\n        long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n\
    \        long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n\
    \        long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpggcck9dc.java:107: error: ';' expected\n        long diff84\n \
    \                  ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> guess = new ArrayList<Long>(guess);\n\
    \        ArrayList<Long> difference = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference2 = new ArrayList<Long>();\n        ArrayList<Long> difference3 =\
    \ new ArrayList<Long>();\n        ArrayList<Long> difference4 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference5 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference6 = new ArrayList<Long>();\n        ArrayList<Long> difference7 =\
    \ new ArrayList<Long>();\n        ArrayList<Long> difference8 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference9 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference10 = new ArrayList<Long>();\n        ArrayList<Long> difference11\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference14 = new ArrayList<Long>();\n        ArrayList<Long> difference15\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference16 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference17 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference18 = new ArrayList<Long>();\n        ArrayList<Long> difference19\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference20 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference21 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference22 = new ArrayList<Long>();\n        ArrayList<Long> difference23\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference26 = new ArrayList<Long>();\n        ArrayList<Long> difference27\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference28 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference29 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference30 = new ArrayList<Long>();\n        ArrayList<Long> difference31\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference32 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference33 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference34 = new ArrayList<Long>();\n        ArrayList<Long> difference35\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference36 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference37 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference38 = new ArrayList<Long>();\n        ArrayList<Long> difference39\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference40 = new ArrayList<Long>();\n\
    \        ArrayList<Long> difference41 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ difference42 = new ArrayList<Long>();\n        ArrayList<Long> difference43\
    \ = new ArrayList<Long>();\n        ArrayList<Long> difference44 = new ArrayList<Long>();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplk56tzib.java:23: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        ArrayList<Long> guess = new\
    \ ArrayList<Long>(guess);\n                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf75usdhk.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpf75usdhk.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqvv_ns4q.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpqvv_ns4q.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795509
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if(guess == score) {\n       \
    \         result.add(0);\n            } else {\n                result.add(Math.abs(guess\
    \ - score));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr9_56o44.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpr9_56o44.java:27: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpr9_56o44.java:29:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long guess\
    \ = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     diff = guess - score;\n            if(guess == score) {\n              \
    \  result.add(0);\n            } else {\n                result.add(Math.abs(diff));\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpecodlisj.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpecodlisj.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpecodlisj.java:31:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  if(diff < 0) {\n                diff *= -1;\n            }\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2z_yo2n.java:33)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessed =\
    \ 0;\n        long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long total\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw571c4m_.java:64: error: ';' expected\n        long total\n   \
    \               ^\n1 error\n"
  stdout: ''
  timestamp: 1659795510
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            result.add(diff);\n   \
    \     }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2z_yo2n.java:33)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long diff = 0;\n        long maxDiff\
    \ = Long.MIN_VALUE;\n        for(long i = 0; i < game.size(); i++) {\n       \
    \     diff = game.get(i) - guess.get(i);\n            if(diff > maxDiff) {\n \
    \               maxDiff = diff;\n            }\n            result.add(diff);\n\
    \        }\n        if(maxDiff == 0) {\n            result.add(0l);\n        }\
    \ else {\n            result.add(maxDiff);\n        }\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp24r0apn0.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            diff = game.get(i) - guess.get(i);\n         \
    \                   ^\n/tmp/tmp24r0apn0.java:26: error: incompatible types: possible\
    \ lossy conversion from long to int\n            diff = game.get(i) - guess.get(i);\n\
    \                                           ^\nNote: Some messages have been simplified;\
    \ recompile with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ != 0) {\n                result.add(diff);\n            }\n        }\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp0wwrcec.java:32)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        ArrayList<Long> difference = new\
    \ ArrayList<Long>(guess);\n        Arrays.sort(difference);\n        long differenceSum\
    \ = 0;\n        long differenceSum2 = 0;\n        long differenceSum3 = 0;\n \
    \       long differenceSum4 = 0;\n        long differenceSum5 = 0;\n        long\
    \ differenceSum6 = 0;\n        long differenceSum7 = 0;\n        long differenceSum8\
    \ = 0;\n        long differenceSum9 = 0;\n        long differenceSum10 = 0;\n\
    \        long differenceSum11 = 0;\n        long differenceSum12 = 0;\n      \
    \  long differenceSum13 = 0;\n        long differenceSum14 = 0;\n        long\
    \ differenceSum15 = 0;\n        long differenceSum16 = 0;\n        long differenceSum17\
    \ = 0;\n        long differenceSum18 = 0;\n        long differenceSum19 = 0;\n\
    \        long differenceSum20 = 0;\n        long differenceSum21 = 0;\n      \
    \  long differenceSum22 = 0;\n        long differenceSum23 = 0;\n        long\
    \ differenceSum24 = 0;\n        long differenceSum25 = 0;\n        long differenceSum26\
    \ = 0;\n        long differenceSum27 = 0;\n        long differenceSum28 = 0;\n\
    \        long differenceSum29 = 0;\n        long differenceSum30 = 0;\n      \
    \  long differenceSum31 = 0;\n        long differenceSum32 = 0;\n        long\
    \ differenceSum33 = 0;\n        long differenceSum34 = 0;\n        long differenceSum35\
    \ = 0;\n        long differenceSum36 = 0;\n        long differenceSum37 = 0;\n\
    \        long differenceSum38 = 0;\n        long differenceSum39 = 0;\n      \
    \  long differenceSum40 = 0;\n        long differenceSum41 = 0;\n        long\
    \ differenceSum42 = 0;\n        long differenceSum43 = 0;\n        long differenceSum44\
    \ = 0;\n        long differenceSum45 = 0;\n        long differenceSum46 = 0;\n\
    \        long differenceSum47 = 0;\n        long differenceSum48 = 0;\n      \
    \  long differenceSum49 = 0;\n        long differenceSum50 = 0;\n        long\
    \ differenceSum51 = 0;\n        long differenceSum52 = 0;\n        long differenceSum53\
    \ = 0;\n        long differenceSum54 = 0;\n        long differenceSum55 = 0;\n\
    \        long differenceSum56 = 0;\n        long differenceSum57 = 0;\n      \
    \  long differenceSum58 = 0;\n        long differenceSum59 = 0;\n        long\
    \ differenceSum60 = 0;\n        long differenceSum61 = 0;\n        long differenceSum62\
    \ = 0;\n        long differenceSum63 = 0;\n        long differenceSum64 = 0;\n\
    \        long differenceSum65 = 0;\n        long differenceSum66 = 0;\n      \
    \  long differenceSum67 = 0;\n        long differenceSum68 = 0;\n        long\
    \ differenceSum69 = 0;\n        long differenceSum\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps0sytny6.java:94: error: ';' expected\n        long differenceSum\n\
    \                          ^\n1 error\n"
  stdout: ''
  timestamp: 1659795511
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long diff = 0;\n        long score\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.stream().filter(x -> x == score).count();\n        \
    \    result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq54ok83a.java:27: error: local variables referenced from a lambda\
    \ expression must be final or effectively final\n            diff = guess.stream().filter(x\
    \ -> x == score).count();\n                                                  \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ad_9b7n.java:32: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:33: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:34: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:35: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:36: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:37: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:38: error: variable totalGuessedIncorrectlyIncorrectly is\
    \ already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n       \
    \ long totalGuessedIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmp7ad_9b7n.java:39:\
    \ error: variable totalGuessedIncorrectlyIncorrectly is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n             ^\n/tmp/tmp7ad_9b7n.java:40: error: variable totalGuessedIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectly ="
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoc4p1564.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpoc4p1564.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrmtwx0w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzrmtwx0w.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long guess = 0;\n        long diff = 0;\n        for(int i = 0; i < game.size();\
    \ i++) {\n            score = game.get(i);\n            guess = guess.get(i);\n\
    \            diff = guess - score;\n            result.add(diff);\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjk4ar5tm.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpjk4ar5tm.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            difference = Math.abs(guess -\
    \ score);\n            if(guess == score) {\n                correct = true;\n\
    \            }\n            result.add(difference);\n        }\n        if(correct)\
    \ {\n            result.add(0);\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbaweq829.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpbaweq829.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpbaweq829.java:37:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for (long\
    \ g : guess) {\n            diff = g - game.get(result.indexOf(g));\n        \
    \    if (diff < 0) {\n                result.add(g - diff);\n            } else\
    \ {\n                result.add(g + diff);\n            }\n        }\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -1 out of bounds for length 6\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.compare(tmp_mkjwfng.java:25)\n\tat Problem.main(tmp_mkjwfng.java:35)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long score = 0;\n        long diff\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            diff = guess.get(i) - score;\n            if(diff < 0) {\n      \
    \          diff = -diff;\n            }\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6qli1l8.java:36)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for(int i = 0;\
    \ i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n  \
    \          result.add(diff);\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        result.add(-diff);\n            } else {\n                result.add(diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkprfm48p.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpkprfm48p.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long diff = game.get(i) - guess.get(i);\n            result.add(diff\
    \ < 0 ? -diff : diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff < 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83fu1djl.java:35)\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for(int i =\
    \ 0; i < game.size(); i++) {\n            score = game.get(i);\n            guess\
    \ = guess.get(i);\n            diff = Math.abs(guess - score);\n            if(diff\
    \ == 0) {\n                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if(correct) {\n            return result;\n        }\n   \
    \     for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            diff = Math.abs(guess - score);\n\
    \            result.add(diff);\n        }\n        return result;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppos62ks8.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmppos62ks8.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmppos62ks8.java:41:\
    \ error: long cannot be dereferenced\n            guess = guess.get(i);\n    \
    \                     ^\n3 errors\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        boolean\
    \ found = false;\n        for(int i = 0; i < game.size(); i++) {\n           \
    \ score = game.get(i);\n            guess = guess.get(i);\n            difference\
    \ = Math.abs(guess - score);\n            if(!correct) {\n                correct\
    \ = difference == 0;\n            }\n            if(!found) {\n              \
    \  found = difference < 0;\n            }\n            if(correct) {\n       \
    \         result.add(0);\n            } else {\n                result.add(difference);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpke6h0h6w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpke6h0h6w.java:30: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n/tmp/tmpke6h0h6w.java:39:\
    \ error: incompatible types: int cannot be converted to Long\n               \
    \ result.add(0);\n                           ^\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        boolean\
    \ correctGuess = false;\n        boolean correctScore = false;\n        boolean\
    \ correctGuesses = false;\n        boolean correctScores = false;\n        boolean\
    \ correctGuessesScore = false;\n        boolean correctGuessesGuess = false;\n\
    \        boolean correctGuessesScores = false;\n        boolean correctGuessesGuesses\
    \ = false;\n        boolean correctGuessesGuesses = false;\n        boolean correctGuessesGuessesScore\
    \ = false;\n        boolean correctGuessesGuessesGuess = false;\n        boolean\
    \ correctGuessesGuessesScores = false;\n        boolean correctGuessesGuessesGuesses\
    \ = false;\n        boolean correctGuessesGuessesGuesses = false;\n        boolean\
    \ correctGuessesGuessesGuessesScore = false;\n        boolean correctGuessesGuessesGuessesGuess\
    \ = false;\n        boolean correctGuessesGuessesGuessesScores = false;\n    \
    \    boolean correctGuessesGuessesGuessesGuesses = false;\n        boolean correctGuessesGuessesGuessesGuesses\
    \ = false;\n        boolean correctGuessesGuessesGuessesGuessesScore = false;\n\
    \        boolean correctGuessesGuessesGuessesGuessesGuess = false;\n        boolean\
    \ correctGuessesGuessesGuessesGuessesScore = false;\n        boolean correctGuessesGuessesGuessesGuessesGuesses\
    \ = false;\n        boolean correctGuessesGuessesGuessesGuessesGuesses = false;\n\
    \        boolean correctGuessesGuessesGuessesGuessesGuessesScore = false;\n  \
    \      boolean correctGuessesGuessesGuessesGuessesGuessesGuess = false;\n    \
    \    boolean correctGuessesGuessesGuessesGuessesGuessesScore = false;\n      \
    \  boolean correctGuessesGuessesGuessesGuessesGuessesGuesses = false;\n      \
    \  boolean correctGuessesGuessesGuessesGuessesGuessesGuesses = false;\n      \
    \  boolean correctGuessesGuessesGuessesGuessesGuessesGuesses = false;\n      \
    \  boolean correctGuessesGuessesGues\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphqyq22pt.java:57: error: ';' expected\n        boolean correctGuessesGuessesGues\n\
    \                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0arkk0d.java:33)\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        boolean correct = false;\n        for (long i\
    \ = 0; i < game.size(); i++) {\n            score = game.get(i);\n           \
    \ guess = guess.get(i);\n            diff = guess - score;\n            if (diff\
    \ < 0) {\n                diff = -diff;\n            }\n            if (diff ==\
    \ 0) {\n                correct = true;\n            }\n            result.add(diff);\n\
    \        }\n        if (correct) {\n            result.add(0);\n        }\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg90bn7u3.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpg90bn7u3.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpg90bn7u3.java:29: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\n/tmp/tmpg90bn7u3.java:40:\
    \ error: incompatible types: int cannot be converted to Long\n            result.add(0);\n\
    \                       ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score = game.get(i);\n            diff = guess.get(i) - score;\n          \
    \  result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0arkk0d.java:33)\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7ad_9b7n.java:32: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:33: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:34: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:35: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:36: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:37: error: variable totalGuessedIncorrectlyIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n             ^\n\
    /tmp/tmp7ad_9b7n.java:38: error: variable totalGuessedIncorrectlyIncorrectly is\
    \ already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n       \
    \ long totalGuessedIncorrectlyIncorrectly = 0;\n             ^\n/tmp/tmp7ad_9b7n.java:39:\
    \ error: variable totalGuessedIncorrectlyIncorrectly is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n             ^\n/tmp/tmp7ad_9b7n.java:40: error: variable totalGuessedIncorrectlyIncorrectly\
    \ is already defined in method compare(ArrayList<Long>,ArrayList<Long>)\n    \
    \    long totalGuessedIncorrectlyIncorrectly ="
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3cv7vfbp.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp3cv7vfbp.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            if(diff < 0) {\n        \
    \        diff = -diff;\n            }\n            result.add(diff);\n       \
    \ }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9_0q_ri3.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp9_0q_ri3.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        for (long\
    \ i = 0; i < game.size(); i++) {\n            score += game.get(i);\n        }\n\
    \        for (long i = 0; i < guess.size(); i++) {\n            score -= guess.get(i);\n\
    \        }\n        if (score < 0) {\n            score *= -1;\n        }\n  \
    \      result.add(score);\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpas84pvj5.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score += game.get(i);\n                      \
    \        ^\n/tmp/tmpas84pvj5.java:28: error: incompatible types: possible lossy\
    \ conversion from long to int\n            score -= guess.get(i);\n          \
    \                     ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalGuesses = 0;\n        long totalGuessesPerGame = 0;\n\
    \        long totalGuessesPerGamePerGame = 0;\n        long totalGuessesPerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGame = 0;\n        long\
    \ totalGuessesPerGamePerGamePerGamePerGamePerGame = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGamePerGame\
    \ = 0;\n        long totalGuessesPerGamePerGamePerGamePer\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6_y13haz.java:44: error: ';' expected\n        long totalGuessesPerGamePerGamePerGamePer\n\
    \                                                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        boolean correct = false;\n        for(int\
    \ i = 0; i < game.size(); i++) {\n            score = game.get(i);\n         \
    \   guess = guess.get(i);\n            difference = Math.abs(guess - score);\n\
    \            correct = guess == score;\n            result.add(correct? 0l : difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6fj6ec2k.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmp6fj6ec2k.java:29: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp53_ninuc.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long diff = game.get(i) - guess.get(i);\n            if(diff\
    \ > 0) {\n                result.add(-diff);\n            } else if(diff < 0)\
    \ {\n                result.add(diff);\n            } else {\n               \
    \ result.add(i);\n            }\n        }\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ns3rdi7.java:30: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(i);\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalScore = 0;\n        long totalGuessed = 0;\n       \
    \ long totalScoreGuessed = 0;\n        long totalGuessedCorrectly = 0;\n     \
    \   long totalScoreGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalScoreGuessedIncorrectly = 0;\n        long totalGuessedIncorrectlyWithScore\
    \ = 0;\n        long totalScoreGuessedIncorrectlyWithScore = 0;\n        long\
    \ totalGuessedIncorrectlyWithScoreAndGuessedCorrectly = 0;\n        long totalScoreGuessedIncorrectlyWithScoreAndGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyWithScoreAndGuessedIncorrectly = 0;\n\
    \        long totalScoreGuessedIncorrectlyWithScoreAndGuessedIncorrectly = 0;\n\
    \        long totalGuessedIncorrectlyWithScoreAndGuessedCorrectlyAndGuessedIncorrectly\
    \ = 0;\n        long totalScoreGuessedIncorrectlyWithScoreAndGuessedCorrectlyAndGuessedIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalScoreGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalScoreGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalScoreGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalScoreGuessedIncorrectlyWithScoreAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedIncorrectlyAndGuessedCorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyWith\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0we0qa_0.java:48: error: ';' expected\n        long totalGuessedIncorrectlyWith\n\
    \                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659795512
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        long diff = 0;\n        for (long\
    \ guesstime : guess) {\n            diff = game.get(game.indexOf(guesstime)) -\
    \ guesstime;\n            if (diff != 0) {\n                result.add(diff);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ -1 out of bounds for length 6\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.compare(tmpr8zrz62m.java:25)\n\tat Problem.main(tmpr8zrz62m.java:33)\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            guess = guess.get(i);\n           \
    \ diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdc806c3i.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdc806c3i.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long guess = 0;\n        long game = 0;\n        long game2 = 0;\n  \
    \      long game3 = 0;\n        long game4 = 0;\n        long game5 = 0;\n   \
    \     long game6 = 0;\n        long game7 = 0;\n        long game8 = 0;\n    \
    \    long game9 = 0;\n        long game10 = 0;\n        long game11 = 0;\n   \
    \     long game12 = 0;\n        long game13 = 0;\n        long game14 = 0;\n \
    \       long game15 = 0;\n        long game16 = 0;\n        long game17 = 0;\n\
    \        long game18 = 0;\n        long game19 = 0;\n        long game20 = 0;\n\
    \        long game21 = 0;\n        long game22 = 0;\n        long game23 = 0;\n\
    \        long game24 = 0;\n        long game25 = 0;\n        long game26 = 0;\n\
    \        long game27 = 0;\n        long game28 = 0;\n        long game29 = 0;\n\
    \        long game30 = 0;\n        long game31 = 0;\n        long game32 = 0;\n\
    \        long game33 = 0;\n        long game34 = 0;\n        long game35 = 0;\n\
    \        long game36 = 0;\n        long game37 = 0;\n        long game38 = 0;\n\
    \        long game39 = 0;\n        long game40 = 0;\n        long game41 = 0;\n\
    \        long game42 = 0;\n        long game43 = 0;\n        long game44 = 0;\n\
    \        long game45 = 0;\n        long game46 = 0;\n        long game47 = 0;\n\
    \        long game48 = 0;\n        long game49 = 0;\n        long game50 = 0;\n\
    \        long game51 = 0;\n        long game52 = 0;\n        long game53 = 0;\n\
    \        long game54 = 0;\n        long game55 = 0;\n        long game56 = 0;\n\
    \        long game57 = 0;\n        long game58 = 0;\n        long game59 = 0;\n\
    \        long game60 = 0;\n        long game61 = 0;\n        long game62 = 0;\n\
    \        long game63 = 0;\n        long game64 = 0;\n        long game65 = 0;\n\
    \        long game66 = 0;\n        long game67 = 0;\n        long game68 = 0;\n\
    \        long game69 = 0;\n        long game70 = 0;\n        long game71 = 0;\n\
    \        long game72 = 0;\n        long game73 = 0;\n        long game74 = 0;\n\
    \        long game75 = 0;\n        long game76 = 0;\n        long game77 = 0;\n\
    \        long game78 = 0;\n        long game79 = 0;\n        long game80 = 0;\n\
    \        long game81 = 0;\n        long game82 = 0;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8lpmj_q.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpb8lpmj_q.java:26: error: variable game is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long game = 0;\n  \
    \           ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for(int i = 0; i < game.size(); i++)\
    \ {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            result.add(diff);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3cv7vfbp.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmp3cv7vfbp.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n    \
    \        score = game.get(i);\n            guess = guess.get(i);\n           \
    \ diff = guess - score;\n            result.add(diff);\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdc806c3i.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpdc806c3i.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long total = 0;\n        long totalGuess\
    \ = 0;\n        long totalScore = 0;\n        long totalGuessed = 0;\n       \
    \ long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly = 0;\n\
    \        long totalGuessedCorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectlyIncorrectly =\
    \ 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectlyIncorrectly = 0;\n\
    \        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n        long\
    \ totalGuessedCorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessed = 0;\n        long totalGuessedCorrectly = 0;\n\
    \        long totalGuessedIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectlyIncorrectly = 0;\n    \
    \    long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly = 0;\n      \
    \  long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectlyIncorrectly = 0;\n        long totalGuessedCorrectlyIncorrectly\
    \ = 0;\n        long totalGuessedIncorrectly = 0;\n        long totalGuessed =\
    \ 0;\n        long totalGuessedCorrectly = 0;\n        long totalGuessedIncorrectly\
    \ = 0;\n        long totalGuessedCorrectlyIncorrectly = 0;\n        long totalGuessedIncorrectlyIncorrectly\
    \ = 0;\n        long totalG\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph_pzpyhl.java:65: error: ';' expected\n        long totalG\n  \
    \                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        for(int i = 0; i < game.size(); i++) {\n\
    \            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = guess - score;\n            result.add(diff);\n     \
    \   }\n        return result;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkl3_8lkx.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpkl3_8lkx.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game);\n        for(int i = 0; i < game.size();\
    \ i++) {\n            long score = game.get(i);\n            long guess = guess.get(i);\n\
    \            long diff = Math.abs(guess - score);\n            if(guess == score)\
    \ {\n                result.add(diff);\n            } else {\n               \
    \ result.add(Math.abs(guess - score));\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpks5hfz0o.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n            long guess = guess.get(i);\n\
    \                 ^\n/tmp/tmpks5hfz0o.java:25: error: long cannot be dereferenced\n\
    \            long guess = guess.get(i);\n                              ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for(int i = 0; i < game.size(); i++) {\n          \
    \  score += game.get(i);\n            diff += Math.abs(guess.get(i) - score);\n\
    \        }\n        for(int i = 0; i < game.size(); i++) {\n            if(!guess.get(i).equals(score))\
    \ {\n                result.add(-diff);\n            } else {\n              \
    \  result.add(0);\n            }\n        }\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5yr4ljjb.java:33: error: incompatible types: int cannot be converted\
    \ to Long\n                result.add(0);\n                           ^\nNote:\
    \ Some messages have been simplified; recompile with -Xdiags:verbose to get full\
    \ output\n1 error\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long total = 0;\n        long diff = 0;\n\
    \        long diff2 = 0;\n        long diff3 = 0;\n        long diff4 = 0;\n \
    \       long diff5 = 0;\n        long diff6 = 0;\n        long diff7 = 0;\n  \
    \      long diff8 = 0;\n        long diff9 = 0;\n        long diff10 = 0;\n  \
    \      long diff11 = 0;\n        long diff12 = 0;\n        long diff13 = 0;\n\
    \        long diff14 = 0;\n        long diff15 = 0;\n        long diff16 = 0;\n\
    \        long diff17 = 0;\n        long diff18 = 0;\n        long diff19 = 0;\n\
    \        long diff20 = 0;\n        long diff21 = 0;\n        long diff22 = 0;\n\
    \        long diff23 = 0;\n        long diff24 = 0;\n        long diff25 = 0;\n\
    \        long diff26 = 0;\n        long diff27 = 0;\n        long diff28 = 0;\n\
    \        long diff29 = 0;\n        long diff30 = 0;\n        long diff31 = 0;\n\
    \        long diff32 = 0;\n        long diff33 = 0;\n        long diff34 = 0;\n\
    \        long diff35 = 0;\n        long diff36 = 0;\n        long diff37 = 0;\n\
    \        long diff38 = 0;\n        long diff39 = 0;\n        long diff40 = 0;\n\
    \        long diff41 = 0;\n        long diff42 = 0;\n        long diff43 = 0;\n\
    \        long diff44 = 0;\n        long diff45 = 0;\n        long diff46 = 0;\n\
    \        long diff47 = 0;\n        long diff48 = 0;\n        long diff49 = 0;\n\
    \        long diff50 = 0;\n        long diff51 = 0;\n        long diff52 = 0;\n\
    \        long diff53 = 0;\n        long diff54 = 0;\n        long diff55 = 0;\n\
    \        long diff56 = 0;\n        long diff57 = 0;\n        long diff58 = 0;\n\
    \        long diff59 = 0;\n        long diff60 = 0;\n        long diff61 = 0;\n\
    \        long diff62 = 0;\n        long diff63 = 0;\n        long diff64 = 0;\n\
    \        long diff65 = 0;\n        long diff66 = 0;\n        long diff67 = 0;\n\
    \        long diff68 = 0;\n        long diff69 = 0;\n        long diff70 = 0;\n\
    \        long diff71 = 0;\n        long diff72 = 0;\n        long diff73 = 0;\n\
    \        long diff74 = 0;\n        long diff75 = 0;\n        long diff76 = 0;\n\
    \        long diff77 = 0;\n        long diff78 = 0;\n        long diff79 = 0;\n\
    \        long diff80 = 0;\n        long diff81 = 0;\n        long diff82 = 0;\n\
    \        long diff83 = 0;\n        long diff84 = 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpri18eku0.java:108: error: missing return statement\n    }\n   \
    \ ^\n1 error\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long guess\
    \ = 0;\n        long difference = 0;\n        boolean correct = false;\n     \
    \   for (long i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            guess = guess.get(i);\n            if (guess == score) {\n      \
    \          correct = true;\n            }\n            else {\n              \
    \  difference = Math.abs(guess - score);\n            }\n            result.add(difference);\n\
    \        }\n        if (correct) {\n            return result;\n        }\n  \
    \      else {\n            return result;\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfqmps84u.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpfqmps84u.java:28: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmpfqmps84u.java:29: error: long cannot be dereferenced\n     \
    \       guess = guess.get(i);\n                         ^\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n3 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long diff = 0;\n\
    \        long guess = 0;\n        long game = 0;\n        long game2 = 0;\n  \
    \      long game3 = 0;\n        long game4 = 0;\n        long game5 = 0;\n   \
    \     long game6 = 0;\n        long game7 = 0;\n        long game8 = 0;\n    \
    \    long game9 = 0;\n        long game10 = 0;\n        long game11 = 0;\n   \
    \     long game12 = 0;\n        long game13 = 0;\n        long game14 = 0;\n \
    \       long game15 = 0;\n        long game16 = 0;\n        long game17 = 0;\n\
    \        long game18 = 0;\n        long game19 = 0;\n        long game20 = 0;\n\
    \        long game21 = 0;\n        long game22 = 0;\n        long game23 = 0;\n\
    \        long game24 = 0;\n        long game25 = 0;\n        long game26 = 0;\n\
    \        long game27 = 0;\n        long game28 = 0;\n        long game29 = 0;\n\
    \        long game30 = 0;\n        long game31 = 0;\n        long game32 = 0;\n\
    \        long game33 = 0;\n        long game34 = 0;\n        long game35 = 0;\n\
    \        long game36 = 0;\n        long game37 = 0;\n        long game38 = 0;\n\
    \        long game39 = 0;\n        long game40 = 0;\n        long game41 = 0;\n\
    \        long game42 = 0;\n        long game43 = 0;\n        long game44 = 0;\n\
    \        long game45 = 0;\n        long game46 = 0;\n        long game47 = 0;\n\
    \        long game48 = 0;\n        long game49 = 0;\n        long game50 = 0;\n\
    \        long game51 = 0;\n        long game52 = 0;\n        long game53 = 0;\n\
    \        long game54 = 0;\n        long game55 = 0;\n        long game56 = 0;\n\
    \        long game57 = 0;\n        long game58 = 0;\n        long game59 = 0;\n\
    \        long game60 = 0;\n        long game61 = 0;\n        long game62 = 0;\n\
    \        long game63 = 0;\n        long game64 = 0;\n        long game65 = 0;\n\
    \        long game66 = 0;\n        long game67 = 0;\n        long game68 = 0;\n\
    \        long game69 = 0;\n        long game70 = 0;\n        long game71 = 0;\n\
    \        long game72 = 0;\n        long game73 = 0;\n        long game74 = 0;\n\
    \        long game75 = 0;\n        long game76 = 0;\n        long game77 = 0;\n\
    \        long game78 = 0;\n        long game79 = 0;\n        long game80 = 0;\n\
    \        long game81 = 0;\n        long game82 = 0;\n        \n    }\n    public\
    \ static void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8lpmj_q.java:25: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpb8lpmj_q.java:26: error: variable game is already defined in\
    \ method compare(ArrayList<Long>,ArrayList<Long>)\n        long game = 0;\n  \
    \           ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawa3nklm.java:33)\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long diff = 0;\n        long diff2 = 0;\n        long diff3 = 0;\n  \
    \      long diff4 = 0;\n        long diff5 = 0;\n        long diff6 = 0;\n   \
    \     long diff7 = 0;\n        long diff8 = 0;\n        long diff9 = 0;\n    \
    \    long diff10 = 0;\n        long diff11 = 0;\n        long diff12 = 0;\n  \
    \      long diff13 = 0;\n        long diff14 = 0;\n        long diff15 = 0;\n\
    \        long diff16 = 0;\n        long diff17 = 0;\n        long diff18 = 0;\n\
    \        long diff19 = 0;\n        long diff20 = 0;\n        long diff21 = 0;\n\
    \        long diff22 = 0;\n        long diff23 = 0;\n        long diff24 = 0;\n\
    \        long diff25 = 0;\n        long diff26 = 0;\n        long diff27 = 0;\n\
    \        long diff28 = 0;\n        long diff29 = 0;\n        long diff30 = 0;\n\
    \        long diff31 = 0;\n        long diff32 = 0;\n        long diff33 = 0;\n\
    \        long diff34 = 0;\n        long diff35 = 0;\n        long diff36 = 0;\n\
    \        long diff37 = 0;\n        long diff38 = 0;\n        long diff39 = 0;\n\
    \        long diff40 = 0;\n        long diff41 = 0;\n        long diff42 = 0;\n\
    \        long diff43 = 0;\n        long diff44 = 0;\n        long diff45 = 0;\n\
    \        long diff46 = 0;\n        long diff47 = 0;\n        long diff48 = 0;\n\
    \        long diff49 = 0;\n        long diff50 = 0;\n        long diff51 = 0;\n\
    \        long diff52 = 0;\n        long diff53 = 0;\n        long diff54 = 0;\n\
    \        long diff55 = 0;\n        long diff56 = 0;\n        long diff57 = 0;\n\
    \        long diff58 = 0;\n        long diff59 = 0;\n        long diff60 = 0;\n\
    \        long diff61 = 0;\n        long diff62 = 0;\n        long diff63 = 0;\n\
    \        long diff64 = 0;\n        long diff65 = 0;\n        long diff66 = 0;\n\
    \        long diff67 = 0;\n        long diff68 = 0;\n        long diff69 = 0;\n\
    \        long diff70 = 0;\n        long diff71 = 0;\n        long diff72 = 0;\n\
    \        long diff73 = 0;\n        long diff74 = 0;\n        long diff75 = 0;\n\
    \        long diff76 = 0;\n        long diff77 = 0;\n        long diff78 = 0;\n\
    \        long diff79 = 0;\n        long diff80 = 0;\n        long diff81 = 0;\n\
    \        long diff82 = 0;\n        long diff83 = 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7vvzobvc.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long difference\
    \ = 0;\n        for(int i = 0; i < game.size(); i++) {\n            score = game.get(i);\n\
    \            difference = guess.get(i) - score;\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigv0qljs.java:33)\n"
  stdout: ''
  timestamp: 1659795507
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long score = 0;\n        long guess = 0;\n\
    \        long difference = 0;\n        for(int i = 0; i < game.size(); i++) {\n\
    \            score = game.get(i);\n            guess = guess.get(i);\n       \
    \     difference = Math.abs(guess - score);\n            result.add(difference);\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l,\
    \ (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzrmtwx0w.java:24: error: variable guess is already defined in method\
    \ compare(ArrayList<Long>,ArrayList<Long>)\n        long guess = 0;\n        \
    \     ^\n/tmp/tmpzrmtwx0w.java:28: error: long cannot be dereferenced\n      \
    \      guess = guess.get(i);\n                         ^\n2 errors\n"
  stdout: ''
  timestamp: 1659795506
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long score = 0;\n      \
    \  long diff = 0;\n        for (long i = 0; i < game.size(); i++) {\n        \
    \    score = game.get(i);\n            diff = guess.get(i) - score;\n        \
    \    result.add(diff);\n        }\n        return result;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp47hson1q.java:26: error: incompatible types: possible lossy conversion\
    \ from long to int\n            score = game.get(i);\n                       \
    \      ^\n/tmp/tmp47hson1q.java:27: error: incompatible types: possible lossy\
    \ conversion from long to int\n            diff = guess.get(i) - score;\n    \
    \                         ^\nNote: Some messages have been simplified; recompile\
    \ with -Xdiags:verbose to get full output\n2 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long diff = 0;\n        for (long i = 0;\
    \ i < game.size(); i++) {\n            long score = game.get(i);\n           \
    \ long guess = guess.get(i);\n            diff = guess - score;\n            if\
    \ (guess == score) {\n                result.add(0);\n            } else {\n \
    \               result.add(Math.abs(diff));\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3b4xxsrd.java:25: error: incompatible types: possible lossy conversion\
    \ from long to int\n            long score = game.get(i);\n                  \
    \                ^\n/tmp/tmp3b4xxsrd.java:26: error: variable guess is already\
    \ defined in method compare(ArrayList<Long>,ArrayList<Long>)\n            long\
    \ guess = guess.get(i);\n                 ^\n/tmp/tmp3b4xxsrd.java:26: error:\
    \ long cannot be dereferenced\n            long guess = guess.get(i);\n      \
    \                        ^\n/tmp/tmp3b4xxsrd.java:29: error: incompatible types:\
    \ int cannot be converted to Long\n                result.add(0);\n          \
    \                 ^\nNote: Some messages have been simplified; recompile with\
    \ -Xdiags:verbose to get full output\n4 errors\n"
  stdout: ''
  timestamp: 1659795513
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two arrays of scores and guesses\
    \ of equal length, where each index shows a match. \n    // Return an array of\
    \ the same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)5l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)4l, (long)2l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))\n    // >>> compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)5l, (long)0l, (long)0l, (long)0l,\
    \ (long)4l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)1l, (long)1l,\
    \ (long)0l, (long)0l, (long)-2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)4l, (long)1l, (long)0l, (long)0l, (long)6l)))\n    public static ArrayList<Long>\
    \ compare(ArrayList<Long> game, ArrayList<Long> guess) {\n        ArrayList<Long>\
    \ result = new ArrayList<Long>(game.size());\n        long diff = 0;\n       \
    \ for(int i = 0; i < game.size(); i++) {\n            diff = game.get(i) - guess.get(i);\n\
    \            if(diff > 0) {\n                result.add(-diff);\n            }\
    \ else {\n                result.add(diff);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void main(String[] args) {\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
    \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
    \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
    \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
    \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
    \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
    \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprylp9_qa.java:35)\n"
  stdout: ''
  timestamp: 1659795513

name: HumanEval_68_pluck
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // \"Given an array representing a branch of a tree that has\
  \ non-negative integer nodes\n    // your task is to pluck one of the nodes and\
  \ return it.\n    // The plucked node should be the node with the smallest even\
  \ value.\n    // If multiple nodes with the same smallest even value are found return\
  \ the node that has smallest index.\n    // The plucked node should be returned\
  \ in a list, [ smalest_value, its index ],\n    // If there are no even values or\
  \ the given array is empty, return [].\n    // Example 1:\n    // >>> pluck((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)3l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)1l)))\n    // Explanation: 2 has the smallest even value, and 2 has the\
  \ smallest index.\n    // Example 2:\n    // >>> pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l))))\n    // (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))\n\
  \    // Explanation: 2 has the smallest even value, and 2 has the smallest index.\n\
  \    // Example 3:\n    // >>> pluck((new ArrayList<Long>(Arrays.asList())))\n \
  \   // (new ArrayList<Long>(Arrays.asList()))\n    // Example 4:\n    // >>> pluck((new\
  \ ArrayList<Long>(Arrays.asList((long)5l, (long)0l, (long)3l, (long)0l, (long)4l,\
  \ (long)2l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l)))\n\
  \    // Explanation: 0 is the smallest value, but  there are two zeros,\n    //\
  \ so we will choose the first zero, which has the smallest index.\n    // Constraints:\n\
  \    // * 1 <= nodes.length <= 10000\n    // * 0 <= node.value\n    public static\
  \ ArrayList<Long> pluck(ArrayList<Long> arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(pluck((new\
  \ ArrayList<Long>(Arrays.asList((long)4l, (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))));\n\
  \    assert(pluck((new ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(pluck((new ArrayList<Long>(Arrays.asList((long)5l, (long)0l, (long)3l,\
  \ (long)0l, (long)4l, (long)2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)0l, (long)5l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)3l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)5l,\
  \ (long)4l, (long)8l, (long)4l, (long)8l)))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)6l, (long)7l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l,\
  \ (long)1l)))));\n    assert(pluck((new ArrayList<Long>(Arrays.asList((long)7l,\
  \ (long)9l, (long)7l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        long smallest_even_value\
    \ = Long.MAX_VALUE;\n        int smallest_even_index = 0;\n        for(int i =\
    \ 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n          \
    \  if(value % 2 == 0) {\n                if(value < smallest_even_value) {\n \
    \                   smallest_even_value = value;\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_even_value\
    \ != Long.MAX_VALUE) {\n            result.add(smallest_even_value);\n       \
    \     result.add(smallest_even_index);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (Long node :\
    \ arr) {\n            if (node.isEven()) {\n                if (smallestEven >\
    \ node.value) {\n                    smallestEven = node.value;\n            \
    \        smallestIndex = arr.indexOf(node);\n                }\n            }\n\
    \        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (Long node : arr) {\n            if (node.isEven()) {\n    \
    \            if (smallestEvenValue < node.value) {\n                    smallestEvenValue\
    \ = node.value;\n                    smallestIndex = arr.indexOf(node);\n    \
    \            }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long minEven = Long.MAX_VALUE;\n        int\
    \ minIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ if (arr.get(i) % 2 == 0) {\n                long cur = arr.get(i);\n       \
    \         if (cur < minEven) {\n                    minEven = cur;\n         \
    \           minIndex = i;\n                }\n            }\n        }\n     \
    \   if (minIndex != -1) {\n            res.add(minEven);\n            res.add(minIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n \
    \           if (value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        Long smallest\
    \ = arr.get(0);\n        int smallestIndex = 0;\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest\
    \ > arr.get(i)) {\n                    smallest = arr.get(i);\n              \
    \      smallestIndex = i;\n                }\n            }\n        }\n     \
    \   result.add(smallest);\n        result.add(smallestIndex);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n      \
    \  for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        int size = arr.size();\n        for (int i = 0; i < size; i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   smallestEvenValue = Math.min(smallestEvenValue, arr.get(i));\n           \
    \     smallestIndex = i;\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == smallestEvenValue)\
    \ {\n                temp.add(arr.get(i));\n            }\n        }\n       \
    \ if (temp.size() > 1) {\n            smallestEvenValue = temp.get(0);\n     \
    \       smallestIndex = temp.get(1);\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long smallestValue = 0;\n        long index = 0;\n\
    \        for(Long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   smallestEvenValue = val;\n                smallestIndex = index;\n       \
    \         smallestValue = val;\n                index++;\n            }\n    \
    \    }\n        if(smallestEvenValue == 0) {\n            return result;\n   \
    \     }\n        for(Long val : arr) {\n            if(val % 2 == 0 && val < smallestEvenValue)\
    \ {\n                smallestEvenValue = val;\n                smallestIndex =\
    \ index;\n                smallestValue = val;\n                index++;\n   \
    \         }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                if (smallestEvenValue == 0) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                } else\
    \ if (arr.get(i) < smallestEvenValue) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        res.add(smallestEven);\n \
    \       res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallestEvenValue\
    \ = arr.get(0);\n        long smallestIndex = 0;\n        boolean foundSmallestEvenValue\
    \ = false;\n        for(int i = 1; i < arr.size(); i++) {\n            long currentValue\
    \ = arr.get(i);\n            if(currentValue == smallestEvenValue) {\n       \
    \         foundSmallestEvenValue = true;\n                smallestIndex = i;\n\
    \            }\n            else if(foundSmallestEvenValue) {\n              \
    \  if(currentValue < smallestEvenValue) {\n                    smallestEvenValue\
    \ = currentValue;\n                    smallestIndex = i;\n                }\n\
    \            }\n        }\n        if(smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        else if(smallestIndex == 0) {\n            result.add(smallestEvenValue);\n\
    \            return result;\n        }\n        else {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n            return result;\n        }",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long smallest_value\
    \ = Long.MAX_VALUE;\n        int smallest_index = -1;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(value\
    \ % 2 == 0) {\n                if(value < smallest_value) {\n                \
    \    smallest_value = value;\n                    smallest_index = i;\n      \
    \          }\n            }\n        }\n        if(smallest_index != -1) {\n \
    \           result.add(smallest_value, smallest_index);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallest_even_value)\
    \ {\n                    smallest_even_value = value;\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_even_value\
    \ != Long.MAX_VALUE) {\n            result.add(smallest_even_value);\n       \
    \     result.add(smallest_even_index);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> temp\
    \ = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n   \
    \     int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            smallestEvenValue = Math.min(smallestEvenValue, value);\n       \
    \         smallestIndex = i;\n            }\n        }\n        if(smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if(value % 2 == 0) {\n                if(value == smallestEvenValue) {\n\
    \                    result.add(smallestEvenValue);\n                    result.add(smallestIndex);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ > arr.get(i)) {\n                    smallestEven = arr.get(i);\n          \
    \          smallestIndex = i;\n                }\n            }\n        }\n \
    \       if (smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallest_even_value\
    \ = Long.MAX_VALUE;\n        int smallest_even_index = -1;\n        for (int i\
    \ = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n        \
    \    if (value % 2 == 0) {\n                if (value < smallest_even_value) {\n\
    \                    smallest_even_value = value;\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even_index\
    \ != -1) {\n            result.add(smallest_even_value);\n            result.add(smallest_even_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven == Long.MAX_VALUE)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else {\n                    if (value < smallestEven)\
    \ {\n                        smallestEven = value;\n                        smallestIndex\
    \ = i;\n                    }\n                }\n            }\n        }\n \
    \       if (smallestEven == Long.MAX_VALUE) {\n            return result;\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        int size = arr.size();\n        for (int i = 0; i < size; i++) {\n  \
    \          long value = arr.get(i);\n            if (value % 2 == 0) {\n     \
    \           if (value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if (smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        long smallestIndex = 0;\n        for(long value : arr) {\n   \
    \         if(value % 2 == 0) {\n                if(smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = arr.indexOf(value);\n                }\n            }\n        }\n       \
    \ if(smallestEvenValue == 0) {\n            return result;\n        }\n      \
    \  for(long value : arr) {\n            if(value % 2 == 0) {\n               \
    \ if(smallestEvenValue == value) {\n                    result.add(smallestEvenValue);\n\
    \                    result.add(smallestIndex);\n                    break;\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> res = new ArrayList<>();\n        long smalest_value = Long.MIN_VALUE;\n\
    \        int smalest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (smalest_value < value) {\n                    smalest_value\
    \ = value;\n                    smalest_index = i;\n                }\n      \
    \      }\n        }\n        if (smalest_index != -1) {\n            res.add(smalest_value);\n\
    \            res.add(smalest_index);\n        }\n        return res;", "     \
    \   ArrayList<Long> res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ > arr.get(i)) {\n                    smallestEven = arr.get(i);\n          \
    \          smallestIndex = i;\n                }\n            }\n        }\n \
    \       res.add(smallestEven);\n        res.add(smallestIndex);\n        return\
    \ res;", "        ArrayList<Long> res = new ArrayList<>();\n        long smallest_even\
    \ = Long.MAX_VALUE;\n        int smallest_index = -1;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n           \
    \     if (smallest_even > arr.get(i)) {\n                    smallest_even = arr.get(i);\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        if (smallest_even != Long.MAX_VALUE) {\n            res.add(smallest_even);\n\
    \            res.add(smallest_index);\n        }\n        return res;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long smallest_value\
    \ = Long.MAX_VALUE;\n        int smallest_index = 0;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n           \
    \     if (arr.get(i) < smallest_value) {\n                    smallest_value =\
    \ arr.get(i);\n                    smallest_index = i;\n                }\n  \
    \          }\n        }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  long smallestValue = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        boolean foundSmallestIndex = false;\n        boolean foundSmallestValue\
    \ = false;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                foundSmallestEvenValue\
    \ = true;\n                smallestEvenValue = value;\n                foundSmallestIndex\
    \ = true;\n                smallestIndex = i;\n                foundSmallestValue\
    \ = true;\n                smallestValue = value;\n            }\n        }\n\
    \        if(foundSmallestEvenValue) {\n            for(int i = 0; i < arr.size();\
    \ i++) {\n                long value = arr.get(i);\n                if(value %\
    \ 2 == 0) {\n                    if(smallestEvenValue == value) {\n          \
    \              foundSmallestIndex = true;\n                        smallestIndex\
    \ = i;\n                        foundSmallestValue = true;\n                 \
    \       smallestValue = value;\n                    }\n                }\n   \
    \         }\n        }\n        if(foundSmallestIndex) {\n            for(int\
    \ i = 0; i < arr.size(); i++) {\n                long value = arr.get(i);\n  \
    \              if(value % 2 == 0) {\n                    if(smallestIndex == i)\
    \ {\n                        foundSmallestValue = true;\n                    \
    \    smallestValue = value;\n                    }\n                }\n      \
    \      }\n        }\n        if(foundSmallestValue) {\n            for(int i =\
    \ 0; i < arr.size(); i++) {\n                long value = arr.get(i);\n      \
    \          if(value % 2 == 0) {\n                    if(smallestValue == value)\
    \ {\n                        result.add(smallestValue);\n                    \
    \    result.add(smallestIndex);\n                    }\n                }\n  \
    \          }\n        }\n        return result;", "        ArrayList<Long> res\
    \ = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n \
    \           long value = arr.get(i);\n            if(value % 2 == 0) {\n     \
    \           if(smallestEven < value) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (Long node : arr) {\n           \
    \ if (node.isEven()) {\n                if (smallestEven > node.value) {\n   \
    \                 smallestEven = node.value;\n                    smallestIndex\
    \ = arr.indexOf(node);\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        long smallestIndex = 0;\n        long smallestValue = Long.MIN_VALUE;\n\
    \        long index = 0;\n        for(Long value : arr) {\n            if(value\
    \ % 2 == 0) {\n                if(smallestEvenValue < value) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = index;\n\
    \                    smallestValue = value;\n                }\n             \
    \   index++;\n            }\n        }\n        if(smallestEvenValue == Long.MIN_VALUE)\
    \ {\n            return result;\n        }\n        for(Long value : arr) {\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue == value)\
    \ {\n                    result.add(smallestValue);\n                    result.add(smallestIndex);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEven) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n         \
    \   result.add(smallestEven);\n            result.add(smallestIndex);\n      \
    \  }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smalest_value = Long.MAX_VALUE;\n        int smalest_index = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smalest_value < arr.get(i)) {\n             \
    \       smalest_value = arr.get(i);\n                    smalest_index = i;\n\
    \                }\n            }\n        }\n        if (smalest_value == Long.MAX_VALUE)\
    \ {\n            return res;\n        }\n        res.add(smalest_value);\n   \
    \     res.add(smalest_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_even_value = Long.MAX_VALUE;\n\
    \        int smallest_even_index = -1;\n        for(Long node : arr) {\n     \
    \       if(node.isEven()) {\n                if(node.value < smallest_even_value)\
    \ {\n                    smallest_even_value = node.value;\n                 \
    \   smallest_even_index = arr.indexOf(node);\n                }\n            }\n\
    \        }\n        if(smallest_even_index != -1) {\n            result.add(smallest_even_value);\n\
    \            result.add(smallest_even_index);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> evens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ index = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        long smallestIndex = -1;\n        for (Long val : arr) {\n          \
    \  if (val % 2 == 0) {\n                evens.add(val);\n                if (val\
    \ < smallestEven) {\n                    smallestEven = val;\n               \
    \     smallestIndex = -1;\n                } else if (val == smallestEven) {\n\
    \                    smallestIndex = Integer.MAX_VALUE;\n                }\n \
    \           } else {\n                index.add(val);\n            }\n       \
    \ }\n        if (evens.size() > 0) {\n            Collections.sort(evens);\n \
    \           Collections.sort(index);\n            smallestEven = evens.get(0);\n\
    \            smallestIndex = index.get(0);\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        Long smallest\
    \ = arr.get(0);\n        int smallest_index = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n \
    \                   smallest_index = i;\n                }\n            }\n  \
    \      }\n        if (smallest == 0) {\n            return result;\n        }\n\
    \        result.add(smallest);\n        result.add(smallest_index);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ smallestEven = Long.MIN_VALUE;\n        int smallestIndex = 0;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                if (smallestEven > arr.get(i)) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (Long node : arr) {\n            if (node % 2 == 0) {\n    \
    \            if (smallestEvenValue > node) {\n                    smallestEvenValue\
    \ = node;\n                    smallestIndex = arr.indexOf(node);\n          \
    \      }\n            }\n        }\n        result.add(smallestEvenValue);\n \
    \       result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallestEven\
    \ = arr.get(0);\n        int smallestIndex = -1;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallestEven == arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MIN_VALUE;\n        long smallest_even_index\
    \ = -1;\n        long smallest_value = Long.MIN_VALUE;\n        long smallest_index\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_value < arr.get(i)) {\n     \
    \               smallest_even_value = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n                if (smallest_value < arr.get(i)) {\n\
    \                    smallest_value = arr.get(i);\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even_value\
    \ == Long.MIN_VALUE) {\n            return res;\n        }\n        res.add(smallest_even_value);\n\
    \        res.add(smallest_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                smallestEven = Math.min(smallestEven, arr.get(i));\n\
    \                smallestIndex++;\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            temp.add(smallestEven);\n            temp.add(smallestIndex);\n\
    \            result.add(temp);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest_value\
    \ = arr.get(0);\n        int smallest_index = 0;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest_value < arr.get(i)) {\n                    smallest_value = arr.get(i);\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                smallestEvenValue = Math.min(smallestEvenValue,\
    \ arr.get(i));\n                smallestIndex = i;\n            }\n        }\n\
    \        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                evenValues.add(arr.get(i));\n            }\n        }\n     \
    \   evenValues.sort((a, b) -> a - b);\n        smallestEvenValue = evenValues.get(0);\n\
    \        smallestIndex = evenValues.get(0);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long smallest_even_value = Long.MAX_VALUE;\n\
    \        int smallest_even_index = -1;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                if(smallest_even_value < value) {\n                    smallest_even_value\
    \ = value;\n                    smallest_even_index = i;\n                }\n\
    \            }\n        }\n        if(smallest_even_index != -1) {\n         \
    \   result.add(smallest_even_value);\n            result.add(smallest_even_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                smallestEvenValue = arr.get(i);\n                smallestIndex\
    \ = i;\n            }\n        }\n        if (smallestEvenValue == 0) {\n    \
    \        return result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                evenValues.add(arr.get(i));\n            }\n    \
    \    }\n        Collections.sort(evenValues);\n        ArrayList<Long> evenValuesSorted\
    \ = new ArrayList<>(evenValues);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallestEvenValue);\n\
    \        evenValuesSorted.remove(smallestEvenValue);\n        evenValuesSorted.remove(smallest",
  "        ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallest_value = arr.get(0);\n        int smallest_index = 0;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (arr.get(i) < smallest_value) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = 0;\n        long\
    \ smallest_index = 0;\n        boolean found = false;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if\
    \ (value % 2 == 0) {\n                smallest_value = value;\n              \
    \  smallest_index = i;\n                found = true;\n            }\n       \
    \ }\n        if (found) {\n            result.add(smallest_value);\n         \
    \   result.add(smallest_index);\n        }\n        return result;", "       \
    \ ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEvenValue > arr.get(i)) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_index\
    \ != -1) {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(Long node : arr) {\n            if(node % 2 == 0) {\n      \
    \          if(smallestEvenValue > node) {\n                    smallestEvenValue\
    \ = node;\n                    smallestIndex = arr.indexOf(node);\n          \
    \      }\n            }\n        }\n        result.add(smallestEvenValue);\n \
    \       result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == Long.MAX_VALUE) {\n     \
    \       return result;\n        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> evens = new ArrayList<>();\n        ArrayList<Long> indexes\
    \ = new ArrayList<>();\n        arr.stream().filter(i -> i % 2 == 0).forEach(i\
    \ -> evens.add(i));\n        evens.stream().forEach(i -> indexes.add(i));\n  \
    \      evens.stream().forEach(i -> {\n            if (indexes.contains(i)) {\n\
    \                indexes.remove(i);\n                result.add(i, indexes.get(i));\n\
    \            }\n        });\n        if (result.isEmpty()) {\n            return\
    \ new ArrayList<>();\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long smallestEvenValue = 0;\n     \
    \   int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEven) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestIndex\
    \ != -1) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_value = 0;\n        long smallest_index = 0;\n        boolean\
    \ found = false;\n        for(int i = 0; i < arr.size(); i++) {\n            long\
    \ value = arr.get(i);\n            if(!found && value % 2 == 0) {\n          \
    \      smallest_value = value;\n                smallest_index = i;\n        \
    \        found = true;\n            }\n            else if(found && value < smallest_value)\
    \ {\n                smallest_value = value;\n                smallest_index =\
    \ i;\n            }\n        }\n        if(found) {\n            res.add(smallest_value);\n\
    \            res.add(smallest_index);\n        }\n        return res;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = 0;\n        int smallestIndex = 0;\n        for(long node : arr) {\n     \
    \       if(node % 2 == 0) {\n                smallestEvenValue = node;\n     \
    \           smallestIndex = arr.indexOf(node);\n            }\n        }\n   \
    \     if(smallestEvenValue == 0) {\n            return result;\n        }\n  \
    \      for(long node : arr) {\n            if(node % 2 == 0) {\n             \
    \   if(node < smallestEvenValue) {\n                    smallestEvenValue = node;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        long smallestIndex\
    \ = 0;\n        for(Long value : arr) {\n            if(value % 2 == 0) {\n  \
    \              if(smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = arr.indexOf(value);\n        \
    \        }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue != Long.MIN_VALUE) {\n            res.add(smallestEvenValue);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> res = new ArrayList<>();\n        long minEven = Long.MAX_VALUE;\n\
    \        int minIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long val = arr.get(i);\n            if (val % 2 == 0) {\n       \
    \         if (val < minEven) {\n                    minEven = val;\n         \
    \           minIndex = i;\n                }\n            }\n        }\n     \
    \   if (minIndex != -1) {\n            res.add(minEven);\n            res.add(minIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if((value & 1) == 0) {\n                if(smallestEvenValue\
    \ < value) {\n                    smallestEvenValue = value;\n               \
    \     smallestIndex = i;\n                }\n            }\n        }\n      \
    \  if(smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n   \
    \     }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n      \
    \      if((value & 1) == 0) {\n                evenValues.add(value);\n      \
    \      }\n        }\n        Collections.sort(evenValues);\n        for(int i\
    \ = 0; i < evenValues.size(); i++) {\n            if(evenValues.get(i) == smallestEvenValue)\
    \ {\n                result.add(smallestEvenValue);\n                result.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallest_value\
    \ = Long.MAX_VALUE;\n        int smallest_index = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if((value\
    \ & 1) == 0) {\n                if(value < smallest_value) {\n               \
    \     smallest_value = value;\n                    smallest_index = i;\n     \
    \           }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        int index = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n          \
    \  if (value % 2 == 0) {\n                if (smallestEvenValue < value) {\n \
    \                   smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEvenValue);\n         \
    \   result.add(smallestIndex);\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        Arrays.sort(arr);\n        long smalest_value\
    \ = arr.get(0);\n        int smalest_index = 0;\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smalest_value\
    \ < arr.get(i)) {\n                    smalest_value = arr.get(i);\n         \
    \           smalest_index = i;\n                }\n            }\n        }\n\
    \        res.add(smalest_value);\n        res.add(smalest_index);\n        return\
    \ res;", "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MIN_VALUE;\n        int smallestIndex = 0;\n        int size = arr.size();\n\
    \        for (int i = 0; i < size; i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ != Long.MIN_VALUE) {\n            result.add(smallestEvenValue);\n         \
    \   result.add(smallestIndex);\n        }\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest_value\
    \ = arr.get(0);\n        int smallest_index = 0;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (arr.get(i) < smallest_value) {\n                    smallest_value = arr.get(i);\n\
    \                    smallest_index = i;\n                }\n            }\n \
    \       }\n        res.add(smallest_value);\n        res.add(smallest_index);\n\
    \        return res;", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     Arrays.sort(arr);\n        int n = arr.size();\n        long smallest =\
    \ arr.get(0);\n        long smallestIndex = 0;\n        for (int i = 1; i < n;\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest\
    \ > arr.get(i)) {\n                    smallest = arr.get(i);\n              \
    \      smallestIndex = i;\n                }\n            }\n        }\n     \
    \   res.add(smallest);\n        res.add(smallestIndex);\n        return res;",
  "        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> temp\
    \ = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n   \
    \     long smallestIndex = 0;\n        long smallestEvenValueIndex = 0;\n    \
    \    for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallestEvenValue > arr.get(i)) {\n              \
    \      smallestEvenValue = arr.get(i);\n                    smallestEvenValueIndex\
    \ = i;\n                }\n            } else {\n                temp.add(arr.get(i));\n\
    \            }\n        }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n\
    \            return result;\n        }\n        for (int i = 0; i < temp.size();\
    \ i++) {\n            if (temp.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > temp.get(i)) {\n                    smallestEvenValue = temp.get(i);\n   \
    \                 smallestEvenValueIndex = i;\n                }\n           \
    \ } else {\n                result.add(temp.get(i));\n            }\n        }\n\
    \        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> temp2 = new ArrayList<>();\n        for (int\
    \ i = 0; i < temp.size(); i++) {\n            if (temp.get(i) % 2 == 0) {\n  \
    \              if (smallestEvenValue > temp.get(i)) {\n                    smallestEvenValue\
    \ = temp.get(i);\n                    smallestEvenValueIndex = i;\n          \
    \      }\n            } else {\n                temp2.add(temp.get(i));\n    \
    \        }\n        }\n        for (int i = 0; i < temp2.size(); i++) {\n    \
    \        if (temp2.get(i) % 2 == 0) {\n                if (smallestEvenValue >\
    \ temp2.get(i)) {\n                    smallestEvenValue = temp2.get(i);\n   \
    \                 smallestEvenValueIndex = i;\n                }\n           \
    \ } else {\n                result.add(temp2.get(i));\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEvenValue < value)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        ArrayList<Long> evenValues\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           long value = arr.get(i);\n            if (value % 2 == 0) {\n    \
    \            evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MIN_VALUE;\n        int smallestIndex = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEven == Long.MIN_VALUE)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else if(value < smallestEven) {\n                  \
    \  smallestEven = value;\n                    smallestIndex = i;\n           \
    \     }\n            }\n        }\n        if(smallestEven != Long.MIN_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven > arr.get(i)) {\n              \
    \      smallestEven = arr.get(i);\n                    smallestIndex = i;\n  \
    \              }\n            }\n        }\n        res.add(smallestEven);\n \
    \       res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (Long val : arr) {\n            if (val\
    \ % 2 == 0) {\n                if (smallestEven == Long.MIN_VALUE) {\n       \
    \             smallestEven = val;\n                    smallestIndex = arr.indexOf(val);\n\
    \                } else {\n                    if (val < smallestEven) {\n   \
    \                     smallestEven = val;\n                        smallestIndex\
    \ = arr.indexOf(val);\n                    }\n                }\n            }\n\
    \        }\n        res.add(smallestEven);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n  \
    \      for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2\
    \ == 0) {\n                if (smallestEven > arr.get(i)) {\n                \
    \    smallestEven = arr.get(i);\n                    smallestIndex = i;\n    \
    \            }\n            }\n        }\n        res.add(smallestEven);\n   \
    \     res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n  \
    \      int smallest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != -1) {\n            res.add(smallest_value);\n\
    \            res.add(smallest_index);\n        }\n        return res;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallest = arr.get(0);\n        int smallest_index = -1;\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallest > arr.get(i)) {\n                    smallest\
    \ = arr.get(i);\n                    smallest_index = i;\n                }\n\
    \            }\n        }\n        result.add(smallest);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (arr.get(i) < smallest_value) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        long smallest_even_index\
    \ = 0;\n        long smallest_value = Long.MAX_VALUE;\n        long smallest_index\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if((value & 1) == 0) {\n                smallest_even_value\
    \ = value;\n                smallest_even_index = i;\n            }\n        \
    \    if(value < smallest_value) {\n                smallest_value = value;\n \
    \               smallest_index = i;\n            }\n        }\n        if(smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        smallest_value\
    \ = smallest_even_value + 1;\n        smallest_index = smallest_even_index + 1;\n\
    \        temp.add(smallest_value);\n        temp.add(smallest_index);\n      \
    \  for(int i = arr.size() - 1; i >= 0; i--) {\n            long value = arr.get(i);\n\
    \            if((value & 1) == 0) {\n                smallest_even_value = value;\n\
    \                smallest_even_index = i;\n            }\n            if(value\
    \ < smallest_value) {\n                smallest_value = value;\n             \
    \   smallest_index = i;\n            }\n        }\n        if(smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        smallest_value\
    \ = smallest_even_value + 1;\n        smallest_index = smallest_even_index + 1;\n\
    \        temp.add(smallest_value);\n        temp.add(smallest_index);\n      \
    \  for(int i = arr.size() - 1; i >= 0; i--) {\n            long value = arr.get(i);\n\
    \            if((value & 1) == 0) {\n                smallest_even_value = value;\n\
    \                smallest_even_index = i;\n            }\n            if(value\
    \ < smallest_value) {\n                smallest_value = value;\n             \
    \   smallest_index = i;\n            }\n        }\n        if(smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        smallest_value\
    \ = smallest_even_value + 1;\n        smallest_index = smallest_even_index + 1;\n\
    \        temp.add(smallest_value);\n        temp.add(smallest_index);\n      \
    \  for(int i = arr.size() - 1; i >= 0; i--) {\n            long value = arr.get(i);\n\
    \            if((value & 1) == 0) {\n                smallest_even_value = value;\n\
    \                smallest_even_index = i;\n            }\n            if(value\
    \ < smallest_value) {\n                smallest_value = value;\n             \
    \   smallest_index = i;\n            }\n        }\n        if(smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        smallest_value\
    \ = smallest_even_value + 1;\n        smallest_index = smallest_even_index + 1;\n\
    \        temp.add(", "        ArrayList<Long> res = new ArrayList<>();\n     \
    \   long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n    \
    \    for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        int\
    \ smallestIndex = 0;\n        long smallestValue = 0;\n        boolean foundSmallestEvenValue\
    \ = false;\n        boolean foundSmallestIndex = false;\n        for(int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if(!foundSmallestEvenValue)\
    \ {\n                if(value % 2 == 0) {\n                    smallestEvenValue\
    \ = value;\n                    foundSmallestEvenValue = true;\n             \
    \   }\n            }\n            if(!foundSmallestIndex) {\n                if(value\
    \ == smallestEvenValue) {\n                    smallestIndex = i;\n          \
    \          foundSmallestIndex = true;\n                }\n            }\n    \
    \        if(!foundSmallestIndex && foundSmallestEvenValue) {\n               \
    \ if(value == smallestEvenValue) {\n                    smallestIndex = i;\n \
    \                   foundSmallestIndex = true;\n                }\n          \
    \  }\n            if(!foundSmallestEvenValue && foundSmallestIndex) {\n      \
    \          if(value == smallestIndex) {\n                    smallestValue = value;\n\
    \                    foundSmallestEvenValue = true;\n                }\n     \
    \       }\n        }\n        if(foundSmallestEvenValue) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        if(foundSmallestIndex)\
    \ {\n            result.add(smallestIndex);\n        }\n        if(!foundSmallestEvenValue\
    \ && !foundSmallestIndex) {\n            result.add(smallestValue);\n        }\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_value < arr.get(i)) {\n     \
    \               smallest_even_value = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even_value\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        res.add(smallest_even_value);\n\
    \        res.add(smallest_even_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue != Long.MAX_VALUE) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> res = new ArrayList<Long>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if (smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long> temp\
    \ = new ArrayList<Long>();\n        ArrayList<Long> temp2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp4 = new ArrayList<Long>();\n        ArrayList<Long> temp5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp7 = new ArrayList<Long>();\n        ArrayList<Long> temp8 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp9 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp10 = new ArrayList<Long>();\n        ArrayList<Long> temp11 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp12 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp13 = new ArrayList<Long>();\n        ArrayList<Long> temp14 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp15 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp16 = new ArrayList<Long>();\n        ArrayList<Long> temp17 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp18 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp19 = new ArrayList<Long>();\n        ArrayList<Long> temp20 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp21 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp22 = new ArrayList<Long>();\n        ArrayList<Long> temp23 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp24 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp25 = new ArrayList<Long>();\n        ArrayList<Long> temp26 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp27 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp28 = new ArrayList<Long>();\n        ArrayList<Long> temp29 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp30 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp31 = new ArrayList<Long>();\n        ArrayList<Long> temp32 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp33 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp34 = new ArrayList<Long>();\n        ArrayList<Long> temp35 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp36 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp37 = new ArrayList<Long>();\n        ArrayList<Long> temp38 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp39 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp40 = new ArrayList<Long>();\n        ArrayList<Long> temp41 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp42 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp43 = new ArrayList<Long>();\n        ArrayList<Long> temp44 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp45 = new ArrayList<Long>();\n        ArrayList<Long",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (arr.get(i) < smallest_value) {\n            \
    \        smallest_value = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        result.add(smallest_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        long currentEvenValue = 0;\n        long currentIndex\
    \ = 0;\n        for(Long node : arr) {\n            if(node % 2 == 0) {\n    \
    \            currentEvenValue = node;\n                currentIndex = arr.indexOf(node);\n\
    \            } else {\n                if(currentEvenValue < smallestEvenValue)\
    \ {\n                    smallestEvenValue = currentEvenValue;\n             \
    \       smallestIndex = currentIndex;\n                }\n                currentEvenValue\
    \ = 0;\n                currentIndex++;\n            }\n        }\n        if(smallestEvenValue\
    \ == 0) {\n            return result;\n        }\n        for(Long node : arr)\
    \ {\n            if(node % 2 == 0) {\n                if(node == smallestEvenValue)\
    \ {\n                    result.add(smallestEvenValue);\n                    result.add(smallestIndex);\n\
    \                }\n            }\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallest_value =\
    \ 0;\n        int smallest_index = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if (value % 2 == 0)\
    \ {\n                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            result.add(smallest_value);\n\
    \            result.add(smallest_index);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            int index = i;\n            while(index > 0 && value < smallestEven)\
    \ {\n                smallestEven = arr.get(index - 1);\n                smallestIndex\
    \ = index - 1;\n                index--;\n            }\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MIN_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (smallestEvenValue < value) {\n            \
    \        smallestEvenValue = value;\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        if (smallestEvenValue ==\
    \ Long.MIN_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue != Long.MAX_VALUE) {\n            result.add(smallestEvenValue);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> res = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEvenValue > arr.get(i)) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        res.add(smallestEvenValue);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MIN_VALUE;\n        int smallest_even_index\
    \ = -1;\n        int smallest_index = -1;\n        int size = arr.size();\n  \
    \      for (int i = 0; i < size; i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallest_even_value <\
    \ value) {\n                    smallest_even_value = value;\n               \
    \     smallest_even_index = i;\n                }\n                if (smallest_even_value\
    \ == value) {\n                    smallest_index = i;\n                }\n  \
    \          }\n        }\n        if (smallest_even_value == Long.MIN_VALUE) {\n\
    \            return result;\n        }\n        if (smallest_index == -1) {\n\
    \            return result;\n        }\n        result.add(smallest_even_value);\n\
    \        result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n    \
    \    long smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven == Long.MIN_VALUE)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                } else if (arr.get(i) < smallestEven) {\n            \
    \        smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                smallestEven = Math.min(smallestEven,\
    \ arr.get(i));\n                smallestIndex++;\n            }\n        }\n \
    \       if (smallestEven != Long.MAX_VALUE) {\n            res.add(smallestEven);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> res = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            res.add(smallest_value);\n\
    \            res.add(smallest_index);\n        }\n        return res;", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for(int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            long\
    \ evenValue = value % 2 == 0 ? value : value + 1;\n            if(evenValue <\
    \ smallestEvenValue) {\n                smallestEvenValue = evenValue;\n     \
    \           smallestIndex = i;\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if (smallestEvenValue != Long.MAX_VALUE) {\n    \
    \        result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (smallestEven > value)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ == Long.MAX_VALUE) {\n                    smallestEven = arr.get(i);\n     \
    \               smallestIndex = i;\n                } else if (arr.get(i) < smallestEven)\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue != Long.MIN_VALUE) {\n            res.add(smallestEvenValue);\n\
    \            res.add(smallestIndex);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> min =\
    \ new ArrayList<>();\n        ArrayList<Long> max = new ArrayList<>();\n     \
    \   ArrayList<Long> even = new ArrayList<>();\n        ArrayList<Long> index =\
    \ new ArrayList<>();\n        ArrayList<Long> evenIndex = new ArrayList<>();\n\
    \        ArrayList<Long> evenValue = new ArrayList<>();\n        ArrayList<Long>\
    \ evenIndexValue = new ArrayList<>();\n        ArrayList<Long> evenValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValue = new ArrayList<>();\n\
    \        ArrayList<Long> evenValueIndexValueIndex = new ArrayList<>();\n     \
    \   ArrayList<Long> evenValueIndexValueIndexValue = new ArrayList<>();\n     \
    \   ArrayList<Long> evenValueIndexValueIndexValueIndex = new ArrayList<>();\n\
    \        ArrayList<Long> evenValueIndexValueIndexValueIndexValue = new ArrayList<>();\n\
    \        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndex = new ArrayList<>();\n\
    \        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValue = new\
    \ ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValue\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex\
    \ = new ArrayList<>();\n        ArrayList<Long> evenValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndexValueIndex",
  "        ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> evens\
    \ = new ArrayList<>();\n        ArrayList<Long> indexes = new ArrayList<>();\n\
    \        for(Long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   evens.add(val);\n                indexes.add(arr.indexOf(val));\n        \
    \    }\n        }\n        if(evens.size() > 0) {\n            Collections.sort(evens);\n\
    \            Collections.sort(indexes);\n            int index = Collections.binarySearch(evens,\
    \ Collections.min(evens));\n            if(index >= 0) {\n                result.add(evens.get(index));\n\
    \                result.add(indexes.get(index));\n            }\n        }\n \
    \       return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node % 2 == 0) {\n         \
    \       if (smallestEven > node) {\n                    smallestEven = node;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        if (arr.isEmpty()) {\n            return result;\n\
    \        }\n        long smallest = arr.get(0);\n        int smallestIndex = 0;\n\
    \        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallest > arr.get(i)) {\n                  \
    \  smallest = arr.get(i);\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        result.add(smallest);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(Long node : arr) {\n            if(node.isEven()) {\n                if(smallestEvenValue\
    \ < node.value) {\n                    smallestEvenValue = node.value;\n     \
    \               smallestIndex = arr.indexOf(node);\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == 0) {\n            return\
    \ result;\n        }\n        for(Long node : arr) {\n            if(node.isEven()\
    \ && node.value == smallestEvenValue) {\n                result.add(node);\n \
    \           }\n        }\n        if(result.isEmpty()) {\n            return result;\n\
    \        }\n        Collections.sort(result);\n        for(Long node : result)\
    \ {\n            int index = arr.indexOf(node);\n            if(index == smallestIndex)\
    \ {\n                return result;\n            }\n        }\n        return\
    \ result;", "        ArrayList<Long> res = new ArrayList<>();\n        Arrays.sort(arr);\n\
    \        long smallest = arr.get(0);\n        int smallest_index = -1;\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallest > arr.get(i)) {\n                    smallest\
    \ = arr.get(i);\n                    smallest_index = i;\n                }\n\
    \            }\n        }\n        res.add(smallest);\n        res.add(smallest_index);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(Long value : arr) {\n            if(value % 2 == 0) {\n         \
    \       if(smallestEven > value) {\n                    smallestEven = value;\n\
    \                    smallestIndex = arr.indexOf(value);\n                }\n\
    \            }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        int smallest_index = -1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest_even_value\
    \ < arr.get(i)) {\n                    smallest_even_value = arr.get(i);\n   \
    \                 smallest_even_index = i;\n                }\n            }\n\
    \            if (arr.get(i) < smallest_even_value) {\n                smallest_index\
    \ = i;\n            }\n        }\n        if (smallest_even_value == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        ArrayList<Long> evens = new\
    \ ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n           \
    \ if (arr.get(i) % 2 == 0) {\n                evens.add(arr.get(i));\n       \
    \     }\n        }\n        Collections.sort(evens);\n        result.add(smallest_even_value);\n\
    \        result.add(smallest_even_index);\n        if (evens.size() > 1) {\n \
    \           int index = Collections.binarySearch(evens, smallest_even_value);\n\
    \            if (index < 0) {\n                index = -index - 1;\n         \
    \   }\n            result.add(index);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        ArrayList<Long> evens\
    \ = new ArrayList<>();\n        ArrayList<Long> indexes = new ArrayList<>();\n\
    \        for(Long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   evens.add(val);\n                indexes.add(arr.indexOf(val));\n        \
    \    }\n        }\n        Collections.sort(evens);\n        Collections.sort(indexes);\n\
    \        for(Long val : evens) {\n            for(Long index : indexes) {\n  \
    \              if(val == arr.get(index)) {\n                    result.add(val);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     if(result.isEmpty()) {\n            return new ArrayList<>();\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        int index = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = index;\n                }\n  \
    \              index++;\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        boolean foundSmallestIndex = false;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if (value % 2 == 0)\
    \ {\n                if (smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                    foundSmallestEvenValue\
    \ = true;\n                }\n            } else {\n                if (!foundSmallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                    foundSmallestEvenValue = true;\n                }\n\
    \            }\n        }\n        if (foundSmallestEvenValue) {\n           \
    \ result.add(smallestEvenValue);\n            result.add(smallestIndex);\n   \
    \     }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        int size = arr.size();\n        for (int i = 0; i < size; i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest_even_value\
    \ < arr.get(i)) {\n                    smallest_even_value = arr.get(i);\n   \
    \                 smallest_even_index = i;\n                }\n            }\n\
    \        }\n        if (smallest_even_index != -1) {\n            res.add(smallest_even_value);\n\
    \            res.add(smallest_even_index);\n        }\n        return res;", " \
    \       ArrayList<Long> res = new ArrayList<>();\n        long smalest_value =\
    \ 0;\n        long smalest_index = 0;\n        long smalest_even_value = 0;\n\
    \        long smalest_even_index = 0;\n        long smalest_even_index_2 = 0;\n\
    \        long smalest_even_index_3 = 0;\n        long smalest_even_index_4 = 0;\n\
    \        long smalest_even_index_5 = 0;\n        long smalest_even_index_6 = 0;\n\
    \        long smalest_even_index_7 = 0;\n        long smalest_even_index_8 = 0;\n\
    \        long smalest_even_index_9 = 0;\n        long smalest_even_index_10 =\
    \ 0;\n        long smalest_even_index_11 = 0;\n        long smalest_even_index_12\
    \ = 0;\n        long smalest_even_index_13 = 0;\n        long smalest_even_index_14\
    \ = 0;\n        long smalest_even_index_15 = 0;\n        long smalest_even_index_16\
    \ = 0;\n        long smalest_even_index_17 = 0;\n        long smalest_even_index_18\
    \ = 0;\n        long smalest_even_index_19 = 0;\n        long smalest_even_index_20\
    \ = 0;\n        long smalest_even_index_21 = 0;\n        long smalest_even_index_22\
    \ = 0;\n        long smalest_even_index_23 = 0;\n        long smalest_even_index_24\
    \ = 0;\n        long smalest_even_index_25 = 0;\n        long smalest_even_index_26\
    \ = 0;\n        long smalest_even_index_27 = 0;\n        long smalest_even_index_28\
    \ = 0;\n        long smalest_even_index_29 = 0;\n        long smalest_even_index_30\
    \ = 0;\n        long smalest_even_index_31 = 0;\n        long smalest_even_index_32\
    \ = 0;\n        long smalest_even_index_33 = 0;\n        long smalest_even_index_34\
    \ = 0;\n        long smalest_even_index_35 = 0;\n        long smalest_even_index_36\
    \ = 0;\n        long smalest_even_index_37 = 0;\n        long smalest_even_index_38\
    \ = 0;\n        long smalest_even_index_39 = 0;\n        long smalest_even_index_40\
    \ = 0;\n        long smalest_even_index_41 = 1;\n        long smalest_even_index_42\
    \ = 1;\n        long smalest_even_index_43 = 1;\n        long smalest_even_index_44\
    \ = 1;\n        long smalest_even_index_45 = 1;\n        long smalest_even_index_46\
    \ = 1;\n        long smalest_even_index_47 = 1;\n        long smalest_even_index_48\
    \ = 1;\n        ", "        ArrayList<Long> res = new ArrayList<>();\n       \
    \ long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n      \
    \  for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0)\
    \ {\n                if (smallestEven > arr.get(i)) {\n                    smallestEven\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        res.add(smallestEven);\n        res.add(smallestIndex);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = Long.MAX_VALUE;\n   \
    \     int smalest_index = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smalest_value) {\n                    smalest_value =\
    \ value;\n                    smalest_index = i;\n                }\n        \
    \    }\n        }\n        if(smalest_index != 0) {\n            res.add(smalest_value);\n\
    \            res.add(smalest_index);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (value < smallestEven) {\n                 \
    \   smallestEven = value;\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (smallestEven == Long.MAX_VALUE) {\n                    smallestEven\
    \ = value;\n                    smallestIndex = i;\n                } else {\n\
    \                    if (value < smallestEven) {\n                        smallestEven\
    \ = value;\n                        smallestIndex = i;\n                    }\n\
    \                }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        int smallestIndex = 0;\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEvenValue == 0)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                } else if(value < smallestEvenValue) {\n             \
    \       smallestEvenValue = value;\n                    smallestIndex = i;\n \
    \               }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n  \
    \      int smallest_index = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != -1) {\n            res.add(smallest_value);\n\
    \            res.add(smallest_index);\n        }\n        return res;", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for(long node : arr) {\n            if(node % 2 == 0) {\n           \
    \     if(smallestEven > node) {\n                    smallestEven = node;\n  \
    \                  smallestIndex = arr.indexOf(node);\n                }\n   \
    \         }\n        }\n        if(smallestEven != Long.MAX_VALUE) {\n       \
    \     result.add(smallestEven);\n            result.add(smallestIndex);\n    \
    \    }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ smallest_even_value) {\n                    smallest_even_value = value;\n \
    \                   smallest_even_index = i;\n                }\n            }\n\
    \        }\n        if(smallest_even_value != Long.MAX_VALUE) {\n            result.add(smallest_even_value);\n\
    \            result.add(smallest_even_index);\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEven > arr.get(i)) {\n                    smallestEven = arr.get(i);\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEven)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_even_value = Long.MIN_VALUE;\n        int smallest_even_index\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_value < arr.get(i)) {\n     \
    \               smallest_even_value = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        result.add(smallest_even_value);\n\
    \        result.add(smallest_even_index);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<Long>();\n        long smallestEvenValue = 0;\n        long\
    \ smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n       \
    \     if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue == 0)\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                } else if (smallestEvenValue < arr.get(i))\
    \ {\n                    smallestEvenValue = arr.get(i);\n                   \
    \ smallestIndex = i;\n                }\n            }\n        }\n        res.add(smallestEvenValue);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n\
    \        long smallest_value = 0;\n        int smallest_index = 0;\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                temp.add(arr.get(i));\n            }\n        }\n        if (temp.size()\
    \ > 0) {\n            smallest_value = Collections.min(temp);\n            smallest_index\
    \ = Collections.binarySearch(temp, smallest_value);\n            result.add(smallest_value,\
    \ smallest_index);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if(smallestEvenValue\
    \ != Long.MAX_VALUE) {\n            res.add(smallestEvenValue);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                smallestEven = Math.min(smallestEven, arr.get(i));\n\
    \                smallestIndex = i;\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        ArrayList<Long> temp = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                smallestEven = Math.min(smallestEven, value);\n\
    \                smallestIndex++;\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            smallestEven = Math.min(smallestEven, Long.MAX_VALUE);\n\
    \            smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n \
    \           smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n \
    \           smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n  \
    \          smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n  \
    \          smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n   \
    \         smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n   \
    \         smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n    \
    \        smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n    \
    \        smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n     \
    \       smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n     \
    \       smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n      \
    \      smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n      \
    \      smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n       \
    \     smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n       \
    \     smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n        \
    \    smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n        \
    \    smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n         \
    \   smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n         \
    \   smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n          \
    \  smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n          \
    \  smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n           \
    \ smallestEven = Math.min(smallestEven, arr.get(smallestIndex));\n           \
    \ smallestIndex++;\n        }\n        if (smallestIndex > 0) {\n            smallestEven\
    \ = Math.min(smallestEven, arr.get(smallestIndex));\n            smallestIndex++;\n\
    \        }\n        if (smallestIndex > 0) {\n            smallestEven = Math.min(smallest",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            long value = arr.get(i);\n            if (value\
    \ % 2 == 0) {\n                if (value < smallestEven) {\n                 \
    \   smallestEven = value;\n                    smallestIndex = i;\n          \
    \      }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            result.add(smallestEven);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        res.add(smallestEvenValue);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest, smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallest_value = Long.MAX_VALUE;\n\
    \        int smallest_index = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                if (value < smallest_value) {\n                    smallest_value\
    \ = value;\n                    smallest_index = i;\n                }\n     \
    \       }\n        }\n        if (smallest_index != 0) {\n            result.add(smallest_value,\
    \ smallest_index);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        if(smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        long smallestEvenValue\
    \ = Long.MAX_VALUE;\n        int smallestIndex = 0;\n        for (int i = 0; i\
    \ < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n             \
    \   if (smallestEvenValue > arr.get(i)) {\n                    smallestEvenValue\
    \ = arr.get(i);\n                    smallestIndex = i;\n                }\n \
    \           }\n        }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallest_value = 0;\n        int smallest_index = 0;\n        for(int\
    \ i = 0; i < arr.size(); i++) {\n            if(arr.get(i) % 2 == 0) {\n     \
    \           if(smallest_value == 0) {\n                    smallest_value = arr.get(i);\n\
    \                    smallest_index = i;\n                } else if(arr.get(i)\
    \ < smallest_value) {\n                    smallest_value = arr.get(i);\n    \
    \                smallest_index = i;\n                }\n            }\n     \
    \   }\n        result.add(smallest_value);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (Long node : arr) {\n            if (node.isEven()) {\n    \
    \            if (node.value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = node.value;\n                    smallestIndex = arr.indexOf(node);\n    \
    \            }\n            }\n        }\n        if (smallestEvenValue == Long.MAX_VALUE)\
    \ {\n            return result;\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = -1;\n        for (Long node : arr) {\n          \
    \  if (node.isEven()) {\n                if (smallestEven > node.value) {\n  \
    \                  smallestEven = node.value;\n                    smallestIndex\
    \ = arr.indexOf(node);\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ > arr.get(i)) {\n                    smallestEven = arr.get(i);\n          \
    \          smallestIndex = i;\n                }\n            }\n        }\n \
    \       if (smallestEven != Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ evens = new ArrayList<Long>();\n        ArrayList<Long> indexes = new ArrayList<Long>();\n\
    \        for(Long val : arr) {\n            if(val % 2 == 0) {\n             \
    \   evens.add(val);\n                indexes.add(arr.indexOf(val));\n        \
    \    }\n        }\n        if(evens.size() > 0) {\n            Collections.sort(evens);\n\
    \            Collections.sort(indexes);\n            int index = Collections.binarySearch(evens,\
    \ evens.get(0));\n            if(index < 0) {\n                index = -index\
    \ - 1;\n            }\n            result.add(evens.get(index));\n           \
    \ result.add(indexes.get(index));\n        }\n        return result;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n\
    \        int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEven\
    \ > arr.get(i)) {\n                    smallestEven = arr.get(i);\n          \
    \          smallestIndex = i;\n                }\n            }\n        }\n \
    \       result.add(smallestEven);\n        result.add(smallestIndex);\n      \
    \  return result;", "        ArrayList<Long> result = new ArrayList<>();\n   \
    \     long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        ArrayList<Long>\
    \ evenValues = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long value = arr.get(i);\n            if (value % 2 == 0) {\n\
    \                evenValues.add(value);\n            }\n        }\n        Collections.sort(evenValues);\n\
    \        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = 0;\n        long smallestIndex = 0;\n      \
    \  boolean foundSmallestEvenValue = false;\n        boolean foundSmallestIndex\
    \ = false;\n        for(int i = 0; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                foundSmallestEvenValue\
    \ = true;\n                smallestEvenValue = value;\n                smallestIndex\
    \ = i;\n            }\n        }\n        if(foundSmallestEvenValue) {\n     \
    \       for(int i = 0; i < arr.size(); i++) {\n                long value = arr.get(i);\n\
    \                if(value % 2 == 0) {\n                    if(value == smallestEvenValue)\
    \ {\n                        foundSmallestIndex = true;\n                    \
    \    smallestIndex = i;\n                    }\n                }\n          \
    \  }\n        }\n        if(foundSmallestEvenValue && foundSmallestIndex) {\n\
    \            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        if(!foundSmallestEvenValue && !foundSmallestIndex) {\n   \
    \         result.add(0);\n            result.add(0);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n \
    \       for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < smallestEvenValue)\
    \ {\n                    smallestEvenValue = value;\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MIN_VALUE;\n \
    \       int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEven);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long smallestEvenValue = 0;\n     \
    \   long smallestIndex = 0;\n        boolean foundSmallestEvenValue = false;\n\
    \        boolean foundSmallestIndex = false;\n        for(int i = 0; i < arr.size();\
    \ i++) {\n            long value = arr.get(i);\n            if(value % 2 == 0)\
    \ {\n                smallestEvenValue = value;\n                foundSmallestEvenValue\
    \ = true;\n            }\n            else if(value < smallestEvenValue) {\n \
    \               smallestEvenValue = value;\n                foundSmallestEvenValue\
    \ = true;\n            }\n            else if(value == smallestEvenValue) {\n\
    \                foundSmallestEvenValue = true;\n                smallestIndex\
    \ = i;\n            }\n        }\n        if(foundSmallestEvenValue) {\n     \
    \       for(int i = 0; i < arr.size(); i++) {\n                long value = arr.get(i);\n\
    \                if(value % 2 == 0) {\n                    if(value == smallestEvenValue)\
    \ {\n                        result.add(smallestEvenValue);\n                \
    \        result.add(smallestIndex);\n                        foundSmallestIndex\
    \ = true;\n                    }\n                    else if(value < smallestEvenValue)\
    \ {\n                        result.add(smallestEvenValue);\n                \
    \        result.add(smallestIndex);\n                        foundSmallestIndex\
    \ = true;\n                    }\n                    else if(value == smallestEvenValue)\
    \ {\n                        foundSmallestIndex = true;\n                    \
    \    smallestIndex = i;\n                    }\n                }\n          \
    \  }\n        }\n        if(!foundSmallestEvenValue && !foundSmallestIndex) {\n\
    \            result.add(smallestEvenValue);\n            result.add(smallestIndex);\n\
    \        }\n        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long minValue = Long.MAX_VALUE;\n        int minIndex = -1;\n       \
    \ for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(value < minValue) {\n  \
    \                  minValue = value;\n                    minIndex = i;\n    \
    \            }\n            }\n        }\n        if(minIndex == -1) {\n     \
    \       return res;\n        }\n        long minValue = arr.get(minIndex);\n \
    \       for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ minValue) {\n                    minValue = value;\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n        if(minIndex == arr.size()\
    \ - 1) {\n            return res;\n        }\n        long minValue = arr.get(minIndex);\n\
    \        for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ minValue) {\n                    minValue = value;\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n        if(minIndex == arr.size()\
    \ - 1) {\n            return res;\n        }\n        long minValue = arr.get(minIndex);\n\
    \        for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ minValue) {\n                    minValue = value;\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n        if(minIndex == arr.size()\
    \ - 1) {\n            return res;\n        }\n        long minValue = arr.get(minIndex);\n\
    \        for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ minValue) {\n                    minValue = value;\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n        if(minIndex == arr.size()\
    \ - 1) {\n            return res;\n        }\n        long minValue = arr.get(minIndex);\n\
    \        for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ minValue) {\n                    minValue = value;\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n        if(minIndex == arr.size()\
    \ - 1) {\n            return res;\n        }\n        long minValue = arr.get(minIndex);\n\
    \        for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(value % 2 == 0) {\n                if(value <\
    \ minValue) {\n                    minValue = value;\n                    minIndex\
    \ = i;\n                }\n            }\n        }\n        if(minIndex == arr.size()\
    \ - 1) {\n            return res;\n        }\n        long minValue = arr.get(minIndex);\n\
    \        for(int i = minIndex + 1; i < arr.size(); i++) {\n            long value\
    \ = arr.get(i);\n            if(", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MIN_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        Arrays.sort(arr);\n        long smallestEvenValue\
    \ = arr.get(0);\n        int smallestIndex = 0;\n        for (int i = 1; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ > arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node.isEven()) {\n         \
    \       if (node.value < smallestEven) {\n                    smallestEven = node.value;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            long value = arr.get(i);\n            if\
    \ (value % 2 == 0) {\n                if (smallestEven == Long.MAX_VALUE) {\n\
    \                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else {\n                    if (value < smallestEven)\
    \ {\n                        smallestEven = value;\n                        smallestIndex\
    \ = i;\n                    }\n                }\n            }\n        }\n \
    \       if (smallestEven == Long.MAX_VALUE) {\n            result.add(smallestEven);\n\
    \            result.add(smallestIndex);\n        } else {\n            if (smallestIndex\
    \ == -1) {\n                result.add(smallestEven);\n            } else {\n\
    \                result.add(smallestEven);\n                result.add(smallestIndex);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n   \
    \     int smallestIndex = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEvenValue\
    \ < arr.get(i)) {\n                    smallestEvenValue = arr.get(i);\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallestEven == Long.MAX_VALUE) {\n         \
    \           smallestEven = arr.get(i);\n                    smallestIndex = i;\n\
    \                } else if (arr.get(i) < smallestEven) {\n                   \
    \ smallestEven = arr.get(i);\n                    smallestIndex = i;\n       \
    \         }\n            }\n        }\n        if (smallestEven == Long.MAX_VALUE)\
    \ {\n            return res;\n        }\n        res.add(smallestEven);\n    \
    \    res.add(smallestIndex);\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        ArrayList<Long> temp = new ArrayList<>();\n  \
    \      long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                smallestEvenValue = Math.min(smallestEvenValue, arr.get(i));\n\
    \                smallestIndex = i;\n            }\n        }\n        if (smallestEvenValue\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        for (int\
    \ i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == smallestEvenValue)\
    \ {\n                temp.add(arr.get(i));\n            }\n        }\n       \
    \ Collections.sort(temp);\n        result.add(smallestEvenValue);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        long smallestValue\
    \ = 0;\n        for(Long val : arr) {\n            if(val % 2 == 0) {\n      \
    \          smallestEven = Math.min(smallestEven, val);\n                smallestIndex++;\n\
    \                smallestValue = val;\n            }\n            else {\n   \
    \             temp.add(val);\n            }\n        }\n        if(smallestEven\
    \ == Long.MAX_VALUE) {\n            return result;\n        }\n        for(Long\
    \ val : temp) {\n            if(val % 2 == 0) {\n                smallestEven\
    \ = Math.min(smallestEven, val);\n                smallestIndex++;\n         \
    \       smallestValue = val;\n            }\n        }\n        result.add(smallestValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallest_even_value = Long.MIN_VALUE;\n\
    \        int smallest_even_index = -1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest_even_value\
    \ < arr.get(i)) {\n                    smallest_even_value = arr.get(i);\n   \
    \                 smallest_even_index = i;\n                }\n            }\n\
    \        }\n        if (smallest_even_value == Long.MIN_VALUE) {\n           \
    \ return res;\n        }\n        res.add(smallest_even_value);\n        res.add(smallest_even_index);\n\
    \        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (Long node : arr) {\n            if (node.isEven()) {\n    \
    \            if (node.value < smallestEvenValue) {\n                    smallestEvenValue\
    \ = node.value;\n                    smallestIndex = arr.indexOf(node);\n    \
    \            }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = Long.MAX_VALUE;\n   \
    \     int smalest_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smalest_value < arr.get(i))\
    \ {\n                    smalest_value = arr.get(i);\n                    smalest_index\
    \ = i;\n                }\n            }\n        }\n        if (smalest_index\
    \ != 0) {\n            res.add(smalest_value);\n            res.add(smalest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n \
    \           if (value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        ArrayList<Long> indexes = new ArrayList<>();\n        long smallestEven\
    \ = Long.MAX_VALUE;\n        long smallestIndex = -1;\n        for (Long node\
    \ : arr) {\n            if (node % 2 == 0) {\n                evens.add(node);\n\
    \            } else {\n                if (node < smallestEven) {\n          \
    \          smallestEven = node;\n                    smallestIndex = -1;\n   \
    \             }\n                if (node < smallestEven) {\n                \
    \    smallestEven = node;\n                    smallestIndex = arr.indexOf(node);\n\
    \                }\n            }\n        }\n        if (evens.size() > 0) {\n\
    \            smallestEven = evens.get(0);\n            smallestIndex = indexes.get(0);\n\
    \        }\n        for (Long node : evens) {\n            if (node < smallestEven)\
    \ {\n                smallestEven = node;\n                smallestIndex = -1;\n\
    \            }\n            if (node < smallestEven) {\n                smallestEven\
    \ = node;\n                smallestIndex = arr.indexOf(node);\n            }\n\
    \        }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallestEvenValue > arr.get(i)) {\n       \
    \             smallestEvenValue = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        Arrays.sort(arr);\n        long smallest\
    \ = arr.get(0);\n        int smallest_index = 0;\n        for (int i = 1; i <\
    \ arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n               \
    \ if (smallest > arr.get(i)) {\n                    smallest = arr.get(i);\n \
    \                   smallest_index = i;\n                }\n            }\n  \
    \      }\n        result.add(smallest);\n        result.add(smallest_index);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallestEvenValue = Long.MAX_VALUE;\n        int smallestIndex =\
    \ 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long value =\
    \ arr.get(i);\n            if (value % 2 == 0) {\n                if (value <\
    \ smallestEvenValue) {\n                    smallestEvenValue = value;\n     \
    \               smallestIndex = i;\n                }\n            }\n       \
    \ }\n        if (smallestEvenValue == Long.MAX_VALUE) {\n            return result;\n\
    \        }\n        ArrayList<Long> evenValues = new ArrayList<>();\n        for\
    \ (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n \
    \           if (value % 2 == 0) {\n                evenValues.add(value);\n  \
    \          }\n        }\n        Collections.sort(evenValues);\n        result.add(smallestEvenValue);\n\
    \        result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n \
    \       int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(value < smallestEven) {\n                    smallestEven = value;\n\
    \                    smallestIndex = i;\n                }\n            }\n  \
    \      }\n        result.add(smallestEven);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long smallestEven = arr.get(0);\n        int\
    \ smallestIndex = -1;\n        for (int i = 1; i < arr.size(); i++) {\n      \
    \      if (arr.get(i) % 2 == 0) {\n                if (smallestEven == arr.get(i))\
    \ {\n                    smallestIndex = i;\n                    smallestEven\
    \ = arr.get(i);\n                }\n            }\n        }\n        if (smallestIndex\
    \ != -1) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long smallest_value = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if (value % 2 == 0) {\n                if (value < smallest_value)\
    \ {\n                    smallest_value = value;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_index\
    \ != -1) {\n            result.add(smallest_value);\n            result.add(smallest_index);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        long smallest_even_value = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = -1;\n        int smallest_index = -1;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) % 2 == 0) {\n                if (smallest_even_value\
    \ < arr.get(i)) {\n                    smallest_even_value = arr.get(i);\n   \
    \                 smallest_even_index = i;\n                }\n            }\n\
    \            if (arr.get(i) == smallest_even_value) {\n                if (smallest_index\
    \ < 0) {\n                    smallest_index = i;\n                }\n       \
    \     }\n        }\n        if (smallest_even_value == Long.MAX_VALUE) {\n   \
    \         return result;\n        }\n        result.add(smallest_even_value);\n\
    \        result.add(smallest_even_index);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = -1;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smallestEven > arr.get(i))\
    \ {\n                    smallestEven = arr.get(i);\n                    smallestIndex\
    \ = i;\n                }\n            }\n        }\n        if (smallestEven\
    \ != Long.MAX_VALUE) {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = 0;\n\
    \        for (Long node : arr) {\n            if (node.isEven()) {\n         \
    \       if (smallestEven > node.value) {\n                    smallestEven = node.value;\n\
    \                    smallestIndex = arr.indexOf(node);\n                }\n \
    \           }\n        }\n        if (smallestEven != Long.MAX_VALUE) {\n    \
    \        res.add(smallestEven);\n            res.add(smallestIndex);\n       \
    \ }\n        return res;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long smallest_even = Long.MAX_VALUE;\n        int smallest_index = -1;\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) %\
    \ 2 == 0) {\n                if (smallest_even > arr.get(i)) {\n             \
    \       smallest_even = arr.get(i);\n                    smallest_index = i;\n\
    \                }\n            }\n        }\n        if (smallest_even != Long.MAX_VALUE)\
    \ {\n            res.add(smallest_even);\n            res.add(smallest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> res = new ArrayList<Long>();\n\
    \        long smallest_even_val = Long.MAX_VALUE;\n        int smallest_even_index\
    \ = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_val < arr.get(i)) {\n       \
    \             smallest_even_val = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        res.add(smallest_even_val);\n\
    \        res.add(smallest_even_index);\n        return res;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long smallestEvenValue = Long.MIN_VALUE;\n\
    \        int smallestIndex = 0;\n        for(int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if(value % 2 == 0) {\n    \
    \            if(smallestEvenValue < value) {\n                    smallestEvenValue\
    \ = value;\n                    smallestIndex = i;\n                }\n      \
    \      }\n        }\n        if(smallestEvenValue == Long.MIN_VALUE) {\n     \
    \       return result;\n        }\n        result.add(smallestEvenValue);\n  \
    \      result.add(smallestIndex);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = Long.MIN_VALUE;\n   \
    \     int smalest_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            if (arr.get(i) % 2 == 0) {\n                if (smalest_value < arr.get(i))\
    \ {\n                    smalest_value = arr.get(i);\n                    smalest_index\
    \ = i;\n                }\n            }\n        }\n        if (smalest_value\
    \ == Long.MIN_VALUE) {\n            return res;\n        }\n        res.add(smalest_value);\n\
    \        res.add(smalest_index);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (Long node : arr) {\n            if (node\
    \ % 2 == 0) {\n                if (smallestEven > node) {\n                  \
    \  smallestEven = node;\n                    smallestIndex = arr.indexOf(node);\n\
    \                }\n            }\n        }\n        res.add(smallestEven);\n\
    \        res.add(smallestIndex);\n        return res;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smalest_value = Long.MIN_VALUE;\n   \
    \     int smalest_index = 0;\n        for (int i = 0; i < arr.size(); i++) {\n\
    \            long value = arr.get(i);\n            if (value % 2 == 0) {\n   \
    \             if (value < smalest_value) {\n                    smalest_value\
    \ = value;\n                    smalest_index = i;\n                }\n      \
    \      }\n        }\n        if (smalest_index != 0) {\n            res.add(smalest_value);\n\
    \            res.add(smalest_index);\n        }\n        return res;", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        Arrays.sort(arr);\n \
    \       long smallest = arr.get(0);\n        int smallestIndex = 0;\n        for\
    \ (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 == 0) {\n\
    \                if (smallest > arr.get(i)) {\n                    smallest =\
    \ arr.get(i);\n                    smallestIndex = i;\n                }\n   \
    \         }\n        }\n        result.add(smallest);\n        result.add(smallestIndex);\n\
    \        return result;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallest_even_val = Long.MAX_VALUE;\n        long smallest_even_index\
    \ = -1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest_even_val < arr.get(i)) {\n       \
    \             smallest_even_val = arr.get(i);\n                    smallest_even_index\
    \ = i;\n                }\n            }\n        }\n        if (smallest_even_val\
    \ == Long.MAX_VALUE) {\n            return res;\n        }\n        ArrayList<Long>\
    \ smallest_even_val_arr = new ArrayList<>();\n        smallest_even_val_arr.add(smallest_even_val);\n\
    \        smallest_even_val_arr.add(smallest_even_index);\n        res.add(smallest_even_val_arr);\n\
    \        return res;", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     long smallest_even = Long.MAX_VALUE;\n        long smallest_index = -1;\n\
    \        for(long i : arr) {\n            if(i%2 == 0) {\n                if(smallest_even\
    \ > i) {\n                    smallest_even = i;\n                    smallest_index\
    \ = i;\n                }\n            }\n        }\n        if(smallest_even\
    \ != Long.MAX_VALUE) {\n            res.add(smallest_even);\n            res.add(smallest_index);\n\
    \        }\n        return res;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        long smallestEven = Long.MAX_VALUE;\n        int smallestIndex = -1;\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                if(smallestEven == Long.MAX_VALUE)\
    \ {\n                    smallestEven = value;\n                    smallestIndex\
    \ = i;\n                } else if(value < smallestEven) {\n                  \
    \  smallestEven = value;\n                    smallestIndex = i;\n           \
    \     }\n            }\n        }\n        if(smallestEven == Long.MAX_VALUE)\
    \ {\n            return res;\n        }\n        ArrayList<Long> evens = new ArrayList<>();\n\
    \        for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                evens.add(value);\n       \
    \     }\n        }\n        Collections.sort(evens);\n        for(int i = 0; i\
    \ < evens.size(); i++) {\n            if(evens.get(i) == smallestEven) {\n   \
    \             res.add(smallestEven);\n                res.add(smallestIndex);\n\
    \                break;\n            }\n        }\n        return res;", "   \
    \     ArrayList<Long> result = new ArrayList<>();\n        long smallest_value\
    \ = 0;\n        int smallest_index = 0;\n        boolean found = false;\n    \
    \    for(int i = 0; i < arr.size(); i++) {\n            long value = arr.get(i);\n\
    \            if(value % 2 == 0) {\n                found = true;\n           \
    \     smallest_value = value;\n                smallest_index = i;\n         \
    \   }\n        }\n        if(found) {\n            result.add(smallest_value);\n\
    \            result.add(smallest_index);\n        }\n        return result;",
  "        ArrayList<Long> res = new ArrayList<Long>();\n        Arrays.sort(arr);\n\
    \        long smallest = arr.get(0);\n        int smallest_index = -1;\n     \
    \   for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) % 2 ==\
    \ 0) {\n                if (smallest > arr.get(i)) {\n                    smallest\
    \ = arr.get(i);\n                    smallest_index = i;\n                }\n\
    \            }\n        }\n        if (smallest == 0) {\n            return res;\n\
    \        }\n        res.add(smallest);\n        res.add(smallest_index);\n   \
    \     return res;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallest_index\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallest_index = i;\n       \
    \         }\n            }\n        }\n        result.add(smallest);\n       \
    \ result.add(smallest_index);\n        return result;", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        long smallestEven = Long.MAX_VALUE;\n    \
    \    int smallestIndex = 0;\n        for (Long val : arr) {\n            if (val\
    \ % 2 == 0) {\n                if (smallestEven > val) {\n                   \
    \ smallestEven = val;\n                    smallestIndex = arr.indexOf(val);\n\
    \                }\n            }\n        }\n        if (smallestEven != Long.MAX_VALUE)\
    \ {\n            res.add(smallestEven);\n            res.add(smallestIndex);\n\
    \        }\n        return res;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> smallest = new ArrayList<Long>();\n        ArrayList<Long>\
    \ smallest_index = new ArrayList<Long>();\n        ArrayList<Long> evens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> even_index = new ArrayList<Long>();\n\
    \        ArrayList<Long> even_smallest = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long> odd =\
    \ new ArrayList<Long>();\n        ArrayList<Long> odd_index = new ArrayList<Long>();\n\
    \        ArrayList<Long> odd_smallest = new ArrayList<Long>();\n        ArrayList<Long>\
    \ odd_smallest_index = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index\
    \ = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new\
    \ ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n\
    \        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n      \
    \  ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index\
    \ = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new\
    \ ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n\
    \        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n      \
    \  ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index\
    \ = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new\
    \ ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n\
    \        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n      \
    \  ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index\
    \ = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new\
    \ ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n\
    \        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n      \
    \  ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even_smallest_index = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index\
    \ = new ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new\
    \ ArrayList<Long>();\n        ArrayList<Long> even_smallest_index = new ArrayList<Long>();\n\
    \        ArrayList<Long", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        Arrays.sort(arr);\n        long smallest = arr.get(0);\n        int smallestIndex\
    \ = 0;\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ % 2 == 0) {\n                if (smallest > arr.get(i)) {\n                \
    \    smallest = arr.get(i);\n                    smallestIndex = i;\n        \
    \        }\n            }\n        }\n        result.add(smallest);\n        result.add(smallestIndex);\n\
    \        return result;"]
stop_tokens:
- "\n    }\n"

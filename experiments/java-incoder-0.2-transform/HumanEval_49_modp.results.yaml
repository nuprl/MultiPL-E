language: java
name: HumanEval_49_modp
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbr88pch4.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l && p == 0l) {\n            return\
    \ 0l;\n        }\n        if (n == 0l && p != 0l) {\n            return 1l;\n\
    \        }\n        if (n != 0l && p == 0l) {\n            return -1l;\n     \
    \   }\n        if (n < 0l || p < 0l) {\n            throw new IllegalArgumentException();\n\
    \        }\n        if (p > 1l) {\n            throw new IllegalArgumentException();\n\
    \        }\n        if (p > n + 1l) {\n            throw new IllegalArgumentException();\n\
    \        }\n        if (p > 1l) {\n            throw new IllegalArgumentException();\n\
    \        }\n        if (p == 1l) {\n            return 1l;\n        }\n      \
    \  if (p == n + 1l) {\n            return 1l;\n        }\n        if (p == n +\
    \ 1l) {\n            return 1l;\n        }\n        if (p == n + 1l) {\n     \
    \       return 1l;\n        }\n        if (p == n + 1l) {\n            return\
    \ 1l;\n        }\n        if (p == n + 1l) {\n            return 1l;\n       \
    \ }\n        if (p == n + 1l) {\n            return 1l;\n        }\n        if\
    \ (p == n + 1l) {\n            return 1l;\n        }\n        if (p == n + 1l)\
    \ {\n            return 1l;\n        }\n        if (p == n + 1l) {\n         \
    \   return 1l;\n        }\n        if (p == n + 1l) {\n            return 1l;\n\
    \        }\n        if (p == n + 1l) {\n            return 1l;\n        }\n  \
    \      if (p == n + 1l) {\n            return 1l;\n        }\n        if (p ==\
    \ n + 1l) {\n            return 1l;\n        }\n        if (p == n + 1l) {\n \
    \           return 1l;\n        }\n        if (p == n + 1l) {\n            return\
    \ 1l;\n        }\n        if (p == n + 1l) {\n            return 1l;\n       \
    \ }\n        if (p == n + 1l) {\n            return 1l;\n        }\n        if\
    \ (p == n + 1l) {\n            return 1l;\n        }\n        if (p == n + 1l)\
    \ {\n            return 1l;\n        }\n        if (p == n + 1l) {\n         \
    \   return 1l;\n        }\n        if (p == n + 1l) {\n            return 1l;\n\
    \        }\n        if (p == n + 1l) {\n            return 1l;\n        }\n  \
    \      if (p == n + 1l) {\n            return 1l;\n        }\n        if (p ==\
    \ n + 1l) {\n            return 1l;\n        }\n        if (p == n + 1l) {\n \
    \           return 1l;\n        }\n        if (p == n + 1l) {\n            return\
    \ 1l;\n        }\n        if (p == n + 1l) {\n            return 1l;\n       \
    \ }\n        if (p == n + 1l) {\n            return 1l;\n        }\n        if\
    \ (p == n + 1l) {\n            return 1l;\n        }\n        if (p == n + 1l)\
    \ {\n            return \n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwxy_gzni.java:134: error: illegal start of expression\n    }\n\
    \    ^\n/tmp/tmpwxy_gzni.java:135: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmpwxy_gzni.java:135: error:\
    \ ';' expected\n    public static void main(String[] args) {\n          ^\n/tmp/tmpwxy_gzni.java:135:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n                  ^\n/tmp/tmpwxy_gzni.java:135: error: ';' expected\n   \
    \ public static void main(String[] args) {\n                           ^\n/tmp/tmpwxy_gzni.java:135:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpwxy_gzni.java:145: error: reached\
    \ end of file while parsing\n}\n ^\n7 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n;\n            if (t < p)\n                t += p;\n  \
    \          r ^= t;\n            n -= t;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyrbeo0k.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n > 0) {\n\
    \            long r = n % p;\n            n /= p;\n            result = r * result\
    \ + p;\n        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpasnr0jsx.java:30)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long t = n;\n            n -= (t & -p);\n            res *= t;\n  \
    \      }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n = n / p;\n    \
    \    }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms6zsfvb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while ((n & 1l) != 0l)\
    \ {\n            n >>>= 1l;\n            r <<= 1l;\n        }\n        r %= p;\n\
    \        if ((n & 1l) != 0l) {\n            r ^= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmafakchj.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          res = (res * n) % p;\n            n--;\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt3h0ol03.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            r = (r*t) + (r%p);\n            n = n/p;\n  \
    \      }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26qs_y8a.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy2hthd7.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        if (p == 0l) {\n            return n;\n        }\n        if\
    \ (p == 1l) {\n            return n;\n        }\n        if (p == 2l) {\n    \
    \        return n;\n        }\n        if (p == 3l) {\n            return n;\n\
    \        }\n        if (p == 4l) {\n            return n;\n        }\n       \
    \ if (p == 5l) {\n            return n;\n        }\n        if (p == 6l) {\n \
    \           return n;\n        }\n        if (p == 7l) {\n            return n;\n\
    \        }\n        if (p == 8l) {\n            return n;\n        }\n       \
    \ if (p == 9l) {\n            return n;\n        }\n        if (p == 10l) {\n\
    \            return n;\n        }\n        if (p == 11l) {\n            return\
    \ n;\n        }\n        if (p == 12l) {\n            return n;\n        }\n \
    \       if (p == 13l) {\n            return n;\n        }\n        if (p == 14l)\
    \ {\n            return n;\n        }\n        if (p == 15l) {\n            return\
    \ n;\n        }\n        if (p == 16l) {\n            return n;\n        }\n \
    \       if (p == 17l) {\n            return n;\n        }\n        if (p == 18l)\
    \ {\n            return n;\n        }\n        if (p == 19l) {\n            return\
    \ n;\n        }\n        if (p == 20l) {\n            return n;\n        }\n \
    \       if (p == 21l) {\n            return n;\n        }\n        if (p == 22l)\
    \ {\n            return n;\n        }\n        if (p == 23l) {\n            return\
    \ n;\n        }\n        if (p == 24l) {\n            return n;\n        }\n \
    \       if (p == 25l) {\n            return n;\n        }\n        if (p == 26l)\
    \ {\n            return n;\n        }\n        if (p == 27l) {\n            return\
    \ n;\n        }\n        if (p == 28l) {\n            return n;\n        }\n \
    \       if (p == 29l) {\n            return n;\n        }\n        if (p == 30l)\
    \ {\n            return n;\n        }\n        if (p == 31l) {\n            return\
    \ n;\n        }\n        if (p == 32l) {\n            return n;\n        }\n \
    \       if (p == 33l) {\n            return n;\n        }\n        if (p == 34l)\
    \ {\n            return n;\n        }\n        if (p == 35l) {\n            return\
    \ n;\n        }\n        if (p == 36l) {\n            return n;\n        }\n \
    \       if (p == 37l) {\n            return n;\n        }\n        if (p == 38l)\
    \ {\n            return n;\n        }\n        if (p == 39l) {\n            return\
    \ n;\n        }\n        if (p == 40l) {\n            return n;\n        }\n \
    \       if (p == 41l) {\n            return n;\n        }\n        if (p == 42l)\
    \ {\n            return n;\n        }\n        if (p == 43l) {\n            return\
    \ n;\n        }\n        if (p == 44l) {\n            return n;\n        }\n \
    \       if (p == 45l) {\n            return n;\n        }\n        if (p == 46l)\
    \ {\n            return n;\n        }\n        if (p\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzne83xpp.java:165: error: ')' expected\n        if (p\n       \
    \      ^\n/tmp/tmpzne83xpp.java:166: error: illegal start of statement\n    }\n\
    \    ^\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n > 0) {\n\
    \            long r = n % p;\n            n /= p;\n            result *= r;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyu6s9naz.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivm2lapb.java:28)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (p > 0) {\n     \
    \       long q = p / n;\n            long t = r * q;\n            r = t;\n   \
    \         p -= q * n;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = n & -p;\n            n = n ^ p;\n            r = r * t % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (p == 0l)\
    \ return 0l;\n        if (n == 1l) return p;\n        if (p == 1l) return n;\n\
    \        if (n % 2 == 0l) return modp(n / 2l, p * p) % p;\n        if (n % 3 ==\
    \ 0l) return modp(n / 3l, p * p) % p;\n        if (n % 5 == 0l) return modp(n\
    \ / 5l, p * p) % p;\n        return modp(n / 2l, p * p) % p;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1361rrp.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long tmp = res;\n            res = (res * (long) p) % n;\n        \
    \    n = tmp;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvl_9g2f.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < n) {\n     \
    \       r *= p;\n        }\n        return r % p;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0xy07ih.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        r = r * 2l;\n            n -= 1;\n        }\n        while (p > 0) {\n\
    \            r = r * p;\n            p -= 1;\n        }\n        return r;\n \
    \   }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_fw24sq.java:33)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbr88pch4.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < n) {\n     \
    \       r = r * p;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppuwv6fk3.java:28)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy2hthd7.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (p == 0l)\
    \ return 0l;\n        if (n == 1l) return p;\n        if (p == 1l) return n;\n\
    \        if (n % 2 == 1l) return modp(n / 2l, p * p) % p;\n        return modp(n\
    \ / 2l, p * p) % p;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnh9k315a.java:29)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5_b4ab5.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res = (res * p) % p;\n            n >>= 1l;\n            p\
    \ >>= 1l;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy6j8we9m.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res = (res * p) % p;\n                 ^\n\
    1 error\n"
  stdout: ''
  timestamp: 1659800269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5bacs0o.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r % p;\n            r = p;\n            p = t;\n            n\
    \ -= 1;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp0rw_pmf1.java:23)\n\tat Problem.main(tmp0rw_pmf1.java:31)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = p;\n        while\
    \ (m != 0) {\n            long r = r * m % p;\n            m = m / p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpovbofbkc.java:24: error: variable r is already defined in method\
    \ modp(long,long)\n            long r = r * m % p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n;\n            if (t < p) {\n                r = (r * n)\
    \ % p;\n            } else {\n                n -= t;\n            }\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8log2ws7.java:34)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res*p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmqo673b.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800275
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (p != 0) {\n    \
    \        if (p & 1l)\n                r = (r * n) % p;\n            n /= p;\n\
    \            p >>= 1;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprn0dc3o2.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (p & 1l)\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long tmp = n % p;\n            res = (res * tmp) % p;\n           \
    \ n = n / p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpef2rpya4.java:31)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (r < p) {\n    \
    \        r <<= 1;\n        }\n        while (r > p) {\n            r >>= 1;\n\
    \        }\n        return n % r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjqorfme.java:32)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- != 0) {\n\
    \            res = (res * p) % p;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoztunzb2.java:28)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (n == 1l)\
    \ return p;\n        if (n == 2l) return p + 1l;\n        if (n % 2l == 0l) return\
    \ modp(n / 2l, p) * modp(n / 2l, p);\n        if (n % 2l == 1l) return modp(n\
    \ / 2l, p) * modp(n / 2l, p + 1l);\n        return modp(n / 2l, p) * modp(n /\
    \ 2l, p + 1l);\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiytxek59.java:29)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n % p;\n            r = t;\n            n /= p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6hkdwh_.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r % p;\n            r = (r * t) % p;\n            n -= 1;\n \
    \       }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_4ke_ds.java:30)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l)\n            return 1l;\n     \
    \   if (p == 0l)\n            return 1l;\n        if (p == n)\n            return\
    \ 1l;\n        if (p == 1l)\n            return n;\n        if (p == 2l)\n   \
    \         return 1l;\n        if (p == 3l)\n            return 1l;\n        if\
    \ (p == 4l)\n            return 1l;\n        if (p == 5l)\n            return\
    \ 1l;\n        if (p == 6l)\n            return 1l;\n        if (p == 7l)\n  \
    \          return 1l;\n        if (p == 8l)\n            return 1l;\n        if\
    \ (p == 9l)\n            return 1l;\n        if (p == 10l)\n            return\
    \ 1l;\n        if (p == 11l)\n            return 1l;\n        if (p == 12l)\n\
    \            return 1l;\n        if (p == 13l)\n            return 1l;\n     \
    \   if (p == 14l)\n            return 1l;\n        if (p == 15l)\n           \
    \ return 1l;\n        if (p == 16l)\n            return 1l;\n        if (p ==\
    \ 17l)\n            return 1l;\n        if (p == 18l)\n            return 1l;\n\
    \        if (p == 19l)\n            return 1l;\n        if (p == 20l)\n      \
    \      return 1l;\n        if (p == 21l)\n            return 1l;\n        if (p\
    \ == 22l)\n            return 1l;\n        if (p == 23l)\n            return 1l;\n\
    \        if (p == 24l)\n            return 1l;\n        if (p == 25l)\n      \
    \      return 1l;\n        if (p == 26l)\n            return 1l;\n        if (p\
    \ == 27l)\n            return 1l;\n        if (p == 28l)\n            return 1l;\n\
    \        if (p == 29l)\n            return 1l;\n        if (p == 30l)\n      \
    \      return 1l;\n        if (p == 31l)\n            return 1l;\n        if (p\
    \ == 32l)\n            return 1l;\n        if (p == 33l)\n            return 1l;\n\
    \        if (p == 34l)\n            return 1l;\n        if (p == 35l)\n      \
    \      return 1l;\n        if (p == 36l)\n            return 1l;\n        if (p\
    \ == 37l)\n            return 1l;\n        if (p == 38l)\n            return 1l;\n\
    \        if (p == 39l)\n            return 1l;\n        if (p == 40l)\n      \
    \      return 1l;\n        if (p == 41l)\n            return 1l;\n        if (p\
    \ == 42l)\n            return 1l;\n        if (p == 43l)\n            return 1l;\n\
    \        if (p == 44l)\n            return 1l;\n        if (p == 45l)\n      \
    \      return 1l;\n        if (p == 46l)\n            return 1l;\n        if (p\
    \ == 47l)\n            return 1l;\n        if (p == 48l)\n            return 1l;\n\
    \        if (p == 49l)\n            return 1l;\n        if (p == 50l)\n      \
    \      return 1l;\n        if (\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy1vugk_3.java:128: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659800269
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n;\n            if (t % p != 0l) {\n                t =\
    \ t % p;\n            }\n            r = t;\n            n -= 1;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfytlo84w.java:33)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p;\n            r\
    \ = r%m; \n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprv2v0m0r.java:31)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r *= p;\n         \
    \   r %= p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo6g65z_n.java:31)\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*m+m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxw1gc8jj.java:30)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy2hthd7.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (p != 0) {\n    \
    \        if (p & 1l)\n                r = (r * n) % p;\n            n /= p;\n\
    \            p >>= 1;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprn0dc3o2.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (p & 1l)\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l || p == 0l) {\n            return\
    \ 0l;\n        }\n        long r = 1l;\n        while ((n & 1l) != 0l) {\n   \
    \         n >>>= 1l;\n            r <<= 1l;\n        }\n        while ((p & 1l)\
    \ != 0l) {\n            p >>>= 1l;\n            r <<= 1l;\n        }\n       \
    \ r %= p;\n        if (r == 0l) {\n            return 1l;\n        }\n       \
    \ long m = 0l;\n        while (r != 0l) {\n            m <<= 1l;\n           \
    \ m += r;\n            r >>= 1l;\n        }\n        return m;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9l3d1sju.java:46)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < n) {\n     \
    \       r *= p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_9r7cnt.java:28)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < p) {\n     \
    \       r *= 2;\n        }\n        return n % p;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpig_dxqpb.java:29)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivm2lapb.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = n;\n        while\
    \ (m != 0) {\n            long r = r * m % p;\n            m = m / p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyzngg8fl.java:24: error: variable r is already defined in method\
    \ modp(long,long)\n            long r = r * m % p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            if (m==0l) {\n                return r;\n  \
    \          }\n            r = r*p;\n            n = m;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800275
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            if (t>0) {\n                r = (r*p)+t;\n  \
    \          }\n            n = n/p;\n        }\n        return r;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvgqrbnio.java:32)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            if (r<0l) r += p;\n            res = (res\
    \ * r) % p;\n            n = n/p;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpirywyiyb.java:32)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (n == 1l)\
    \ return p;\n        if (p == 0l) return 0l;\n        if (p == 1l) return 1l;\n\
    \        if (p == 2l) return 2l;\n        if (p == 3l) return 3l;\n        if\
    \ (p == 4l) return 4l;\n        if (p == 5l) return 5l;\n        if (p == 6l)\
    \ return 6l;\n        if (p == 7l) return 7l;\n        if (p == 8l) return 8l;\n\
    \        if (p == 9l) return 9l;\n        if (p == 10l) return 10l;\n        if\
    \ (p == 11l) return 11l;\n        if (p == 12l) return 12l;\n        if (p ==\
    \ 13l) return 13l;\n        if (p == 14l) return 14l;\n        if (p == 15l) return\
    \ 15l;\n        if (p == 16l) return 16l;\n        if (p == 17l) return 17l;\n\
    \        if (p == 18l) return 18l;\n        if (p == 19l) return 19l;\n      \
    \  if (p == 20l) return 20l;\n        if (p == 21l) return 21l;\n        if (p\
    \ == 22l) return 22l;\n        if (p == 23l) return 23l;\n        if (p == 24l)\
    \ return 24l;\n        if (p == 25l) return 25l;\n        if (p == 26l) return\
    \ 26l;\n        if (p == 27l) return 27l;\n        if (p == 28l) return 28l;\n\
    \        if (p == 29l) return 29l;\n        if (p == 30l) return 30l;\n      \
    \  if (p == 31l) return 31l;\n        if (p == 32l) return 32l;\n        if (p\
    \ == 33l) return 33l;\n        if (p == 34l) return 34l;\n        if (p == 35l)\
    \ return 35l;\n        if (p == 36l) return 36l;\n        if (p == 37l) return\
    \ 37l;\n        if (p == 38l) return 38l;\n        if (p == 39l) return 39l;\n\
    \        if (p == 40l) return 40l;\n        if (p == 41l) return 41l;\n      \
    \  if (p == 42l) return 42l;\n        if (p == 43l) return 43l;\n        if (p\
    \ == 44l) return 44l;\n        if (p == 45l) return 45l;\n        if (p == 46l)\
    \ return 46l;\n        if (p == 47l) return 47l;\n        if (p == 48l) return\
    \ 48l;\n        if (p == 49l) return 49l;\n        if (p == 50l) return 50l;\n\
    \        if (p == 51l) return 51l;\n        if (p == 52l) return 52l;\n      \
    \  if (p == 53l) return 53l;\n        if (p == 54l) return 54l;\n        if (p\
    \ == 55l) return 55l;\n        if (p == 56l) return 56l;\n        if (p\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2tqr26be.java:80: error: ')' expected\n        if (p\n        \
    \     ^\n/tmp/tmp2tqr26be.java:81: error: illegal start of statement\n    }\n\
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        if (n == 1l) {\n            return p;\n        }\n        if\
    \ (n % 2 == 0l) {\n            return modp(n / 2l, p * p) % p;\n        }\n  \
    \      return modp(n / 2l, p * p + p) % p;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu4q09z6_.java:33)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            r = (r*t)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocusf0vs.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n > 0) {\n\
    \            long r = n % p;\n            n /= p;\n            result *= r;\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyu6s9naz.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p;\n            r\
    \ = r%m; \n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprv2v0m0r.java:31)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5bacs0o.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n>0) {\n \
    \           long r = n%p;\n            n = p;\n            p = r;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpzczcpbjv.java:23)\n\tat Problem.main(tmpzczcpbjv.java:30)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (p == 0l)\
    \ return 0l;\n        if (p == n) return 1l;\n        long r = 1l;\n        while\
    \ ((n & 1l) != 0l) {\n            n >>>= 1l;\n            r <<= 1l;\n        }\n\
    \        r %= p;\n        if (n != 0l) {\n            r ^= p;\n            r %=\
    \ p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp73f1glkc.java:37)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n>0) {\n \
    \           long r = n%p;\n            n = p;\n            p = r;\n        }\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpzczcpbjv.java:23)\n\tat Problem.main(tmpzczcpbjv.java:30)\n"
  stdout: ''
  timestamp: 1659800237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            if (t>0) {\n                r ^= p;\n      \
    \      }\n            n /= p;\n            p /= 2;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpin3xcnxy.java:33)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r *= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wm0gl4g.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long tmp = n%p;\n            res = (res * tmp) % p;\n            n =\
    \ n/p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqd_kvfy8.java:31)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5_b4ab5.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n /= p;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndge59cu.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n = n / p;\n    \
    \    }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms6zsfvb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = n % p;\n            n /= p;\n            r = r * t % p;\n  \
    \      }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpknm3yxak.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        if (p == 0l) {\n            return n;\n        }\n        if\
    \ (p > n) { // p > n\n            long q = modp(n - p, p);\n            return\
    \ q * q % p;\n        }\n        if (p < n) { // p < n\n            long q = modp(n,\
    \ p);\n            return q * q % p;\n        }\n        return n;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.modp(tmpk7_2mcn1.java:21)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp(tmpk7_2mcn1.java:28)\n\
    \tat Problem.modp(tmpk7_2mcn1.java:28)\n\tat Problem.modp"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy2hthd7.java:29)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n != 0) {\n    \
    \        long t = n & -p;\n            n ^= t;\n            r = (r * t) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long r = n % p;\n            n /= p;\n            res = (res * r) %\
    \ p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnmafug70.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res=res*p;\n            n>>=1l;\n            p=p*p;\n     \
    \   }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsyy0kl0x.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res=res*p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        if (p == 0l) {\n            return 1l;\n        }\n        if\
    \ (p == n) { // p == n\n            return 1l;\n        }\n        if (p < n)\
    \ { // p < n\n            long r = modp(n - p, p);\n            return r * p;\n\
    \        }\n        long r = modp(n - p, p);\n        return (r * p) % p;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.modp(tmpx53ofstr.java:21)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp(tmpx53ofstr.java:34)\n\
    \tat Problem.modp(tmpx53ofstr.java:34)\n\tat Problem.modp"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while ((n & 1l) != 0l)\
    \ {\n            n >>>= 1l;\n            r <<= 1l;\n        }\n        while ((p\
    \ & 1l) != 0l) {\n            p >>>= 1l;\n            r <<= 1l;\n        }\n \
    \       return r % p;\n    }\n    public static void main(String[] args) {\n \
    \   assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehicpvp1.java:33)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = (n*m)%p;\n    \
    \    }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res = (res * p) % p;\n            n >>>= 1;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoys41a66.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r *= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8wm0gl4g.java:33)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long d = n%p;\n            if (d==0) return r;\n            r = (r*p)%p;\n\
    \            n = n/p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbznnige_.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            if (m==0l) break;\n            r = (r*p)%m;\
    \ n = n/m;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < p) {\n     \
    \       r *= 2;\n        }\n        return n % r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_g7qtq3z.java:29)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5bacs0o.java:31)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n;\n            if (t < p) {\n                r = (r * r)\
    \ % p;\n            } else {\n                n -= t;\n            }\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800276
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res*p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmqo673b.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- != 0) {\n\
    \            res = (res * p) % p;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoztunzb2.java:28)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (p != 0) {\n    \
    \        if (p & 1l)\n                r = (r * n) % p;\n            n /= p;\n\
    \            p >>= 1;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprn0dc3o2.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (p & 1l)\n                  ^\n1 error\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long m = n%p;\n            res = (res * m) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbkzhouwf.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            r = (r*t)%p;\n            n = n/p;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmhjt9a3n.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n ^= m;\n            r ^= m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6ck_g6t.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       r = r * p % n;\n            n = n / 2;\n        }\n        return r;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg26d5bv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res*p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmqo673b.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivm2lapb.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long tmp = n%p;\n            res = (res * tmp) % p;\n            n =\
    \ n/p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqd_kvfy8.java:31)\n"
  stdout: ''
  timestamp: 1659800270
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy2hthd7.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n >= p) {\n            return n;\n     \
    \   }\n        long r = n % p;\n        if (p % 2 == 1) {\n            r = (r\
    \ * r) % p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppe4n32hs.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while ((n & 1) == 0) {\n\
    \            n >>>= 1;\n            r *= p;\n        }\n        while ((n & 1)\
    \ == 1) {\n            n >>>= 1;\n            r %= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppj6ajjq3.java:33)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l || p == 0l) {\n            return\
    \ 0l;\n        }\n        long r = 1l;\n        while (n != 0l) {\n          \
    \  long t = r * n % p;\n            if (t < p) {\n                t += p;\n  \
    \          }\n            r = t;\n            n /= p;\n        }\n        return\
    \ r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa_1ht5qh.java:36)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res*p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmqo673b.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800275
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p;\n            r\
    \ = r + m;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpetjkfntd.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p;\n            r\
    \ = r+m;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03sxzz8b.java:31)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res = (res * p) % p;\n            n = n >>\
    \ 1l;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpron_4yli.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n > p) {\n\
    \            result *= p;\n            n -= p;\n        }\n        return result\
    \ % p;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodmz0p7z.java:29)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          if (n % 2 == 0) {\n                res = (res * p) % p;\n         \
    \   }\n            n /= 2;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanel2idw.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res=res*p;\n            n >>>= 1;\n      \
    \      p *= p;\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt33k5ri0.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < p) {\n     \
    \       r *= 2;\n        }\n        return n % r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_g7qtq3z.java:29)\n"
  stdout: ''
  timestamp: 1659800271
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long t = n;\n            n -= (t & -p);\n            res *= t;\n  \
    \      }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) return 1l;\n        if (p == 0l)\
    \ return 0l;\n        if (p == n) return p;\n        long q = modp(n >> 1l, p);\n\
    \        if (n & 1l) q = q ^ p;\n        return q;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpifyoyfev.java:25: error: incompatible types: long cannot be converted\
    \ to boolean\n        if (n & 1l) q = q ^ p;\n              ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            if (t==0) return r;\n            r = r*p+t;\n\
    \            n = n/p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplt6m4736.java:31)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n) {\n      \
    \      long r = n % p;\n            if (r > 0) {\n                res = (res *\
    \ p) + r;\n            }\n            n /= p;\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(modp((3l), (5l))\
    \ == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4_enqz_a.java:22: error: incompatible types: long cannot be converted\
    \ to boolean\n        while (n) {\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n != 0l) {\n\
    \            long tmp = n % p;\n            result *= p;\n            result %=\
    \ tmp;\n            n /= p;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5m3f3zu_.java:31)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = r * n % p;\n            r = t;\n            n /= p;\n      \
    \  }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6hkdwh_.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n >>>= p;\n            r = r * m % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6hk_vk80.java:31)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      r = r*p;\n            n = n-1l;\n        }\n        return r;\n    }\n\
    \    public static void main(String[] args) {\n    assert(modp((3l), (5l)) ==\
    \ (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l))\
    \ == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnorkm9f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long m = p;\n        while\
    \ (m != 0) {\n            long t = m % p;\n            m /= p;\n            r\
    \ *= t;\n        }\n        return n % p;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjspgtvdf.java:32)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n >= p) {\n            return n;\n     \
    \   }\n        long r = n % p;\n        if (r == 0) {\n            return p;\n\
    \        }\n        return modp(r, p);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp(tmpzn_sxnob.java:28)\n\
    \tat Problem.modp(tmpzn_sxnob.java:28)\n\tat Problem.modp"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res = (res * p) % p;\n            n >>>= 1;\n\
    \            p = (p * p) % p;\n        }\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkws5vwsb.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p==0) {\n                res=res*p;\n            }\n          \
    \  n=n/p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstpf65vd.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>p) {\n    \
    \        res = (res * n) % p;\n            n /= p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb7naf00.java:29)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        long r = 1l;\n        while (n > 0) {\n            long m = n\
    \ & -p;\n            n &= p;\n            r = (r * m) % p;\n        }\n      \
    \  return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800277
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n-- > 0) {\n\
    \            result *= p;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdgajprs.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res*=p;\n            n >>>= 1l;\n            p*=p;\n      \
    \  }\n        return res;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppiwlttls.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res*=p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l) res = (res*p)%p;\n            n >>>= 1l;\n        }\n     \
    \   return res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphtiidpcq.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l) res = (res*p)%p;\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n != 0l) {\n\
    \            long r = n % p;\n            res = (res * r) % p;\n            n\
    \ = n / p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0omosvh.java:31)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n >>>= p;\n            r = r * m % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdfyahm2.java:31)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        if (p == 0l) {\n            return n;\n        }\n        if\
    \ (p > n) return 0l;\n        if (p < n) return 0l;\n        long r = 1l;\n  \
    \      while ((n & 1l) != 0l) {\n            n >>>= 1l;\n            r <<= 1l;\n\
    \        }\n        r %= p;\n        n %= p;\n        if (n == 0l) {\n       \
    \     return r;\n        }\n        if (p == 0l) {\n            return n;\n  \
    \      }\n        if (p > n) return 0l;\n        if (p < n) return 0l;\n     \
    \   long q = 1l;\n        while ((n & 1l) != 0l) {\n            n >>>= 1l;\n \
    \           q <<= 1l;\n        }\n        q %= p;\n        n %= p;\n        if\
    \ (n == 0l) {\n            return q;\n        }\n        if (p == 0l) {\n    \
    \        return n;\n        }\n        if (p > n) return 0l;\n        if (p <\
    \ n) return 0l;\n        long r = 1l;\n        while ((n & 1l) != 0l) {\n    \
    \        n >>>= 1l;\n            r <<= 1l;\n        }\n        r %= p;\n     \
    \   n %= p;\n        if (n == 0l) {\n            return r;\n        }\n      \
    \  if (p == 0l) {\n            return n;\n        }\n        if (p > n) return\
    \ 0l;\n        if (p < n) return 0l;\n        long q = 1l;\n        while ((n\
    \ & 1l) != 0l) {\n            n >>>= 1l;\n            q <<= 1l;\n        }\n \
    \       q %= p;\n        n %= p;\n        if (n == 0l) {\n            return q;\n\
    \        }\n        if (p == 0l) {\n            return n;\n        }\n       \
    \ if (p > n) return 0l;\n        if (p < n) return 0l;\n        long r = 1l;\n\
    \        while ((n & 1l) != 0l) {\n            n >>>= 1l;\n            r <<= 1l;\n\
    \        }\n        r %= p;\n        n %= p;\n        if (n == 0l) {\n       \
    \     return r;\n        }\n        if (p == 0l) {\n            return n;\n  \
    \      }\n        if (p > n) return 0l;\n        if (p < n) return 0l;\n     \
    \   long q = 1l;\n        while ((n & 1l) != 0l) {\n            n >>>= 1l;\n \
    \           q <<= 1l;\n        }\n        q %= p;\n        n %= p;\n        if\
    \ (n == 0l) {\n            return q;\n        }\n        if (p == 0l) {\n    \
    \        return n;\n        }\n        if (p > n) return 0l;\n        if (p <\
    \ n) return 0l;\n        long r = 1\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy1l8z_vz.java:119: error: ';' expected\n        long r = 1\n  \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n > 0) {\n  \
    \          long m = n & -p;\n            n ^= m;\n            res = (res * m)\
    \ % p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800277
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        long q = 1;\n        long\
    \ t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n    \
    \    long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n\
    \        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e\
    \ = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n      \
    \  long i = 0;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n\
    \        long m = 1;\n        long n = 1;\n        long o = 1;\n        long p\
    \ = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n      \
    \  long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a\
    \ = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n      \
    \  long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 0;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 0;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 0;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        \n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4q91qsel.java:43: error: variable n is already defined in method\
    \ modp(long,long)\n        long n = 1;\n             ^\n/tmp/tmp4q91qsel.java:45:\
    \ error: variable p is already defined in method modp(long,long)\n        long\
    \ p = 1;\n             ^\n/tmp/tmp4q91qsel.java:46: error: variable q is already\
    \ defined in method modp(long,long)\n        long q = 1;\n             ^\n/tmp/tmp4q91qsel.java:47:\
    \ error: variable r is already defined in method modp(long,long)\n        long\
    \ r = 1;\n             ^\n/tmp/tmp4q91qsel.java:49: error: variable t is already\
    \ defined in method modp(long,long)\n        long t = 1;\n             ^\n/tmp/tmp4q91qsel.java:50:\
    \ error: variable u is already defined in method modp(long,long)\n        long\
    \ u = 1;\n             ^\n/tmp/tmp4q91qsel.java:51: error: variable v is already\
    \ defined in method modp(long,long)\n        long v = 1;\n             ^\n/tmp/tmp4q91qsel.java:52:\
    \ error: variable w is already defined in method modp(long,long)\n        long\
    \ w = 1;\n             ^\n/tmp/tmp4q91qsel.java:53: error: variable x is already\
    \ defined in method modp(long,long)\n        long x = 1;\n             ^\n/tmp/tmp4q91qsel.java:54:\
    \ error: variable y is already defined in method modp(long,long)\n        long\
    \ y = 1;\n             ^\n/tmp/tmp4q91qsel.java:55: error: variable z is already\
    \ defined in method modp(long,long)\n        long z = 1;\n             ^\n/tmp/tmp4q91qsel.java:56:\
    \ error: variable a is already defined in method modp(long,long)\n        long\
    \ a = 1;\n             ^\n/tmp/tmp4q91qsel.java:57: error: variable b is already\
    \ defined in method modp(long,long)\n        long b = 1;\n             ^\n/tmp/tmp4q91qsel.java:58:\
    \ error: variable c is already defined in method modp(long,long)\n        long\
    \ c = 1;\n             ^\n/tmp/tmp4q91qsel.java:59: error: variable d is already\
    \ defined in method modp(long,long)\n        long d = 1;\n             ^\n/tmp/tmp4q91qsel.java:60:\
    \ error: variable e is already defined in method modp(long,long)\n        long\
    \ e = 1;\n             ^\n/tmp/tmp4q91qsel.java:61: error: variable f is already\
    \ defined i"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n /= p;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndge59cu.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n-- > 0) {\n\
    \            res = (res * p) % p;\n        }\n        return res;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg32n19ys.java:28)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l && p == 0l) {\n            return\
    \ 0l;\n        }\n        if (n == 0l && p != 0l) {\n            return 1l;\n\
    \        }\n        if (n != 0l && p == 0l) {\n            return 1l;\n      \
    \  }\n        if (n != 0l && p != 0l) {\n            return 1l;\n        }\n \
    \       if (n == 0l && p == 0l) {\n            return 1l;\n        }\n       \
    \ if (n == 0l && p != 0l) {\n            return 1l;\n        }\n        if (n\
    \ != 0l && p == 0l) {\n            return 1l;\n        }\n        if (n != 0l\
    \ && p != 0l) {\n            return 1l;\n        }\n        if (n == 0l && p ==\
    \ 0l) {\n            return 1l;\n        }\n        if (n == 0l && p != 0l) {\n\
    \            return 1l;\n        }\n        if (n != 0l && p == 0l) {\n      \
    \      return 1l;\n        }\n        if (n != 0l && p != 0l) {\n            return\
    \ 1l;\n        }\n        if (n == 0l && p == 0l) {\n            return 1l;\n\
    \        }\n        if (n == 0l && p != 0l) {\n            return 1l;\n      \
    \  }\n        if (n != 0l && p == 0l) {\n            return 1l;\n        }\n \
    \       if (n != 0l && p != 0l) {\n            return 1l;\n        }\n       \
    \ if (n == 0l && p == 0l) {\n            return 1l;\n        }\n        if (n\
    \ == 0l && p != 0l) {\n            return 1l;\n        }\n        if (n != 0l\
    \ && p == 0l) {\n            return 1l;\n        }\n        if (n != 0l && p !=\
    \ 0l) {\n            return 1l;\n        }\n        if (n == 0l && p == 0l) {\n\
    \            return 1l;\n        }\n        if (n == 0l && p != 0l) {\n      \
    \      return 1l;\n        }\n        if (n != 0l && p == 0l) {\n            return\
    \ 1l;\n        }\n        if (n != 0l && p != 0l) {\n            return 1l;\n\
    \        }\n        if (n == 0l && p == 0l) {\n            return 1l;\n      \
    \  }\n        if (n == 0l && p != 0l) {\n            return 1l;\n        }\n \
    \       if (n != 0l && p == 0l) {\n            return 1l;\n        }\n       \
    \ if (n != 0l && p != 0l) {\n            return 1l;\n        }\n        if (n\
    \ == 0l && p == 0l) {\n            return 1l;\n        }\n        if (n == 0l\
    \ && p != 0l) {\n            return 1l;\n        }\n        if (n != 0l && p ==\
    \ 0l) {\n            return 1l;\n        }\n        if (n != 0l && p != 0l) {\n\
    \            return 1l;\n        }\n        if (\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vg7d04z.java:118: error: illegal start of expression\n    }\n\
    \    ^\n1 error\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            n = n/p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyyj6ujad.java:30)\n"
  stdout: ''
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            if (t==0) return r;\n            r = r*p;\n \
    \           n = t;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l && p == 0l) {\n            return\
    \ 0l;\n        }\n        if (n == 0l && p != 0l) {\n            return 1l;\n\
    \        }\n        if (n != 0l && p == 0l) {\n            return 1l;\n      \
    \  }\n        if (n != 0l && p != 0l) {\n            return modp(n >> 1l, p >>\
    \ 1l) ^ modp(n & 1l, p & 1l);\n        }\n        if (n != 0l && p != 0l) {\n\
    \            return modp(n >> 1l, p >> 1l) ^ modp(n & 1l, p & 1l);\n        }\n\
    \        if (n != 0l && p != 0l) {\n            return modp(n >> 1l, p >> 1l)\
    \ ^ modp(n & 1l, p & 1l);\n        }\n        if (n != 0l && p != 0l) {\n    \
    \        return modp(n >> 1l, p >> 1l) ^ modp(n & 1l, p & 1l);\n        }\n  \
    \      if (n != 0l && p != 0l) {\n            return modp(n >> 1l, p >> 1l) ^\
    \ modp(n & 1l, p & 1l);\n        }\n        if (n != 0l && p != 0l) {\n      \
    \      return modp(n >> 1l, p >> 1l) ^ modp(n & 1l, p & 1l);\n        }\n    \
    \    if (n != 0l && p != 0l) {\n            return modp(n >> 1l, p >> 1l) ^ modp(n\
    \ & 1l, p & 1l);\n        }\n        if (n != 0l && p != 0l) {\n            return\
    \ modp(n >> 1l, p >> 1l) ^ modp(n & 1l, p & 1l);\n        }\n        if (n !=\
    \ 0l && p != 0l) {\n            return modp(n >> 1l, p >> 1l) ^ modp(n & 1l, p\
    \ & 1l);\n        }\n        if (n != 0l && p != 0l) {\n            return modp(n\
    \ >> 1l, p >> 1l) ^ modp(n & 1l, p & 1l);\n        }\n        if (n != 0l && p\
    \ != 0l) {\n            return modp(n >> 1l, p >> 1l) ^ modp(n & 1l, p & 1l);\n\
    \        }\n        if (n != 0l && p != 0l) {\n            return modp(n >> 1l,\
    \ p >> 1l) ^ modp(n & 1l, p & 1l);\n        }\n        if (n != 0l && p != 0l)\
    \ {\n            return modp(n >> 1l, p >> 1l\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpglb9oyh7.java:67: error: ')' expected\n            return modp(n\
    \ >> 1l, p >> 1l\n                                        ^\n/tmp/tmpglb9oyh7.java:69:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n ^= m;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n / p;\n            long t = r * m;\n            r = t;\n  \
    \          n = n % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res=res*p;\n            n >>= 1l;\n      \
    \      p *= p;\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpohxse1nj.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long m = n & -p;\n            n &= p;\n            r = (r * m) % p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800278
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n == 0l) {\n            return 1l;\n   \
    \     }\n        long r = 1l;\n        while (n > 0) {\n            long m = n\
    \ / p;\n            long t = r * m;\n            r = t;\n            n = n - m\
    \ * p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n = n/p;\n            r = r*p + m;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprl7bpnqv.java:30)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n-- > 0) {\n  \
    \          r = (r * p) % p;\n        }\n        return r;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivm2lapb.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n > 0) {\n     \
    \       long t = r * n % p;\n            r = t;\n            n /= p;\n       \
    \ }\n        return r;\n    }\n    public static void main(String[] args) {\n\
    \    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n\
    \    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n\
    \    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n\
    \    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpndge59cu.java:31)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (r < p) {\n    \
    \        long m = r * r;\n            if (n % m == 0) {\n                r = m;\n\
    \            } else {\n                r += p;\n            }\n        }\n   \
    \     return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800246
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long m = n%p;\n            r = (r*m)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn5bacs0o.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n            r = (r*p)%p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmp08bnc74l.java:26)\n\tat Problem.main(tmp08bnc74l.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n%p==0) {\n                res=res*p;\n            }\n          \
    \  n /= p;\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqj5vy3ec.java:31)\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long t = n % p;\n            n = n / p;\n            r = r * t + p;\n\
    \        }\n        return r;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bnenlnn.java:30)\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        if (n >= p) {\n            return n;\n     \
    \   }\n        long r = 1;\n        while ((n % p) != 0) {\n            r *= p;\n\
    \            n /= p;\n        }\n        return r;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzr0tflb_.java:32)\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long t = n%p;\n            n = p;\n            p = t;\n        }\n    \
    \    return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpcgtukfjb.java:23)\n\tat Problem.main(tmpcgtukfjb.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long r = n%p;\n            res = (res * r) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj9kdvry8.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long result = 1l;\n        while (n > 0) {\n\
    \            long t = n % p;\n            result *= p;\n            result +=\
    \ t;\n            n /= p;\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n \
    \   assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n\
    \    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n\
    \    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeojcg_va.java:31)\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     r = r*p;\n            n = n>>1;\n        }\n        return r;\n    }\n \
    \   public static void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n\
    \    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l), (101l)) ==\
    \ (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l), (101l))\
    \ == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l), (5l))\
    \ == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwy2hthd7.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n) {\n      \
    \      if (n % 2 == 1) {\n                res = (res * p) % p;\n            }\n\
    \            n /= 2;\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l),\
    \ (101l)) == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l),\
    \ (11l)) == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8js95p2.java:22: error: incompatible types: long cannot be converted\
    \ to boolean\n        while (n) {\n               ^\n1 error\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        res = (res * n) % p;\n            n /= p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsyiaxj5.java:30)\n"
  stdout: ''
  timestamp: 1659800236
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n > 0) {\n    \
    \        long m = n & -p;\n            n &= p;\n            r = (r * r) % p;\n\
    \            if (m > 0)\n                r = (r * r) % p;\n        }\n       \
    \ return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659800278
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>p) {\n    \
    \        res = (res * n) % p;\n            n /= p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb7naf00.java:29)\n"
  stdout: ''
  timestamp: 1659800272
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>p) {\n    \
    \        res = (res*2l) % (p+1l);\n            n -= p;\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn585mr3x.java:29)\n"
  stdout: ''
  timestamp: 1659800273
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            n = p;\n            p = t;\n        }\n     \
    \   return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.modp(tmpuh_1eino.java:23)\n\tat Problem.main(tmpuh_1eino.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (r < n) {\n     \
    \       r *= p;\n        }\n        return r;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l))\
    \ == (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0_9r7cnt.java:28)\n"
  stdout: ''
  timestamp: 1659800240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1l;\n        while (n>0) {\n      \
    \      long m = n%p;\n            n /= p;\n            r = r*p + m;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb5_b4ab5.java:30)\n"
  stdout: ''
  timestamp: 1659800239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        if (n&1l)\n                res = (res * p) % p;\n            n >>>= 1;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoys41a66.java:23: error: incompatible types: long cannot be converted\
    \ to boolean\n            if (n&1l)\n                 ^\n1 error\n"
  stdout: ''
  timestamp: 1659800241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long r = 1;\n        while (n>0) {\n       \
    \     long t = n%p;\n            r = (r*t)%p;\n            n = n/p;\n        }\n\
    \        return r;\n    }\n    public static void main(String[] args) {\n    assert(modp((3l),\
    \ (5l)) == (3l));\n    assert(modp((1101l), (101l)) == (2l));\n    assert(modp((0l),\
    \ (101l)) == (1l));\n    assert(modp((3l), (11l)) == (8l));\n    assert(modp((100l),\
    \ (101l)) == (1l));\n    assert(modp((30l), (5l)) == (4l));\n    assert(modp((31l),\
    \ (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpocusf0vs.java:31)\n"
  stdout: ''
  timestamp: 1659800238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return 2^n modulo p (be aware of numerics).\n    // >>>\
    \ modp((3l), (5l))\n    // (3l)\n    // >>> modp((1101l), (101l))\n    // (2l)\n\
    \    // >>> modp((0l), (101l))\n    // (1l)\n    // >>> modp((3l), (11l))\n  \
    \  // (8l)\n    // >>> modp((100l), (101l))\n    // (1l)\n    public static long\
    \ modp(long n, long p) {\n        long res = 1l;\n        while (n>0) {\n    \
    \        long t = n%p;\n            res = (res * t) % p;\n            n = n/p;\n\
    \        }\n        return res;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(modp((3l), (5l)) == (3l));\n    assert(modp((1101l), (101l)) ==\
    \ (2l));\n    assert(modp((0l), (101l)) == (1l));\n    assert(modp((3l), (11l))\
    \ == (8l));\n    assert(modp((100l), (101l)) == (1l));\n    assert(modp((30l),\
    \ (5l)) == (4l));\n    assert(modp((31l), (5l)) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ckqaq6f.java:31)\n"
  stdout: ''
  timestamp: 1659800238

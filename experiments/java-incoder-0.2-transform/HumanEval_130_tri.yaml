name: HumanEval_130_tri
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Everyone knows Fibonacci sequence, it was studied deeply\
  \ by mathematicians in \n    // the last couple centuries. However, what people\
  \ don't know is Tribonacci sequence.\n    // Tribonacci sequence is defined by the\
  \ recurrence:\n    // tri(1) = 3\n    // tri(n) = 1 + n / 2, if n is even.\n   \
  \ // tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd.\n    // For example:\n\
  \    // tri(2) = 1 + (2 / 2) = 2\n    // tri(4) = 3\n    // tri(3) = tri(2) + tri(1)\
  \ + tri(4)\n    // = 2 + 3 + 3 = 8 \n    // You are given a non-negative integer\
  \ number n, you have to a return a list of the \n    // first n + 1 numbers of the\
  \ Tribonacci sequence.\n    // Examples:\n    // >>> tri((3l))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l)))\n    public static ArrayList<Long> tri(long n)\
  \ {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(tri((3l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l)))));\n \
  \   assert(tri((4l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l)))));\n    assert(tri((5l)).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l, (long)3l, (long)15l)))));\n    assert(tri((6l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)8l, (long)3l,\
  \ (long)15l, (long)4l)))));\n    assert(tri((7l)).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l)))));\n\
  \    assert(tri((8l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l)))));\n\
  \    assert(tri((9l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l)))));\n\
  \    assert(tri((20l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)2l, (long)8l, (long)3l, (long)15l, (long)4l, (long)24l, (long)5l, (long)35l,\
  \ (long)6l, (long)48l, (long)7l, (long)63l, (long)8l, (long)80l, (long)9l, (long)99l,\
  \ (long)10l, (long)120l, (long)11l)))));\n    assert(tri((0l)).equals((new ArrayList<Long>(Arrays.asList((long)1l)))));\n\
  \    assert(tri((1l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1) {\n            result.add(1l);\n            return result;\n        }\n\
    \        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long> second\
    \ = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n \
    \       first.add(1l);\n        second.add(1l);\n        third.add(1l);\n    \
    \    if (n % 2 == 0) {\n            third.add(1l);\n        }\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n <= 3) {\n            result.add(1l);\n            result.add(3l);\n\
    \            result.add(2l);\n            result.add(8l);\n        } else {\n\
    \            long tri1 = tri(n - 1l);\n            long tri2 = tri(n - 2l);\n\
    \            long tri3 = tri(n + 1l);\n            result.add(tri1);\n       \
    \     result.add(tri2);\n            result.add(tri3);\n        }\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 2) {\n            result.add(1l);\n            result.add(2l);\n        \
    \    return result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1);\n \
    \       ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n\
    \ - 3);\n        result.add(tri1.get(0) + tri2.get(0) + tri3.get(0));\n      \
    \  result.add(tri1.get(1) + tri2.get(1) + tri3.get(1));\n        result.add(tri1.get(2)\
    \ + tri2.get(2) + tri3.get(2));\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            result.add(1l);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)3;\n        long tri2 = tri1 + tri1;\n        long\
    \ tri3 = tri2 + tri2;\n        long tri4 = tri3 + tri3;\n        long tri5 = tri4\
    \ + tri4;\n        long tri6 = tri5 + tri5;\n        long tri7 = tri6 + tri6;\n\
    \        long tri8 = tri7 + tri7;\n        long tri9 = tri8 + tri8;\n        long\
    \ tri10 = tri9 + tri9;\n        long tri11 = tri10 + tri10;\n        long tri12\
    \ = tri11 + tri11;\n        long tri13 = tri12 + tri12;\n        long tri14 =\
    \ tri13 + tri13;\n        long tri15 = tri14 + tri14;\n        long tri16 = tri15\
    \ + tri15;\n        long tri17 = tri16 + tri16;\n        long tri18 = tri17 +\
    \ tri17;\n        long tri19 = tri18 + tri18;\n        long tri20 = tri19 + tri19;\n\
    \        long tri21 = tri20 + tri20;\n        long tri22 = tri21 + tri21;\n  \
    \      long tri23 = tri22 + tri22;\n        long tri24 = tri23 + tri23;\n    \
    \    long tri25 = tri24 + tri24;\n        long tri26 = tri25 + tri25;\n      \
    \  long tri27 = tri26 + tri26;\n        long tri28 = tri27 + tri27;\n        long\
    \ tri29 = tri28 + tri28;\n        long tri30 = tri29 + tri29;\n        long tri31\
    \ = tri30 + tri30;\n        long tri32 = tri31 + tri31;\n        long tri33 =\
    \ tri32 + tri32;\n        long tri34 = tri33 + tri33;\n        long tri35 = tri34\
    \ + tri34;\n        long tri36 = tri35 + tri35;\n        long tri37 = tri36 +\
    \ tri36;\n        long tri38 = tri37 + tri37;\n        long tri39 = tri38 + tri38;\n\
    \        long tri40 = tri39 + tri39;\n        long tri41 = tri40 + tri40;\n  \
    \      long tri42 = tri41 + tri41;\n        long tri43 = tri42 + tri42;\n    \
    \    long tri44 = tri43 + tri43;\n        long tri45 = tri44 + tri44;\n      \
    \  ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1)\
    \ {\n            result.add(1l);\n            result.add(n + 1l);\n          \
    \  return result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1l);\n  \
    \      ArrayList<Long> tri2 = tri(n - 2l);\n        ArrayList<Long> tri3 = tri(n\
    \ - 3l);\n        result.addAll(tri1);\n        result.addAll(tri2);\n       \
    \ result.addAll(tri3);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 1) {\n            result.add(1l);\n \
    \           result.add(3l);\n            result.add(2l);\n            result.add(8l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long tri1 = tri(n - 1);\n            long tri2 = tri(n - 2);\n            result.add(tri1);\n\
    \            result.add(tri1 + tri2);\n            result.add(tri1 + tri2 + tri1);\n\
    \            return result;\n        } else {\n            long tri1 = tri(n -\
    \ 1);\n            long tri2 = tri(n - 2);\n            result.add(tri1);\n  \
    \          result.add(tri1 + tri2);\n            result.add(tri1 + tri2 + tri1);\n\
    \            result.add(tri1 + tri2 + tri1 + tri2);\n            return result;\n\
    \        }", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n <= 3) {\n            result.add(1l);\n            result.add(3l);\n     \
    \       result.add(2l);\n            result.add(8l);\n            return result;\n\
    \        }\n        long tri1 = tri(n - 1) + tri(n - 2) + tri(n + 1);\n      \
    \  long tri2 = tri(n - 3) + tri(n - 2) + tri(n - 1);\n        result.add(tri1);\n\
    \        result.add(tri2);\n        result.add(tri1 + tri2);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(2l);\n        third.add(3l);\n        if (n % 2 == 0) {\n\
    \            third.add(1l);\n        }\n        third.add(tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1));\n        third.removeAll(first);\n        third.removeAll(second);\n\
    \        third.removeAll(third);\n        result.addAll(first);\n        result.addAll(second);\n\
    \        result.addAll(third);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(n);\n        third.add(n);\n        third.add(1l);\n     \
    \   third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(n);\n       \
    \ third.add(n);\n        third.add(n);\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (n <= 1) {\n            result.add(1l);\n   \
    \         result.add(n + 1l);\n            return result;\n        }\n       \
    \ ArrayList<Long> tri1 = tri(n - 1l);\n        ArrayList<Long> tri2 = tri(n -\
    \ 2l);\n        ArrayList<Long> tri3 = tri(n - 3l);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        if (n == 1l) return new ArrayList<Long>(Arrays.asList((long)1l));\n   \
    \     if (n == 2l) return new ArrayList<Long>(Arrays.asList((long)1l, (long)2l));\n\
    \        if (n % 2 == 0l) return tri(n - 1l).stream().flatMap(x -> tri(n - 2l).stream().map(y\
    \ -> x + y)).collect(Collectors.toList());\n        else return tri(n - 1l).stream().flatMap(x\
    \ -> tri(n - 2l).stream().flatMap(y -> tri(n - 3l).stream().map(z -> x + y + z)).collect(Collectors.toList());",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(1l);\n        third.add(1l);\n        long firstSum = first.get(0l);\n\
    \        long secondSum = second.get(0l);\n        long thirdSum = third.get(0l);\n\
    \        long sum;\n        if (n % 2 == 0) {\n            sum = firstSum + secondSum\
    \ + thirdSum;\n            third.add(sum);\n            secondSum = sum;\n   \
    \         thirdSum = sum;\n            firstSum = sum;\n        }\n        else\
    \ {\n            sum = firstSum + secondSum + thirdSum;\n            third.add(sum);\n\
    \            secondSum = sum;\n            thirdSum = sum;\n            firstSum\
    \ = sum;\n        }\n        third.add(sum);\n        secondSum = sum;\n     \
    \   thirdSum = sum;\n        firstSum = sum;\n        third.add(sum);\n      \
    \  secondSum = sum;\n        thirdSum = sum;\n        firstSum = sum;\n      \
    \  third.add(sum);\n        secondSum = sum;\n        thirdSum = sum;\n      \
    \  firstSum = sum;\n        third.add(sum);\n        secondSum = sum;\n      \
    \  thirdSum = sum;\n        firstSum = sum;\n        third.add(sum);\n       \
    \ secondSum = sum;\n        thirdSum = sum;\n        firstSum = sum;\n       \
    \ third.add(sum);\n        secondSum = sum;\n        thirdSum = sum;\n       \
    \ firstSum = sum;\n        third.add(sum);\n        secondSum = sum;\n       \
    \ thirdSum = sum;\n        firstSum = sum;\n        third.add(sum);\n        secondSum\
    \ = sum;\n        thirdSum = sum;\n        firstSum = sum;\n        third.add(sum);\n\
    \        secondSum = sum;\n        thirdSum = sum;\n        firstSum = sum;\n\
    \        third.add(sum);\n        secondSum = sum;\n        thirdSum = sum;\n\
    \        firstSum = sum;\n        third.add(sum);\n        secondSum = sum;\n\
    \        thirdSum = sum", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (n <= 1l) {\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n + 1l));\n            return result;\n        }\n        result.add(tri(n\
    \ - 1l));\n        result.add(tri(n - 2l));\n        result.add(tri(n + 1l));\n\
    \        return result;", "        if (n == 0) return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        if (n == 1) return new ArrayList<Long>(Arrays.asList((long)3l));\n  \
    \      if (n == 2) return new ArrayList<Long>(Arrays.asList((long)2l, (long)8l));\n\
    \        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        tri1.add(tri2.get(tri2.size() - 1) + tri3.get(tri3.size()\
    \ - 1));\n        result.addAll(tri1);\n        result.addAll(tri2);\n       \
    \ result.addAll(tri3);\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n - 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        }\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    if (n == 0) {\n            result.add(0l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n > 0) {\n            ArrayList<Long>\
    \ first = new ArrayList<>();\n            ArrayList<Long> second = new ArrayList<>();\n\
    \            ArrayList<Long> third = new ArrayList<>();\n            first.add(0l);\n\
    \            second.add(1l);\n            third.add(2l);\n            ArrayList<Long>\
    \ fourth = new ArrayList<>();\n            fourth.add(3l);\n            ArrayList<Long>\
    \ fifth = new ArrayList<>();\n            fifth.add(4l);\n            ArrayList<Long>\
    \ sixth = new ArrayList<>();\n            sixth.add(5l);\n            ArrayList<Long>\
    \ seventh = new ArrayList<>();\n            seventh.add(6l);\n            ArrayList<Long>\
    \ eighth = new ArrayList<>();\n            eighth.add(7l);\n            ArrayList<Long>\
    \ ninth = new ArrayList<>();\n            ninth.add(8l);\n            ArrayList<Long>\
    \ tenth = new ArrayList<>();\n            tenth.add(9l);\n            ArrayList<Long>\
    \ eleventh = new ArrayList<>();\n            eleventh.add(10l);\n            ArrayList<Long>\
    \ twelfth = new ArrayList<>();\n            twelfth.add(11l);\n            ArrayList<Long>\
    \ thirteenth = new ArrayList<>();\n            thirteenth.add(12l);\n        \
    \    ArrayList<Long> fourteenth = new ArrayList<>();\n            fourteenth.add(13l);\n\
    \            ArrayList<Long> fifteenth = new ArrayList<>();\n            fifteenth.add(14l);\n\
    \            ArrayList<Long> sixteenth = new ArrayList<>();\n            sixteenth.add(15l);\n\
    \            ArrayList<Long> seventeenth = new ArrayList<>();\n            seventeenth.add(16l);\n\
    \            ArrayList<Long> eighteenth = new ArrayList<>();\n            eighteenth.add(17l);\n\
    \            ArrayList<Long> nineteenth = new ArrayList<>();\n            nineteenth.add(18l);\n\
    \            ArrayList<Long> twentieth = new ArrayList<>();\n            twentieth.add(19l);\n\
    \            ArrayList<Long> twentyfirst = new ArrayList<>();\n            twentyfirst.add(20l);\n\
    \            ArrayList<Long> twentysecond = new ArrayList<>();\n            twentysecond.add(21l);\n\
    \            ArrayList<Long> twentythird = new ArrayList<>();\n            twentythird.add(22l);\n\
    \            ArrayList<Long> twentyfourth = new ArrayList<>();\n            twentyfourth.add(23l);\n\
    \            ArrayList<Long> twentyfifth = new ArrayList<>();\n            twentyfifth.add(24l);\n\
    \            ArrayList<Long", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n <= 1) {\n\
    \            result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (long)3;\n        long tri2\
    \ = (long)1;\n        long tri3 = (long)2;\n        long tri4 = (long)3;\n   \
    \     long tri5 = (long)1;\n        long tri6 = (long)2;\n        long tri7 =\
    \ (long)3;\n        long tri8 = (long)1;\n        long tri9 = (long)2;\n     \
    \   long tri10 = (long)3;\n        long tri11 = (long)1;\n        long tri12 =\
    \ (long)2;\n        long tri13 = (long)3;\n        long tri14 = (long)1;\n   \
    \     long tri15 = (long)2;\n        long tri16 = (long)3;\n        long tri17\
    \ = (long)1;\n        long tri18 = (long)2;\n        long tri19 = (long)3;\n \
    \       long tri20 = (long)1;\n        long tri21 = (long)2;\n        long tri22\
    \ = (long)3;\n        long tri23 = (long)1;\n        long tri24 = (long)2;\n \
    \       long tri25 = (long)3;\n        long tri26 = (long)1;\n        long tri27\
    \ = (long)2;\n        long tri28 = (long)3;\n        long tri29 = (long)1;\n \
    \       long tri30 = (long)2;\n        long tri31 = (long)3;\n        long tri32\
    \ = (long)1;\n        long tri33 = (long)2;\n        long tri34 = (long)3;\n \
    \       long tri35 = (long)1;\n        long tri36 = (long)2;\n        long tri37\
    \ = (long)3;\n        long tri38 = (long)1;\n        long tri39 = (long)2;\n \
    \       long tri40 = (long)3;\n        long tri41 = (long)1;\n        long tri42\
    \ = (long)2;\n        long tri43 = (long)3;\n        long tri44 = (long)1;\n \
    \       long tri45 = (long)2;\n        long tri46 = (long)3;\n        long tri47\
    \ = (long)1;\n        long tri48 = (long)2;\n        long tri49 = (long)3;\n \
    \       long tri50 = (long)1;\n        long tri51 = (long)2;\n        long tri52\
    \ = (long)3;\n        long tri53 = (long)1;\n        long tri54 = (long)2;\n \
    \       long tri55 = (long)3;\n        long tri56 = (long)1;\n        long tri57\
    \ = (long)2;\n        long tri58 = (long)3;\n        long tri59 = (long)1;\n \
    \       long tri60 = (long)2;\n        long tri61 = (long)3;\n        long tri62\
    \ = (long)1;\n        long tri", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n / 2));\n \
    \           result.add(tri(n / 2 + 1));\n        } else {\n            result.add(tri(n\
    \ / 2 + 1));\n            result.add(tri(n / 2));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n <= 1) {\n\
    \            result.add(1l);\n            result.add(1l);\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1l) {\n            result.add(1l);\n\
    \            result.add(1l);\n            return result;\n        }\n        long\
    \ tri1 = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n        long tri3 = tri(n\
    \ - 3l);\n        result.add(tri1);\n        result.add(tri2);\n        result.add(tri3);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        ArrayList<Long> fourth = new ArrayList<>();\n        ArrayList<Long>\
    \ fifth = new ArrayList<>();\n        ArrayList<Long> sixth = new ArrayList<>();\n\
    \        ArrayList<Long> seventh = new ArrayList<>();\n        ArrayList<Long>\
    \ eighth = new ArrayList<>();\n        ArrayList<Long> ninth = new ArrayList<>();\n\
    \        ArrayList<Long> tenth = new ArrayList<>();\n        ArrayList<Long> eleventh\
    \ = new ArrayList<>();\n        ArrayList<Long> twelfth = new ArrayList<>();\n\
    \        ArrayList<Long> thirteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ fourteenth = new ArrayList<>();\n        ArrayList<Long> fifteenth = new ArrayList<>();\n\
    \        ArrayList<Long> sixteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ seventeenth = new ArrayList<>();\n        ArrayList<Long> eighteenth = new ArrayList<>();\n\
    \        ArrayList<Long> nineteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentieth = new ArrayList<>();\n        ArrayList<Long> twentyfirst = new ArrayList<>();\n\
    \        ArrayList<Long> twentysecond = new ArrayList<>();\n        ArrayList<Long>\
    \ twentythird = new ArrayList<>();\n        ArrayList<Long> twentyfourth = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyfifth = new ArrayList<>();\n \
    \       ArrayList<Long> twentysixth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentyseventh = new ArrayList<>();\n        ArrayList<Long> twentyeighth = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyninth = new ArrayList<>();\n \
    \       ArrayList<Long> thirtieth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyfirst = new ArrayList<>();\n        ArrayList<Long> thirtysecond = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtythird = new ArrayList<>();\n \
    \       ArrayList<Long> thirtyfourth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyfifth = new ArrayList<>();\n        ArrayList<Long> thirtysixth = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtyseventh = new ArrayList<>();\n\
    \        ArrayList<Long> thirtyeighth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtyninth = new ArrayList<>();\n        ArrayList<Long> fortieth = new ArrayList<>();\n\
    \        ArrayList<Long> fortyfirst = new ArrayList<>();\n        ArrayList<Long>\
    \ fortysecond = new ArrayList<>();\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1l);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2l);\n        ArrayList<Long> tri3 = tri(n - 3l);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            result.add(1l);\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (long)3;\n        long tri2\
    \ = (long)1;\n        long tri3 = (long)2;\n        long tri4 = (long)3;\n   \
    \     long tri5 = (long)1;\n        long tri6 = (long)2;\n        long tri7 =\
    \ (long)3;\n        long tri8 = (long)1;\n        long tri9 = (long)2;\n     \
    \   long tri10 = (long)3;\n        long tri11 = (long)1;\n        long tri12 =\
    \ (long)2;\n        long tri13 = (long)3;\n        long tri14 = (long)1;\n   \
    \     long tri15 = (long)2;\n        long tri16 = (long)3;\n        long tri17\
    \ = (long)1;\n        long tri18 = (long)2;\n        long tri19 = (long)3;\n \
    \       long tri20 = (long)1;\n        long tri21 = (long)2;\n        long tri22\
    \ = (long)3;\n        long tri23 = (long)1;\n        long tri24 = (long)2;\n \
    \       long tri25 = (long)3;\n        long tri26 = (long)1;\n        long tri27\
    \ = (long)2;\n        long tri28 = (long)3;\n        long tri29 = (long)1;\n \
    \       long tri30 = (long)2;\n        long tri31 = (long)3;\n        long tri32\
    \ = (long)1;\n        long tri33 = (long)2;\n        long tri34 = (long)3;\n \
    \       long tri35 = (long)1;\n        long tri36 = (long)2;\n        long tri37\
    \ = (long)3;\n        long tri38 = (long)1;\n        long tri39 = (long)2;\n \
    \       long tri40 = (long)3;\n        long tri41 = (long)1;\n        long tri42\
    \ = (long)2;\n        long tri43 = (long)3;\n        long tri44 = (long)1;\n \
    \       long tri45 = (long)2;\n        long tri46 = (long)3;\n        long tri47\
    \ = (long)1;\n        long tri48 = (long)2;\n        long tri49 = (long)3;\n \
    \       long tri50 = (long)1;\n        long tri51 = (long)2;\n        long tri52\
    \ = (long)3;\n        long tri53 = (long)1;\n        long tri54 = (long)2;\n \
    \       long tri55 = (long)3;\n        long tri56 = (long)1;\n        long tri57\
    \ = (long)2;\n        long tri58 = (long)3;\n        long tri59 = (long)1;\n \
    \       long tri60 = (long)2;\n        long tri61 = (long)3;\n        long tri62\
    \ = (long)1;\n        long tri", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1l);\n        second.add(1l);\n        third.add(1l);\n   \
    \     if (n % 2 == 0) {\n            third.add(1l);\n            third.add(1l);\n\
    \            third.add(1l);\n        }\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1l) {\n \
    \           result.add(1l);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1l));\n            result.add(tri(n\
    \ - 2l));\n            result.add(tri(n + 1l));\n        } else {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n + 1l));\n            result.add(tri(n - 1l));\n          \
    \  result.add(tri(n - 2l));\n            result.add(tri(n + 1l));\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 1l) {\n            result.add(1l);\n            result.add(n);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1l);\n        ArrayList<Long> tri2 = tri(n - 2l);\n        ArrayList<Long> tri3\
    \ = tri(n - 3l);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 3;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 2;\n\
    \        long c = 3;\n        long d = 1;\n        long e = 1;\n        long f\
    \ = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n      \
    \  long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n\
    \        long n = 1;\n        long o = 1;\n        long p = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n      \
    \  long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n\
    \        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b\
    \ = 2;\n        long c = 3;\n        long d = 1;\n        long e = 1;\n      \
    \  long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n\
    \        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m\
    \ = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n\
    \        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x\
    \ = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n      \
    \  long b = 2;\n        long c = 3;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 1;\n        long d = 1;\n        long temp;\n        long temp2;\n\
    \        long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n\
    \        long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n\
    \        long temp11;\n        long temp12;\n        long temp13;\n        long\
    \ temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n\
    \        long temp18;\n        long temp19;\n        long temp20;\n        long\
    \ temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n\
    \        long temp25;\n        long temp26;\n        long temp27;\n        long\
    \ temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n\
    \        long temp32;\n        long temp33;\n        long temp34;\n        long\
    \ temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n\
    \        long temp39;\n        long temp40;\n        long temp41;\n        long\
    \ temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n\
    \        long temp46;\n        long temp47;\n        long temp48;\n        long\
    \ temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n\
    \        long temp53;\n        long temp54;\n        long temp55;\n        long\
    \ temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n\
    \        long temp60;\n        long temp61;\n        long temp62;\n        long\
    \ temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n\
    \        long temp67;\n        long temp68;\n        long temp69;\n        long\
    \ temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n\
    \        long temp74;\n        long temp75;\n        long temp76;\n        long\
    \ temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n\
    \        long temp81;\n        long temp82;\n        long temp83;\n        long\
    \ temp84;", "        if (n == 0) {\n            return new ArrayList<Long>(Arrays.asList((long)0l));\n\
    \        }\n        if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 3) {\n            result.add(1l);\n\
    \            result.add(3l);\n            result.add(2l);\n            result.add(8l);\n\
    \            return result;\n        }\n        long tri1 = tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1);\n        long tri2 = tri(n - 3) + tri(n - 2) + tri(n - 1);\n\
    \        result.add(tri1);\n        result.add(tri2);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            result.add(n + 1l);\n            return result;\n        }\n    \
    \    ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long> second\
    \ = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n \
    \       first.add(1l);\n        second.add(1l);\n        third.add(1l);\n    \
    \    if (n % 2 == 0) {\n            third.add(n / 2l);\n        }\n        else\
    \ {\n            third.add(n - 1l);\n            third.add(n + 2l);\n        }\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0l);\n            result.add(1l);\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n > 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n    \
    \        result.add(0l);\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n <= 3) {\n            result.add(0l);\n            result.add(1l);\n\
    \            result.add(2l);\n            return result;\n        }\n        long\
    \ a = tri(n - 1) + tri(n - 2) + tri(n + 1);\n        result.add(a);\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ tri1 = (long)3;\n        long tri2 = (long)1;\n        long tri3 = (long)2;\n\
    \        long tri4 = (long)3;\n        long tri5 = (long)4;\n        long tri6\
    \ = (long)5;\n        long tri7 = (long)6;\n        long tri8 = (long)7;\n   \
    \     long tri9 = (long)8;\n        long tri10 = (long)9;\n        long tri11\
    \ = (long)10;\n        long tri12 = (long)11;\n        long tri13 = (long)12;\n\
    \        long tri14 = (long)13;\n        long tri15 = (long)14;\n        long\
    \ tri16 = (long)15;\n        long tri17 = (long)16;\n        long tri18 = (long)17;\n\
    \        long tri19 = (long)18;\n        long tri20 = (long)19;\n        long\
    \ tri21 = (long)20;\n        long tri22 = (long)21;\n        long tri23 = (long)22;\n\
    \        long tri24 = (long)23;\n        long tri25 = (long)24;\n        long\
    \ tri26 = (long)25;\n        long tri27 = (long)26;\n        long tri28 = (long)27;\n\
    \        long tri29 = (long)28;\n        long tri30 = (long)29;\n        long\
    \ tri31 = (long)30;\n        long tri32 = (long)31;\n        long tri33 = (long)32;\n\
    \        long tri34 = (long)33;\n        long tri35 = (long)34;\n        long\
    \ tri36 = (long)35;\n        long tri37 = (long)36;\n        long tri38 = (long)37;\n\
    \        long tri39 = (long)38;\n        long tri40 = (long)39;\n        long\
    \ tri41 = (long)40;\n        long tri42 = (long)41;\n        long tri43 = (long)42;\n\
    \        long tri44 = (long)43;\n        long tri45 = (long)44;\n        long\
    \ tri46 = (long)45;\n        long tri47 = (long)46;\n        long tri48 = (long)47;\n\
    \        long tri49 = (long)48;\n        long tri50 = (long)49;\n        long\
    \ tri51 = (long)50;\n        long tri52 = (long)51;\n        long tri53 = (long)52;\n\
    \        long tri54 = (long)53;\n        long tri55 = (long)54;\n        long\
    \ tri56 = (long)55;\n        long tri57 = (long)56;\n        long tri58 = (long)57",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n <= 3) {\n\
    \            result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n            return result;\n        }\n        long\
    \ tri1 = tri(n - 1) + tri(n - 2) + tri(n + 1);\n        if (n % 2 == 0) {\n  \
    \          result.add(tri1);\n        } else {\n            result.add(tri1 +\
    \ tri(n - 1));\n        }\n        return result;", "        if (n <= 1l) return\
    \ new ArrayList<Long>(Arrays.asList((long)1l));\n        if (n <= 3l) return new\
    \ ArrayList<Long>(Arrays.asList((long)3l));\n        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        long tri1 = tri(n - 1l);\n        long tri2\
    \ = tri(n - 2l);\n        long tri3 = tri(n - 3l);\n        result.add(tri1);\n\
    \        result.add(tri2);\n        result.add(tri3);\n        result.add(tri1\
    \ + tri2 + tri3);\n        return result;", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        if (n == 1l) {\n            result.add(1l);\n  \
    \          result.add(3l);\n            result.add(2l);\n            result.add(8l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n + 1l));\n        } else {\n            result.add(tri(n -\
    \ 1l));\n            result.add(tri(n - 2l));\n            result.add(tri(n +\
    \ 1l));\n            result.add(tri(n - 1l));\n            result.add(tri(n -\
    \ 2l));\n            result.add(tri(n + 1l));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1) {\n  \
    \          result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n        } else {\n            long tri1 = tri(n\
    \ - 1);\n            long tri2 = tri(n - 2);\n            long tri3 = tri(n -\
    \ 3);\n            result.add(tri1);\n            result.add(tri2);\n        \
    \    result.add(tri3);\n            result.add(tri1 + tri2 + tri3);\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(n);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (long)3;\n        long tri2\
    \ = (long)1;\n        long tri3 = (long)2;\n        long tri4 = (long)3;\n   \
    \     long tri5 = (long)1;\n        long tri6 = (long)2;\n        long tri7 =\
    \ (long)3;\n        long tri8 = (long)1;\n        long tri9 = (long)2;\n     \
    \   long tri10 = (long)3;\n        long tri11 = (long)1;\n        long tri12 =\
    \ (long)2;\n        long tri13 = (long)3;\n        long tri14 = (long)1;\n   \
    \     long tri15 = (long)2;\n        long tri16 = (long)3;\n        long tri17\
    \ = (long)1;\n        long tri18 = (long)2;\n        long tri19 = (long)3;\n \
    \       long tri20 = (long)1;\n        long tri21 = (long)2;\n        long tri22\
    \ = (long)3;\n        long tri23 = (long)1;\n        long tri24 = (long)2;\n \
    \       long tri25 = (long)3;\n        long tri26 = (long)1;\n        long tri27\
    \ = (long)2;\n        long tri28 = (long)3;\n        long tri29 = (long)1;\n \
    \       long tri30 = (long)2;\n        long tri31 = (long)3;\n        long tri32\
    \ = (long)1;\n        long tri33 = (long)2;\n        long tri34 = (long)3;\n \
    \       long tri35 = (long)1;\n        long tri36 = (long)2;\n        long tri37\
    \ = (long)3;\n        long tri38 = (long)1;\n        long tri39 = (long)2;\n \
    \       long tri40 = (long)3;\n        long tri41 = (long)1;\n        long tri42\
    \ = (long)2;\n        long tri43 = (long)3;\n        long tri44 = (long)1;\n \
    \       long tri45 = (long)2;\n        long tri46 = (long)3;\n        long tri47\
    \ = (long)1;\n        long tri48 = (long)2;\n        long tri49 = (long)3;\n \
    \       long tri50 = (long)1;\n        long tri51 = (long)2;\n        long tri52\
    \ = (long)3;\n        long tri53 = (long)1;\n        long tri54 = (long)2;\n \
    \       long tri55 = (long)3;\n        long tri56 = (long)1;\n        long tri57\
    \ = (long)2;\n        long tri58 = (long)3;\n        long tri59 = (long)1;\n \
    \       long tri60 = (long)2;\n        long tri61 = (long)3;\n        long tri62\
    \ = (long)1;\n        long tri", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 1;\n        long b = 2;\n        long c = 1;\n        long d\
    \ = 1;\n        long temp;\n        for(int i = 1; i <= n; i++) {\n          \
    \  temp = a + b + c + d;\n            a = b;\n            b = c;\n           \
    \ c = d;\n            d = temp;\n            result.add(temp);\n        }\n  \
    \      return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1l) {\n            result.add(1l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n + 1l));\n        } else {\n            result.add(tri(n -\
    \ 1l));\n            result.add(tri(n - 2l));\n            result.add(tri(n +\
    \ 1l));\n            result.add(tri(n - 1l));\n            result.add(tri(n -\
    \ 2l));\n            result.add(tri(n + 1l));\n        }\n        return result;",
  "        if (n <= 1l) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ tri1 = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n        long tri3 = tri(n\
    \ - 3l);\n        result.add((long) tri1);\n        result.add((long) tri2);\n\
    \        result.add((long) tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 3;\n        long d = 4;\n        long e = 5;\n        long f = 1;\n\
    \        long g = 2;\n        long h = 3;\n        long i = 1;\n        long j\
    \ = 2;\n        long k = 3;\n        long l = 1;\n        long m = 2;\n      \
    \  long n = 1;\n        long o = 2;\n        long p = 1;\n        long q = 3;\n\
    \        long r = 1;\n        long s = 2;\n        long t = 1;\n        long u\
    \ = 2;\n        long v = 3;\n        long w = 1;\n        long x = 2;\n      \
    \  long y = 1;\n        long z = 3;\n        long a = 1;\n        long b = 2;\n\
    \        long c = 3;\n        long d = 4;\n        long e = 5;\n        long f\
    \ = 1;\n        long g = 2;\n        long h = 3;\n        long i = 1;\n      \
    \  long j = 2;\n        long k = 3;\n        long l = 1;\n        long m = 2;\n\
    \        long n = 1;\n        long o = 2;\n        long p = 1;\n        long q\
    \ = 3;\n        long r = 1;\n        long s = 2;\n        long t = 1;\n      \
    \  long u = 2;\n        long v = 3;\n        long w = 1;\n        long x = 2;\n\
    \        long y = 1;\n        long z = 3;\n        long a = 1;\n        long b\
    \ = 2;\n        long c = 3;\n        long d = 4;\n        long e = 5;\n      \
    \  long f = 1;\n        long g = 2;\n        long h = 3;\n        long i = 1;\n\
    \        long j = 2;\n        long k = 3;\n        long l = 1;\n        long m\
    \ = 2;\n        long n = 1;\n        long o = 2;\n        long p = 1;\n      \
    \  long q = 3;\n        long r = 1;\n        long s = 2;\n        long t = 1;\n\
    \        long u = 2;\n        long v = 3;\n        long w = 1;\n        long x\
    \ = 2;\n        long y = 1;\n        long z = 3;\n        long a = 1;\n      \
    \  long b = 2;\n        long c = 3;\n        long d = 4;\n        long e = 5;\n\
    \        long f = 1;\n        long g = 2;\n        long h = 3;\n        long i\
    \ = 1;\n        long j = 2;\n        long k = 3;\n        long l = 1;\n      \
    \  long m = 2;\n        long n = 1;\n        long o = 2;\n        long p = 1;\n\
    \        long q = 3;\n        long r = 1;\n        long s = 2;\n        long t\
    \ = 1;\n        long u = 2;\n        long v = 3;\n        long w", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long a = tri(n - 1l);\n            long b = tri(n - 2l);\n            result.add(a);\n\
    \            result.add(b);\n            result.add(a + b);\n        } else {\n\
    \            long a = tri(n - 1l);\n            long b = tri(n - 2l);\n      \
    \      result.add(a);\n            result.add(b);\n            result.add(a +\
    \ b);\n            result.add(b + a);\n        }\n        return result;", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n \
    \           result.add(0l);\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n > 0) {\n            result.add(tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(n);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 3) {\n            result.add(1l);\n\
    \            result.add(3l);\n            result.add(2l);\n            result.add(8l);\n\
    \            return result;\n        }\n        long tri1 = tri(n - 1);\n    \
    \    long tri2 = tri(n - 2);\n        long tri3 = tri(n + 1);\n        result.add(tri1);\n\
    \        result.add(tri2);\n        result.add(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 1l) {\n \
    \           result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1l));\n            result.add(tri(n\
    \ - 2l));\n            result.add(tri(n + 1l));\n        } else {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n + 1l));\n            result.add(tri(n - 1l));\n          \
    \  result.add(tri(n - 2l));\n            result.add(tri(n + 1l));\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1l);\n        second.add(2l);\n        third.add(3l);\n   \
    \     if (n % 2 == 0) {\n            third.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        } else {\n            third.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1) + tri(n - 3) + tri(n - 4));\n        }\n        result.addAll(first);\n\
    \        result.addAll(second);\n        result.addAll(third);\n        return\
    \ result;", "        if (n <= 1l) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ tri1 = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n        long tri3 = tri(n\
    \ - 3l);\n        result.add(tri1);\n        result.add(tri2);\n        result.add(tri3);\n\
    \        return result;", "        if (n == 0) return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        if (n == 1) return new ArrayList<Long>(Arrays.asList((long)3l));\n  \
    \      if (n % 2 == 0) return tri(n - 1) + tri(n - 2) + tri(n + 1);\n        else\
    \ return tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4);", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (n <= 3) {\n \
    \           result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n        } else {\n            long tri1 = tri(n\
    \ - 1);\n            long tri2 = tri(n - 2);\n            long tri3 = tri(n +\
    \ 1);\n            result.add(tri1);\n            result.add(tri2);\n        \
    \    result.add(tri3);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1l);\n        second.add(1l);\n\
    \        third.add(1l);\n        if (n % 2 == 0) {\n            third.add(1l);\n\
    \            third.add(1l);\n        }\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1l) {\n            result.add(1l);\n\
    \            result.add(n + 1l);\n            return result;\n        }\n    \
    \    ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long> second\
    \ = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n \
    \       first.add(1l);\n        second.add(1l);\n        third.add(1l);\n    \
    \    if (n % 2 == 0) {\n            third.add(n / 2l);\n        }\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(n / 2l);\n        third.add(n / 2l);\n        third.add(n\
    \ / 2l);\n        third.add(", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 3) {\n            result.add(1l);\n            result.add(3l);\n\
    \            result.add(2l);\n            result.add(8l);\n            return\
    \ result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n   \
    \     ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long> third\
    \ = new ArrayList<>();\n        first.add(1l);\n        second.add(3l);\n    \
    \    third.add(2l);\n        third.add(8l);\n        ArrayList<Long> fourth =\
    \ new ArrayList<>();\n        fourth.add(first);\n        fourth.add(second);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        ArrayList<Long>\
    \ fifth = new ArrayList<>();\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fif", "     \
    \   if (n == 0) return new ArrayList<Long>(Arrays.asList((long)1l));\n       \
    \ if (n == 1) return new ArrayList<Long>(Arrays.asList((long)3l));\n        if\
    \ (n % 2 == 0) return tri(n - 1) + tri(n - 2) + tri(n - 1);\n        else return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1);", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (n <= 3) {\n            result.add(n);\n        \
    \    return result;\n        }\n        long tri1 = tri(n - 1);\n        long\
    \ tri2 = tri(n - 2);\n        long tri3 = tri(n - 3);\n        result.add(tri1);\n\
    \        result.add(tri2);\n        result.add(tri3);\n        return result;",
  "        if (n <= 1l) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        }\n        if (n % 2l == 0l) {\n            return tri(n - 1l).stream().map(x\
    \ -> x + n).collect(Collectors.toList());\n        } else {\n            return\
    \ tri(n - 1l).stream().map(x -> x + n).collect(Collectors.toList()).stream().map(x\
    \ -> x + n).collect(Collectors.toList());\n        }", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1l) {\n            result.add(1l);\n\
    \            result.add(n + 1l);\n            return result;\n        }\n    \
    \    ArrayList<Long> tri1 = tri(n - 1l);\n        ArrayList<Long> tri2 = tri(n\
    \ - 2l);\n        ArrayList<Long> tri3 = tri(n - 3l);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        long tri1 = (long)3;\n\
    \        long tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4\
    \ = (long)3;\n        long tri5 = (long)1;\n        long tri6 = (long)2;\n   \
    \     long tri7 = (long)3;\n        long tri8 = (long)1;\n        long tri9 =\
    \ (long)2;\n        long tri10 = (long)3;\n        long tri11 = (long)1;\n   \
    \     long tri12 = (long)2;\n        long tri13 = (long)3;\n        long tri14\
    \ = (long)1;\n        long tri15 = (long)2;\n        long tri16 = (long)3;\n \
    \       long tri17 = (long)1;\n        long tri18 = (long)2;\n        long tri19\
    \ = (long)3;\n        long tri20 = (long)1;\n        long tri21 = (long)2;\n \
    \       long tri22 = (long)3;\n        long tri23 = (long)1;\n        long tri24\
    \ = (long)2;\n        long tri25 = (long)3;\n        long tri26 = (long)1;\n \
    \       long tri27 = (long)2;\n        long tri28 = (long)3;\n        long tri29\
    \ = (long)1;\n        long tri30 = (long)2;\n        long tri31 = (long)3;\n \
    \       long tri32 = (long)1;\n        long tri33 = (long)2;\n        long tri34\
    \ = (long)3;\n        long tri35 = (long)1;\n        long tri36 = (long)2;\n \
    \       long tri37 = (long)3;\n        long tri38 = (long)1;\n        long tri39\
    \ = (long)2;\n        long tri40 = (long)3;\n        long tri41 = (long)1;\n \
    \       long tri42 = (long)2;\n        long tri43 = (long)3;\n        long tri44\
    \ = (long)1;\n        long tri45 = (long)2;\n        long tri46 = (long)3;\n \
    \       long tri47 = (long)1;\n        long tri48 = (long)2;\n        long tri49\
    \ = (long)3;\n        long tri50 = (long)1;\n        long tri51 = (long)2;\n \
    \       long tri52 = (long)3;\n        long tri53 = (long)1;\n        long tri54\
    \ = (long)2;\n        long tri55 = (long)3;\n        long tri56 = (long)1;\n \
    \       long tri57 = (long)2;\n        long tri58 = (long)3;\n        long tri59\
    \ = (long)1;\n        long tri60 = (long)2;\n        long tri61 = (long)3;\n \
    \       long tri62 = (long)1;\n        long ", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n \
    \           return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        if (n <= 1l)\
    \ {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n      \
    \  }\n        if (n % 2l == 0l) {\n            return new ArrayList<Long>(Arrays.asList((long)tri(n\
    \ - 1l), (long)tri(n - 2l), (long)tri(n + 1l)));\n        }\n        return new\
    \ ArrayList<Long>(Arrays.asList((long)tri(n - 1l), (long)tri(n - 2l), (long)tri(n\
    \ + 1l), (long)tri(n - 3l)));", "        if (n <= 3) {\n            return new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l, (long)n));\n   \
    \     }\n        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ tri1 = tri(n - 1);\n        long tri2 = tri(n - 2);\n        long tri3 = tri(n\
    \ - 3);\n        result.add(tri1);\n        result.add(tri2);\n        result.add(tri3);\n\
    \        result.add(tri1 + tri2 + tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        ArrayList<Long> tri4 = tri(n - 4);\n        ArrayList<Long>\
    \ tri5 = tri(n - 5);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        result.addAll(tri4);\n        result.addAll(tri5);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1l);\n            return\
    \ result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n   \
    \     ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long> third\
    \ = new ArrayList<>();\n        ArrayList<Long> fourth = new ArrayList<>();\n\
    \        ArrayList<Long> fifth = new ArrayList<>();\n        ArrayList<Long> sixth\
    \ = new ArrayList<>();\n        ArrayList<Long> seventh = new ArrayList<>();\n\
    \        ArrayList<Long> eighth = new ArrayList<>();\n        ArrayList<Long>\
    \ ninth = new ArrayList<>();\n        ArrayList<Long> tenth = new ArrayList<>();\n\
    \        ArrayList<Long> eleventh = new ArrayList<>();\n        ArrayList<Long>\
    \ twelfth = new ArrayList<>();\n        ArrayList<Long> thirteenth = new ArrayList<>();\n\
    \        ArrayList<Long> fourteenth = new ArrayList<>();\n        ArrayList<Long>\
    \ fifteenth = new ArrayList<>();\n        ArrayList<Long> sixteenth = new ArrayList<>();\n\
    \        ArrayList<Long> seventeenth = new ArrayList<>();\n        ArrayList<Long>\
    \ eighteenth = new ArrayList<>();\n        ArrayList<Long> nineteenth = new ArrayList<>();\n\
    \        ArrayList<Long> twentieth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentyfirst = new ArrayList<>();\n        ArrayList<Long> twentysecond = new\
    \ ArrayList<>();\n        ArrayList<Long> twentythird = new ArrayList<>();\n \
    \       ArrayList<Long> twentyfourth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentyfifth = new ArrayList<>();\n        ArrayList<Long> twentysixth = new\
    \ ArrayList<>();\n        ArrayList<Long> twentyseventh = new ArrayList<>();\n\
    \        ArrayList<Long> twentyeighth = new ArrayList<>();\n        ArrayList<Long>\
    \ twentyninth = new ArrayList<>();\n        ArrayList<Long> thirtieth = new ArrayList<>();\n\
    \        ArrayList<Long> thirtyfirst = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtysecond = new ArrayList<>();\n        ArrayList<Long> thirtythird = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtyfourth = new ArrayList<>();\n\
    \        ArrayList<Long> thirtyfifth = new ArrayList<>();\n        ArrayList<Long>\
    \ thirtysixth = new ArrayList<>();\n        ArrayList<Long> thirtyseventh = new\
    \ ArrayList<>();\n        ArrayList<Long> thirtyeighth = new ArrayList<>();\n\
    \        ArrayList<Long> thirtyninth = new ArrayList<>();\n        ArrayList<Long>\
    \ fortieth = new ArrayList<>();\n        ArrayList<Long> fortyfirst = new ArrayList<>();\n\
    \        ArrayList<", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n == 0) {\n            result.add(0l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  long tri1 = tri(n - 1);\n            long tri2 = tri(n - 2);\n            long\
    \ tri3 = tri(n + 1);\n            result.add(tri1);\n            result.add(tri2);\n\
    \            result.add(tri3);\n            return result;\n        }\n      \
    \  long tri1 = tri(n - 1);\n        long tri2 = tri(n - 2);\n        result.add(tri1);\n\
    \        result.add(tri2);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n    \
    \    long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n\
    \        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j\
    \ = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n      \
    \  long n = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 2;\n\
    \        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f\
    \ = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n      \
    \  long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n\
    \        long n = 1;\n        long o = 1;\n        long p = 1;\n        long q\
    \ = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n      \
    \  long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n\
    \        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b\
    \ = 2;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n      \
    \  long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n\
    \        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m\
    \ = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n      \
    \  long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n\
    \        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x\
    \ = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n      \
    \  long b = 2;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n\
    \        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i\
    \ = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n      \
    \  long m = 1;\n        long n = 1;\n        long o = 1;\n        long p = 1;\n\
    \        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t\
    \ = 1;\n        long u = 1;\n        long v = 1;\n        long w", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long tri1 = (long)3;\n        long\
    \ tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4 = (long)3;\n\
    \        long tri5 = (long)1;\n        long tri6 = (long)2;\n        long tri7\
    \ = (long)3;\n        long tri8 = (long)1;\n        long tri9 = (long)2;\n   \
    \     long tri10 = (long)3;\n        long tri11 = (long)1;\n        long tri12\
    \ = (long)2;\n        long tri13 = (long)3;\n        long tri14 = (long)1;\n \
    \       long tri15 = (long)2;\n        long tri16 = (long)3;\n        long tri17\
    \ = (long)1;\n        long tri18 = (long)2;\n        long tri19 = (long)3;\n \
    \       long tri20 = (long)1;\n        long tri21 = (long)2;\n        long tri22\
    \ = (long)3;\n        long tri23 = (long)1;\n        long tri24 = (long)2;\n \
    \       long tri25 = (long)3;\n        long tri26 = (long)1;\n        long tri27\
    \ = (long)2;\n        long tri28 = (long)3;\n        long tri29 = (long)1;\n \
    \       long tri30 = (long)2;\n        long tri31 = (long)3;\n        long tri32\
    \ = (long)1;\n        long tri33 = (long)2;\n        long tri34 = (long)3;\n \
    \       long tri35 = (long)1;\n        long tri36 = (long)2;\n        long tri37\
    \ = (long)3;\n        long tri38 = (long)1;\n        long tri39 = (long)2;\n \
    \       long tri40 = (long)3;\n        long tri41 = (long)1;\n        long tri42\
    \ = (long)2;\n        long tri43 = (long)3;\n        long tri44 = (long)1;\n \
    \       long tri45 = (long)2;\n        long tri46 = (long)3;\n        long tri47\
    \ = (long)1;\n        long tri48 = (long)2;\n        long tri49 = (long)3;\n \
    \       long tri50 = (long)1;\n        long tri51 = (long)2;\n        long tri52\
    \ = (long)3;\n        long tri53 = (long)1;\n        long tri54 = (long)2;\n \
    \       long tri55 = (long)3;\n        long tri56 = (long)1;\n        long tri57\
    \ = (long)2;\n        long tri58 = (long)3;\n        long tri59 = (long)1;\n \
    \       long tri60 = (long)2;\n        long tri61 = (long)3;\n        long tri62\
    \ = (long)1;\n        long ", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            result.add(n\
    \ + 1l);\n            return result;\n        }\n        ArrayList<Long> left\
    \ = new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n \
    \       left.add(1l);\n        right.add(1l);\n        right.add(n + 1l);\n  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long sum = 0;\n  \
    \      while (left.size() < n + 1) {\n            sum = (left.get(left.size()\
    \ - 1) + right.get(left.size() - 2)) + right.get(left.size() - 1);\n         \
    \   result.add(sum);\n            left.add(sum);\n            right.add(sum);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1l) result.add(1l);\n        else if (n % 2 == 0l) result.add(tri(n\
    \ - 1l) + tri(n - 2l));\n        else result.add(tri(n - 1l) + tri(n - 2l) + tri(n\
    \ - 3l));\n        return result;", "        if (n == 1l) return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        if (n == 2l) return new ArrayList<Long>(Arrays.asList((long)1l, (long)3l));\n\
    \        if (n % 2l == 0l) return tri(n - 1l).stream().map(t -> t + t + n).collect(Collectors.toList());\n\
    \        else return tri(n - 1l).stream().map(t -> t + t + n).collect(Collectors.toList()).stream().map(t\
    \ -> t + t + n).collect(Collectors.toList());", "        if (n <= 1l) {\n    \
    \        return new ArrayList<Long>(Arrays.asList((long)1l));\n        }\n   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        long tri1 = tri(n\
    \ - 1l);\n        long tri2 = tri(n - 2l);\n        long tri3 = tri(n - 3l);\n\
    \        result.add((long) tri1);\n        result.add((long) tri2);\n        result.add((long)\
    \ tri3);\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1l);\n        second.add(1l);\n        third.add(1l);\n   \
    \     long a = 1;\n        long b = 2;\n        long c = 1;\n        long d =\
    \ 2;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long\
    \ h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n    \
    \    long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 2;\n        long c = 1;\n        long d\
    \ = 2;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 2;\n        long c = 1;\n      \
    \  long d = 2;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 2;\n        long c = 1;\n\
    \        long d = 2;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1l)\
    \ {\n            result.add(1l);\n            result.add(n + 1l);\n        } else\
    \ {\n            tri(n - 1l, result);\n            tri(n - 2l, result);\n    \
    \        tri(n - 3l, result);\n        }\n        return result;", "        if\
    \ (n == 0) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        } else if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        } else if (n % 2 == 0) {\n            return tri(n / 2).stream().map(t\
    \ -> t + t).collect(Collectors.toList());\n        } else {\n            return\
    \ tri(n / 2).stream().map(t -> t + t + t).collect(Collectors.toList());\n    \
    \    }", "        if (n == 0) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        }\n        if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        }\n        if (n == 2) {\n            return new ArrayList<Long>(Arrays.asList((long)2l));\n\
    \        }\n        if (n % 2 == 0) {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n - 1);\n        } else {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1);\n        }", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long a = 1;\n        long b = 1;\n    \
    \    long c = 1;\n        long d = 1;\n        long temp;\n        long sum;\n\
    \        long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n", "        ArrayList<Long> result = new ArrayList<>();\n        long\
    \ a = 1;\n        long b = 2;\n        long c = 1;\n        long d = 1;\n    \
    \    long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n\
    \        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l\
    \ = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n      \
    \  long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n\
    \        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w\
    \ = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n      \
    \  long a = 1;\n        long b = 2;\n        long c = 1;\n        long d = 1;\n\
    \        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h\
    \ = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  long l = 1;\n        long m = 1;\n        long n = 1;\n        long o = 1;\n\
    \        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s\
    \ = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n      \
    \  long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = 1;\n        long b = 2;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 2;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 1) {\n\
    \            result.add(1l);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2));\n        }\
    \ else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    \
    \    }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)3;\n        long tri2 = (long)1;\n        long tri3\
    \ = (long)2;\n        long tri4 = (long)3;\n        long tri5 = (long)4;\n   \
    \     long tri6 = (long)5;\n        long tri7 = (long)6;\n        long tri8 =\
    \ (long)7;\n        long tri9 = (long)8;\n        long tri10 = (long)9;\n    \
    \    long tri11 = (long)10;\n        long tri12 = (long)11;\n        long tri13\
    \ = (long)12;\n        long tri14 = (long)13;\n        long tri15 = (long)14;\n\
    \        long tri16 = (long)15;\n        long tri17 = (long)16;\n        long\
    \ tri18 = (long)17;\n        long tri19 = (long)18;\n        long tri20 = (long)19;\n\
    \        long tri21 = (long)20;\n        long tri22 = (long)21;\n        long\
    \ tri23 = (long)22;\n        long tri24 = (long)23;\n        long tri25 = (long)24;\n\
    \        long tri26 = (long)25;\n        long tri27 = (long)26;\n        long\
    \ tri28 = (long)27;\n        long tri29 = (long)28;\n        long tri30 = (long)29;\n\
    \        long tri31 = (long)30;\n        long tri32 = (long)31;\n        long\
    \ tri33 = (long)32;\n        long tri34 = (long)33;\n        long tri35 = (long)34;\n\
    \        long tri36 = (long)35;\n        long tri37 = (long)36;\n        long\
    \ tri38 = (long)37;\n        long tri39 = (long)38;\n        long tri40 = (long)39;\n\
    \        long tri41 = (long)40;\n        long tri42 = (long)41;\n        long\
    \ tri43 = (long)42;\n        long tri44 = (long)43;\n        long tri45 = (long)44;\n\
    \        long tri46 = (long)45;\n        long tri47 = (long)46;\n        long\
    \ tri48 = (long)47;\n        long tri49 = (long)48;\n        long tri50 = (long)49;\n\
    \        long tri51 = (long)50;\n        long tri52 = (long)51;\n        long\
    \ tri53 = (long)52;\n        long tri54 = (long)53;\n        long tri55 = (long)54;\n\
    \        long tri56 = (long)55;\n        long tri57 = (long)56;\n        long\
    \ tri58 = (long)57", "        ArrayList<Long> result = new ArrayList<>();\n  \
    \      if (n == 1l) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0l) {\n            result.add(tri(n - 1l) + tri(n\
    \ - 2l));\n        } else {\n            result.add(tri(n - 1l) + tri(n - 1l)\
    \ + tri(n - 2l));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1l);\n        second.add(2l);\n\
    \        third.add(3l);\n        if (n % 2 == 0) {\n            third.add(1l);\n\
    \        }\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n       \
    \ third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n \
    \       third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        third.add(1l);\n        third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        thir", "        ArrayList<Long> result = new ArrayList<>();\n       \
    \ if (n <= 3) {\n            result.add(1l);\n            result.add(3l);\n  \
    \          result.add(2l);\n            result.add(8l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1l);\n        second.add(3l);\n        third.add(2l);\n   \
    \     third.add(8l);\n        ArrayList<Long> fourth = new ArrayList<>();\n  \
    \      fourth.add(first);\n        fourth.add(second);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        fourth.add(third);\n        four", "        ArrayList<Long> result =\
    \ new ArrayList<>();\n        long a = 1;\n        long b = 2;\n        long c\
    \ = 1;\n        long d = 1;\n        long temp;\n        long temp2;\n       \
    \ long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n\
    \        long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n\
    \        long temp11;\n        long temp12;\n        long temp13;\n        long\
    \ temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n\
    \        long temp18;\n        long temp19;\n        long temp20;\n        long\
    \ temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n\
    \        long temp25;\n        long temp26;\n        long temp27;\n        long\
    \ temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n\
    \        long temp32;\n        long temp33;\n        long temp34;\n        long\
    \ temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n\
    \        long temp39;\n        long temp40;\n        long temp41;\n        long\
    \ temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n\
    \        long temp46;\n        long temp47;\n        long temp48;\n        long\
    \ temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n\
    \        long temp53;\n        long temp54;\n        long temp55;\n        long\
    \ temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n\
    \        long temp60;\n        long temp61;\n        long temp62;\n        long\
    \ temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n\
    \        long temp67;\n        long temp68;\n        long temp69;\n        long\
    \ temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n\
    \        long temp74;\n        long temp75;\n        long temp76;\n        long\
    \ temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n\
    \        long temp81;\n        long temp82;\n        long temp83;\n        long\
    \ temp84;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1l) {\n            result.add(1l);\n            result.add(n);\n        \
    \    return result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1l);\n\
    \        ArrayList<Long> tri2 = tri(n - 2l);\n        ArrayList<Long> tri3 = tri(n\
    \ - 3l);\n        ArrayList<Long> tri4 = tri(n - 4l);\n        ArrayList<Long>\
    \ tri5 = tri(n - 5l);\n        ArrayList<Long> tri6 = tri(n - 6l);\n        ArrayList<Long>\
    \ tri7 = tri(n - 7l);\n        ArrayList<Long> tri8 = tri(n - 8l);\n        ArrayList<Long>\
    \ tri9 = tri(n - 9l);\n        ArrayList<Long> tri10 = tri(n - 10l);\n       \
    \ ArrayList<Long> tri11 = tri(n - 11l);\n        ArrayList<Long> tri12 = tri(n\
    \ - 12l);\n        ArrayList<Long> tri13 = tri(n - 13l);\n        ArrayList<Long>\
    \ tri14 = tri(n - 14l);\n        ArrayList<Long> tri15 = tri(n - 15l);\n     \
    \   ArrayList<Long> tri16 = tri(n - 16l);\n        ArrayList<Long> tri17 = tri(n\
    \ - 17l);\n        ArrayList<Long> tri18 = tri(n - 18l);\n        ArrayList<Long>\
    \ tri19 = tri(n - 19l);\n        ArrayList<Long> tri20 = tri(n - 20l);\n     \
    \   ArrayList<Long> tri21 = tri(n - 21l);\n        ArrayList<Long> tri22 = tri(n\
    \ - 22l);\n        ArrayList<Long> tri23 = tri(n - 23l);\n        ArrayList<Long>\
    \ tri24 = tri(n - 24l);\n        ArrayList<Long> tri25 = tri(n - 25l);\n     \
    \   ArrayList<Long> tri26 = tri(n - 26l);\n        ArrayList<Long> tri27 = tri(n\
    \ - 27l);\n        ArrayList<Long> tri28 = tri(n - 28l);\n        ArrayList<Long>\
    \ tri29 = tri(n - 29l);\n        ArrayList<Long> tri30 = tri(n - 30l);\n     \
    \   ArrayList<Long> tri31 = tri(n - 31l);\n        ArrayList<Long> tri32 = tri(n\
    \ - 32l);\n        ArrayList<Long> tri33 = tri(n - 33l);\n        ArrayList<Long>\
    \ tri34 = tri(n - 34l);\n        ArrayList<Long> tri35 = tri(n - 35l);\n     \
    \   ArrayList<Long> tri36 = tri(n - 36l);\n        ArrayList<Long> tri37 = tri(n\
    \ - 37l);\n        ArrayList<Long> tri38 = tri(n - 38l);\n        ", "       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) result.add(0l);\n\
    \        if (n == 1) result.add(1l);\n        if (n == 2) result.add(2l);\n  \
    \      if (n % 2 == 0) {\n            long a = tri(n - 1);\n            long b\
    \ = tri(n - 2);\n            long c = tri(n + 1);\n            for (long i : (a,\
    \ b, c)) {\n                result.add(i);\n            }\n        } else {\n\
    \            long a = tri(n - 1);\n            long b = tri(n - 2);\n        \
    \    long c = tri(n + 1);\n            for (long i : (a, b, c)) {\n          \
    \      result.add(i);\n            }\n        }\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)3;\n\
    \        long tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4\
    \ = (long)3;\n        long tri5 = (long)1;\n        long tri6 = (long)2;\n   \
    \     long tri7 = (long)3;\n        long tri8 = (long)1;\n        long tri9 =\
    \ (long)2;\n        long tri10 = (long)3;\n        long tri11 = (long)1;\n   \
    \     long tri12 = (long)2;\n        long tri13 = (long)3;\n        long tri14\
    \ = (long)1;\n        long tri15 = (long)2;\n        long tri16 = (long)3;\n \
    \       long tri17 = (long)1;\n        long tri18 = (long)2;\n        long tri19\
    \ = (long)3;\n        long tri20 = (long)1;\n        long tri21 = (long)2;\n \
    \       long tri22 = (long)3;\n        long tri23 = (long)1;\n        long tri24\
    \ = (long)2;\n        long tri25 = (long)3;\n        long tri26 = (long)1;\n \
    \       long tri27 = (long)2;\n        long tri28 = (long)3;\n        long tri29\
    \ = (long)1;\n        long tri30 = (long)2;\n        long tri31 = (long)3;\n \
    \       long tri32 = (long)1;\n        long tri33 = (long)2;\n        long tri34\
    \ = (long)3;\n        long tri35 = (long)1;\n        long tri36 = (long)2;\n \
    \       long tri37 = (long)3;\n        long tri38 = (long)1;\n        long tri39\
    \ = (long)2;\n        long tri40 = (long)3;\n        long tri41 = (long)1;\n \
    \       long tri42 = (long)2;\n        long tri43 = (long)3;\n        long tri44\
    \ = (long)1;\n        long tri45 = (long)2;\n        long tri46 = (long)3;\n \
    \       long tri47 = (long)1;\n        long tri48 = (long)2;\n        long tri49\
    \ = (long)3;\n        long tri50 = (long)1;\n        long tri51 = (long)2;\n \
    \       long tri52 = (long)3;\n        long tri53 = (long)1;\n        long tri54\
    \ = (long)2;\n        long tri55 = (long)3;\n        long tri56 = (long)1;\n \
    \       long tri57 = (long)2;\n        long tri58 = (long)3;\n        long tri59\
    \ = (long)1;\n        long tri60 = (long)2;\n        long tri61 = (long)3;\n \
    \       long tri62 = (long)1;\n        long tri", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) result.add(0l);\n        if (n ==\
    \ 1) result.add(1l);\n        if (n == 2) result.add(2l);\n        if (n % 2 ==\
    \ 0) {\n            long tri1 = tri(n - 1);\n            long tri2 = tri(n - 2);\n\
    \            long tri3 = tri(n - 3);\n            result.add(tri1 + tri2 + tri3);\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 1;\n        long b = 2;\n        long c = 1;\n        long d\
    \ = 1;\n        long sum = 0;\n        long temp;\n        \n        while(n >\
    \ 0) {\n            temp = a + b + c + d;\n            sum = sum + temp;\n   \
    \         a = b;\n            b = c;\n            c = d;\n            d = temp;\n\
    \            \n            result.add(sum);\n            n = n - 1;\n        }\n\
    \        \n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long a = 1;\n    \
    \    long b = 2;\n        long c = 1;\n        long d = 1;\n        long temp;\n\
    \        long tri = 0;\n        long tri1 = 0;\n        long tri2 = 0;\n     \
    \   long tri3 = 0;\n        long tri4 = 0;\n        long tri5 = 0;\n        long\
    \ tri6 = 0;\n        long tri7 = 0;\n        long tri8 = 0;\n        long tri9\
    \ = 0;\n        long tri10 = 0;\n        long tri11 = 0;\n        long tri12 =\
    \ 0;\n        long tri13 = 0;\n        long tri14 = 0;\n        long tri15 = 0;\n\
    \        long tri16 = 0;\n        long tri17 = 0;\n        long tri18 = 0;\n \
    \       long tri19 = 0;\n        long tri20 = 0;\n        long tri21 = 0;\n  \
    \      long tri22 = 0;\n        long tri23 = 0;\n        long tri24 = 0;\n   \
    \     long tri25 = 0;\n        long tri26 = 0;\n        long tri27 = 0;\n    \
    \    long tri28 = 0;\n        long tri29 = 0;\n        long tri30 = 0;\n     \
    \   long tri31 = 0;\n        long tri32 = 0;\n        long tri33 = 0;\n      \
    \  long tri34 = 0;\n        long tri35 = 0;\n        long tri36 = 0;\n       \
    \ long tri37 = 0;\n        long tri38 = 0;\n        long tri39 = 0;\n        long\
    \ tri40 = 0;\n        long tri41 = 0;\n        long tri42 = 0;\n        long tri43\
    \ = 0;\n        long tri44 = 0;\n        long tri45 = 0;\n        long tri46 =\
    \ 0;\n        long tri47 = 0;\n        long tri48 = 0;\n        long tri49 = 0;\n\
    \        long tri50 = 0;\n        long tri51 = 0;\n        long tri52 = 0;\n \
    \       long tri53 = 0;\n        long tri54 = 0;\n        long tri55 = 0;\n  \
    \      long tri56 = 0;\n        long tri57 = 0;\n        long tri58 = 0;\n   \
    \     long tri59 = 0;\n        long tri60 = 0;\n        long tri61 = 0;\n    \
    \    long tri62 = 0;\n        long tri63 = 0;\n        long tri64 = 0;\n     \
    \   long tri65 = 0;\n        long tri66 = 0;\n        long tri67 = 0;\n      \
    \  long tri68 = 0;\n        long tri69 = 0;\n        long tri70 = 0;\n       \
    \ long tri71 = 0;\n        long tri72 = 0;\n        long tri73 = 0;\n        long\
    \ tri74 = 0;\n        long tri75 = 0;\n        long tri76 = 0;\n        long tri77\
    \ = 0;\n        long tri78 = 0;\n        long tri79 = 0;\n        long tri80",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1l) {\n \
    \           result.add(1l);\n            result.add(n);\n            return result;\n\
    \        }\n        long tri1 = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n\
    \        long tri3 = tri(n - 3l);\n        result.add(tri1);\n        result.add(tri2);\n\
    \        result.add(tri3);\n        return result;", "        if (n <= 3) {\n\
    \            return new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)2l));\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ tri1 = tri(n - 1) + tri(n - 2) + tri(n + 1);\n        result.add(tri1);\n  \
    \      long tri2 = tri(n - 1) + tri(n - 2) + tri(n + 1);\n        result.add(tri2);\n\
    \        long tri3 = tri(n - 1) + tri(n - 2) + tri(n + 1);\n        result.add(tri3);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) {\n\
    \            result.add(0l);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(1l);\n            return result;\n      \
    \  }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1l);\n            result.add(3l);\n\
    \            result.add(2l);\n            result.add(8l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            tri(n - 1, result);\n\
    \            result.add(1l);\n            tri(n - 2, result);\n            result.add(3l);\n\
    \            tri(n - 1, result);\n        } else {\n            tri(n - 1, result);\n\
    \            result.add(1l);\n            tri(n - 2, result);\n            result.add(3l);\n\
    \            tri(n - 1, result);\n            tri(n - 2, result);\n          \
    \  result.add(8l);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 3) {\n            result.add(n);\n\
    \            return result;\n        }\n        long a = tri(n - 1);\n       \
    \ long b = tri(n - 2);\n        long c = tri(n + 1);\n        result.add(a);\n\
    \        result.add(b);\n        result.add(c);\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(3);\n \
    \       second.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        third.add(1);\n\
    \        third.add(1);\n        third.add(1);\n        third.add(1);\n       \
    \ third.add(1);\n        third.add(1);\n        third.add(1);\n        ", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0l);\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(0l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n == 2) {\n            result.add(0l);\n\
    \            result.add(1l);\n            result.add(2l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            long tri1 = tri(n\
    \ - 1);\n            long tri2 = tri(n - 2);\n            long tri3 = tri(n +\
    \ 1);\n            result.add(tri1);\n            result.add(tri2);\n        \
    \    result.add(tri3);\n        } else {\n            long tri1 = tri(n - 1);\n\
    \            long tri2 = tri(n - 2);\n            long tri3 = tri(n + 1);\n  \
    \          result.add(tri1);\n            result.add(tri2);\n            result.add(tri3);\n\
    \            result.add(tri(n - 3));\n        }\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(2l);\n        third.add(3l);\n        if (n % 2 == 0) {\n\
    \            third.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else\
    \ {\n            third.add(tri(n - 1) + tri(n - 2) + tri(n + 1) + tri(n + 2));\n\
    \        }\n        result.addAll(first);\n        result.addAll(second);\n  \
    \      result.addAll(third);\n        return result;", "        if (n == 0) return\
    \ new ArrayList<Long>(Arrays.asList((long)1l));\n        if (n == 1) return new\
    \ ArrayList<Long>(Arrays.asList((long)3l));\n        if (n % 2 == 0) return tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1);\n        else return tri(n - 1) + tri(n - 2)\
    \ + tri(n - 1);", "        ArrayList<Long> result = new ArrayList<Long>();\n \
    \       if (n == 1l) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n / 2l));\n\
    \            result.add(tri(n / 2l));\n            result.add(tri(n / 2l));\n\
    \        } else {\n            result.add(tri(n / 2l));\n            result.add(tri(n\
    \ / 2l));\n            result.add(tri(n / 2l));\n            result.add(tri(n\
    \ / 2l));\n            result.add(tri(n / 2l));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 3) {\n  \
    \          result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(3l);\n        third.add(2l);\n        third.add(8l);\n   \
    \     ArrayList<Long> fourth = new ArrayList<>();\n        fourth.add(first);\n\
    \        fourth.add(second);\n        fourth.add(third);\n        fourth.add(third);\n\
    \        ArrayList<Long> fifth = new ArrayList<>();\n        fifth.add(first);\n\
    \        fifth.add(second);\n        fifth.add(third);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(fourth);\n        fifth.add(fourth);\n        fifth.add(fourth);\n\
    \        fifth.add(four", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 3) {\n            result.add(1l);\n            result.add(3l);\n\
    \            result.add(2l);\n            result.add(8l);\n            return\
    \ result;\n        }\n        long tri1 = tri(n - 1) + tri(n - 2) + tri(n + 1);\n\
    \        if (n % 2 == 0) {\n            result.add(tri1);\n            result.add(tri1\
    \ + tri1);\n        } else {\n            result.add(tri1);\n            result.add(tri1\
    \ + tri1 + tri1);\n        }\n        return result;", "        if (n == 0) {\n\
    \            return new ArrayList<Long>(Arrays.asList((long)0l));\n        }\n\
    \        if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        }\n        if (n % 2 == 0) {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n - 1);\n        } else {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n - 1) + tri(n - 2);\n        }", "        if (n == 1l) {\n       \
    \     return new ArrayList<Long>(Arrays.asList((long)1l));\n        }\n      \
    \  if (n == 2l) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        }\n        if (n % 2 == 0) {\n            return new ArrayList<Long>(Arrays.asList(tri(n\
    \ - 1l), tri(n - 2l), tri(n + 1l)));\n        }\n        return new ArrayList<Long>(Arrays.asList(tri(n\
    \ - 1l), tri(n - 2l)));", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)3;\n        long tri2 = (long)1;\n        long tri3\
    \ = (long)2;\n        long tri4 = (long)3;\n        long tri5 = (long)1;\n   \
    \     long tri6 = (long)2;\n        long tri7 = (long)3;\n        long tri8 =\
    \ (long)1;\n        long tri9 = (long)2;\n        long tri10 = (long)3;\n    \
    \    long tri11 = (long)1;\n        long tri12 = (long)2;\n        long tri13\
    \ = (long)3;\n        long tri14 = (long)1;\n        long tri15 = (long)2;\n \
    \       long tri16 = (long)3;\n        long tri17 = (long)1;\n        long tri18\
    \ = (long)2;\n        long tri19 = (long)3;\n        long tri20 = (long)1;\n \
    \       long tri21 = (long)2;\n        long tri22 = (long)3;\n        long tri23\
    \ = (long)1;\n        long tri24 = (long)2;\n        long tri25 = (long)3;\n \
    \       long tri26 = (long)1;\n        long tri27 = (long)2;\n        long tri28\
    \ = (long)3;\n        long tri29 = (long)1;\n        long tri30 = (long)2;\n \
    \       long tri31 = (long)3;\n        long tri32 = (long)1;\n        long tri33\
    \ = (long)2;\n        long tri34 = (long)3;\n        long tri35 = (long)1;\n \
    \       long tri36 = (long)2;\n        long tri37 = (long)3;\n        long tri38\
    \ = (long)1;\n        long tri39 = (long)2;\n        long tri40 = (long)3;\n \
    \       long tri41 = (long)1;\n        long tri42 = (long)2;\n        long tri43\
    \ = (long)3;\n        long tri44 = (long)1;\n        long tri45 = (long)2;\n \
    \       long tri46 = (long)3;\n        long tri47 = (long)1;\n        long tri48\
    \ = (long)2;\n        long tri49 = (long)3;\n        long tri50 = (long)1;\n \
    \       long tri51 = (long)2;\n        long tri52 = (long)3;\n        long tri53\
    \ = (long)1;\n        long tri54 = (long)2;\n        long tri55 = (long)3;\n \
    \       long tri56 = (long)1;\n        long tri57 = (long)2;\n        long tri58\
    \ = (long)3;\n        long tri59 = (long)1;\n        long tri60 = (long)2;\n \
    \       long tri61 = (long)3;\n        long tri62 = (long)1;\n        long tri",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n <= 1) {\n\
    \            result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ tri1 = tri(n - 1l);\n        ArrayList<Long> tri2 = tri(n - 2l);\n        ArrayList<Long>\
    \ tri3 = tri(n - 3l);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) result.add(0l);\n        if\
    \ (n == 1) result.add(1l);\n        if (n % 2 == 0) result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n - 3));\n        else result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 2));\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n            return result;\n        }\n  \
    \      result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        result.add(tri(n\
    \ - 2) + tri(n + 1));\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            result.add(1l);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(0l);\n            result.add(1l);\n     \
    \       return result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        }\n        return result;", "        if (n == 0)\
    \ {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n      \
    \  }\n        if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        }\n        if (n % 2 == 0) {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1);\n        }\n        return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1) + tri(n - 3) + tri(n - 4);", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(n);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(3);\n        second.add(1);\n        third.add(2);\n      \
    \  third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        third.add(1);\n        third.add(2);\n        third.add(1);\n       \
    \ third.add(2);\n        third.add(1);\n        third.add(2);\n        third.add(1);\n\
    \        third.add(2);\n        third.add(1);\n        third.add(2);\n       \
    \ third.add(1);\n        third.add(2);\n        third.add(1);\n        third.add(2);\n\
    \        ", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1) {\n            result.add(1l);\n            result.add(n);\n         \
    \   return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1l);\n        second.add(n);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(1l);\n     \
    \   third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(1l);\n     \
    \   third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(1l);\n     \
    \   third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(1l);\n     \
    \   third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(1l);\n     \
    \   third.add(n);\n        third.add(1l);\n        third.", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n - 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        }\n       \
    \ return result;", "        if (n == 0) return new ArrayList<Long>();\n      \
    \  if (n == 1) return new ArrayList<Long>(Arrays.asList((long)1l));\n        if\
    \ (n % 2 == 0) return tri(n - 1) + tri(n - 2) + tri(n + 1);\n        else return\
    \ tri(n - 1) + tri(n - 2) + tri(n - 3) + tri(n + 1);", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)3;\n\
    \        long tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4\
    \ = (long)3;\n        long tri5 = (long)1;\n        long tri6 = (long)2;\n   \
    \     long tri7 = (long)3;\n        long tri8 = (long)1;\n        long tri9 =\
    \ (long)2;\n        long tri10 = (long)3;\n        long tri11 = (long)1;\n   \
    \     long tri12 = (long)2;\n        long tri13 = (long)3;\n        long tri14\
    \ = (long)1;\n        long tri15 = (long)2;\n        long tri16 = (long)3;\n \
    \       long tri17 = (long)1;\n        long tri18 = (long)2;\n        long tri19\
    \ = (long)3;\n        long tri20 = (long)1;\n        long tri21 = (long)2;\n \
    \       long tri22 = (long)3;\n        long tri23 = (long)1;\n        long tri24\
    \ = (long)2;\n        long tri25 = (long)3;\n        long tri26 = (long)1;\n \
    \       long tri27 = (long)2;\n        long tri28 = (long)3;\n        long tri29\
    \ = (long)1;\n        long tri30 = (long)2;\n        long tri31 = (long)3;\n \
    \       long tri32 = (long)1;\n        long tri33 = (long)2;\n        long tri34\
    \ = (long)3;\n        long tri35 = (long)1;\n        long tri36 = (long)2;\n \
    \       long tri37 = (long)3;\n        long tri38 = (long)1;\n        long tri39\
    \ = (long)2;\n        long tri40 = (long)3;\n        long tri41 = (long)1;\n \
    \       long tri42 = (long)2;\n        long tri43 = (long)3;\n        long tri44\
    \ = (long)1;\n        long tri45 = (long)2;\n        long tri46 = (long)3;\n \
    \       long tri47 = (long)1;\n        long tri48 = (long)2;\n        long tri49\
    \ = (long)3;\n        long tri50 = (long)1;\n        long tri51 = (long)2;\n \
    \       long tri52 = (long)3;\n        long tri53 = (long)1;\n        long tri54\
    \ = (long)2;\n        long tri55 = (long)3;\n        long tri56 = (long)1;\n \
    \       long tri57 = (long)2;\n        long tri58 = (long)3;\n        long tri59\
    \ = (long)1;\n        long tri60 = (long)2;\n        long tri61 = (long)3;\n \
    \       long tri62 = (long)1;\n        long tri", "        if (n == 0) {\n   \
    \         return new ArrayList<Long>(Arrays.asList((long)1l));\n        } else\
    \ if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        } else if (n % 2 == 0) {\n            return new ArrayList<Long>(Arrays.asList((long)tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1)));\n        } else {\n            return new\
    \ ArrayList<Long>(Arrays.asList((long)tri(n - 1) + tri(n - 2) + tri(n - 3)));\n\
    \        }", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (n == 0) {\n            result.add(0l);\n            result.add(1l);\n     \
    \       return result;\n        }\n        if (n < 0) {\n            throw new\
    \ IllegalArgumentException(\"n must be non-negative\");\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n\
    \        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long tri1 = (long)3;\n        long tri2 = (long)1;\n        long tri3\
    \ = (long)2;\n        long tri4 = (long)3;\n        if (n % 2 == 0) {\n      \
    \      tri1 = tri1 + tri2;\n            tri2 = tri3;\n            tri3 = tri4;\n\
    \            tri4 = tri1 + tri2;\n        }\n        result.add(tri1);\n     \
    \   result.add(tri2);\n        result.add(tri3);\n        result.add(tri4);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        result.addAll(tri1);\n\
    \        result.addAll(tri2);\n        result.addAll(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            result.add(1l);\n            result.add(1l);\n\
    \            return result;\n        }\n        long tri1 = tri(n - 1l);\n   \
    \     long tri2 = tri(n - 2l);\n        long tri3 = tri(n - 3l);\n        result.add(tri1);\n\
    \        result.add(tri2);\n        result.add(tri3);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n  \
    \          result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(1l);\n        third.add(1l);\n        if (n % 2 == 0) {\n\
    \            third.add(1l);\n        }\n        for (int i = 3; i <= n; i++) {\n\
    \            third.add(first.get(0l) + second.get(0l) + third.get(0l));\n    \
    \        second.add(first.get(0l) + second.get(0l));\n            first.add(third.get(0l));\n\
    \        }\n        result.addAll(first);\n        result.addAll(third);\n   \
    \     result.addAll(second);\n        return result;", "        if (n <= 1l) {\n\
    \            return new ArrayList<Long>(Arrays.asList((long)1l));\n        }\n\
    \        ArrayList<Long> result = new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        long tri1 = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n        long\
    \ tri3 = tri(n - 3l);\n        result.addAll(Arrays.asList(tri1, tri2, tri3));\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n - 1));\n        }\n        return result;", "        if (n <= 1l)\
    \ {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n      \
    \  }\n        ArrayList<Long> result = new ArrayList<Long>();\n        long tri1\
    \ = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n        long tri3 = tri(n\
    \ - 3l);\n        result.add((long) tri1);\n        result.add((long) tri2);\n\
    \        result.add((long) tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(n);\n\
    \            return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1);\n        ArrayList<Long> tri2 = tri(n - 2);\n        ArrayList<Long> tri3\
    \ = tri(n - 3);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        long tri1 = (long)3;\n        long tri2\
    \ = (long)1;\n        long tri3 = (long)2;\n        long tri4 = (long)3;\n   \
    \     if (n <= 1) {\n            result.add(tri1);\n            result.add(tri2);\n\
    \            result.add(tri3);\n            result.add(tri4);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            tri1 = tri1 + tri2;\n\
    \            tri2 = tri3;\n            tri3 = tri4;\n            tri4 = tri1 +\
    \ tri2;\n        }\n        tri1 = tri1 + tri3;\n        tri2 = tri2 + tri4;\n\
    \        tri3 = tri1 + tri2;\n        tri4 = tri3 + tri4;\n        result.add(tri1);\n\
    \        result.add(tri2);\n        result.add(tri3);\n        result.add(tri4);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(0l);\n\
    \            result.add(1l);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2));\n        }\
    \ else {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n    \
    \    }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 1l) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1l));\n\
    \            result.add(tri(n - 2l));\n            result.add(tri(n + 1l));\n\
    \            return result;\n        }\n        result.add(tri(n - 1l));\n   \
    \     result.add(tri(n - 2l));\n        result.add(tri(n + 1l));\n        return\
    \ result;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ == 1l) result.add(1l);\n        else if (n % 2 == 0l) result.add(tri(n - 1l)\
    \ + tri(n - 2l));\n        else result.add(tri(n - 1l) + tri(n - 2l) + tri(n +\
    \ 1l));\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<Long>();\n        ArrayList<Long>\
    \ second = new ArrayList<Long>();\n        ArrayList<Long> third = new ArrayList<Long>();\n\
    \        first.add(1l);\n        second.add(1l);\n        third.add(1l);\n   \
    \     long tri_n = 1;\n        long tri_n_plus_1 = 2;\n        long tri_n_plus_2\
    \ = 1;\n        long tri_n_plus_3 = 2;\n        long tri_n_plus_4 = 1;\n     \
    \   long tri_n_plus_5 = 2;\n        long tri_n_plus_6 = 1;\n        long tri_n_plus_7\
    \ = 2;\n        long tri_n_plus_8 = 1;\n        long tri_n_plus_9 = 2;\n     \
    \   long tri_n_plus_10 = 1;\n        long tri_n_plus_11 = 2;\n        long tri_n_plus_12\
    \ = 1;\n        long tri_n_plus_13 = 2;\n        long tri_n_plus_14 = 1;\n   \
    \     long tri_n_plus_15 = 2;\n        long tri_n_plus_16 = 1;\n        long tri_n_plus_17\
    \ = 2;\n        long tri_n_plus_18 = 1;\n        long tri_n_plus_19 = 2;\n   \
    \     long tri_n_plus_20 = 1;\n        long tri_n_plus_21 = 1;\n        long tri_n_plus_22\
    \ = 2;\n        long tri_n_plus_23 = 1;\n        long tri_n_plus_24 = 2;\n   \
    \     long tri_n_plus_25 = 1;\n        long tri_n_plus_26 = 2;\n        long tri_n_plus_27\
    \ = 1;\n        long tri_n_plus_28 = 2;\n        long tri_n_plus_29 = 1;\n   \
    \     long tri_n_plus_30 = 2;\n        long tri_n_plus_31 = 1;\n        long tri_n_plus_32\
    \ = 2;\n        long tri_n_plus_33 = 1;\n        long tri_n_plus_34 = 2;\n   \
    \     long tri_n_plus_35 = 1;\n        long tri_n_plus_36 = 2;\n        long tri_n_plus_37\
    \ = 1;\n        long tri_n_plus_38 = 2;\n        long tri_n_plus_39 = 1;\n   \
    \     long tri_n_plus_40 = 2;\n        long tri_n_plus_41 = 1;\n        long tri_n_plus_42\
    \ = 2;\n        long tri_n_plus_43 = 1;\n        long tri_n_plus_44 = 1;\n   \
    \     long tri_n_plus_45 = 2;\n        long tri_n_plus_46 = 1;\n        long tri_n_plus_47\
    \ = 2;\n        long tri_n_", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n == 1) {\n            result.add(0l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        } else {\n     \
    \       result.add(tri(n - 1) + tri(n - 2));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (n == 0) result.add(0l);\n\
    \        else if (n == 1) result.add(1l);\n        else if (n % 2 == 0) result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        else result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4));\n        return result;", "  \
    \      if (n == 0) {\n            return new ArrayList<Long>();\n        }\n \
    \       if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        }\n        if (n % 2 == 0) {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n - 1);\n        } else {\n            return tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1);\n        }", "        if (n == 0) {\n            return new\
    \ ArrayList<Long>(Arrays.asList((long)1l));\n        }\n        if (n == 1) {\n\
    \            return new ArrayList<Long>(Arrays.asList((long)3l));\n        }\n\
    \        if (n % 2 == 0) {\n            return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1);\n        } else {\n            return tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1) + tri(n - 3) + tri(n - 4) + tri(n + 2);\n        }", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) result.add(0l);\n        if\
    \ (n == 1) result.add(1l);\n        if (n == 2) result.add(2l);\n        if (n\
    \ % 2 == 0) result.add(tri(n - 1) + tri(n - 2) + tri(n + 1));\n        else result.add(tri(n\
    \ - 1) + tri(n - 2));\n        return result;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n \
    \           return result;\n        }\n        ArrayList<Long> tri1 = tri(n -\
    \ 1l);\n        ArrayList<Long> tri2 = tri(n - 2l);\n        ArrayList<Long> tri3\
    \ = tri(n - 3l);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 0) {\n            result.add(0l);\n\
    \            result.add(1l);\n            return result;\n        }\n        if\
    \ (n == 1) {\n            result.add(0l);\n            result.add(1l);\n     \
    \       return result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        }\n        return result;", "        if (n <= 1l)\
    \ {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n      \
    \  }\n        ArrayList<Long> result = new ArrayList<Long>(Arrays.asList((long)1l));\n\
    \        long tri1 = tri(n - 1l);\n        long tri2 = tri(n - 2l);\n        long\
    \ tri3 = tri(n - 3l);\n        result.addAll(Arrays.asList(tri1, tri2, tri3));\n\
    \        return result;", "        if (n <= 1) {\n            return new ArrayList<Long>();\n\
    \        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        result.add(3);\n\
    \        if (n % 2 == 0) {\n            result.add(1 + n / 2);\n        } else\
    \ {\n            ArrayList<Long> sub = tri(n - 1);\n            sub.add(0, 1);\n\
    \            result.addAll(sub);\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n      \
    \      result.add(0l);\n            return result;\n        }\n        if (n ==\
    \ 1) {\n            result.add(1l);\n            return result;\n        }\n \
    \       if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n - 2));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            result.add(1l);\n\
    \            result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(1l);\n        third.add(1l);\n        if (n % 2 == 0) {\n\
    \            third.add(1l);\n        }\n        for (int i = 3; i <= n; i++) {\n\
    \            third.add(first.get(0).longValue() + second.get(0).longValue() +\
    \ third.get(0).longValue());\n            first.add(second);\n            second.add(third);\n\
    \            third.add(1l);\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1l);\n        second.add(1l);\n\
    \        third.add(1l);\n        long sum = 0;\n        for (int i = 1; i <= n;\
    \ i++) {\n            sum = first.get(i - 1) + second.get(i) + third.get(i);\n\
    \            third.add(sum);\n            second.add(sum);\n            first.add(sum);\n\
    \        }\n        result.addAll(first);\n        result.addAll(third);\n   \
    \     result.addAll(second);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            result.add(n);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(n);\n        third.add(n);\n        third.add(1l);\n     \
    \   ArrayList<Long> fourth = new ArrayList<>();\n        fourth.add(1l);\n   \
    \     fourth.add(n);\n        fourth.add(n);\n        fourth.add(1l);\n      \
    \  ArrayList<Long> fifth = new ArrayList<>();\n        fifth.add(1l);\n      \
    \  fifth.add(n);\n        fifth.add(n);\n        fifth.add(1l);\n        ArrayList<Long>\
    \ sixth = new ArrayList<>();\n        sixth.add(1l);\n        sixth.add(n);\n\
    \        sixth.add(n);\n        sixth.add(1l);\n        ArrayList<Long> seventh\
    \ = new ArrayList<>();\n        seventh.add(1l);\n        seventh.add(n);\n  \
    \      seventh.add(n);\n        seventh.add(1l);\n        ArrayList<Long> eighth\
    \ = new ArrayList<>();\n        eighth.add(1l);\n        eighth.add(n);\n    \
    \    eighth.add(n);\n        eighth.add(1l);\n        ArrayList<Long> ninth =\
    \ new ArrayList<>();\n        ninth.add(1l);\n        ninth.add(n);\n        ninth.add(n);\n\
    \        ninth.add(1l);\n        ArrayList<Long> tenth = new ArrayList<>();\n\
    \        tenth.add(1l);\n        tenth.add(n);\n        tenth.add(n);\n      \
    \  tenth.add(1l);\n        ArrayList<Long> eleventh = new ArrayList<>();\n   \
    \     eleventh.add(1l);\n        eleventh.add(n);\n        eleventh.add(n);\n\
    \        eleventh.add(1l);\n        ArrayList<Long> twelfth = new ArrayList<>();\n\
    \        twelfth.add(1l);\n        twelfth.add(n);\n        twelfth.add(n);\n\
    \        twelfth.add(1l);\n        ArrayList<Long> thirteenth = new ArrayList<>();\n\
    \        thirteenth.add(1l);\n        thirteenth.add(n);\n        thirteenth.add(n);\n\
    \        thirteenth.add(1l);\n        ArrayList<Long> fourteenth = new ArrayList<>();\n\
    \        fourteenth.add(1l);\n        fourteenth.add(n);\n        fourteenth.add(n);\n\
    \        fourteenth.add(1l);\n        ArrayList<Long> ", "        if (n == 0)\
    \ return new ArrayList<Long>(Arrays.asList((long)1l));\n        if (n == 1) return\
    \ new ArrayList<Long>(Arrays.asList((long)3l));\n        if (n % 2 == 0) return\
    \ tri(n - 1) + tri(n - 2) + tri(n + 1);\n        else return tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1) + tri(n - 3) + tri(n - 4) + tri(n + 2);", "        if (n ==\
    \ 1l) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n  \
    \      }\n        if (n == 2l) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        }\n        if (n % 2 == 0) {\n            return tri(n - 1l) + tri(n\
    \ - 2l) + tri(n + 1l);\n        } else {\n            return tri(n - 1l) + tri(n\
    \ - 2l) + tri(n + 1l) + tri(n - 3l);\n        }", "        if (n <= 1l) {\n  \
    \          return new ArrayList<Long>(Arrays.asList((long)1l));\n        }\n \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        long tri1 = tri(n\
    \ - 1l);\n        long tri2 = tri(n - 2l);\n        long tri3 = tri(n - 3l);\n\
    \        result.add((long) tri1);\n        result.add((long) tri2);\n        result.add((long)\
    \ tri3);\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1l) {\n            result.add(1l);\n            result.add(1l);\n\
    \            result.add(1l);\n            return result;\n        }\n        if\
    \ (n % 2 == 0) {\n            result.add(tri(n - 1l));\n            result.add(tri(n\
    \ - 2l));\n            result.add(tri(n - 3l));\n        } else {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n - 3l));\n            result.add(tri(n - 4l));\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            result.add(1l);\n\
    \            result.add(1l);\n        } else {\n            result.add(tri(n -\
    \ 1) + tri(n - 2) + tri(n - 1));\n        }\n        return result;", "      \
    \  ArrayList<Long> result = new ArrayList<Long>();\n        if (n <= 2) {\n  \
    \          result.add(1l);\n            result.add(2l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<Long>();\n        ArrayList<Long>\
    \ second = new ArrayList<Long>();\n        ArrayList<Long> third = new ArrayList<Long>();\n\
    \        first.add(1l);\n        second.add(2l);\n        third.add(3l);\n   \
    \     if (n % 2 == 0) {\n            third.add(1l);\n        }\n        third.add(2l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1", "     \
    \   ArrayList<Long> result = new ArrayList<>();\n        if (n <= 3) {\n     \
    \       result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n            return result;\n        }\n        long\
    \ a = tri(n - 1) + tri(n - 2) + tri(n - 3);\n        long b = tri(n - 2) + tri(n\
    \ - 1) + tri(n - 3);\n        result.add(a);\n        result.add(b);\n       \
    \ return result;", "        ArrayList<Long> result = new ArrayList<>();\n    \
    \    if (n <= 1l) {\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2l == 0l) {\n            result.add(tri(n - 1l) +\
    \ tri(n - 2l));\n        } else {\n            result.add(tri(n - 1l) + tri(n\
    \ - 1l) + tri(n - 2l));\n        }\n        return result;", "        if (n ==\
    \ 0) {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n   \
    \     }\n        if (n == 1) {\n            return new ArrayList<Long>(Arrays.asList((long)3l));\n\
    \        }\n        if (n % 2 == 0) {\n            ArrayList<Long> result = new\
    \ ArrayList<Long>(Arrays.asList((long)tri(n - 1l), (long)tri(n - 2l), (long)tri(n\
    \ + 1l)));\n            return result;\n        }\n        ArrayList<Long> result\
    \ = new ArrayList<Long>(Arrays.asList((long)tri(n - 1l), (long)tri(n - 2l)));\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        long a = 1;\n        long b = 2;\n        long c = 1;\n        long d\
    \ = 1;\n        long temp;\n        long temp2;\n        long temp3;\n       \
    \ long temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n\
    \        long temp8;\n        long temp9;\n        long temp10;\n        long\
    \ temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n\
    \        long temp15;\n        long temp16;\n        long temp17;\n        long\
    \ temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n\
    \        long temp22;\n        long temp23;\n        long temp24;\n        long\
    \ temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n\
    \        long temp29;\n        long temp30;\n        long temp31;\n        long\
    \ temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n\
    \        long temp36;\n        long temp37;\n        long temp38;\n        long\
    \ temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n\
    \        long temp43;\n        long temp44;\n        long temp45;\n        long\
    \ temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n\
    \        long temp50;\n        long temp51;\n        long temp52;\n        long\
    \ temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n\
    \        long temp57;\n        long temp58;\n        long temp59;\n        long\
    \ temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n\
    \        long temp64;\n        long temp65;\n        long temp66;\n        long\
    \ temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n\
    \        long temp71;\n        long temp72;\n        long temp73;\n        long\
    \ temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n\
    \        long temp78;\n        long temp79;\n        long temp80;\n        long\
    \ temp81;\n        long temp82;\n        long temp83;\n        long temp84;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)3;\n\
    \        long tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4\
    \ = (long)3;\n        long tri5 = (long)1;\n        long tri6 = (long)2;\n   \
    \     long tri7 = (long)3;\n        long tri8 = (long)1;\n        long tri9 =\
    \ (long)2;\n        long tri10 = (long)3;\n        long tri11 = (long)1;\n   \
    \     long tri12 = (long)2;\n        long tri13 = (long)3;\n        long tri14\
    \ = (long)1;\n        long tri15 = (long)2;\n        long tri16 = (long)3;\n \
    \       long tri17 = (long)1;\n        long tri18 = (long)2;\n        long tri19\
    \ = (long)3;\n        long tri20 = (long)1;\n        long tri21 = (long)2;\n \
    \       long tri22 = (long)3;\n        long tri23 = (long)1;\n        long tri24\
    \ = (long)2;\n        long tri25 = (long)3;\n        long tri26 = (long)1;\n \
    \       long tri27 = (long)2;\n        long tri28 = (long)3;\n        long tri29\
    \ = (long)1;\n        long tri30 = (long)2;\n        long tri31 = (long)3;\n \
    \       long tri32 = (long)1;\n        long tri33 = (long)2;\n        long tri34\
    \ = (long)3;\n        long tri35 = (long)1;\n        long tri36 = (long)2;\n \
    \       long tri37 = (long)3;\n        long tri38 = (long)1;\n        long tri39\
    \ = (long)2;\n        long tri40 = (long)3;\n        long tri41 = (long)1;\n \
    \       long tri42 = (long)2;\n        long tri43 = (long)3;\n        long tri44\
    \ = (long)1;\n        long tri45 = (long)2;\n        long tri46 = (long)3;\n \
    \       long tri47 = (long)1;\n        long tri48 = (long)2;\n        long tri49\
    \ = (long)3;\n        long tri50 = (long)1;\n        long tri51 = (long)2;\n \
    \       long tri52 = (long)3;\n        long tri53 = (long)1;\n        long tri54\
    \ = (long)2;\n        long tri55 = (long)3;\n        long tri56 = (long)1;\n \
    \       long tri57 = (long)2;\n        long tri58 = (long)3;\n        long tri59\
    \ = (long)1;\n        long tri60 = (long)2;\n        long tri61 = (long)3;\n \
    \       long tri62 = (long)1;\n        long tri", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n == 0) result.add(0l);\n        else if (n\
    \ == 1) result.add(1l);\n        else result.add(tri(n - 1) + tri(n - 2) + tri(n\
    \ + 1));\n        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n > 0) {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        if (n <= 1) {\n    \
    \        result.add(1l);\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n % 2 == 0) {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n + 1));\n        } else {\n            result.add(tri(n - 1) + tri(n\
    \ - 2) + tri(n - 3));\n        }\n        return result;", "        if (n <= 1l)\
    \ {\n            return new ArrayList<Long>(Arrays.asList((long)1l));\n      \
    \  }\n        if (n % 2 == 0) {\n            return tri(n - 1l) + tri(n - 2l)\
    \ + tri(n - 3l);\n        } else {\n            return tri(n - 1l) + tri(n - 2l)\
    \ + tri(n - 3l) + tri(n - 4l);\n        }", "        ArrayList<Long> result =\
    \ new ArrayList<Long>();\n        if (n <= 1l) {\n            result.add(1l);\n\
    \            result.add(n + 1l);\n            return result;\n        }\n    \
    \    if (n % 2 == 0) {\n            result.add(tri(n - 1l));\n            result.add(tri(n\
    \ - 2l));\n            result.add(tri(n + 1l));\n        } else {\n          \
    \  result.add(tri(n - 1l));\n            result.add(tri(n - 2l));\n          \
    \  result.add(tri(n + 1l));\n            result.add(tri(n - 1l));\n          \
    \  result.add(tri(n - 2l));\n            result.add(tri(n + 1l));\n        }\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            result.add(1l);\n\
    \            result.add(1l);\n            return result;\n        }\n        ArrayList<Long>\
    \ first = new ArrayList<>();\n        ArrayList<Long> second = new ArrayList<>();\n\
    \        ArrayList<Long> third = new ArrayList<>();\n        first.add(1l);\n\
    \        second.add(1l);\n        third.add(1l);\n        if (n % 2 == 0) {\n\
    \            third.add(1l);\n            third.add(1l);\n            third.add(1l);\n\
    \        }\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n\
    \        third.add(1l);\n        third.add(1l);\n        third.add(1l);\n    \
    \    third.add(1l);\n        third.add(1l);\n        third.add(", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        long a = tri(n - 1l);\n      \
    \  long b = tri(n - 2l);\n        long c = tri(n - 3l);\n        result.add(a);\n\
    \        result.add(b);\n        result.add(c);\n        return result;", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)3;\n\
    \        long tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4\
    \ = (long)3;\n        long tri5 = (long)1;\n        long tri6 = (long)2;\n   \
    \     long tri7 = (long)3;\n        long tri8 = (long)1;\n        long tri9 =\
    \ (long)2;\n        long tri10 = (long)3;\n        long tri11 = (long)1;\n   \
    \     long tri12 = (long)2;\n        long tri13 = (long)3;\n        long tri14\
    \ = (long)1;\n        long tri15 = (long)2;\n        long tri16 = (long)3;\n \
    \       long tri17 = (long)1;\n        long tri18 = (long)2;\n        long tri19\
    \ = (long)3;\n        long tri20 = (long)1;\n        long tri21 = (long)2;\n \
    \       long tri22 = (long)3;\n        long tri23 = (long)1;\n        long tri24\
    \ = (long)2;\n        long tri25 = (long)3;\n        long tri26 = (long)1;\n \
    \       long tri27 = (long)2;\n        long tri28 = (long)3;\n        long tri29\
    \ = (long)1;\n        long tri30 = (long)2;\n        long tri31 = (long)3;\n \
    \       long tri32 = (long)1;\n        long tri33 = (long)2;\n        long tri34\
    \ = (long)3;\n        long tri35 = (long)1;\n        long tri36 = (long)2;\n \
    \       long tri37 = (long)3;\n        long tri38 = (long)1;\n        long tri39\
    \ = (long)2;\n        long tri40 = (long)3;\n        long tri41 = (long)1;\n \
    \       long tri42 = (long)2;\n        long tri43 = (long)3;\n        long tri44\
    \ = (long)1;\n        long tri45 = (long)2;\n        long tri46 = (long)3;\n \
    \       long tri47 = (long)1;\n        long tri48 = (long)2;\n        long tri49\
    \ = (long)3;\n        long tri50 = (long)1;\n        long tri51 = (long)2;\n \
    \       long tri52 = (long)3;\n        long tri53 = (long)1;\n        long tri54\
    \ = (long)2;\n        long tri55 = (long)3;\n        long tri56 = (long)1;\n \
    \       long tri57 = (long)2;\n        long tri58 = (long)3;\n        long tri59\
    \ = (long)1;\n        long tri60 = (long)2;\n        long tri61 = (long)3;\n \
    \       long tri62 = (long)1;\n        long tri", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (n <= 1) {\n            result.add(1l);\n \
    \           return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1l);\n        second.add(2l);\n\
    \        third.add(3l);\n        third.add(1l);\n        third.add(2l);\n    \
    \    third.add(3l);\n        third.add(1l);\n        third.add(2l);\n        third.add(3l);\n\
    \        third.add(1l);\n        third.add(2l);\n        third.add(3l);\n    \
    \    third.add(1l);\n        third.add(2l);\n        third.add(3l);\n        third.add(1l);\n\
    \        third.add(2l);\n        third.add(3l);\n        third.add(1l);\n    \
    \    third.add(2l);\n        third.add(3l);\n        third.add(1l);\n        third.add(2l);\n\
    \        third.add(3l);\n        third.add(1l);\n        third.add(2l);\n    \
    \    third.add(3l);\n        third.add(1l);\n        third.add(2l);\n        third.add(3l);\n\
    \        third.add(1l);\n        third.add(2l);\n        third.add(3l);\n    \
    \    third.add(1l);\n        third.add(2l);\n        third.add(3l);\n        third.add(1l);\n\
    \        third.add(2l);\n        third.add(3l);\n        third.add(1l);\n    \
    \    third.add(2l);\n        third.add(3l);\n        third.add(1l);\n        third.add(2l);\n\
    \        third.add(3l);\n        third.add(1l);\n        third.add(2l);\n    \
    \    third.add(3l);\n        third.add(1l);\n        third.add(2l);\n        third.add(3l);\n\
    \        third.add(1l);\n        third.add(2l);\n        third.add(3l);\n    \
    \    third.add(1l);\n        third.add(2l);\n        third.add(3l);\n        third.add(1l);\n\
    \        third.add(2l);\n        third.add(3l);\n        third.add(1l);\n    \
    \    third.add(2l);\n        third.add(3l);\n        third.add(1l);\n        third.add(2l);\n\
    \        third.add(3l);\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n == 0) {\n            result.add(0l);\n            return result;\n\
    \        }\n        if (n == 1) {\n            result.add(1l);\n            return\
    \ result;\n        }\n        if (n % 2 == 0) {\n            result.add(tri(n\
    \ / 2) + tri(n - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n\
    \ / 2) + tri(n - 1) + tri(n - 2) + tri(n / 2));\n        }\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        long tri1 = tri(n\
    \ - 1, result);\n        long tri2 = tri(n - 2, result);\n        long tri3 =\
    \ tri(n - 3, result);\n        result.add(tri1);\n        result.add(tri2);\n\
    \        result.add(tri3);\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n == 1) {\n            result.add(1l);\n\
    \            return result;\n        }\n        if (n % 2 == 0) {\n          \
    \  result.add(tri(n - 1) + tri(n - 2));\n        } else {\n            result.add(tri(n\
    \ - 1) + tri(n - 2) + tri(n + 1));\n        }\n        return result;", "    \
    \    ArrayList<Long> result = new ArrayList<>();\n        if (n <= 3) {\n    \
    \        result.add(1l);\n            result.add(3l);\n            result.add(2l);\n\
    \            result.add(8l);\n            return result;\n        }\n        long\
    \ a = tri(n - 1l);\n        long b = tri(n - 2l);\n        long c = tri(n - 3l);\n\
    \        result.add(a);\n        result.add(b);\n        result.add(c);\n    \
    \    return result;", "        ArrayList<Long> result = new ArrayList<>();\n \
    \       if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        result.addAll(tri1);\n        result.addAll(tri2);\n\
    \        result.addAll(tri3);\n        result.addAll(tri4);\n        return result;",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (n == 0) {\n  \
    \          result.add(0l);\n            result.add(1l);\n            return result;\n\
    \        }\n        if (n > 0) {\n            result.add(tri(n - 1) + tri(n -\
    \ 2) + tri(n + 1));\n        }\n        return result;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (n <= 1) {\n            result.add(1l);\n\
    \            result.add(1l);\n            result.add(1l);\n            return\
    \ result;\n        }\n        ArrayList<Long> tri1 = tri(n - 1);\n        ArrayList<Long>\
    \ tri2 = tri(n - 2);\n        ArrayList<Long> tri3 = tri(n - 3);\n        ArrayList<Long>\
    \ tri4 = tri(n - 4);\n        ArrayList<Long> tri5 = tri(n - 5);\n        ArrayList<Long>\
    \ tri6 = tri(n - 6);\n        ArrayList<Long> tri7 = tri(n - 7);\n        ArrayList<Long>\
    \ tri8 = tri(n - 8);\n        ArrayList<Long> tri9 = tri(n - 9);\n        ArrayList<Long>\
    \ tri10 = tri(n - 10);\n        ArrayList<Long> tri11 = tri(n - 11);\n       \
    \ ArrayList<Long> tri12 = tri(n - 12);\n        ArrayList<Long> tri13 = tri(n\
    \ - 13);\n        ArrayList<Long> tri14 = tri(n - 14);\n        ArrayList<Long>\
    \ tri15 = tri(n - 15);\n        ArrayList<Long> tri16 = tri(n - 16);\n       \
    \ ArrayList<Long> tri17 = tri(n - 17);\n        ArrayList<Long> tri18 = tri(n\
    \ - 18);\n        ArrayList<Long> tri19 = tri(n - 19);\n        ArrayList<Long>\
    \ tri20 = tri(n - 20);\n        ArrayList<Long> tri21 = tri(n - 21);\n       \
    \ ArrayList<Long> tri22 = tri(n - 22);\n        ArrayList<Long> tri23 = tri(n\
    \ - 23);\n        ArrayList<Long> tri24 = tri(n - 24);\n        ArrayList<Long>\
    \ tri25 = tri(n - 25);\n        ArrayList<Long> tri26 = tri(n - 26);\n       \
    \ ArrayList<Long> tri27 = tri(n - 27);\n        ArrayList<Long> tri28 = tri(n\
    \ - 28);\n        ArrayList<Long> tri29 = tri(n - 29);\n        ArrayList<Long>\
    \ tri30 = tri(n - 30);\n        ArrayList<Long> tri31 = tri(n - 31);\n       \
    \ ArrayList<Long> tri32 = tri(n - 32);\n        ArrayList<Long> tri33 = tri(n\
    \ - 33);\n        ArrayList<Long> tri34 = tri(n - 34);\n        ArrayList<Long>\
    \ tri35 = tri(n - 35);\n        ArrayList<Long> tri36 = tri(n - 36);\n       \
    \ ArrayList<Long> tri37 = tri(n - 37);\n        ArrayList<Long> tri38 = tri(n\
    \ - 38);\n        ArrayList<Long> tri39 = tri(n - 39);\n        ", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (n <= 3) {\n            result.add(1l);\n\
    \            result.add(3l);\n            result.add(2l);\n            result.add(8l);\n\
    \            return result;\n        }\n        ArrayList<Long> a = tri(n - 1);\n\
    \        ArrayList<Long> b = tri(n - 2);\n        ArrayList<Long> c = tri(n -\
    \ 3);\n        ArrayList<Long> d = new ArrayList<>();\n        d.add(a.get(0));\n\
    \        d.add(b.get(0));\n        d.add(a.get(1));\n        d.add(b.get(1));\n\
    \        d.add(a.get(2));\n        d.add(b.get(2));\n        d.add(a.get(3));\n\
    \        d.add(b.get(3));\n        d.add(a.get(4));\n        d.add(b.get(4));\n\
    \        d.add(a.get(5));\n        d.add(b.get(5));\n        d.add(a.get(6));\n\
    \        d.add(b.get(6));\n        d.add(a.get(7));\n        d.add(b.get(7));\n\
    \        d.add(a.get(8));\n        d.add(b.get(8));\n        result.addAll(a);\n\
    \        result.addAll(b);\n        result.addAll(c);\n        result.addAll(d);\n\
    \        return result;", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (n <= 1) {\n            result.add(1l);\n            return result;\n\
    \        }\n        ArrayList<Long> first = new ArrayList<>();\n        ArrayList<Long>\
    \ second = new ArrayList<>();\n        ArrayList<Long> third = new ArrayList<>();\n\
    \        first.add(1l);\n        second.add(2l);\n        third.add(3l);\n   \
    \     ArrayList<Long> fourth = new ArrayList<>();\n        fourth.add(4l);\n \
    \       ArrayList<Long> fifth = new ArrayList<>();\n        fifth.add(5l);\n \
    \       ArrayList<Long> sixth = new ArrayList<>();\n        sixth.add(6l);\n \
    \       ArrayList<Long> seventh = new ArrayList<>();\n        seventh.add(7l);\n\
    \        ArrayList<Long> eighth = new ArrayList<>();\n        eighth.add(8l);\n\
    \        ArrayList<Long> ninth = new ArrayList<>();\n        ninth.add(9l);\n\
    \        ArrayList<Long> tenth = new ArrayList<>();\n        tenth.add(10l);\n\
    \        ArrayList<Long> eleventh = new ArrayList<>();\n        eleventh.add(11l);\n\
    \        ArrayList<Long> twelfth = new ArrayList<>();\n        twelfth.add(12l);\n\
    \        ArrayList<Long> thirteenth = new ArrayList<>();\n        thirteenth.add(13l);\n\
    \        ArrayList<Long> fourteenth = new ArrayList<>();\n        fourteenth.add(14l);\n\
    \        ArrayList<Long> fifteenth = new ArrayList<>();\n        fifteenth.add(15l);\n\
    \        ArrayList<Long> sixteenth = new ArrayList<>();\n        sixteenth.add(16l);\n\
    \        ArrayList<Long> seventeenth = new ArrayList<>();\n        seventeenth.add(17l);\n\
    \        ArrayList<Long> eighteenth = new ArrayList<>();\n        eighteenth.add(18l);\n\
    \        ArrayList<Long> nineteenth = new ArrayList<>();\n        nineteenth.add(19l);\n\
    \        ArrayList<Long> twentieth = new ArrayList<>();\n        twentieth.add(20l);\n\
    \        ArrayList<Long> twentyfirst = new ArrayList<>();\n        twentyfirst.add(21l);\n\
    \        ArrayList<Long> twentysecond = new ArrayList<>();\n        twentysecond.add(22l);\n\
    \        ArrayList<Long> twentythird = new ArrayList<>();\n        twentythird.add(23l);\n\
    \        ArrayList<Long> twentyfourth = new ArrayList<>();\n        twentyfourth.add(24l);\n\
    \        ArrayList<Long> twentyfifth = new ArrayList<>();\n        twentyfifth.add(25l);\n\
    \        ArrayList<Long> twentysixth = new ArrayList<", "        if (n <= 1l)\
    \ return new ArrayList<Long>(Arrays.asList((long)1l));\n        if (n % 2 == 0)\
    \ return tri(n - 1l) + tri(n - 2l) + tri(n - 3l);\n        else return tri(n -\
    \ 1l) + tri(n - 2l) + tri(n - 3l) + tri(n - 4l);", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        long a = 1;\n        long b = 2;\n        long\
    \ c = 1;\n        long d = 1;\n        long temp;\n        long temp2;\n     \
    \   long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n\
    \        long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n\
    \        long temp11;\n        long temp12;\n        long temp13;\n        long\
    \ temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n\
    \        long temp18;\n        long temp19;\n        long temp20;\n        long\
    \ temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n\
    \        long temp25;\n        long temp26;\n        long temp27;\n        long\
    \ temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n\
    \        long temp32;\n        long temp33;\n        long temp34;\n        long\
    \ temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n\
    \        long temp39;\n        long temp40;\n        long temp41;\n        long\
    \ temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n\
    \        long temp46;\n        long temp47;\n        long temp48;\n        long\
    \ temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n\
    \        long temp53;\n        long temp54;\n        long temp55;\n        long\
    \ temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n\
    \        long temp60;\n        long temp61;\n        long temp62;\n        long\
    \ temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n\
    \        long temp67;\n        long temp68;\n        long temp69;\n        long\
    \ temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n\
    \        long temp74;\n        long temp75;\n        long temp76;\n        long\
    \ temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n\
    \        long temp81;\n        long temp82;\n        long temp83;\n        long\
    \ temp84;", "        ArrayList<Long> result = new ArrayList<>();\n        if (n\
    \ <= 1) {\n            result.add(1l);\n            result.add(n);\n         \
    \   return result;\n        }\n        ArrayList<Long> first = new ArrayList<>();\n\
    \        ArrayList<Long> second = new ArrayList<>();\n        ArrayList<Long>\
    \ third = new ArrayList<>();\n        first.add(1l);\n        second.add(n);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(1l);\n      \
    \  third.add(n);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(1l);\n      \
    \  third.add(n);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(n);\n\
    \        third.add(1l);\n        third.add(n);\n        third.add(n);\n      \
    \  third.add(1l);\n        third.add(n);\n        third.add(n);\n        third.add(1l);\n\
    \        third.add(n);\n        third.add(n);\n        third.add(1l);\n      \
    \  third.add(n);\n        third.add(n);\n        third.add(1l);\n        third.add(n);\n\
    \        third.add(n);\n        third.add(1l);\n        third.add(n);\n      \
    \  third.add(n);\n        third.add(1l);\n        third.add(n);\n        third.add(n);\n\
    \        thir", "        ArrayList<Long> result = new ArrayList<>();\n       \
    \ long tri1 = (long)3;\n        long tri2 = tri1 + tri1;\n        long tri3 =\
    \ tri2 + tri2;\n        long tri4 = tri3 + tri3;\n        long tri5 = tri4 + tri4;\n\
    \        long tri6 = tri5 + tri5;\n        long tri7 = tri6 + tri6;\n        long\
    \ tri8 = tri7 + tri7;\n        long tri9 = tri8 + tri8;\n        long tri10 =\
    \ tri9 + tri9;\n        long tri11 = tri10 + tri10;\n        long tri12 = tri11\
    \ + tri11;\n        long tri13 = tri12 + tri12;\n        long tri14 = tri13 +\
    \ tri13;\n        long tri15 = tri14 + tri14;\n        long tri16 = tri15 + tri15;\n\
    \        long tri17 = tri16 + tri16;\n        long tri18 = tri17 + tri17;\n  \
    \      long tri19 = tri18 + tri18;\n        long tri20 = tri19 + tri19;\n    \
    \    long tri21 = tri20 + tri20;\n        long tri22 = tri21 + tri21;\n      \
    \  long tri23 = tri22 + tri22;\n        long tri24 = tri23 + tri23;\n        long\
    \ tri25 = tri24 + tri24;\n        long tri26 = tri25 + tri25;\n        long tri27\
    \ = tri26 + tri26;\n        long tri28 = tri27 + tri27;\n        long tri29 =\
    \ tri28 + tri28;\n        long tri30 = tri29 + tri29;\n        long tri31 = tri30\
    \ + tri30;\n        long tri32 = tri31 + tri31;\n        long tri33 = tri32 +\
    \ tri32;\n        long tri34 = tri33 + tri33;\n        long tri35 = tri34 + tri34;\n\
    \        long tri36 = tri35 + tri35;\n        long tri37 = tri36 + tri36;\n  \
    \      long tri38 = tri37 + tri37;\n        long tri39 = tri38 + tri38;\n    \
    \    long tri40 = tri39 + tri39;\n        long tri41 = tri40 + tri40;\n      \
    \  long tri42 = tri41 + tri41;\n        long tri43 = tri42 + tri42;\n        long\
    \ tri44 = tri43 + tri43;\n        long tri45 = tri44 + tri44;\n        ", "  \
    \      ArrayList<Long> result = new ArrayList<>();\n        long tri1 = (long)3;\n\
    \        long tri2 = (long)1;\n        long tri3 = (long)2;\n        long tri4\
    \ = (long)3;\n        long tri5 = (long)1;\n        long tri6 = (long)2;\n   \
    \     long tri7 = (long)3;\n        long tri8 = (long)1;\n        long tri9 =\
    \ (long)2;\n        long tri10 = (long)3;\n        long tri11 = (long)1;\n   \
    \     long tri12 = (long)2;\n        long tri13 = (long)3;\n        long tri14\
    \ = (long)1;\n        long tri15 = (long)2;\n        long tri16 = (long)3;\n \
    \       long tri17 = (long)1;\n        long tri18 = (long)2;\n        long tri19\
    \ = (long)3;\n        long tri20 = (long)1;\n        long tri21 = (long)2;\n \
    \       long tri22 = (long)3;\n        long tri23 = (long)1;\n        long tri24\
    \ = (long)2;\n        long tri25 = (long)3;\n        long tri26 = (long)1;\n \
    \       long tri27 = (long)2;\n        long tri28 = (long)3;\n        long tri29\
    \ = (long)1;\n        long tri30 = (long)2;\n        long tri31 = (long)3;\n \
    \       long tri32 = (long)1;\n        long tri33 = (long)2;\n        long tri34\
    \ = (long)3;\n        long tri35 = (long)1;\n        long tri36 = (long)2;\n \
    \       long tri37 = (long)3;\n        long tri38 = (long)1;\n        long tri39\
    \ = (long)2;\n        long tri40 = (long)3;\n        long tri41 = (long)1;\n \
    \       long tri42 = (long)2;\n        long tri43 = (long)3;\n        long tri44\
    \ = (long)1;\n        long tri45 = (long)2;\n        long tri46 = (long)3;\n \
    \       long tri47 = (long)1;\n        long tri48 = (long)2;\n        long tri49\
    \ = (long)3;\n        long tri50 = (long)1;\n        long tri51 = (long)2;\n \
    \       long tri52 = (long)3;\n        long tri53 = (long)1;\n        long tri54\
    \ = (long)2;\n        long tri55 = (long)3;\n        long tri56 = (long)1;\n \
    \       long tri57 = (long)2;\n        long tri58 = (long)3;\n        long tri59\
    \ = (long)1;\n        long tri60 = (long)2;\n        long tri61 = (long)3;\n \
    \       long tri62 = (long)1;\n        long tri"]
stop_tokens:
- "\n    }\n"

name: HumanEval_82_prime_length
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that takes a string and returns True if\
  \ the string\n    // length is a prime number or False otherwise\n    // Examples\n\
  \    // >>> primeLength((\"Hello\"))\n    // (true)\n    // >>> primeLength((\"\
  abcdcba\"))\n    // (true)\n    // >>> primeLength((\"kittens\"))\n    // (true)\n\
  \    // >>> primeLength((\"orange\"))\n    // (false)\n    public static boolean\
  \ primeLength(String string) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(primeLength((\"\
  Hello\")) == (true));\n    assert(primeLength((\"abcdcba\")) == (true));\n    assert(primeLength((\"\
  kittens\")) == (true));\n    assert(primeLength((\"orange\")) == (false));\n   \
  \ assert(primeLength((\"wow\")) == (true));\n    assert(primeLength((\"world\"))\
  \ == (true));\n    assert(primeLength((\"MadaM\")) == (true));\n    assert(primeLength((\"\
  Wow\")) == (true));\n    assert(primeLength((\"\")) == (false));\n    assert(primeLength((\"\
  HI\")) == (true));\n    assert(primeLength((\"go\")) == (true));\n    assert(primeLength((\"\
  gogo\")) == (false));\n    assert(primeLength((\"aaaaaaaaaaaaaaa\")) == (false));\n\
  \    assert(primeLength((\"Madam\")) == (true));\n    assert(primeLength((\"M\"\
  )) == (false));\n    assert(primeLength((\"0\")) == (false));\n    }\n\n}\n"
completions: ["        if (string.length() <= 1) {\n            return true;\n   \
    \     }\n        boolean prime = true;\n        for (int i = 2; i <= string.length();\
    \ i++) {\n            if (string.charAt(i) != string.charAt(i - 1)) {\n      \
    \          prime = false;\n                break;\n            }\n        }\n\
    \        return prime;", "        int length = string.length();\n        boolean\
    \ isPrime = true;\n        for (int i = 2; i <= length / 2; i++) {\n         \
    \   if (string.charAt(i) != string.charAt(length - i - 1)) {\n               \
    \ isPrime = false;\n                break;\n            }\n        }\n       \
    \ return isPrime;", "        if (string.length() < 2) {\n            return false;\n\
    \        }\n        boolean isPrime = true;\n        for (int i = 2; i <= string.length();\
    \ i++) {\n            if (string.charAt(i) != string.charAt(i - 1)) {\n      \
    \          isPrime = false;\n                break;\n            }\n        }\n\
    \        return isPrime;", "        boolean isPrime = true;\n        int length\
    \ = string.length();\n        for (int i = 0; i < length; i++) {\n           \
    \ if (string.charAt(i) == ' ') {\n                isPrime = false;\n         \
    \       break;\n            }\n        }\n        return isPrime;", "        boolean\
    \ isPrime = true;\n        for (int i = 0; i < string.length(); i++) {\n     \
    \       char c = string.charAt(i);\n            if (Character.isDigit(c)) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        return isPrime;", "        boolean isPrime = true;\n        int\
    \ length = string.length();\n        for (int i = 1; i < length; i++) {\n    \
    \        if (string.charAt(i) == string.charAt(i - 1)) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        return isPrime;",
  "        boolean isPrime = true;\n        int length = string.length();\n      \
    \  for (int i = 0; i < length; i++) {\n            if (string.charAt(i) >= '0'\
    \ && string.charAt(i) <= '9') {\n                isPrime = false;\n          \
    \      break;\n            }\n        }\n        return isPrime;", "        boolean\
    \ isPrime = true;\n        int length = string.length();\n        for (int i =\
    \ 0; i < length; i++) {\n            if (string.charAt(i) >= 'a' && string.charAt(i)\
    \ <= 'z') {\n                isPrime = false;\n                break;\n      \
    \      }\n        }\n        return isPrime;", "        boolean isPrime = true;\n\
    \        for(int i = 0; i <= string.length(); i++) {\n            int count =\
    \ 0;\n            for(int j = i; j < string.length(); j++) {\n               \
    \ if(string.charAt(i) == string.charAt(j)) {\n                    count++;\n \
    \               }\n            }\n            if(count == string.length() / 2)\
    \ {\n                isPrime = false;\n            }\n        }\n        return\
    \ isPrime;", "        boolean isPrime = true;\n        for(int i = 2; i < string.length();\
    \ i++) {\n            if(string.charAt(i) == string.charAt(i - 1)) {\n       \
    \         isPrime = false;\n                break;\n            }\n        }\n\
    \        return isPrime;", "        boolean isPrime = true;\n        for(int i\
    \ = 0; i <= string.length(); i++) {\n            int count = 0;\n            for(int\
    \ j = i; j < string.length(); j++) {\n                if(string.charAt(j) == string.charAt(i))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if(count == string.length() / 2) {\n                isPrime = false;\n  \
    \              break;\n            }\n        }\n        return isPrime;", " \
    \       int length = string.length();\n        if (length < 2) {\n           \
    \ return true;\n        }\n        boolean prime = true;\n        for (int i =\
    \ 2; i <= Math.sqrt(length); i++) {\n            if (length % i == 0) {\n    \
    \            prime = false;\n                break;\n            }\n        }\n\
    \        return prime;", "        boolean isPrime = true;\n        int length\
    \ = string.length();\n        for (int i = 3; i <= Math.sqrt(length); i++) {\n\
    \            if (length%i == 0) {\n                isPrime = false;\n        \
    \    }\n        }\n        return isPrime;", "        int length = string.length();\n\
    \        if (length < 2) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < length; i++) {\n            if (string.charAt(i) != string.charAt(i\
    \ - 1)) {\n                return false;\n            }\n        }\n        return\
    \ true;", '        // Your code here', "        if (string.length() < 2) {\n \
    \           return false;\n        }\n        boolean isPrime = true;\n      \
    \  for (int i = 2; i <= string.length(); i++) {\n            if (string.charAt(i)\
    \ != string.charAt(i - 1)) {\n                isPrime = false;\n             \
    \   break;\n            }\n        }\n        return isPrime;", "        boolean\
    \ isPrime = true;\n        for(int i = 2; i < string.length(); i++) {\n      \
    \      if(string.charAt(i) != string.charAt(i - 1)) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        return isPrime;",
  "        boolean isPrime = true;\n        int length = string.length();\n      \
    \  for (int i = 1; i < length; i++) {\n            if (string.charAt(i) == string.charAt(i\
    \ - 1)) {\n                isPrime = false;\n                break;\n        \
    \    }\n        }\n        return isPrime;", "        boolean isPrime = true;\n\
    \        for(int i = 0; i <= string.length(); i++) {\n            isPrime = string.charAt(i)\
    \ == string.charAt(i+1);\n            if(isPrime) {\n                break;\n\
    \            }\n        }\n        return isPrime;", "        boolean isPrime\
    \ = true;\n        for (int i = 0; i < string.length(); i++) {\n            if\
    \ (string.charAt(i) > 'z') {\n                isPrime = false;\n             \
    \   break;\n            }\n        }\n        return isPrime;"]
stop_tokens:
- "\n    }\n"

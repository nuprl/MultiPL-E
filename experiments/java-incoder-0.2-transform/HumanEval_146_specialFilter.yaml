name: HumanEval_146_specialFilter
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that takes an array of numbers as input\
  \ and returns \n    // the number of elements in the array that are greater than\
  \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n\
  \    // For example:\n    // >>> specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
  \ (long)-73l, (long)14l, (long)-15l))))\n    // (1l)\n    // >>> specialFilter((new\
  \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
  \ (long)109l))))\n    // (2l)\n    public static long specialFilter(ArrayList<Long>\
  \ nums) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
  \ ArrayList<Long>(Arrays.asList((long)5l, (long)-2l, (long)1l, (long)-5l)))) ==\
  \ (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)15l,\
  \ (long)-73l, (long)14l, (long)-15l)))) == (1l));\n    assert(specialFilter((new\
  \ ArrayList<Long>(Arrays.asList((long)33l, (long)-2l, (long)-3l, (long)45l, (long)21l,\
  \ (long)109l)))) == (2l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)43l,\
  \ (long)-12l, (long)93l, (long)125l, (long)121l, (long)109l)))) == (4l));\n    assert(specialFilter((new\
  \ ArrayList<Long>(Arrays.asList((long)71l, (long)-2l, (long)-33l, (long)75l, (long)21l,\
  \ (long)19l)))) == (3l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList((long)1l))))\
  \ == (0l));\n    assert(specialFilter((new ArrayList<Long>(Arrays.asList()))) ==\
  \ (0l));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        for (Long num : nums) {\n          \
    \  if (num > 10) {\n                sum += num;\n            }\n        }\n  \
    \      return sum;", "        long count = 0;\n        for (Long num : nums) {\n\
    \            if (num > 10 && num % 2 == 1 && num % 2 == 0) {\n               \
    \ count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (Long num : nums) {\n            if (num > 10) {\n       \
    \         if (num % 2 == 0 && num % 2 != 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (Long num : nums) {\n            if (num > 10\
    \ && num % 2 == 1 && num % 2 == 0) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (Long\
    \ num : nums) {\n            if (num > 10 && num % 2 == 1 && num % 2 == 0) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (long num : nums) {\n            if (num\
    \ > 10 && num % 2 == 1 && num % 2 == 1) {\n                count++;\n        \
    \    }\n        }\n        return count;", "        long count = 0;\n        for(long\
    \ num : nums) {\n            if(num > 10l && num % 10l == 1l && num % 10l == 9l)\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (long num : nums) {\n            if (num >\
    \ 10l && num % 10l == 1l && num % 10l % 2l == 1l) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (long num : nums) {\n            if (num > 10 && num % 2 == 1 &&\
    \ num % 2 == 0) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long sum = 0;\n        for (Long num : nums) {\n \
    \           if (num > 10 && num % 2 == 1 && num % 2 == 0) {\n                sum\
    \ += num;\n            }\n        }\n        return sum;", "        long sum =\
    \ 0;\n        for(Long num : nums) {\n            if(num > 10 && num % 2 == 1\
    \ && num % 2 == 0) {\n                sum += num;\n            }\n        }\n\
    \        return sum;", "        long count = 0;\n        for (long num : nums)\
    \ {\n            if (num > 10 && num % 2 == 1 && num % 2 == 0) {\n           \
    \     count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (long num : nums) {\n            if (num > 10 && num\
    \ % 2 == 1 && num % 2 == 0) {\n                count++;\n            }\n     \
    \   }\n        return count;", "        long sum = 0;\n        for (long num :\
    \ nums) {\n            if (num > 10) {\n                if (num % 2 == 0) {\n\
    \                    if (num % 2 == 1) {\n                        sum += num;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ sum;", "        long count = 0;\n        for (long num : nums) {\n         \
    \   if (num > 10l && num % 10l == 1l && num % 100l == 1l) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (long num : nums) {\n            if (num > 10) {\n              \
    \  if (num % 2 == 1 && num % 10 == 1) {\n                    count++;\n      \
    \          }\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (Long num : nums) {\n            if (num > 10l && num\
    \ % 10l % 2l == 1l && num % 10l % 2l == 1l) {\n                count++;\n    \
    \        }\n        }\n        return count;", "        long result = 0;\n   \
    \     for (Long num : nums) {\n            if (num > 10l && num % 10l == 1l &&\
    \ num % 100l == 1l) {\n                result += 1;\n            }\n        }\n\
    \        return result;", "        long count = 0;\n        for(long num : nums)\
    \ {\n            long first = num % 10;\n            long last = num / 10;\n \
    \           boolean firstOdd = (first % 2) == 1;\n            boolean lastOdd\
    \ = (last % 2) == 1;\n            if(firstOdd && lastOdd) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (long num : nums) {\n            if (num > 10 && num % 2 == 1 &&\
    \ num % 10 == 1) {\n                count++;\n            }\n        }\n     \
    \   return count;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_31_is_prime
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
  \    // >>> isPrime((6l))\n    // (false)\n    // >>> isPrime((101l))\n    // (true)\n\
  \    // >>> isPrime((11l))\n    // (true)\n    // >>> isPrime((13441l))\n    //\
  \ (true)\n    // >>> isPrime((61l))\n    // (true)\n    // >>> isPrime((4l))\n \
  \   // (false)\n    // >>> isPrime((1l))\n    // (false)\n    public static boolean\
  \ isPrime(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(isPrime((6l))\
  \ == (false));\n    assert(isPrime((101l)) == (true));\n    assert(isPrime((11l))\
  \ == (true));\n    assert(isPrime((13441l)) == (true));\n    assert(isPrime((61l))\
  \ == (true));\n    assert(isPrime((4l)) == (false));\n    assert(isPrime((1l)) ==\
  \ (false));\n    assert(isPrime((5l)) == (true));\n    assert(isPrime((11l)) ==\
  \ (true));\n    assert(isPrime((17l)) == (true));\n    assert(isPrime((85l)) ==\
  \ (false));\n    assert(isPrime((77l)) == (false));\n    assert(isPrime((255379l))\
  \ == (false));\n    }\n\n}\n"
completions: ["        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n <= 3l) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (int i = 3l; i * i <=\
    \ limit; i += 6l) if (n % i == 0 || n % (i + 2) == 0) return false;\n        return\
    \ true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n     \
    \   if (n == 2l) return true; // 2 is prime\n        if (n % 2l == 0l) return\
    \ false; // even numbers are not primes\n        if (n % 3l == 0l) return false;\
    \ // multiple of 3 is not primes\n        if (n % 5l == 0l) return false; // multiple\
    \ of 5 is not primes\n        if (n % 7l == 0l) return false; // multiple of 7\
    \ is not primes\n        if (n % 11l == 0l) return false; // multiple of 11 is\
    \ not primes\n        if (n % 13l == 0l) return false; // multiple of 13 is not\
    \ primes\n        if (n % 17l == 0l) return false; // multiple of 17 is not primes\n\
    \        if (n % 19l == 0l) return false; // multiple of 19 is not primes\n  \
    \      if (n % 23l == 0l) return false; // multiple of 23 is not primes\n    \
    \    if (n % 29l == 0l) return false; // multiple of 29 is not primes\n      \
    \  if (n % 31l == 0l) return false; // multiple of 31 is not primes\n        if\
    \ (n % 37l == 0l) return false; // multiple of 37 is not primes\n        if (n\
    \ % 41l == 0l) return false; // multiple of 41 is not primes\n        if (n %\
    \ 43l == 0l) return false; // multiple of 43 is not primes\n        if (n % 47l\
    \ == 0l) return false; // multiple of 47 is not primes\n        if (n % 53l ==\
    \ 0l) return false; // multiple of 53 is not primes\n        if (n % 59l == 0l)\
    \ return false; // multiple of 59 is not primes\n        if (n % 61l == 0l) return\
    \ false; // multiple of 61 is not primes\n        if (n % 67l == 0l) return false;\
    \ // multiple of 67 is not primes\n        if (n % 71l == 0l) return false; //\
    \ multiple of 71 is not primes\n        if (n % 73l == 0l) return false; // multiple\
    \ of 73 is not primes\n        if (n % 79l == 0l) return false; // multiple of\
    \ 79 is not primes\n        if (n % 83l == 0l) return false; // multiple of 83\
    \ is not primes\n        if (n % 89l == 0l) return false; // multiple of 89 is\
    \ not primes\n        if (n % 97l == 0l) return false; // multiple of 97 is not\
    \ primes\n        if (n % 101l == 0l) return false; // multiple of 101 is not\
    \ primes\n        if (n % 103l == 0l) return false; // multiple of 103 is not\
    \ primes\n        if (n % 107l == 0l) return false; // multiple of 107 is not\
    \ primes\n        if (n % 109l == 0l) return false; // multiple of 109 is not\
    \ primes\n        if (n % 113l == 0l) return false; // multiple of 113 is not\
    \ primes\n        if (n % ", "        if (n < 2l) return false;\n        if (n\
    \ == 2l) return true;\n        if (n % 2l == 0l) return false;\n        if (n\
    \ % 3l == 0l) return false;\n        if (n % 5l == 0l) return false;\n       \
    \ if (n % 7l == 0l) return false;\n        if (n % 11l == 0l) return false;\n\
    \        if (n % 13l == 0l) return false;\n        if (n % 17l == 0l) return false;\n\
    \        if (n % 19l == 0l) return false;\n        if (n % 23l == 0l) return false;\n\
    \        if (n % 29l == 0l) return false;\n        if (n % 31l == 0l) return false;\n\
    \        if (n % 37l == 0l) return false;\n        if (n % 41l == 0l) return false;\n\
    \        if (n % 43l == 0l) return false;\n        if (n % 47l == 0l) return false;\n\
    \        if (n % 53l == 0l) return false;\n        if (n % 59l == 0l) return false;\n\
    \        if (n % 61l == 0l) return false;\n        if (n % 67l == 0l) return false;\n\
    \        if (n % 71l == 0l) return false;\n        if (n % 73l == 0l) return false;\n\
    \        if (n % 79l == 0l) return false;\n        if (n % 83l == 0l) return false;\n\
    \        if (n % 89l == 0l) return false;\n        if (n % 97l == 0l) return false;\n\
    \        if (n % 101l == 0l) return false;\n        if (n % 103l == 0l) return\
    \ false;\n        if (n % 107l == 0l) return false;\n        if (n % 109l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 117l\
    \ == 0l) return false;\n        if (n % 121l == 0l) return false;\n        if\
    \ (n % 127l == 0l) return false;\n        if (n % 131l == 0l) return false;\n\
    \        if (n % 137l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 151l == 0l)\
    \ return false;\n        if (n % 157l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 187l == 0l) return\
    \ false;\n        if (n % 193l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 201l == 0l) return false;\n        if (n % 207l\
    \ == 0l) return false;\n        if (n % 211l == 0l) return false;\n        if\
    \ (n % 215l == 0l) return false;\n        if (n % 221l == 0l) return false;\n\
    \        if (n % 227l == 0l) return false;\n        if (n % 231l == 0l) return\
    \ false;\n        if (n % 237", "        if (n < 2l) return false; // 0 and 1\
    \ are not primes\n        if (n == 2l) return true;\n        if (n % 2l == 0l)\
    \ return false; // even numbers are not primes\n        long limit = (long) Math.sqrt(n);\
    \ // limit is the square root of n\n        long limit2 = limit + 1l; // limit2\
    \ is the square root of limit\n        for (long i = 2l; i <= limit2l; i++) {\n\
    \            if (n % i == 0l) return false; // n is not prime\n        }\n   \
    \     return true;", "        if (n < 2l) return false; // 0 and 1 are not primes\n\
    \        if (n == 2l) return true; // 2 is prime\n        if (n % 2l == 0l) return\
    \ false; // even numbers aren't primes\n        if (n % 3l == 0l) return false;\
    \ // multiple of 3 are not primes\n        if (n % 5l == 0l) return false; //\
    \ multiple of 5 are not primes\n        if (n % 7l == 0l) return false; // multiple\
    \ of 7 are not primes\n        if (n % 11l == 0l) return false; // multiple of\
    \ 11 are not primes\n        if (n % 13l == 0l) return false; // multiple of 13\
    \ are not primes\n        if (n % 17l == 0l) return false; // multiple of 17 are\
    \ not primes\n        if (n % 19l == 0l) return false; // multiple of 19 are not\
    \ primes\n        if (n % 23l == 0l) return false; // multiple of 23 are not primes\n\
    \        if (n % 29l == 0l) return false; // multiple of 29 are not primes\n \
    \       if (n % 31l == 0l) return false; // multiple of 31 are not primes\n  \
    \      if (n % 37l == 0l) return false; // multiple of 37 are not primes\n   \
    \     if (n % 41l == 0l) return false; // multiple of 41 are not primes\n    \
    \    if (n % 43l == 0l) return false; // multiple of 43 are not primes\n     \
    \   if (n % 47l == 0l) return false; // multiple of 47 are not primes\n      \
    \  if (n % 53l == 0l) return false; // multiple of 53 are not primes\n       \
    \ if (n % 59l == 0l) return false; // multiple of 59 are not primes\n        if\
    \ (n % 61l == 0l) return false; // multiple of 61 are not primes\n        if (n\
    \ % 67l == 0l) return false; // multiple of 67 are not primes\n        if (n %\
    \ 71l == 0l) return false; // multiple of 71 are not primes\n        if (n % 73l\
    \ == 0l) return false; // multiple of 73 are not primes\n        if (n % 79l ==\
    \ 0l) return false; // multiple of 79 are not primes\n        if (n % 83l == 0l)\
    \ return false; // multiple of 83 are not primes\n        if (n % 89l == 0l) return\
    \ false; // multiple of 89 are not primes\n        if (n % 97l == 0l) return false;\
    \ // multiple of 97 are not primes\n        if (n % 101l == 0l) return false;\
    \ // multiple of 101 are not primes\n        if (n % 103l == 0l) return false;\
    \ // multiple of 103 are not primes\n        if (n % 107l == 0l) return false;\
    \ // multiple of 107 are not primes\n        if (n % 109l == 0l) return false;\
    \ // multiple of 109 are not primes\n        if (n % 113l == 0", "        if (n\
    \ < 2l) return false; // 0 or 1 are not primes.\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes.\n   \
    \     if (n % 3l == 0l) return false; // prime factors of 3 are not primes.\n\
    \        long limit = (long) Math.sqrt(n); // limit is the largest integer less\
    \ than or equal to n.\n        for (long i = 2l; i <= limit; i++) {\n        \
    \    if (n % i == 0l) return false; // n is not prime, since any integer greater\
    \ than n divides it.\n        }\n        return true;", "        if (n < 2l) return\
    \ false; // 0 and 1 are not primes\n        if (n <= 3l) return true; // 2 and\
    \ 3 are primes\n        if (n % 2l == 0l) return false; // even numbers aren't\
    \ primes\n        if (n % 3l == 0l) return false; // even numbers aren't primes\n\
    \        long limit = (long) Math.sqrt(n); // limit the search to sqrt(n)\n  \
    \      long i = 3l; // start at 3\n        while (i <= limit) {\n            if\
    \ (n % i == 0l) return false; // n is not prime\n            if (i == 3l) return\
    \ true; // we've found our number\n            i += 2l; // next odd number\n \
    \       }\n        return true; // n is prime", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true; // 2 is prime\n\
    \        if (n % 2l == 0l) return false; // even numbers aren't primes\n     \
    \   long limit = (long) Math.sqrt(n); // limit the search to sqrt(n)\n       \
    \ for (long i = 2l; i <= limit; i++) {\n            if (n % i == 0l) return false;\
    \ // n is not prime\n        }\n        return true;", "        if (n <= 1l) return\
    \ false;\n        if (n <= 3l) return true;\n        if (n % 2 == 0) return false;\n\
    \        if (n % 3 == 0) return false;\n        if (n % 5 == 0) return false;\n\
    \        long limit = (long) Math.sqrt(n);\n        for (long i = 5l; i <= limit;\
    \ i += 6l) if (n % i == 0) return false;\n        return true;", "        if (n\
    \ < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l) return true;\n\
    \        if (n % 2l == 0l) return false; // even numbers are not primes\n    \
    \    if (n % 3l == 0l) return false; // prime factors of 3 are not primes\n  \
    \      if (n % 5l == 0l) return false; // prime factors of 5 are not primes\n\
    \        if (n % 7l == 0l) return false; // prime factors of 7 are not primes\n\
    \        if (n % 11l == 0l) return false; // prime factors of 11 are not primes\n\
    \        if (n % 13l == 0l) return false; // prime factors of 13 are not primes\n\
    \        if (n % 17l == 0l) return false; // prime factors of 17 are not primes\n\
    \        if (n % 19l == 0l) return false; // prime factors of 19 are not primes\n\
    \        if (n % 23l == 0l) return false; // prime factors of 23 are not primes\n\
    \        if (n % 29l == 0l) return false; // prime factors of 29 are not primes\n\
    \        if (n % 31l == 0l) return false; // prime factors of 31 are not primes\n\
    \        if (n % 37l == 0l) return false; // prime factors of 37 are not primes\n\
    \        if (n % 41l == 0l) return false; // prime factors of 41 are not primes\n\
    \        if (n % 43l == 0l) return false; // prime factors of 43 are not primes\n\
    \        if (n % 47l == 0l) return false; // prime factors of 47 are not primes\n\
    \        if (n % 53l == 0l) return false; // prime factors of 53 are not primes\n\
    \        if (n % 59l == 0l) return false; // prime factors of 59 are not primes\n\
    \        if (n % 61l == 0l) return false; // prime factors of 61 are not primes\n\
    \        if (n % 67l == 0l) return false; // prime factors of 67 are not primes\n\
    \        if (n % 71l == 0l) return false; // prime factors of 71 are not primes\n\
    \        if (n % 73l == 0l) return false; // prime factors of 73 are not primes\n\
    \        if (n % 79l == 0l) return false; // prime factors of 79 are not primes\n\
    \        if (n % 83l == 0l) return false; // prime factors of 83 are not primes\n\
    \        if (n % 89l == 0l) return false; // prime factors of 89 are not primes\n\
    \        if (n % 97l == 0l) return false; // prime factors of 97 are not primes\n\
    \        if (n % 101l == 0l) return false; // prime factors of 101 are not primes\n\
    \        if (n % 103l == 0l) return false; // prime factor", "        if (n <=\
    \ 1l) return false;\n        if (n == 2l) return true;\n        if (n % 2l ==\
    \ 0l) return false;\n        if (n % 3l == 0l) return false;\n        if (n %\
    \ 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n        if\
    \ (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n  \
    \      if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 139l == 0l) return false;\n        if (n % 141l == 0l) return\
    \ false;\n        if (n % 147l == 0l) return false;\n        if (n % 149l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 163l == 0l) return false;\n        if\
    \ (n % 167l == 0l) return false;\n        if (n % 171l == 0l) return false;\n\
    \        if (n % 177l == 0l) return false;\n        if (n % 181l == 0l) return\
    \ false;\n        if (n % 193l == 0l) return false;\n        if (n % 197l == 0l)\
    \ return false;\n        if (n % 199l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 217l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % 227l == 0l) return false;\n        if (n % 229l ", " \
    \       if (n <= 1l) return false;\n        if (n == 2l) return true;\n      \
    \  if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n\
    \        if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 109l == 0l) return false;\n        if (n % 113l\
    \ == 0l) return false;\n        if (n % 117l == 0l) return false;\n        if\
    \ (n % 121l == 0l) return false;\n        if (n % 127l == 0l) return false;\n\
    \        if (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return\
    \ false;\n        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l)\
    \ return false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l\
    \ == 0l) return false;\n        if (n % 161l == 0l) return false;\n        if\
    \ (n % 163l == 0l) return false;\n        if (n % 167l == 0l) return false;\n\
    \        if (n % 173l == 0l) return false;\n        if (n % 177l == 0l) return\
    \ false;\n        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 221l == 0l) return false;\n        if (n % 227l == 0l) return\
    \ false;\n        if (n % 231l == 0l) return false;\n        if (", "        if\
    \ (n < 2l) return false;\n        if (n == 2l) return true;\n        if (n % 2l\
    \ == 0l) return false;\n        if (n % 3l == 0l) return false;\n        if (n\
    \ % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n       \
    \ if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 121l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 161l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 185l == 0l) return\
    \ false;\n        if (n % 189l == 0l) return false;\n        if (n % 193l == 0l)\
    \ return false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l\
    \ == 0l) return false;\n        if (n % 207l == 0l) return false;\n        if\
    \ (n % 211l == 0l) return false;\n        if (n % 215l == 0l) return false;\n\
    \        if (n % 219l == 0l) return false;\n        if (n % 223l == 0l) return\
    \ false;\n        if (n % 227l == 0l) return false;\n        if (n % 23", "  \
    \      if (n <= 1l) return false;\n        if (n == 2l) return true;\n       \
    \ if (n % 2l == 0l) return false;\n        if (n % 3l == 0l) return false;\n \
    \       if (n % 5l == 0l) return false;\n        if (n % 7l == 0l) return false;\n\
    \        if (n % 11l == 0l) return false;\n        if (n % 13l == 0l) return false;\n\
    \        if (n % 17l == 0l) return false;\n        if (n % 19l == 0l) return false;\n\
    \        if (n % 23l == 0l) return false;\n        if (n % 29l == 0l) return false;\n\
    \        if (n % 31l == 0l) return false;\n        if (n % 37l == 0l) return false;\n\
    \        if (n % 41l == 0l) return false;\n        if (n % 43l == 0l) return false;\n\
    \        if (n % 47l == 0l) return false;\n        if (n % 53l == 0l) return false;\n\
    \        if (n % 59l == 0l) return false;\n        if (n % 61l == 0l) return false;\n\
    \        if (n % 67l == 0l) return false;\n        if (n % 71l == 0l) return false;\n\
    \        if (n % 73l == 0l) return false;\n        if (n % 79l == 0l) return false;\n\
    \        if (n % 83l == 0l) return false;\n        if (n % 89l == 0l) return false;\n\
    \        if (n % 97l == 0l) return false;\n        if (n % 101l == 0l) return\
    \ false;\n        if (n % 103l == 0l) return false;\n        if (n % 107l == 0l)\
    \ return false;\n        if (n % 113l == 0l) return false;\n        if (n % 121l\
    \ == 0l) return false;\n        if (n % 127l == 0l) return false;\n        if\
    \ (n % 131l == 0l) return false;\n        if (n % 137l == 0l) return false;\n\
    \        if (n % 141l == 0l) return false;\n        if (n % 147l == 0l) return\
    \ false;\n        if (n % 151l == 0l) return false;\n        if (n % 157l == 0l)\
    \ return false;\n        if (n % 161l == 0l) return false;\n        if (n % 163l\
    \ == 0l) return false;\n        if (n % 167l == 0l) return false;\n        if\
    \ (n % 173l == 0l) return false;\n        if (n % 179l == 0l) return false;\n\
    \        if (n % 181l == 0l) return false;\n        if (n % 191l == 0l) return\
    \ false;\n        if (n % 197l == 0l) return false;\n        if (n % 201l == 0l)\
    \ return false;\n        if (n % 207l == 0l) return false;\n        if (n % 211l\
    \ == 0l) return false;\n        if (n % 215l == 0l) return false;\n        if\
    \ (n % 223l == 0l) return false;\n        if (n % 229l == 0l) return false;\n\
    \        if (n % 233l == 0l) return false;\n        if (n % 239l == 0l) return\
    \ false;\n        if (n % 241l == 0l) return false;\n        if (", "        if\
    \ (n < 2l) return false; // 0 and 1 are not primes\n        if (n == 2l) return\
    \ true;\n        if (n % 2l == 0l) return false; // 0 and 1 are not primes\n \
    \       if (n % 3l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 5l == 0l) return false; // 0 and 1 are not primes\n        if (n % 7l ==\
    \ 0l) return false; // 0 and 1 are not primes\n        if (n % 11l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 13l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 17l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 19l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 23l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 29l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 31l == 0l) return false; // 0 and 1 are not primes\n        if (n % 37l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 41l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 43l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 47l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 53l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 59l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 61l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 67l == 0l) return false; // 0 and 1 are not primes\n        if (n % 71l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 73l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 79l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 83l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 89l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 97l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 101l == 0l) return false; // 0 and 1 are not primes\n       \
    \ if (n % 103l == 0l) return false; // 0 and 1 are not primes\n        if (n %\
    \ 107l == 0l) return false; // 0 and 1 are not primes\n        if (n % 109l ==\
    \ 0l) return false; // 0 and 1 are not primes\n        if (n % 113l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 127l == 0l) return false;\
    \ // 0 and ", "        if (n < 2l) return false; // 0 and 1 are not primes\n \
    \       if (n == 2l) return true;\n        if (n % 2l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 3l == 0l) return false; // 0 and 1 are\
    \ not primes\n        if (n % 5l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 7l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 11l == 0l) return false; // 0 and 1 are not primes\n        if (n % 13l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 17l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 19l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 23l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 29l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 31l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 37l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 41l == 0l) return false; // 0 and 1 are not primes\n        if (n % 43l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 47l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 53l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 59l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 61l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 67l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 71l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 73l == 0l) return false; // 0 and 1 are not primes\n        if (n % 79l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 83l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 89l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 97l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 101l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 103l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 107l == 0l) return false; // 0 and 1 are not primes\n       \
    \ if (n % 113l == 0l) return false; // 0 and 1 are not primes\n        if (n %\
    \ 121l == 0l) return false; // 0 and 1 are not primes\n        if (n % 127l ==\
    \ 0l) return false; // ", "        if (n < 2l) return false; // 0 or 1 are not\
    \ primes\n        if (n == 2l) return true; // 2 is prime\n        if (n % 2l\
    \ == 0l) return false; // even numbers aren't primes\n        long limit = (long)\
    \ Math.sqrt(n); // limit the search to sqrt(n)\n        for (long i = 2l; i <=\
    \ limit; i++) {\n            if (n % i == 0l) return false; // n is not prime\n\
    \        }\n        return true; // n is prime", "        if (n <= 1) return false;\n\
    \        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n   \
    \     if (n % 3 == 0) return false;\n        if (n % 5 == 0) return false;\n \
    \       if (n % 7 == 0) return false;\n        long limit = (long) Math.sqrt(n);\n\
    \        for (long i = 5; i <= limit; i += 6) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;", "        if (n < 2l) return false;\
    \ // 0 and 1 are not primes\n        if (n == 2l) return true;\n        if (n\
    \ % 2l == 0l) return false; // 0 and 1 are not primes\n        if (n % 3l == 0l)\
    \ return false; // 0 and 1 are not primes\n        if (n % 5l == 0l) return false;\
    \ // 0 and 1 are not primes\n        if (n % 7l == 0l) return false; // 0 and\
    \ 1 are not primes\n        if (n % 11l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 13l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 17l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 19l == 0l) return false; // 0 and 1 are not primes\n        if (n % 23l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 29l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 31l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 37l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 41l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 43l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 47l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 53l == 0l) return false; // 0 and 1 are not primes\n        if (n % 59l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 61l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 67l == 0l) return false; //\
    \ 0 and 1 are not primes\n        if (n % 71l == 0l) return false; // 0 and 1\
    \ are not primes\n        if (n % 73l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 79l == 0l) return false; // 0 and 1 are not primes\n\
    \        if (n % 83l == 0l) return false; // 0 and 1 are not primes\n        if\
    \ (n % 89l == 0l) return false; // 0 and 1 are not primes\n        if (n % 97l\
    \ == 0l) return false; // 0 and 1 are not primes\n        if (n % 101l == 0l)\
    \ return false; // 0 and 1 are not primes\n        if (n % 103l == 0l) return\
    \ false; // 0 and 1 are not primes\n        if (n % 107l == 0l) return false;\
    \ // 0 and 1 are not primes\n        if (n % 109l == 0l) return false; // 0 and\
    \ 1 are not primes\n        if (n % 113l == 0l) return false; // 0 and 1 are not\
    \ primes\n        if (n % 127l == 0l) return false; // 0 and ", "        if (n\
    \ <= 1l) return false;\n        if (n == 2l) return true;\n        if (n % 2 ==\
    \ 0l) return false;\n        if (n % 3 == 0l) return false;\n        long limit\
    \ = (long) Math.sqrt(n);\n        for (int i = 3l; i <= limit; i += 2l) {\n  \
    \          if (n % i == 0l) return false;\n        }\n        return true;"]
stop_tokens:
- "\n    }\n"

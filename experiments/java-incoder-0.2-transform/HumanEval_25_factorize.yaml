name: HumanEval_25_factorize
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return list of prime factors of given integer in the order\
  \ from smallest to largest.\n    // Each of the factors should be listed number\
  \ of times corresponding to how many times it appeares in factorization.\n    //\
  \ Input number should be equal to the product of all factors\n    // >>> factorize((8l))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)2l)))\n   \
  \ // >>> factorize((25l))\n    // (new ArrayList<Long>(Arrays.asList((long)5l, (long)5l)))\n\
  \    // >>> factorize((70l))\n    // (new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)5l, (long)7l)))\n    public static ArrayList<Long> factorize(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(factorize((2l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l)))));\n    assert(factorize((4l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)2l)))));\n    assert(factorize((8l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)2l)))));\n    assert(factorize((57l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)19l)))));\n    assert(factorize((3249l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)3l, (long)19l, (long)19l)))));\n\
  \    assert(factorize((185193l)).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l, (long)19l, (long)19l, (long)19l)))));\n    assert(factorize((20577l)).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)19l, (long)19l, (long)19l)))));\n\
  \    assert(factorize((18l)).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)3l, (long)3l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> factors = new ArrayList<>();\n        long\
    \ factor = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n\
    \                factors.add(factor);\n                n /= factor;\n        \
    \    }\n            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n % factor != 0) {\n            factors.add(factor);\n\
    \            n /= factor;\n        }\n        while (n != 1) {\n            factors.add(1);\n\
    \            n /= 1;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        long factorization = 1;\n        long factorization2 = 1;\n        while\
    \ (factorization <= n) {\n            factorization *= factor;\n            factors.add(factorization);\n\
    \            factor++;\n        }\n        factorization2 = factorization;\n \
    \       while (factorization2 <= n) {\n            factorization2 *= factor;\n\
    \            factors.add(factorization2);\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n !=\
    \ 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        long factorization = 1;\n        while (n >\
    \ 1) {\n            factorization *= factor;\n            while (n % factor ==\
    \ 0) {\n                factors.add(factor);\n                n /= factor;\n \
    \           }\n            factor++;\n        }\n        if (n != 1) {\n     \
    \       factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        factorize(n, factors);\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n > 1) {\n     \
    \       factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ % factor == 0) {\n            factors.add(factor);\n            n /= factor;\n\
    \        }\n        while (n > 1) {\n            factor++;\n            while\
    \ (n % factor == 0) {\n                factors.add(factor);\n                n\
    \ /= factor;\n            }\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n != 1) {\n    \
    \        factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n % factor == 0) {\n            factors.add(factor);\n\
    \            n = n / factor;\n        }\n        while (n > 1) {\n           \
    \ factor = 1;\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n = n / factor;\n            }\n        }\n        return factors;",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            if (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            } else {\n                factor++;\n            }\n        }\n \
    \       if (n != 1) {\n            factors.add(n);\n        }\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n     \
    \   long factor = 1;\n        while (n > 1) {\n            while (n % factor ==\
    \ 0) {\n                factors.add(factor);\n                n /= factor;\n \
    \           }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        long factorization\
    \ = 1;\n        while (n > 1) {\n            factorization *= factor;\n      \
    \      factors.add(factorization);\n            while (n % factor == 0) {\n  \
    \              n /= factor;\n                factorization *= factor;\n      \
    \          factors.add(factorization);\n            }\n            factor++;\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        long factorization\
    \ = 1;\n        long product = n;\n        while (product != 1) {\n          \
    \  factorization *= product;\n            factors.add(factorization);\n      \
    \      factor++;\n            product = factorization;\n        }\n        factors.add(factor);\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            if (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            } else {\n                factor++;\n            }\n        }\n \
    \       factors.add(n);\n        return factors;", "        ArrayList<Long> factors\
    \ = new ArrayList<Long>();\n        long factor = 1;\n        while (n > 1) {\n\
    \            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            if (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            } else {\n                factor++;\n            }\n        }\n \
    \       if (n != 1) {\n            factors.add(n);\n        }\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<>();\n        long\
    \ factor = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n\
    \                factors.add(factor);\n                n /= factor;\n        \
    \    }\n            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        factorize(n, factors);\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n     \
    \   long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        long factorization = 1;\n        while (n >\
    \ 1) {\n            factorization *= factor;\n            factors.add(factorization);\n\
    \            while (n % factor == 0) {\n                n /= factor;\n       \
    \         factorization *= factor;\n                factors.add(factorization);\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n !=\
    \ 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n % factor == 0) {\n            factors.add(factor);\n\
    \            n /= factor;\n        }\n        if (n != 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n != 1) {\n    \
    \        factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n !=\
    \ 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n % factor == 0) {\n            factors.add(factor);\n\
    \            n /= factor;\n        }\n        if (n != 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n % factor == 0) {\n            factors.add(factor);\n\
    \            n /= factor;\n        }\n        if (n != 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n != 1) {\n            while (n % factor == 0) {\n           \
    \     factors.add(factor);\n                n /= factor;\n            }\n    \
    \        factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n > 1) {\n     \
    \       factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n !=\
    \ 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n > 1) {\n     \
    \       factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        long factorization = 1;\n        long product\
    \ = n;\n        long factorizationProduct = 1;\n        while (product > 1) {\n\
    \            factorizationProduct *= factorization;\n            factors.add(factorizationProduct);\n\
    \            product /= factorization;\n            factorization *= factor;\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n % factor\
    \ == 0) {\n            factors.add(factor);\n            n /= factor;\n      \
    \  }\n        while (n > 1) {\n            factor++;\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        long maxFactor = n;\n        long maxFactorFactor\
    \ = 1;\n        while (factor <= maxFactor) {\n            if (n % factor == 0)\
    \ {\n                factors.add(factor);\n                maxFactorFactor *=\
    \ factor;\n            }\n            factor++;\n        }\n        if (maxFactorFactor\
    \ == 1) {\n            factors.add(1);\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            if (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            } else {\n                factor++;\n            }\n        }\n \
    \       factors.add(n);\n        return factors;", "        ArrayList<Long> factors\
    \ = new ArrayList<Long>();\n        long factor = 1;\n        while (n > 1) {\n\
    \            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n != 1) {\n    \
    \        factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        if (n > 1) {\n            factors.add(n);\n        }\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n     \
    \   long factor = 1;\n        while (n > 1) {\n            while (n % factor ==\
    \ 0) {\n                factors.add(factor);\n                n /= factor;\n \
    \           }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n    \
    \            factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            if (n % factor == 0) {\n        \
    \        factors.add(factor);\n                n /= factor;\n            } else\
    \ {\n                factor++;\n            }\n        }\n        return factors;",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        long limit =\
    \ n;\n        while (limit > 1) {\n            while (n % factor == 0) {\n   \
    \             factors.add(factor);\n                n /= factor;\n           \
    \ }\n            factor++;\n        }\n        if (n != 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        long factorization = 1;\n        while (n >\
    \ 1) {\n            factorization *= factor;\n            factors.add(factorization);\n\
    \            factor++;\n            while (n % factor == 0) {\n              \
    \  n /= factor;\n                factorization *= factor;\n                factors.add(factorization);\n\
    \            }\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        if (n != 1) {\n    \
    \        factors.add(n);\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        long maxFactor = n;\n        while (maxFactor\
    \ % factor == 0) {\n            factors.add(factor);\n            maxFactor /=\
    \ factor;\n            factor++;\n        }\n        if (maxFactor > 1) {\n  \
    \          factors.add(maxFactor);\n        }\n        return factors;", "   \
    \     ArrayList<Long> factors = new ArrayList<Long>();\n        long factor =\
    \ 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n       \
    \         factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        factorize(n, factors);\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n     \
    \   long factor = 1;\n        while (n > 1) {\n            while (n % factor ==\
    \ 0) {\n                factors.add(factor);\n                n /= factor;\n \
    \           }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n != 1) {\n            while (n % factor == 0) {\n           \
    \     factors.add(factor);\n                n /= factor;\n            }\n    \
    \        factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        factorize(n, factors);\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<>();\n        long\
    \ factor = 1;\n        while (n % factor == 0) {\n            factors.add(factor);\n\
    \            n /= factor;\n        }\n        while (n > 1) {\n            factor++;\n\
    \            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n        }\n        return factors;",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        long factorization = 1;\n        while (n >\
    \ 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                factorization *= factor;\n                n /= factor;\n    \
    \        }\n            factor++;\n        }\n        factors.add(factorization);\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        long factorization\
    \ = 1;\n        while (n > 1) {\n            factorization *= factor;\n      \
    \      factors.add(factorization);\n            while (n % factor == 0) {\n  \
    \              n /= factor;\n                factorization *= factor;\n      \
    \          factors.add(factorization);\n            }\n            factor++;\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        long factorization = 1;\n        long remainder;\n        long\
    \ counter = 1;\n        long temp;\n        long temp2;\n        long temp3;\n\
    \        long temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n\
    \        long temp8;\n        long temp9;\n        long temp10;\n        long\
    \ temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n\
    \        long temp15;\n        long temp16;\n        long temp17;\n        long\
    \ temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n\
    \        long temp22;\n        long temp23;\n        long temp24;\n        long\
    \ temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n\
    \        long temp29;\n        long temp30;\n        long temp31;\n        long\
    \ temp32;\n        long temp33;\n        long temp34;\n        long temp35;\n\
    \        long temp36;\n        long temp37;\n        long temp38;\n        long\
    \ temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n\
    \        long temp43;\n        long temp44;\n        long temp45;\n        long\
    \ temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n\
    \        long temp50;\n        long temp51;\n        long temp52;\n        long\
    \ temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n\
    \        long temp57;\n        long temp58;\n        long temp59;\n        long\
    \ temp60;\n        long temp61;\n        long temp62;\n        long temp63;\n\
    \        long temp64;\n        long temp65;\n        long temp66;\n        long\
    \ temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n\
    \        long temp71;\n        long temp72;\n        long temp73;\n        long\
    \ temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n\
    \        long temp78;\n        long temp79;\n        long temp80;\n        long\
    \ temp81;\n        long temp82;\n        long temp83;\n        long ", "     \
    \   ArrayList<Long> factors = new ArrayList<Long>();\n        long factor = 1;\n\
    \        while (n != 1) {\n            while (n % factor == 0) {\n           \
    \     factors.add(factor);\n                n /= factor;\n            }\n    \
    \        factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            if (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            } else {\n                factor++;\n            }\n        }\n \
    \       if (n > 1) {\n            factors.add(n);\n        }\n        return factors;",
  "        ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        long maxFactor = n;\n        while (maxFactor % factor == 0) {\n    \
    \        factors.add(factor);\n            maxFactor /= factor;\n        }\n \
    \       if (maxFactor > 1) {\n            factors.add(maxFactor);\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ % factor == 0) {\n            factors.add(factor);\n            n /= factor;\n\
    \        }\n        while (n > 1) {\n            factor++;\n            while\
    \ (n % factor == 0) {\n                factors.add(factor);\n                n\
    \ /= factor;\n            }\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n % factor == 0) {\n            factors.add(factor);\n\
    \            n /= factor;\n        }\n        while (n > 1) {\n            factor++;\n\
    \            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n        }\n        return factors;",
  "        ArrayList<Long> factors = new ArrayList<Long>();\n        long factor =\
    \ 1;\n        while (n != 1) {\n            while (n % factor == 0) {\n      \
    \          factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n !=\
    \ 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n != 1) {\n            while (n % factor == 0) {\n           \
    \     factors.add(factor);\n                n /= factor;\n            }\n    \
    \        factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ > 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n != 1) {\n            while (n % factor == 0) {\n           \
    \     factors.add(factor);\n                n /= factor;\n            }\n    \
    \        factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        while (n\
    \ != 1) {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;", "        ArrayList<Long> factors = new ArrayList<>();\n\
    \        long factor = 1;\n        while (n != 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n     \
    \           factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<Long>();\n        long factor = 1;\n        long i =\
    \ 2;\n        while (i < n) {\n            if (n % i == 0) {\n               \
    \ factor *= i;\n                while (n % i == 0) {\n                    factor\
    \ *= i;\n                    n /= i;\n                }\n                factors.add(factor);\n\
    \                factor = 1;\n            }\n            i++;\n        }\n   \
    \     if (n > 1) {\n            factors.add(factor);\n        }\n        return\
    \ factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n     \
    \   long factor = 1;\n        while (n > 1) {\n            while (n % factor ==\
    \ 0) {\n                factors.add(factor);\n                n /= factor;\n \
    \           }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<>();\n        long factor = 1;\n\
    \        while (n > 1) {\n            while (n % factor == 0) {\n            \
    \    factors.add(factor);\n                n /= factor;\n            }\n     \
    \       factor++;\n        }\n        if (n > 1) {\n            factors.add(n);\n\
    \        }\n        return factors;", "        ArrayList<Long> factors = new ArrayList<Long>();\n\
    \        long factor = 1;\n        while (n > 1) {\n            while (n % factor\
    \ == 0) {\n                factors.add(factor);\n                n /= factor;\n\
    \            }\n            factor++;\n        }\n        return factors;", " \
    \       ArrayList<Long> factors = new ArrayList<Long>();\n        long factor\
    \ = 1;\n        long limit = n;\n        while (limit > 1) {\n            while\
    \ (n % factor == 0) {\n                factors.add(factor);\n                n\
    \ /= factor;\n            }\n            factor++;\n        }\n        if (n !=\
    \ 1) {\n            factors.add(n);\n        }\n        return factors;", "  \
    \      ArrayList<Long> factors = new ArrayList<Long>();\n        long factor =\
    \ 1;\n        while (n > 1) {\n            while (n % factor == 0) {\n       \
    \         factors.add(factor);\n                n /= factor;\n            }\n\
    \            factor++;\n        }\n        return factors;", "        ArrayList<Long>\
    \ factors = new ArrayList<>();\n        long factor = 1;\n        while (n > 1)\
    \ {\n            while (n % factor == 0) {\n                factors.add(factor);\n\
    \                n /= factor;\n            }\n            factor++;\n        }\n\
    \        return factors;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_98_count_upper
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a string s, count the number of uppercase vowels in\
  \ even indices.\n    // For example:\n    // >>> countUpper((\"aBCdEf\"))\n    //\
  \ (1l)\n    // >>> countUpper((\"abcdefg\"))\n    // (0l)\n    // >>> countUpper((\"\
  dBBE\"))\n    // (0l)\n    public static long countUpper(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(countUpper((\"\
  aBCdEf\")) == (1l));\n    assert(countUpper((\"abcdefg\")) == (0l));\n    assert(countUpper((\"\
  dBBE\")) == (0l));\n    assert(countUpper((\"B\")) == (0l));\n    assert(countUpper((\"\
  U\")) == (1l));\n    assert(countUpper((\"\")) == (0l));\n    assert(countUpper((\"\
  EEEE\")) == (2l));\n    }\n\n}\n"
completions: ["        long vowelCount = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                vowelCount++;\n\
    \            }\n        }\n        return vowelCount;", "        long count =\
    \ 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'a') {\n                count++;\n            }\n \
    \       }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.length(); i++) {\n    \
    \        if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                count++;\n    \
    \        }\n        }\n        return count;", "        long count = 0;\n    \
    \    for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'A'\
    \ || s.charAt(i) == 'a') {\n                count++;\n            }\n        \
    \    if (s.charAt(i) == 'B' || s.charAt(i) == 'b') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'C' || s.charAt(i) == 'c') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'D' ||\
    \ s.charAt(i) == 'd') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'F' || s.charAt(i) == 'f') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'G' ||\
    \ s.charAt(i) == 'g') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'H' || s.charAt(i) == 'h') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'I' || s.charAt(i) == 'I') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'J' ||\
    \ s.charAt(i) == 'j') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'K' || s.charAt(i) == 'k') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'L' || s.charAt(i) == 'l') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'M' ||\
    \ s.charAt(i) == 'm') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'N' || s.charAt(i) == 'n') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'O' || s.charAt(i) == 'o') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'P' ||\
    \ s.charAt(i) == 'p') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'Q' || s.charAt(i) == 'q') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'R' || s.charAt(i) == 'r') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'S' ||\
    \ s.charAt(i) == 's') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'T' || s.charAt(i) == 't') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'U' || s.charAt(i) == 'u') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'V' ||\
    \ s.charAt(i) == 'v') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'W' || s.charAt(i) == 'w') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'X' || s.charAt(i) == 'x') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'Y' ||\
    \ s.charAt(i) == 'y') {\n                count++;\n            }\n           \
    \ if (", "        long count = 0;\n        for(int i = 0; i < s.length(); i++)\
    \ {\n            if(s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) ==\
    \ 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                count++;\n\
    \            }\n        }\n        return count;", "        long countUpper =\
    \ 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2 ==\
    \ 0) {\n                if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i)\
    \ == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                    countUpper++;\n\
    \                }\n            }\n        }\n        return countUpper;", " \
    \       long countUpper = 0;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I'\
    \ || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                countUpper++;\n\
    \            }\n        }\n        return countUpper;", "        long vowelCount\
    \ = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'U') {\n                vowelCount++;\n            }\n      \
    \  }\n        return vowelCount;", "        long vowelCount = 0;\n        for(int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if(Character.isUpperCase(c)) {\n                if(i%2 == 0) {\n         \
    \           vowelCount++;\n                }\n            }\n        }\n     \
    \   return vowelCount;", "        long vowelCount = 0;\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            if (s.charAt(i) == 'a' || s.charAt(i) ==\
    \ 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u')\n   \
    \             vowelCount++;\n        }\n        return vowelCount;", "       \
    \ long vowelCount = 0;\n        for (int i = 0; i < s.length(); i++) {\n     \
    \       if (s.charAt(i) == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n                vowelCount++;\n\
    \            }\n        }\n        return vowelCount;", "        long vowelCount\
    \ = 0;\n        for(int i = 0; i < s.length(); i++) {\n            if(s.charAt(i)\
    \ == 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'U') {\n                vowelCount++;\n            }\n      \
    \  }\n        return vowelCount;", "        long vowelCount = 0;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 'a' || s.charAt(i)\
    \ == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n\
    \                vowelCount++;\n            }\n        }\n        return vowelCount;",
  "        long count = 0;\n        for (int i = 0; i < s.length(); i++) {\n     \
    \       if (s.charAt(i) == 'A' || s.charAt(i) == 'a') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'B' || s.charAt(i) == 'b') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'C' ||\
    \ s.charAt(i) == 'c') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'D' || s.charAt(i) == 'd') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'E' || s.charAt(i) == 'e') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'F' ||\
    \ s.charAt(i) == 'f') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'G' || s.charAt(i) == 'g') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'H' || s.charAt(i) == 'h') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'I' ||\
    \ s.charAt(i) == 'i') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'J' || s.charAt(i) == 'j') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'K' || s.charAt(i) == 'k') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'L' ||\
    \ s.charAt(i) == 'l') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'M' || s.charAt(i) == 'm') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'N' || s.charAt(i) == 'n') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'O' ||\
    \ s.charAt(i) == 'o') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'P' || s.charAt(i) == 'p') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'Q' || s.charAt(i) == 'q') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'R' ||\
    \ s.charAt(i) == 'r') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'S' || s.charAt(i) == 's') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'T' || s.charAt(i) == 't') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'U' ||\
    \ s.charAt(i) == 'u') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'V' || s.charAt(i) == 'v') {\n                count++;\n\
    \            }\n            if (s.charAt(i) == 'W' || s.charAt(i) == 'w') {\n\
    \                count++;\n            }\n            if (s.charAt(i) == 'X' ||\
    \ s.charAt(i) == 'x') {\n                count++;\n            }\n           \
    \ if (s.charAt(i) == 'Y' || s.charAt(i) == 'y') {\n                count++;\n\
    \            }\n            if (", "        long countUpper = 0;\n        for(int\
    \ i = 0; i < s.length(); i++) {\n            if(s.charAt(i) == 'A' || s.charAt(i)\
    \ == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n\
    \                countUpper += 1;\n            }\n        }\n        return countUpper;",
  "        long countUpper = 0;\n        for(int i = 0; i < s.length(); i++) {\n \
    \           if(s.charAt(i) == 'A' || s.charAt(i) == 'a') {\n                countUpper\
    \ += 1;\n            }\n        }\n        return countUpper;", "        long\
    \ vowelCount = 0;\n        for (int i = 0; i < s.length(); i++) {\n          \
    \  if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'o' || s.charAt(i) == 'u') {\n                vowelCount++;\n           \
    \ }\n        }\n        return vowelCount;", "        long vowelCount = 0;\n \
    \       for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) ==\
    \ 'A' || s.charAt(i) == 'E' || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i)\
    \ == 'U') {\n                vowelCount++;\n            }\n        }\n       \
    \ return vowelCount;", "        long vowelCount = 0;\n        for(int i = 0; i\
    \ < s.length(); i++) {\n            if(s.charAt(i) == 'A' || s.charAt(i) == 'E'\
    \ || s.charAt(i) == 'I' || s.charAt(i) == 'O' || s.charAt(i) == 'U') {\n     \
    \           vowelCount++;\n            }\n        }\n        return vowelCount;"]
stop_tokens:
- "\n    }\n"

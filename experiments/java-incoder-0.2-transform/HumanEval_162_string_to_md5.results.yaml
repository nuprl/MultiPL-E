language: java
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes);\n            byte[] md5Bytes = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzqhrm6ed.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : md5Bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            throw new RuntimeException(e);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70wxrm98.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes);\n            byte[] md5Bytes = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_x_cu7g.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            throw new RuntimeException(e);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm9c5ssc4.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq1hujaor.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        byte[] md5Bytes = digest.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ md5Bytes.length; i++) {\n            sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpajn44pse.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < bytes.length; i++) {\n                sb.append(Integer.toHexString((bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe0qgh6nm.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dfxut7u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06r4x3yb.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprr2ebapy.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dfxut7u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xp04pyo.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xFF));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq27y9gc9.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3zx3aqer.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpor044zij.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23_mw_br.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(String::md5).map(String::toString).map(s\
    \ -> s.substring(0, 8));\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp93dk6nsj.java:14: error: invalid method reference\n        return\
    \ Optional.ofNullable(text).map(String::md5).map(String::toString).map(s -> s.substring(0,\
    \ 8));\n                                             ^\n  cannot find symbol\n\
    \    symbol:   method md5()\n    location: class String\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes();\n            digest.update(bytes);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidnzpm91.java:32)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5 = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (int i = 0; i < md5.length; i++) {\n     \
    \           sb.append(Integer.toHexString((md5[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpciaw8qvc.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes);\n            byte[] md5 = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptqxbu687.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpir0i5mtz.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = null;\n        try {\n            digest = MessageDigest.getInstance(\"MD5\"\
    );\n        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n        byte[] bytes = text.getBytes();\n        digest.update(bytes);\n\
    \        byte[] md5Bytes = digest.digest();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < md5Bytes.length; i++) {\n            sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnee9f_vv.java:30: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlsfll07.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, bytes)));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpji2uyx62.java:26)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqagrvlyz.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n                md.update(s.getBytes());\n                byte[] digest\
    \ = md.digest();\n                StringBuilder sb = new StringBuilder();\n  \
    \              for (byte b : digest) {\n                    sb.append(String.format(\"\
    %02x\", b));\n                }\n                return sb.toString();\n     \
    \       } catch (NoSuchAlgorithmException e) {\n                throw new RuntimeException(e);\n\
    \            }\n        });\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qjuy8qz.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes();\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0h17yau.java:32)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nyih39z.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n                md.update(s.getBytes());\n                byte[] digest\
    \ = md.digest();\n                StringBuilder sb = new StringBuilder();\n  \
    \              for (int i = 0; i < digest.length; i++) {\n                   \
    \ sb.append(Integer.toHexString((digest[i] & 0xFF) | 0x100).substring(1, 3));\n\
    \                }\n                return sb.toString();\n            } catch\
    \ (NoSuchAlgorithmException e) {\n                throw new RuntimeException(e);\n\
    \            }\n        });\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1kpalk2.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            throw new RuntimeException(e);\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp963pbrqk.java:32)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(new String(sb.toString().getBytes(),\
    \ \"UTF-8\"));\n        } catch (NoSuchAlgorithmException e) {\n            throw\
    \ new RuntimeException(e);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpimyic1y1.java:24: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            return Optional.of(new\
    \ String(sb.toString().getBytes(), \"UTF-8\"));\n                            \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes, 0, bytes.length);\n            byte[] md5Bytes\
    \ = digest.digest();\n            StringBuilder sb = new StringBuilder();\n  \
    \          for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv3ldkxtw.java:32)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(String::md5).map(String::toString).map(String::trim).map(String::toLowerCase).map(String::replaceAll(\"\
    \\\\s+\", \"\")).map(String::replaceAll(\"[^\\\\w]\", \"\")).map(String::replaceAll(\"\
    [\\\\w]\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkio8yv2h.java:14: error: ')' expected\n        return Optional.ofNullable(text).map(String::md5).map(String::toString).map(String::trim).map(String::toLowerCase).map(String::replaceAll(\"\
    \\\\s+\", \"\")).map(String::replaceAll(\"[^\\\\w]\", \"\")).map(String::replaceAll(\"\
    [\\\\w]\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).map(String::replaceAll(\"\
    \\\\w\", \"\")).map(String::replaceAll(\"\\\\W\", \"\")).\n                  \
    \                                                                            \
    \                                                   ^\n/tmp/tmpkio8yv2h.java:14:\
    \ error: ')' expected"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dfxut7u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xFF));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq27y9gc9.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes, 0, bytes.length);\n            byte[] md5Bytes\
    \ = digest.digest();\n            StringBuilder sb = new StringBuilder();\n  \
    \          for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41ij8ke2.java:32)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        byte[] hash = digest.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (byte b : hash)\
    \ {\n            sb.append(String.format(\"%02x\", b));\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_zhe53ti.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplymv956.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes);\n            byte[] md5Bytes = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3lsijh1.java:32)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes);\n            byte[] md5Bytes = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_x_cu7g.java:32)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes);\n            byte[] md5Bytes = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString(md5Bytes[i]\
    \ & 0xFF));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp62jl4txc.java:32)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        byte[] md5Bytes = digest.digest();\n\
    \        StringBuilder md5StringBuilder = new StringBuilder();\n        for (byte\
    \ b : md5Bytes) {\n            md5StringBuilder.append(String.format(\"%02x\"\
    , b));\n        }\n        return Optional.of(md5StringBuilder.toString());\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgpve8qie.java:17: error: unreported exception NoSuchAlgorithmException;\
    \ must be caught or declared to be thrown\n        MessageDigest digest = MessageDigest.getInstance(\"\
    MD5\");\n                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23_mw_br.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        MessageDigest md5\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        md5.update(bytes, 0, bytes.length);\n        byte[] md5Bytes = md5.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ md5Bytes.length; i++) {\n            sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ejlki8_.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(bytesToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7uvznwu6.java:20: error: cannot find symbol\n            return\
    \ Optional.of(bytesToHexString(bytes));\n                               ^\n  symbol:\
    \   method bytesToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk13rqdt6.java:31)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsntis8zz.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xFF));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldl0q8c3.java:31)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(new String(Hex.encodeHex(bytes)));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeixmk3g9.java:20: error: cannot find symbol\n            return\
    \ Optional.of(new String(Hex.encodeHex(bytes)));\n                           \
    \               ^\n  symbol:   variable Hex\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString()));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg31fqd70.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, bytes)));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4f0z65tp.java:26)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes();\n            digest.update(bytes);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidnzpm91.java:32)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        MessageDigest md\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = md.digest(text.getBytes());\n\
    \        StringBuilder sb = new StringBuilder();\n        for (byte b : bytes)\
    \ {\n            sb.append(Integer.toHexString(b & 0xff));\n        }\n      \
    \  return sb.toString();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsmnib0mo.java:23: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, bytes)));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ua5gpyu.java:26)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xFF));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1j_n503.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppbd1xq5g.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5 = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (int i = 0; i < md5.length; i++) {\n     \
    \           sb.append(Integer.toHexString((md5[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5b8koqc7.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlsfll07.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dfxut7u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n        byte[] bytes = md.digest(text.getBytes());\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (byte b : bytes) {\n            sb.append(Integer.toHexString(b\
    \ & 0xff));\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpml5j7rm4.java:23: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n                md.update(s.getBytes());\n                return new\
    \ String(md.digest());\n            } catch (NoSuchAlgorithmException e) {\n \
    \               throw new RuntimeException(e);\n            }\n        });\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k0pi54o.java:25)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nyih39z.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgv8vxxs2.java:31)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n                md.update(s.getBytes());\n                byte[] digest\
    \ = md.digest();\n                StringBuilder sb = new StringBuilder();\n  \
    \              for (int i = 0; i < digest.length; i++) {\n                   \
    \ sb.append(Integer.toHexString((digest[i] & 0xFF) | 0x100).substring(1,3));\n\
    \                }\n                return sb.toString();\n            } catch\
    \ (NoSuchAlgorithmException e) {\n                throw new RuntimeException(e);\n\
    \            }\n        });\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgi_qqz3q.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dfxut7u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprr2ebapy.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprr2ebapy.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        byte[] md5Bytes = digest.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ md5Bytes.length; i++) {\n            sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpajn44pse.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nyih39z.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nyih39z.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xFF));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpazly_bz5.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlsfll07.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n                md.update(s.getBytes());\n                byte[] digest\
    \ = md.digest();\n                StringBuilder sb = new StringBuilder();\n  \
    \              for (int i = 0; i < digest.length; i++) {\n                   \
    \ sb.append(Integer.toHexString((digest[i] & 0xFF) | 0x100).substring(1,3));\n\
    \                }\n                return sb.toString();\n            } catch\
    \ (NoSuchAlgorithmException e) {\n                throw new RuntimeException(e);\n\
    \            }\n        });\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgi_qqz3q.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString()));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg31fqd70.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest digest = MessageDigest.getInstance(\"\
    MD5\");\n                byte[] bytes = s.getBytes(\"UTF-8\");\n             \
    \   digest.update(bytes, 0, bytes.length);\n                byte[] md5Bytes =\
    \ digest.digest();\n                StringBuilder sb = new StringBuilder();\n\
    \                for (int i = 0; i < md5Bytes.length; i++) {\n               \
    \     sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,\
    \ 3));\n                }\n                return sb.toString();\n           \
    \ } catch (NoSuchAlgorithmException e) {\n                throw new RuntimeException(e);\n\
    \            }\n        });\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpom74xiia.java:17: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n                byte[] bytes = s.getBytes(\"\
    UTF-8\");\n                                         ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb);\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf8j7pgrs.java:24: error: incompatible types: inference variable\
    \ T has incompatible bounds\n            return Optional.of(sb);\n           \
    \                   ^\n    equality constraints: String\n    lower bounds: StringBuilder\n\
    \  where T is a type-variable:\n    T extends Object declared in method <T>of(T)\n\
    1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(new String(sb.toString()));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptvq4_dlp.java:30)\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23_mw_br.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppbd1xq5g.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplymv956.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsntis8zz.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3kgnamp3.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dfxut7u.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nyih39z.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlsfll07.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toString((md5Bytes[i] & 0xff) + 0x100,\
    \ 16).substring(1));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4a3qbo6q.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString()));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg31fqd70.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xp04pyo.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(s\
    \ -> {\n            try {\n                MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n                md.update(s.getBytes());\n                byte[] digest\
    \ = md.digest();\n                StringBuilder sb = new StringBuilder();\n  \
    \              for (int i = 0; i < digest.length; i++) {\n                   \
    \ sb.append(Integer.toHexString((digest[i] & 0xFF) | 0x100).substring(1,3));\n\
    \                }\n                return sb.toString();\n            } catch\
    \ (NoSuchAlgorithmException e) {\n                throw new RuntimeException(e);\n\
    \            }\n        });\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgi_qqz3q.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = digest.digest(text.getBytes());\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xFF));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp698wbd7x.java:30)\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xp04pyo.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq1hujaor.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23_mw_br.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes);\n        byte[] md5Bytes = digest.digest();\n \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < md5Bytes.length;\
    \ i++) {\n            sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,\
    \ 3));\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfbympu6e.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, bytes)));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpji2uyx62.java:26)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes);\n        byte[] md5Bytes = digest.digest();\n \
    \       StringBuilder md5StringBuilder = new StringBuilder();\n        for (byte\
    \ b : md5Bytes) {\n            md5StringBuilder.append(Integer.toHexString(b &\
    \ 0xff));\n        }\n        return Optional.of(md5StringBuilder.toString());\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmploq9t78h.java:17: error: unreported exception NoSuchAlgorithmException;\
    \ must be caught or declared to be thrown\n        MessageDigest digest = MessageDigest.getInstance(\"\
    MD5\");\n                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        byte[] md5 = digest.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ md5.length; i++) {\n            sb.append(Integer.toHexString((md5[i] & 0xFF)\
    \ | 0x100).substring(1,3));\n        }\n        return sb.toString();\n    }\n\
    \    public static void main(String[] args) {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo6bqfah5.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23_mw_br.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpor044zij.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsntis8zz.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(String::md5).map(String::toString);\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5229g81o.java:14: error: invalid method reference\n        return\
    \ Optional.ofNullable(text).map(String::md5).map(String::toString);\n        \
    \                                     ^\n  cannot find symbol\n    symbol:   method\
    \ md5()\n    location: class String\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(new String(sb.toString()));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptvq4_dlp.java:30)\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest md5 =\
    \ MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        md5.update(bytes, 0, bytes.length);\n        byte[] md5Bytes = md5.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ md5Bytes.length; i++) {\n            sb.append(Integer.toString((md5Bytes[i]\
    \ & 0xff) + 0x100, 16).substring(1));\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptb9xui5k.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < bytes.length; i++) {\n                sb.append(Integer.toHexString((bytes[i]\
    \ & 0xff) + 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdgl8op8j.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(new String(sb));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7pnwe4fa.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprr2ebapy.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xFF));\n            }\n            return Optional.of(new String(sb.toString()));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3zgsicfl.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes);\n     \
    \       byte[] md5Bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++) {\n\
    \                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0zh_y9d7.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes);\n     \
    \       byte[] md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdwhkpvsb.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpir0i5mtz.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpir0i5mtz.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes);\n     \
    \       byte[] md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp04do3cgy.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplymv956.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppbd1xq5g.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_cgl8fx.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString().getBytes()));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjo60l269.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5Bytes = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : md5Bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjwwxdvdp.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798719
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n            byte[]\
    \ md5 = digest.digest();\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < md5.length; i++) {\n                sb.append(Integer.toHexString((md5[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5xp04pyo.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5Bytes = digest.digest();\n            StringBuilder sb\
    \ = new StringBuilder();\n            for (int i = 0; i < md5Bytes.length; i++)\
    \ {\n                sb.append(Integer.toString((md5Bytes[i] & 0xff) + 0x100,\
    \ 16).substring(1));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptr1me98i.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < bytes.length; i++) {\n                sb.append(Integer.toHexString((bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvjxpvn40.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (int i = 0; i < bytes.length; i++) {\n   \
    \             sb.append(Integer.toHexString((bytes[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz9w921d4.java:31)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes);\n        byte[] md5Bytes = digest.digest();\n \
    \       StringBuilder sb = new StringBuilder();\n        for (byte b : md5Bytes)\
    \ {\n            sb.append(String.format(\"%02x\", b));\n        }\n        return\
    \ sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpaxyzfrq3.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        return Optional.of(new\
    \ String(digest.digest()));\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp54sajs3c.java:17: error: unreported exception NoSuchAlgorithmException;\
    \ must be caught or declared to be thrown\n        MessageDigest digest = MessageDigest.getInstance(\"\
    MD5\");\n                                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc6hljldl.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpir0i5mtz.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < bytes.length; i++) {\n                sb.append(Integer.toHexString((bytes[i]\
    \ & 0xff) + 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi84hn22a.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehni6elu.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = text.getBytes(\"UTF-8\");\n            digest.update(bytes, 0, bytes.length);\n\
    \            byte[] md5 = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (int i = 0; i < md5.length; i++) {\n     \
    \           sb.append(Integer.toHexString((md5[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpciaw8qvc.java:19: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            byte[] bytes = text.getBytes(\"\
    UTF-8\");\n                                        ^\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString()));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg31fqd70.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n        byte[] bytes = text.getBytes();\n\
    \        digest.update(bytes, 0, bytes.length);\n        byte[] md5Bytes = digest.digest();\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ md5Bytes.length; i++) {\n            sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1,3));\n        }\n        return sb.toString();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpusswamqb.java:25: error: incompatible types: String cannot be converted\
    \ to Optional<String>\n        return sb.toString();\n                       \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] bytes = digest.digest();\n            StringBuilder sb = new\
    \ StringBuilder();\n            for (byte b : bytes) {\n                sb.append(Integer.toHexString(b\
    \ & 0xff));\n            }\n            return Optional.of(sb.toString());\n \
    \       } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39kvq5co.java:31)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString()));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmeyxf6vf.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2_r8uu4.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(new String(sb.toString().getBytes(), \"\
    UTF-8\"));\n        } catch (NoSuchAlgorithmException e) {\n            throw\
    \ new RuntimeException(e);\n        }\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwzb7hwoo.java:24: error: unreported exception UnsupportedEncodingException;\
    \ must be caught or declared to be thrown\n            return Optional.of(new\
    \ String(sb.toString().getBytes(), \"UTF-8\"));\n                            \
    \   ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphzvne58_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(byteToHexString(bytes));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprlsfll07.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798716
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplymv956.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        return Optional.ofNullable(text).map(String::md5).orElse(null);\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprq27wxee.java:14: error: invalid method reference\n        return\
    \ Optional.ofNullable(text).map(String::md5).orElse(null);\n                 \
    \                            ^\n  cannot find symbol\n    symbol:   method md5()\n\
    \    location: class String\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(String.format(\"%02x\", b));\n       \
    \     }\n            return Optional.of(sb);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplxepl7nz.java:24: error: incompatible types: inference variable\
    \ T has incompatible bounds\n            return Optional.of(sb);\n           \
    \                   ^\n    equality constraints: String\n    lower bounds: StringBuilder\n\
    \  where T is a type-variable:\n    T extends Object declared in method <T>of(T)\n\
    1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = text.getBytes();\n\
    \            digest.update(bytes);\n            byte[] md5Bytes = digest.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < md5Bytes.length; i++) {\n                sb.append(Integer.toHexString((md5Bytes[i]\
    \ & 0xFF) | 0x100).substring(1, 3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3lsijh1.java:32)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, bytes)));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyryywegs.java:21: error: exception UnsupportedEncodingException\
    \ is never thrown in body of corresponding try statement\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n                                      \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xFF));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1j_n503.java:30)\n"
  stdout: ''
  timestamp: 1659798718
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xff));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjeu04pv.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : bytes) {\n                sb.append(Integer.toHexString(b & 0xFF));\n    \
    \        }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq27y9gc9.java:30)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ 0; i < bytes.length; i++) {\n                sb.append(Integer.toHexString((bytes[i]\
    \ & 0xff) + 0x100).substring(1,3));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi84hn22a.java:30)\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(bytesToHex(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsyz7dc8w.java:20: error: cannot find symbol\n            return\
    \ Optional.of(bytesToHex(bytes));\n                               ^\n  symbol:\
    \   method bytesToHex(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798720
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy3w8a45_.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            return Optional.of(byteToHexString(bytes));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpplymv956.java:20: error: cannot find symbol\n            return\
    \ Optional.of(byteToHexString(bytes));\n                               ^\n  symbol:\
    \   method byteToHexString(byte[])\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            StringBuilder sb = new StringBuilder();\n\
    \            for (byte b : bytes) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23_mw_br.java:30)\n"
  stdout: ''
  timestamp: 1659798717
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text == null || text.isEmpty())\
    \ {\n            return Optional.empty();\n        }\n        try {\n        \
    \    MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ bytes = md.digest(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, bytes)));\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2hs6dcq0.java:21: error: exception UnsupportedEncodingException\
    \ is never thrown in body of corresponding try statement\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n                                      \
    \      ^\n1 error\n"
  stdout: ''
  timestamp: 1659798720

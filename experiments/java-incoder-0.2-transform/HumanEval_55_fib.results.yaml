language: java
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1) {\n\
    \            return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        long a = fib((n - 1l));\n        long b =\
    \ fib((n - 2l));\n        return a + b;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        else\n            return fib(n - 1) + fib(n - 2);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n-1l) + fib(n-2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9q8_q2w.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n-1l) + fib(n-2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9q8_q2w.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n == 0 || n == 1) {\n\
    \            return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp40el6w07.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n - 1) + fib(n - 2);\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n-1l) + fib(n-2l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) {\n      \
    \      return n;\n        }\n        return fib(n-1l) + fib(n-2l);\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l) return 1l;\n\
    \        return fib(n - 1l) + fib(n - 2l);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n\
    \    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l))\
    \ == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp40el6w07.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    public static long fib(long n) {\n        if (n <= 1l)\n        \
    \    return n;\n        else\n            return fib(n - 1) + fib(n - 2);\n  \
    \  }\n    public static void main(String[] args) {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''

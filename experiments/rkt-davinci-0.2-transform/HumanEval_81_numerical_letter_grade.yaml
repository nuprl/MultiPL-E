name: HumanEval_81_numerical_letter_grade
language: rkt
prompt: "#lang racket\n\n;; It is the last week of the semester and the teacher has\
  \ to give the grades\n;; to students. The teacher has been making her own algorithm\
  \ for grading.\n;; The only problem is, she has lost the code she used for grading.\n\
  ;; She has given you a list of GPAs for some students and you have to write \n;;\
  \ a function that can output a list of letter grades using the following table:\n\
  ;; GPA       |    Letter grade\n;; 4.0                A+\n;; > 3.7             \
  \   A \n;; > 3.3                A- \n;; > 3.0                B+\n;; > 2.7      \
  \          B \n;; > 2.3                B-\n;; > 2.0                C+\n;; > 1.7\
  \                C\n;; > 1.3                C-\n;; > 1.0                D+ \n;;\
  \ > 0.7                D \n;; > 0.0                D-\n;; 0.0                E\n\
  ;; Example:\n;; >>> (grade_equation (list 4.0 3 1.7 2 3.5))\n;; (list \"A+\" \"\
  B\" \"C-\" \"C\" \"A-\")\n(define (numerical_letter_grade grades)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
  \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
  \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal?\
  \ (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0))\
  \ (list \"E\"))\n    (check-equal? (candidate (list 1.0 0.3 1.5 2.8 3.3)) (list\
  \ \"D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0.0 0.7))\
  \ (list \"E\" \"D-\"))\n))\n\n(test-humaneval)"
completions: ["  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n  \
    \             [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n\
    \               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"\
    ]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"\
    ]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"\
    ]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"\
    ]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n   \
    \    grades))\n", "  (map (lambda (x)\n         (cond\n           [(>= x 4.0)\
    \ \"A+\"]\n           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n   \
    \        [(>= x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x\
    \ 2.3) \"B-\"]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n\
    \           [(>= x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>=\
    \ x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n\
    \       grades))\n", "  (map (lambda (x)\n         (cond\n           [(>= x 4.0)\
    \ \"A+\"]\n           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n   \
    \        [(>= x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x\
    \ 2.3) \"B-\"]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n\
    \           [(>= x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>=\
    \ x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n\
    \       grades))\n", "  (cond [(empty? grades) empty]\n        [(> (first grades)\
    \ 3.7) (cons \"A+\" (numerical_letter_grade (rest grades)))]\n        [(> (first\
    \ grades) 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n        [(>\
    \ (first grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \        [(> (first grades) -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n", "  (cond\n\
    \    [(empty? grades) empty]\n    [(< (first grades) 4.0) (cons \"A+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 3.7) (cons \"A\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 3.0) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 2.0) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 1.0) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 0.7) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 0.0) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(< (first grades) 0.0) (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]))\n", "  (map\n   (lambda (grade)\n     (cond\n       [(>=\
    \ grade 4.0) \"A+\"]\n       [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"\
    A-\"]\n       [(>= grade 3.0) \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>=\
    \ grade 2.3) \"B-\"]\n       [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"\
    C\"]\n       [(>= grade 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>=\
    \ grade 0.7) \"D\"]\n       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n \
    \  grades))\n", "  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"\
    A+\"]\n           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n       \
    \    [(>= x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3)\
    \ \"B-\"]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n   \
    \        [(>= x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>=\
    \ x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n\
    \           [else \"F\"]))\n       grades))\n", "  (map (lambda (x)\n        \
    \ (cond\n           [(>= x 4.0) \"A+\"]\n           [(>= x 3.7) \"A\"]\n     \
    \      [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"B+\"]\n           [(>= x\
    \ 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n           [(>= x 2.0) \"C+\"]\n\
    \           [(>= x 1.7) \"C\"]\n           [(>= x 1.3) \"C-\"]\n           [(>=\
    \ x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"\
    ]\n           [(= x 0.0) \"E\"]\n           [else \"F\"]))\n       grades))\n",
  "  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n          \
    \ [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"\
    B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n       \
    \    [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x 1.3)\
    \ \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n   \
    \        [(>= x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n",
  "  (map (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n          \
    \ [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"\
    B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n       \
    \    [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x 1.3)\
    \ \"C-\"]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n   \
    \        [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]))\n       grades))\n",
  "  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n  \
    \         [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n       \
    \    [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n           [(>=\
    \ grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>= grade\
    \ 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0)\
    \ \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"\
    ]\n           [else \"E\"]))\n       grades))\n", "  (map (lambda (grade)\n  \
    \       (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>= grade 3.7)\
    \ \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade 3.0) \"B+\"\
    ]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3) \"B-\"]\n   \
    \        [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"]\n        \
    \   [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n           [(>=\
    \ grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n           [else \"E\"\
    ]))\n       grades))\n", "  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\"\
    )\n               ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n   \
    \            ((>= x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n        \
    \       ((>= x 2.3) \"B-\")\n               ((>= x 2.0) \"C+\")\n            \
    \   ((>= x 1.7) \"C\")\n               ((>= x 1.3) \"C-\")\n               ((>=\
    \ x 1.0) \"D+\")\n               ((>= x 0.7) \"D\")\n               ((>= x 0.0)\
    \ \"D-\")\n               (else \"E\")))\n       grades))\n", "  (map (lambda\
    \ (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n           [(>= x 3.7)\
    \ \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"B+\"]\n   \
    \        [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n           [(>= x\
    \ 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x 1.3) \"C-\"]\n\
    \           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n           [(>=\
    \ x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n", "  (map\
    \ (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n      \
    \     [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>=\
    \ grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade\
    \ 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7)\
    \ \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"\
    ]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n   \
    \        [else \"E\"]))\n       grades))\n", "  (cond\n    [(empty? grades) empty]\n\
    \    [(> (first grades) 3.7) (cons \"A+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n\
    \    [(> (first grades) 0.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n\
    \    [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n", "  (map\
    \ (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n           [(>=\
    \ x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"B+\"\
    ]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n           [(>=\
    \ x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x 1.3) \"C-\"\
    ]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n           [(>=\
    \ x 0.0) \"D-\"]\n           [(>= x 0.0) \"E\"]))\n       grades))\n", "  (map\
    \ (lambda (x)\n         (cond\n           [(>= x 4.0) \"A+\"]\n           [(>=\
    \ x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"B+\"\
    ]\n           [(>= x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n           [(>=\
    \ x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"]\n           [(>= x 1.3) \"C-\"\
    ]\n           [(>= x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n           [(>=\
    \ x 0.0) \"D-\"]\n           [(= x 0.0) \"E\"]\n           [else \"Error\"]))\n\
    \       grades))\n", "  (cond\n    [(empty? grades) empty]\n    [(> (first grades)\
    \ 3.7) (cons \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.3) (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 3.0) (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.7) (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.3) (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 2.0) (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.7) (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.3) (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 1.0) (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.7) (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ 0.0) (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> (first grades)\
    \ -1.0) (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [else (cons\
    \ \"E\" (numerical_letter_grade (rest grades)))]))\n", "  (cond [(empty? grades)\
    \ empty]\n        [(> (first grades) 3.7) (cons \"A+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 3.3) (cons \"A\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 3.0) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n        [(> (first grades) -0.1) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n        [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

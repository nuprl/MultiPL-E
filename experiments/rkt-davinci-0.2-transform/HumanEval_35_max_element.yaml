name: HumanEval_35_max_element
language: rkt
prompt: "#lang racket\n\n;; Return maximum element in the list.\n;; >>> (max_element\
  \ (list 1 2 3))\n;; 3\n;; >>> (max_element (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
  ;; 123\n(define (max_element l)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate max_element))\n\
  \    (check-equal? (candidate (list 1 2 3)) 3)\n    (check-equal? (candidate (list\
  \ 5 3 -5 2 -3 3 9 0 124 1 -10)) 124)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n   \
    \ [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([max (max_element (rest l))])\n       (if (> (first l) max)\n        \
    \   (first l)\n           max))]))\n", "  (cond\n    [(empty? l) (error \"empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first\
    \ l)]\n    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first\
    \ l) max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(null? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list!\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first\
    \ l)]\n    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first\
    \ l) max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n  \
    \    0\n      (if (null? (cdr l))\n          (car l)\n          (max (car l) (max_element\
    \ (cdr l))))))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n\
    \    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first l)\
    \ max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty? l)\
    \ 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max-rest (max_element\
    \ (rest l))])\n       (if (> (first l) max-rest)\n           (first l)\n     \
    \      max-rest))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l))\
    \ (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n        \
    \  (car l)\n          (if (> (car l) (max_element (cdr l)))\n              (car\
    \ l)\n              (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) (error\
    \ \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else\
    \ (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first\
    \ l)]\n    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first\
    \ l) max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([max (max_element (rest l))])\n       (if (> (first l) max)\n        \
    \   (first l)\n           max))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length\
    \ l) 1) (first l)]\n    [else\n     (let ([max (max_element (rest l))])\n    \
    \   (if (> (first l) max)\n           (first l)\n           max))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n\
    \    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first l)\
    \ max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty? l)\
    \ 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n\
    \    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n\
    \    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first l)\
    \ max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty? l)\
    \ 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max-so-far (max_element\
    \ (rest l))])\n       (if (> (first l) max-so-far)\n           (first l)\n   \
    \        max-so-far))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l)\
    \ 1) (first l)]\n    [else\n     (let ([f (first l)]\n           [r (rest l)])\n\
    \       (if (> f (max_element r))\n           f\n           (max_element r)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([first-element (first l)]\n           [rest-elements (rest l)])\n    \
    \   (if (> first-element (max_element rest-elements))\n           first-element\n\
    \           (max_element rest-elements)))]))\n", "  (if (null? l)\n      0\n \
    \     (if (null? (cdr l))\n          (car l)\n          (let ((max (max_element\
    \ (cdr l))))\n            (if (&gt; (car l) max)\n                (car l)\n  \
    \              max)))))\n</code>\n", "  (cond\n    [(empty? l) (error \"Empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car\
    \ l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n\
    \    [else\n     (let ([first-element (first l)]\n           [rest-elements (rest\
    \ l)])\n       (if (> first-element (max_element rest-elements))\n           first-element\n\
    \           (max_element rest-elements)))]))\n", "  (cond\n    [(null? l) 0]\n\
    \    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([a (first l)]\n\
    \           [b (max_element (rest l))])\n       (if (> a b) a b))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n\
    \    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n\
    \    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first l)\
    \ max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty? l)\
    \ 0]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\"\
    )]\n    [(null? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n         \
    \ (car l)\n          (if (> (car l) (max_element (cdr l)))\n              (car\
    \ l)\n              (max_element (cdr l))))))\n", "  (cond\n    [(null? l) (error\
    \ \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null?\
    \ (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (apply max l))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max_element (rest l))]))\n", "  (if (null? l)\n      0\n   \
    \   (if (null? (cdr l))\n          (car l)\n          (if (> (car l) (max_element\
    \ (cdr l)))\n              (car l)\n              (max_element (cdr l))))))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([max (max_element (rest l))])\n       (if (> (first l) max)\n        \
    \   (first l)\n           max))]))\n", "  (cond\n    [(empty? l) (error \"Empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first\
    \ l)]\n    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first\
    \ l) max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car\
    \ l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(=\
    \ (length l) 1) (first l)]\n    [else\n     (let ([x (first l)]\n           [y\
    \ (first (rest l))])\n       (if (> x y)\n           (max_element (cons x (rest\
    \ (rest l))))\n           (max_element (cons y (rest (rest l))))))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond [(empty? l)\
    \ (error \"Empty list\")]\n        [(empty? (rest l)) (first l)]\n        [else\
    \ (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n\
    \    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element (rest\
    \ l))])\n       (if (> (first l) max)\n           (first l)\n           max))]))\n",
  "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest\
    \ l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max\
    \ (max_element (rest l))])\n       (if (> (first l) max)\n           (first l)\n\
    \           max))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n \
    \   [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n         \
    \ (car l)\n          (if (> (car l) (max_element (cdr l)))\n              (car\
    \ l)\n              (max_element (cdr l))))))\n", "  (cond\n    [(empty? l) 0]\n\
    \    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null?\
    \ l) 0]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n\
    \    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([first-element\
    \ (first l)]\n           [rest-of-list (rest l)])\n       (if (> first-element\
    \ (max_element rest-of-list))\n           first-element\n           (max_element\
    \ rest-of-list)))]))\n", "  (cond\n    [(empty? l) (error \"empty list\")]\n \
    \   [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(= (length l) 1) (first l)]\n\
    \    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first l)\
    \ max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty? l)\
    \ (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(=\
    \ (length l) 1) (first l)]\n    [else\n     (let ([max (max_element (rest l))])\n\
    \       (if (> (first l) max)\n           (first l)\n           max))]))\n", " \
    \ (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(=\
    \ (length l) 1) (first l)]\n    [else\n     (let ([max (max_element (rest l))])\n\
    \       (if (> (first l) max)\n           (first l)\n           max))]))\n", " \
    \ (cond\n    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest\
    \ l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null? l) (error \"\
    Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([first-element\
    \ (first l)]\n           [rest-of-list (rest l)])\n       (if (> first-element\
    \ (max_element rest-of-list))\n           first-element\n           (max_element\
    \ rest-of-list)))]))\n", "  (cond\n    [(null? l) (error \"Empty list\")]\n  \
    \  [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond ((null?\
    \ l) 0)\n        ((null? (cdr l)) (car l))\n        (else (max (car l) (max_element\
    \ (cdr l))))))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n    \
    \      (car l)\n          (if (> (car l) (max_element (cdr l)))\n            \
    \  (car l)\n              (max_element (cdr l))))))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n\
    \    [else (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l)\
    \ (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first\
    \ l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n         \
    \ (car l)\n          (max (car l) (max_element (cdr l))))))\n", "  (cond\n   \
    \ [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n   \
    \ [else (max (first l) (max_element (rest l)))]))\n", "  (cond [(empty? l) 0]\n\
    \        [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) 0]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"List is empty\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max (max_element\
    \ (rest l))])\n       (if (> (first l) max)\n           (first l)\n          \
    \ max))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (if (null? l)\n\
    \      (error \"Empty list\")\n      (if (null? (cdr l))\n          (car l)\n\
    \          (let ([max (max_element (cdr l))])\n            (if (&gt; (car l) max)\n\
    \                (car l)\n                max)))))\n</code>\n", "  (cond\n   \
    \ [(empty? l) (error \"Empty list!\")]\n    [(empty? (rest l)) (first l)]\n  \
    \  [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null? l) (error \"\
    Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (if (null? l)\n      0\n      (if (null? (cdr l))\n    \
    \      (car l)\n          (if (> (car l) (max_element (cdr l)))\n            \
    \  (car l)\n              (max_element (cdr l))))))\n", "  (if (null? l)\n   \
    \   0\n      (if (null? (cdr l))\n          (car l)\n          (max (car l) (max_element\
    \ (cdr l))))))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest\
    \ l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(null? l) (error \"Empty list\")]\n    [(null? (cdr l)) (car l)]\n    [else\
    \ (max (car l) (max_element (cdr l)))]))\n", "  (cond\n    [(empty? l) (error\
    \ \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else\
    \ (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(null? l) 0]\n\
    \    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([max (max_element (rest l))])\n       (if (> (first l) max)\n        \
    \   (first l)\n           max))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length\
    \ l) 1) (first l)]\n    [else\n     (let ([first-element (first l)]\n        \
    \   [rest-of-list (rest l)])\n       (if (> first-element (max_element rest-of-list))\n\
    \           first-element\n           (max_element rest-of-list)))]))\n", "  (cond\n\
    \    [(null? l) 0]\n    [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element\
    \ (cdr l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list!\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(null?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(= (length l) 1) (first\
    \ l)]\n    [else\n     (let ([max (max_element (rest l))])\n       (if (> (first\
    \ l) max)\n           (first l)\n           max))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"max_element: empty list\")]\n    [(empty? (rest l)) (first l)]\n\
    \    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let* ([max (max_element\
    \ (rest l))]\n            [first (first l)])\n       (if (> max first) max first))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([max (max_element (rest l))])\n       (if (> (first l) max)\n        \
    \   (first l)\n           max))]))\n", "  (cond\n    [(empty? l) 0]\n    [(= (length\
    \ l) 1) (first l)]\n    [else\n     (let ([max (max_element (rest l))])\n    \
    \   (if (> (first l) max)\n           (first l)\n           max))]))\n", "  (cond\n\
    \    [(empty? l) (error \"max_element: empty list\")]\n    [(empty? (rest l))\
    \ (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([x\
    \ (first l)]\n           [y (max_element (rest l))])\n       (if (> x y) x y))]))\n",
  "  (cond\n    [(empty? l) (error \"empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"\
    Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (if (null? l)\n      0\n      (let ([max (max_element (cdr\
    \ l))])\n        (if (&gt; (car l) max)\n            (car l)\n            max))))\n\
    </code>\n", "  (foldl (lambda (x y) (if (> x y) x y)) (car l) (cdr l)))\n", " \
    \ (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([a (first l)]\n\
    \           [b (max_element (rest l))])\n       (if (> a b) a b))]))\n", "  (cond\n\
    \    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n     (let ([max\
    \ (max_element (rest l))])\n       (if (> (first l) max)\n           (first l)\n\
    \           max))]))\n", "  (cond\n    [(null? l) (error \"Empty list\")]\n  \
    \  [(null? (cdr l)) (car l)]\n    [else (max (car l) (max_element (cdr l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([max (max_element (rest l))])\n       (if (> (first l) max)\n        \
    \   (first l)\n           max))]))\n", "  (cond\n    [(empty? l) (error \"Empty\
    \ list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element\
    \ (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty? (rest l)) (first\
    \ l)]\n    [else (max (first l) (max_element (rest l)))]))\n", "  (cond\n    [(empty?\
    \ l) (error \"Empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max\
    \ (first l) (max_element (rest l)))]))\n", "  (cond [(empty? l) (error \"empty\
    \ list\")]\n        [(empty? (rest l)) (first l)]\n        [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"max_element:\
    \ empty list\")]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l)\
    \ (max_element (rest l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\"\
    )]\n    [(empty? (rest l)) (first l)]\n    [else (max (first l) (max_element (rest\
    \ l)))]))\n", "  (cond\n    [(empty? l) (error \"Empty list\")]\n    [(empty?\
    \ (rest l)) (first l)]\n    [else (max (first l) (max_element (rest l)))]))\n",
  "  (cond\n    [(empty? l) 0]\n    [(= (length l) 1) (first l)]\n    [else\n    \
    \ (let ([first-element (first l)]\n           [rest-of-list (rest l)])\n     \
    \  (if (> first-element (max_element rest-of-list))\n           first-element\n\
    \           (max_element rest-of-list)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

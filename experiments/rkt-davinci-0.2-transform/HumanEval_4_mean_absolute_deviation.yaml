name: HumanEval_4_mean_absolute_deviation
language: rkt
prompt: "#lang racket\n\n;; For a given list of input numbers, calculate Mean Absolute\
  \ Deviation\n;; around the mean of this dataset.\n;; Mean Absolute Deviation is\
  \ the average absolute difference between each\n;; element and a centerpoint (mean\
  \ in this case):\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation\
  \ (list 1.0 2.0 3.0 4.0))\n;; 1.0\n(define (mean_absolute_deviation numbers)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate mean_absolute_deviation))\n\
  \    (check-equal? (candidate (list 1.0 2.0)) 0.5)\n    (check-equal? (candidate\
  \ (list 1.0 2.0 3.0 4.0)) 1.0)\n    (check-equal? (candidate (list 1.0 2.0 3.0 4.0\
  \ 5.0)) 1.2)\n))\n\n(test-humaneval)"
completions: ["  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define mean (mean numbers))\n  (define absolute-differences\
    \ (map (lambda (x) (abs (- x mean))) numbers))\n  (mean absolute-differences))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-deviation number)\n    (abs (- number (mean numbers))))\n  (define\
    \ (absolute-deviations numbers)\n    (map absolute-deviation numbers))\n  (/ (apply\
    \ + (absolute-deviations numbers)) (length numbers)))\n", "  (define mean (mean\
    \ numbers))\n  (define diffs (map (lambda (x) (abs (- x mean))) numbers))\n  (mean\
    \ diffs))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-deviation-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-deviations-from-mean\
    \ numbers)\n    (map absolute-deviation-from-mean numbers))\n  (define (mean-absolute-deviation\
    \ numbers)\n    (/ (apply + (absolute-deviations-from-mean numbers))\n       (length\
    \ numbers)))\n  (mean-absolute-deviation numbers))\n", "  (define (absolute-difference\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (mean (map absolute-difference numbers)))\n", "  (define\
    \ mean (mean numbers))\n  (define absolute-differences (map (lambda (x) (abs (-\
    \ x mean))) numbers))\n  (mean absolute-differences))\n", "  (define (mean_absolute_deviation_iter\
    \ numbers sum count)\n    (if (null? numbers)\n        (/ sum count)\n       \
    \ (mean_absolute_deviation_iter (cdr numbers)\n                              \
    \        (+ sum (abs (- (car numbers) (/ sum count))))\n                     \
    \                 (+ count 1))))\n  (mean_absolute_deviation_iter numbers 0 0))\n",
  "  (define (mean-of-numbers numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-deviation-from-mean number)\n    (abs (- number (mean-of-numbers\
    \ numbers))))\n  (define (absolute-deviations-from-mean numbers)\n    (map absolute-deviation-from-mean\
    \ numbers))\n  (define (mean-of-absolute-deviations numbers)\n    (/ (apply +\
    \ (absolute-deviations-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-deviations\
    \ numbers))\n", "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n   \
    \     (- (mean numbers) x)\n        (- x (mean numbers))))\n  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (abs-diffs numbers)\n\
    \    (map abs-diff numbers))\n  (/ (apply + (abs-diffs numbers)) (length numbers)))\n",
  "  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n\
    \        (- x (mean numbers))))\n  (define (abs-diff-list lst)\n    (if (null?\
    \ lst)\n        '()\n        (cons (abs-diff (car lst)) (abs-diff-list (cdr lst)))))\n\
    \  (define (mean-abs-diff lst)\n    (/ (sum (abs-diff-list lst)) (length lst)))\n\
    \  (mean-abs-diff numbers))\n</code>\n", "  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference number)\n\
    \    (abs (- number (average numbers))))\n  (define (absolute-differences numbers)\n\
    \    (map absolute-difference numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences numbers)) (length numbers)))\n\
    \  (mean-absolute-differences numbers))\n", "  (define (mean numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean_absolute_deviation_helper numbers sum mean)\n    (if (null? numbers)\n\
    \        (/ sum (length numbers))\n        (mean_absolute_deviation_helper (cdr\
    \ numbers)\n                                        (+ sum (abs (- (car numbers)\
    \ mean)))\n                                        mean)))\n  (mean_absolute_deviation_helper\
    \ numbers 0 (/ (apply + numbers) (length numbers))))\n", "  (let ([mean (mean\
    \ numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (absolute-value\
    \ x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (mean-absolute-deviation-helper\
    \ numbers sum count)\n    (if (null? numbers)\n        (/ sum count)\n       \
    \ (mean-absolute-deviation-helper (cdr numbers)\n                            \
    \            (+ sum (absolute-value (- (car numbers) (/ sum count))))\n      \
    \                                  (+ count 1))))\n  (mean-absolute-deviation-helper\
    \ numbers 0 0))\n", "  (define (abs-diff x)\n    (if (< x (mean numbers))\n  \
    \      (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map abs-diff\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (deviations lst)\n    (map (lambda (x) (abs (- x (mean lst)))) lst))\n  (define\
    \ (average lst)\n    (/ (sum lst) (length lst)))\n  (average (deviations numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute x)\n    (if (< x 0) (- x) x))\n  (define (deviation x)\n    (absolute\
    \ (- x (mean numbers))))\n  (/ (apply + (map deviation numbers)) (length numbers)))\n",
  "  (define (abs-diff x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (absolute-difference\
    \ x)\n    (absolute (- x (mean numbers))))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (map absolute-difference numbers)))\n",
  "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (abs-diffs numbers)\n    (map abs-diff\
    \ numbers))\n  (/ (apply + (abs-diffs numbers)) (length numbers)))\n", "  (define\
    \ (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n\
    \        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (let ([mean\
    \ (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (define (mean_absolute_deviation_iter numbers sum count)\n    (cond ((null? numbers)\
    \ (/ sum count))\n          (else (mean_absolute_deviation_iter (cdr numbers)\n\
    \                                              (+ sum (abs (- (car numbers) (/\
    \ sum count))))\n                                              (+ count 1)))))\n\
    \  (mean_absolute_deviation_iter numbers 0 0))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (let ([mean\
    \ (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (- x\
    \ mean))) numbers)])\n    (mean deviations)))\n", "  (define (average lst)\n \
    \   (/ (apply + lst) (length lst)))\n  (define (absolute x)\n    (if (< x 0) (-\
    \ x) x))\n  (define (deviation x)\n    (absolute (- x (average numbers))))\n \
    \ (define (deviations lst)\n    (map deviation lst))\n  (define (average-deviations\
    \ lst)\n    (average (deviations lst)))\n  (average-deviations numbers))\n", " \
    \ (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean lst)\n\
    \    (/ (apply + lst) (length lst)))\n  (define (absolute x)\n    (if (< x 0)\
    \ (- x) x))\n  (define (deviation x)\n    (absolute (- x (mean numbers))))\n \
    \ (/ (apply + (map deviation numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences numbers)\n    (map absolute-difference numbers))\n\
    \  (/ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (/ (apply + (absolute-differences\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute x)\n    (if (< x 0) (- x) x))\n\
    \  (define (deviation x)\n    (absolute (- x (mean numbers))))\n  (/ (apply +\
    \ (map deviation numbers)) (length numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define mean (mean numbers))\n  (define deviations (map (lambda\
    \ (x) (abs (- x mean))) numbers))\n  (mean deviations))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean_absolute_deviation_iter numbers sum count)\n\
    \    (cond ((null? numbers) (/ sum count))\n          (else (mean_absolute_deviation_iter\
    \ (cdr numbers)\n                                              (+ sum (abs (-\
    \ (car numbers)\n                                                            \
    \ (/ sum count))))\n                                              (+ count 1)))))\n\
    \  (mean_absolute_deviation_iter numbers 0 0))\n", "  (define mean (mean numbers))\n\
    \  (define diffs (map (lambda (x) (abs (- x mean))) numbers))\n  (mean diffs))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n\
    \    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (abs-diff x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (mean_absolute_deviation_helper numbers sum mean)\n    (if (null? numbers)\n\
    \        (/ sum (length numbers))\n        (mean_absolute_deviation_helper (cdr\
    \ numbers)\n                                        (+ sum (abs (- (car numbers)\
    \ mean)))\n                                        mean)))\n  (mean_absolute_deviation_helper\
    \ numbers 0 (/ (apply + numbers) (length numbers))))\n", "  (define (abs-diff\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (mean (map abs-diff numbers)))\n", "  (let* ([mean (mean\
    \ numbers)]\n         [differences (map (lambda (x) (abs (- x mean))) numbers)])\n\
    \    (mean differences)))\n", "  (define mean (mean numbers))\n  (define absolute-differences\
    \ (map (lambda (x) (abs (- x mean))) numbers))\n  (mean absolute-differences))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute x)\n    (if (< x 0) (- x) x))\n  (define (deviation x)\n    (absolute\
    \ (- x (mean numbers))))\n  (/ (apply + (map deviation numbers)) (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute_difference_from_mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute_differences_from_mean numbers)\n    (map\
    \ absolute_difference_from_mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute_differences_from_mean\
    \ numbers)))\n", "  (define (mean_absolute_deviation_iter sum count numbers)\n\
    \    (cond ((null? numbers)\n           (/ sum count))\n          (else\n    \
    \       (mean_absolute_deviation_iter (+ sum (abs (- (car numbers) (/ sum count))))\n\
    \                                         (+ count 1)\n                      \
    \                   (cdr numbers)))))\n  (mean_absolute_deviation_iter 0 0 numbers))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute_difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute_difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (abs-diff-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (/ (apply + (map abs-diff-from-mean numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute x)\n    (if (< x 0) (- x) x))\n  (define (deviation\
    \ x)\n    (absolute (- x (mean numbers))))\n  (/ (apply + (map deviation numbers))\
    \ (length numbers)))\n", "  (define (absolute-difference x)\n    (if (< x (mean\
    \ numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean\
    \ (map absolute-difference numbers)))\n", "  (define mean (mean numbers))\n  (define\
    \ abs-differences (map (lambda (x) (abs (- x mean))) numbers))\n  (mean abs-differences))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference number)\n    (abs (- number (mean numbers))))\n  (define\
    \ (absolute-differences numbers)\n    (map absolute-difference numbers))\n  (/\
    \ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (/ (apply + (absolute-differences\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference x)\n    (if (< x\
    \ (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean_absolute_deviation_iter numbers sum count)\n\
    \    (if (null? numbers)\n        (/ sum count)\n        (mean_absolute_deviation_iter\
    \ (cdr numbers)\n                                      (+ sum (abs (- (car numbers)\
    \ (/ sum count))))\n                                      (+ count 1))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute_difference number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute_differences numbers)\n\
    \    (map absolute_difference numbers))\n  (/ (apply + (absolute_differences numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference number)\n    (abs (- number (mean\
    \ numbers))))\n  (define (absolute-differences numbers)\n    (map absolute-difference\
    \ numbers))\n  (/ (apply + (absolute-differences numbers)) (length numbers)))\n",
  "  (define (mean_absolute_deviation_iter numbers sum mean)\n    (if (null? numbers)\n\
    \        (/ sum (length numbers))\n        (mean_absolute_deviation_iter (cdr\
    \ numbers)\n                                      (+ sum (abs (- (car numbers)\
    \ mean)))\n                                      mean)))\n  (mean_absolute_deviation_iter\
    \ numbers 0 (/ (apply + numbers) (length numbers))))\n", "  (define (average numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference number)\n\
    \    (abs (- number (average numbers))))\n  (define (absolute-differences numbers)\n\
    \    (map absolute-difference numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences numbers)) (length numbers)))\n\
    \  (mean-absolute-differences numbers))\n", "  (define mean (mean numbers))\n\
    \  (define diffs (map (lambda (x) (abs (- x mean))) numbers))\n  (mean diffs))\n",
  "  (define (absolute-difference x)\n    (if (&lt; x (mean numbers))\n        (-\
    \ (mean numbers) x)\n        (- x (mean numbers))))\n  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (average numbers)\n  \
    \  (/ (apply + numbers) (length numbers)))\n  (average (map absolute-difference\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (absolute_difference_from_mean x)\n    (abs (- x (mean numbers))))\n  (define\
    \ (absolute_differences_from_mean lst)\n    (if (null? lst)\n        lst\n   \
    \     (cons (absolute_difference_from_mean (car lst))\n              (absolute_differences_from_mean\
    \ (cdr lst)))))\n  (/ (sum (absolute_differences_from_mean numbers))\n     (length\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (&lt; x (mean numbers))\n        (-\
    \ (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ abs-diff numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference x)\n  \
    \  (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean\
    \ numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (absolute_difference x)\n    (abs (- x (mean numbers))))\n  (mean (map absolute_difference\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (deviation lst)\n    (map (lambda (x) (abs (- x (mean lst)))) lst))\n  (mean\
    \ (deviation numbers)))\n", "  (define (mean-of-list numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference x y)\n    (if (&lt;\
    \ x y) (- y x) (- x y)))\n  (define (absolute-differences-from-mean numbers)\n\
    \    (map (lambda (x) (absolute-difference x (mean-of-list numbers))) numbers))\n\
    \  (/ (apply + (absolute-differences-from-mean numbers)) (length numbers)))\n\
    </code>\n", "  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (average numbers))\n        (-\
    \ (average numbers) x)\n        (- x (average numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (define (average-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences numbers)) (length numbers)))\n\
    \  (average-absolute-differences numbers))\n", "  (define (mean_absolute_deviation_iter\
    \ numbers sum count)\n    (if (null? numbers)\n        (/ sum count)\n       \
    \ (mean_absolute_deviation_iter (cdr numbers)\n                              \
    \        (+ sum (abs (- (car numbers) (/ sum count))))\n                     \
    \                 (+ count 1))))\n  (define (sum numbers)\n    (if (null? numbers)\n\
    \        0\n        (+ (car numbers) (sum (cdr numbers)))))\n  (define (count\
    \ numbers)\n    (if (null? numbers)\n        0\n        (+ 1 (count (cdr numbers)))))\n\
    \  (mean_absolute_deviation_iter numbers (sum numbers) (count numbers)))\n", " \
    \ (define (abs-diff x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute x)\n    (if (&lt; x 0) (- x) x))\n  (define (absolute-difference-from-mean\
    \ x)\n    (absolute (- x (mean numbers))))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (map absolute-difference-from-mean numbers))\n   \
    \    (length numbers)))\n  (mean-of-absolute-differences numbers))\n</code>\n",
  "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (square x) (* x x))\n  (define (average xs)\n    (/ (apply + xs) (length\
    \ xs)))\n  (define (mean_absolute_deviation_iter xs acc)\n    (if (null? xs)\n\
    \        acc\n        (mean_absolute_deviation_iter (cdr xs)\n               \
    \                       (+ acc (abs (- (car xs) (average xs)))))))\n  (/ (mean_absolute_deviation_iter\
    \ numbers 0) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-deviation-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-deviations-from-mean\
    \ numbers)\n    (map absolute-deviation-from-mean numbers))\n  (define (mean-absolute-deviation\
    \ numbers)\n    (/ (apply + (absolute-deviations-from-mean numbers))\n       (length\
    \ numbers)))\n  (mean-absolute-deviation numbers))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute_difference_from_mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute_differences_from_mean\
    \ numbers)\n    (map absolute_difference_from_mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute_differences_from_mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (average numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute x)\n    (if (< x 0)\n        (- x)\n       \
    \ x))\n  (define (absolute-difference x)\n    (absolute (- x (average numbers))))\n\
    \  (define (absolute-differences numbers)\n    (map absolute-difference numbers))\n\
    \  (define (average-absolute-differences numbers)\n    (/ (apply + (absolute-differences\
    \ numbers)) (length numbers)))\n  (average-absolute-differences numbers))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute x)\n    (if (< x 0) (- x) x))\n  (define (deviation\
    \ x)\n    (absolute (- x (mean numbers))))\n  (/ (apply + (map deviation numbers))\
    \ (length numbers)))\n", "  (define (mean_absolute_deviation_iter numbers sum\
    \ count)\n    (if (null? numbers)\n        (/ sum count)\n        (mean_absolute_deviation_iter\
    \ (cdr numbers)\n                                      (+ sum (abs (- (car numbers)\
    \ (/ sum count))))\n                                      (+ count 1))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define mean (mean numbers))\n  (define absolute-differences\
    \ (map (lambda (x) (abs (- x mean))) numbers))\n  (mean absolute-differences))\n",
  "  (define (sum_abs_difference_from_mean numbers)\n    (define mean (mean numbers))\n\
    \    (apply + (map (lambda (x) (abs (- x mean))) numbers)))\n  (/ (sum_abs_difference_from_mean\
    \ numbers) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (abs-diff x)\n    (if\
    \ (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x (mean numbers))))\n\
    \  (/ (apply + (map abs-diff numbers)) (length numbers)))\n", "  (define (abs\
    \ x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (sum lst)\n    (if\
    \ (null? lst)\n        0\n        (+ (car lst) (sum (cdr lst)))))\n  (define (mean\
    \ lst)\n    (/ (sum lst) (length lst)))\n  (define (absolute_differences lst)\n\
    \    (map (lambda (x) (abs (- x (mean lst)))) lst))\n  (/ (sum (absolute_differences\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (let* ([mean (mean numbers)]\n         [deviations\
    \ (map (lambda (x) (abs (- x mean))) numbers)])\n    (mean deviations)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences numbers)\n    (map absolute-difference numbers))\n\
    \  (/ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers) x)\n        (-\
    \ x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (abs-diff-from-mean n)\n    (abs (- n\
    \ (mean numbers))))\n  (define (abs-diff-from-mean-list numbers)\n    (map abs-diff-from-mean\
    \ numbers))\n  (/ (apply + (abs-diff-from-mean-list numbers)) (length numbers)))\n",
  "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (sum\
    \ lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum (cdr lst)))))\n\
    \  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define (average lst)\n\
    \    (mean lst))\n  (define (absolute_deviation lst)\n    (map (lambda (x) (abs\
    \ (- x (average lst)))) lst))\n  (average (absolute_deviation numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (average numbers))))\n  (define (mean-absolute-differences\
    \ numbers)\n    (apply + (map absolute-difference-from-mean numbers)))\n  (/ (mean-absolute-differences\
    \ numbers) (length numbers)))\n", "  (let* ((mean (mean numbers))\n         (differences\
    \ (map (lambda (x) (abs (- x mean))) numbers)))\n    (mean differences)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (average numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences numbers)) (length numbers)))\n\
    \  (mean-absolute-differences numbers))\n", "  (define (mean numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences numbers)\n\
    \    (map absolute-difference numbers))\n  (/ (apply + (absolute-differences numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-absolute-differences numbers))\n", "  (let ([mean\
    \ (mean numbers)])\n    (mean (map (lambda (x) (abs (- x mean))) numbers))))\n",
  "  (define (absolute-difference x)\n    (abs (- x (mean numbers))))\n  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (mean (map absolute-difference\
    \ numbers)))\n", "  (define (mean_absolute_deviation_iter numbers sum sum_of_abs_deviations)\n\
    \    (cond ((null? numbers)\n           (/ sum_of_abs_deviations sum))\n     \
    \     (else\n           (let ((x (car numbers)))\n             (mean_absolute_deviation_iter\
    \ (cdr numbers)\n                                           (+ sum 1)\n      \
    \                                     (+ sum_of_abs_deviations\n             \
    \                                 (abs (- x (/ sum (+ sum 1))))))))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean x)\n    (abs (- x (mean\
    \ numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (abs-diff\
    \ x)\n    (abs (- x (mean numbers))))\n  (mean (map abs-diff numbers)))\n", " \
    \ (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map\
    \ absolute-difference numbers)) (length numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences numbers)\n\
    \    (map absolute-difference numbers))\n  (/ (apply + (absolute-differences numbers))\
    \ (length numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda\
    \ (x) (abs (- x mean))) numbers))))\n", "  (define (mean numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x y)\n    (if (&lt; x y) (- y x) (- x y)))\n \
    \ (define (absolute-differences numbers)\n    (map (lambda (x) (absolute-difference\
    \ x (mean numbers))) numbers))\n  (/ (apply + (absolute-differences numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean\
    \ numbers) x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference number)\n    (abs\
    \ (- number (mean numbers))))\n  (define (absolute-differences numbers)\n    (map\
    \ absolute-difference numbers))\n  (/ (apply + (absolute-differences numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference number)\n    (abs (- number (mean\
    \ numbers))))\n  (define (absolute-differences numbers)\n    (map absolute-difference\
    \ numbers))\n  (/ (apply + (absolute-differences numbers)) (length numbers)))\n",
  "  (define (mean_absolute_deviation_helper numbers sum count)\n    (cond\n     \
    \ [(empty? numbers) (/ sum count)]\n      [else (mean_absolute_deviation_helper\
    \ (rest numbers) (+ sum (abs (- (first numbers) (/ sum count)))) (+ count 1))]))\n\
    \  (mean_absolute_deviation_helper numbers 0 0))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (average-absolute-differences\
    \ numbers)\n    (/ (apply + (map absolute-difference-from-mean numbers))\n   \
    \    (length numbers)))\n  (average-absolute-differences numbers))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute\
    \ x)\n    (if (< x 0) (- x) x))\n  (define (average lst)\n    (/ (apply + lst)\
    \ (length lst)))\n  (average (map (lambda (x) (absolute (- x (mean numbers))))\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences numbers)\n    (map absolute-difference numbers))\n\
    \  (/ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define\
    \ (average numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (average numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences numbers)) (length numbers)))\n\
    \  (mean-absolute-differences numbers))\n", "  (define (mean numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define mean (mean numbers))\n  (define diffs (map (lambda\
    \ (x) (abs (- x mean))) numbers))\n  (mean diffs))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute_difference_from_mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute_differences_from_mean\
    \ numbers)\n    (map absolute_difference_from_mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute_differences_from_mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences numbers)\n    (map absolute-difference numbers))\n\
    \  (/ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (abs-diff\
    \ x)\n    (abs (- x (mean numbers))))\n  (/ (apply + (map abs-diff numbers)) (length\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum\
    \ (cdr lst)))))\n  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define\
    \ (deviations lst)\n    (map (lambda (x) (abs (- x (mean lst)))) lst))\n  (define\
    \ (average lst)\n    (/ (sum lst) (length lst)))\n  (average (deviations numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference a\
    \ b)\n    (abs (- a b)))\n  (define (average-absolute-difference numbers mean)\n\
    \    (/ (apply + (map (lambda (x) (absolute-difference x mean)) numbers))\n  \
    \     (length numbers)))\n  (average-absolute-difference numbers (mean numbers)))\n",
  "  (define (mean_absolute_deviation_iter numbers sum count)\n    (if (null? numbers)\n\
    \        (/ sum count)\n        (mean_absolute_deviation_iter (cdr numbers)\n\
    \                                      (+ sum (abs (- (car numbers) (/ sum count))))\n\
    \                                      (+ count 1))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define mean (mean numbers))\n  (define deviations (map\
    \ (lambda (x) (abs (- x mean))) numbers))\n  (mean deviations))\n", "  (define\
    \ (average numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (average numbers))))\n  (define (mean-absolute-differences\
    \ numbers)\n    (apply + (map absolute-difference-from-mean numbers)))\n  (/ (mean-absolute-differences\
    \ numbers) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs\
    \ (- number (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n\
    \    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean_absolute_deviation_iter numbers sum count)\n    (if (null? numbers)\n\
    \        (/ sum count)\n        (mean_absolute_deviation_iter (cdr numbers)\n\
    \                                      (+ sum (abs (- (car numbers) (/ sum count))))\n\
    \                                      (+ count 1))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define (abs-diff x)\n    (if (< x (mean numbers))\n  \
    \      (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map abs-diff\
    \ numbers)))\n", "  (define (abs-diff x)\n    (if (&lt; x (mean numbers))\n  \
    \      (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map abs-diff\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences numbers)\n    (map absolute-difference numbers))\n\
    \  (/ (apply + (absolute-differences numbers)) (length numbers)))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ x)\n    (if (< x (mean numbers))\n        (- (mean numbers) x)\n        (- x\
    \ (mean numbers))))\n  (/ (apply + (map absolute-difference numbers)) (length\
    \ numbers)))\n", "  (define mean (mean numbers))\n  (define absolute-differences\
    \ (map (lambda (x) (abs (- x mean))) numbers))\n  (mean absolute-differences))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute x)\n    (if (< x 0) (- x) x))\n  (define (absolute-difference-from-mean\
    \ x)\n    (absolute (- x (mean numbers))))\n  (define (distances-from-mean numbers)\n\
    \    (map absolute-difference-from-mean numbers))\n  (define (average numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (average (distances-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (mean-of-absolute-differences numbers)\n    (/ (apply +\
    \ (absolute-differences-from-mean numbers))\n       (length numbers)))\n  (mean-of-absolute-differences\
    \ numbers))\n", "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda\
    \ (x) (abs (- x mean))) numbers)])\n    (mean deviations)))\n", "  (define (abs\
    \ x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (sum lst)\n    (if\
    \ (null? lst)\n        0\n        (+ (car lst) (sum (cdr lst)))))\n  (define (mean\
    \ lst)\n    (/ (sum lst) (length lst)))\n  (define (deviation lst)\n    (map (lambda\
    \ (x) (abs (- x (mean lst)))) lst))\n  (mean (deviation numbers)))\n", "  (define\
    \ mean (mean numbers))\n  (define deviations (map (lambda (x) (abs (- x mean)))\
    \ numbers))\n  (mean deviations))\n", "  (define mean (mean numbers))\n  (mean\
    \ (map (lambda (x) (abs (- x mean))) numbers)))\n", "  (define (abs-diff x y)\n\
    \    (if (&lt; x y) (- y x) (- x y)))\n  (define (mean-abs-diff x)\n    (define\
    \ x-mean (/ (apply + numbers) (length numbers)))\n    (abs-diff x x-mean))\n \
    \ (/ (apply + (map mean-abs-diff numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences\
    \ numbers)\n    (map absolute-difference numbers))\n  (/ (apply + (absolute-differences\
    \ numbers)) (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply +\
    \ numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute x)\n    (if (< x 0) (- x) x))\n  (define (deviation x)\n\
    \    (absolute (- x (mean numbers))))\n  (/ (apply + (map deviation numbers))\
    \ (length numbers)))\n", "  (define (abs-difference x)\n    (if (< x (mean numbers))\n\
    \        (- (mean numbers) x)\n        (- x (mean numbers))))\n  (mean (map abs-difference\
    \ numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs\
    \ (- x mean))) numbers))))\n", "  (let* ([mean (mean numbers)]\n         [deviations\
    \ (map (lambda (x) (abs (- x mean))) numbers)])\n    (mean deviations)))\n", " \
    \ (let* ([numbers-mean (mean numbers)]\n         [numbers-deviations (map (lambda\
    \ (x) (abs (- x numbers-mean))) numbers)])\n    (mean numbers-deviations)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute_difference x)\n    (if (&lt; x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute_difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference number)\n    (abs (- number (mean\
    \ numbers))))\n  (define (absolute-differences numbers)\n    (map absolute-difference\
    \ numbers))\n  (/ (apply + (absolute-differences numbers)) (length numbers)))\n",
  "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n  (define (sum\
    \ lst)\n    (if (null? lst)\n        0\n        (+ (car lst) (sum (cdr lst)))))\n\
    \  (define (mean lst)\n    (/ (sum lst) (length lst)))\n  (define (deviation lst)\n\
    \    (map (lambda (x) (abs (- x (mean lst)))) lst))\n  (mean (deviation numbers)))\n",
  "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define\
    \ (absolute-difference x)\n    (if (< x (mean numbers))\n        (- (mean numbers)\
    \ x)\n        (- x (mean numbers))))\n  (/ (apply + (map absolute-difference numbers))\
    \ (length numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length\
    \ numbers)))\n  (define (absolute-difference-from-mean number)\n    (abs (- number\
    \ (mean numbers))))\n  (define (absolute-differences-from-mean numbers)\n    (map\
    \ absolute-difference-from-mean numbers))\n  (define (average numbers)\n    (/\
    \ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (let ([mean (mean numbers)])\n    (mean (map (lambda (x) (abs\
    \ (- x mean))) numbers))))\n", "  (define (mean numbers)\n    (/ (apply + numbers)\
    \ (length numbers)))\n  (define (absolute x)\n    (if (< x 0) (- x) x))\n  (define\
    \ (absolute-difference x)\n    (absolute (- x (mean numbers))))\n  (/ (apply +\
    \ (map absolute-difference numbers)) (length numbers)))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (mean-absolute-differences\
    \ numbers)\n    (apply + (map absolute-difference-from-mean numbers)))\n  (/ (mean-absolute-differences\
    \ numbers) (length numbers)))\n", "  (define (mean_absolute_deviation_helper numbers\
    \ sum)\n    (if (null? numbers)\n        (/ sum (length numbers))\n        (mean_absolute_deviation_helper\
    \ (cdr numbers)\n                                        (+ sum (abs (- (car numbers)\n\
    \                                                       (/ sum (length numbers))))))))\n\
    \  (mean_absolute_deviation_helper numbers 0))\n", "  (define (mean numbers)\n\
    \    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean_absolute_deviation_iter numbers sum count)\n    (if (null? numbers)\n\
    \        (/ sum count)\n        (mean_absolute_deviation_iter (cdr numbers)\n\
    \                                      (+ sum (abs (- (car numbers) (/ sum count))))\n\
    \                                      (+ count 1))))\n  (mean_absolute_deviation_iter\
    \ numbers 0 0))\n", "  (define (mean_absolute_deviation_iter numbers sum count)\n\
    \    (cond ((null? numbers) (/ sum count))\n          (else (mean_absolute_deviation_iter\
    \ (cdr numbers)\n                                              (+ sum (abs (-\
    \ (car numbers) (/ sum count))))\n                                           \
    \   (+ count 1)))))\n  (mean_absolute_deviation_iter numbers 0 0))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-of-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-of-absolute-differences numbers))\n", "  (define\
    \ (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (average (absolute-differences-from-mean\
    \ numbers)))\n", "  (define (mean numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number)\n    (abs (- number (mean numbers))))\n\
    \  (define (absolute-differences-from-mean numbers)\n    (map absolute-difference-from-mean\
    \ numbers))\n  (define (average numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (average (absolute-differences-from-mean numbers)))\n", "  (define (average\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (average numbers))))\n  (define (mean-absolute-differences\
    \ numbers)\n    (apply + (map absolute-difference-from-mean numbers)))\n  (/ (mean-absolute-differences\
    \ numbers) (length numbers)))\n", "  (define (average numbers)\n    (/ (apply\
    \ + numbers) (length numbers)))\n  (define (absolute-difference-from-mean number)\n\
    \    (abs (- number (average numbers))))\n  (define (absolute-differences-from-mean\
    \ numbers)\n    (map absolute-difference-from-mean numbers))\n  (define (mean-absolute-differences\
    \ numbers)\n    (/ (apply + (absolute-differences-from-mean numbers))\n      \
    \ (length numbers)))\n  (mean-absolute-differences numbers))\n", "  (define (mean_absolute_deviation-helper\
    \ numbers sum count)\n    (if (null? numbers)\n        (/ sum count)\n       \
    \ (mean_absolute_deviation-helper (cdr numbers) (+ sum (abs (- (car numbers) (/\
    \ sum count)))) (+ count 1))))\n  (mean_absolute_deviation-helper numbers 0 0))\n",
  "  (define (mean-of-numbers numbers)\n    (/ (apply + numbers) (length numbers)))\n\
    \  (define (absolute-difference-from-mean number mean)\n    (abs (- number mean)))\n\
    \  (define (absolute-differences-from-mean numbers mean)\n    (map (lambda (number)\
    \ (absolute-difference-from-mean number mean)) numbers))\n  (define (mean-of-absolute-differences\
    \ numbers mean)\n    (/ (apply + (absolute-differences-from-mean numbers mean))\
    \ (length numbers)))\n  (mean-of-absolute-differences numbers (mean-of-numbers\
    \ numbers)))\n", "  (define (abs x)\n    (if (< x 0)\n        (- x)\n        x))\n\
    \  (define (sum numbers)\n    (if (null? numbers)\n        0\n        (+ (car\
    \ numbers) (sum (cdr numbers)))))\n  (define (length numbers)\n    (if (null?\
    \ numbers)\n        0\n        (+ 1 (length (cdr numbers)))))\n  (define (mean\
    \ numbers)\n    (/ (sum numbers) (length numbers)))\n  (define (absolute_deviations\
    \ numbers)\n    (if (null? numbers)\n        '()\n        (cons (abs (- (car numbers)\
    \ (mean numbers)))\n              (absolute_deviations (cdr numbers)))))\n  (/\
    \ (sum (absolute_deviations numbers)) (length numbers)))\n", "  (define (mean\
    \ numbers)\n    (/ (apply + numbers) (length numbers)))\n  (define (absolute-difference-from-mean\
    \ number)\n    (abs (- number (mean numbers))))\n  (define (mean-absolute-differences\
    \ numbers)\n    (apply + (map absolute-difference-from-mean numbers)))\n  (/ (mean-absolute-differences\
    \ numbers) (length numbers)))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

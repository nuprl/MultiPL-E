name: HumanEval_51_remove_vowels
language: rkt
prompt: "#lang racket\n\n;; remove_vowels is a function that takes string and returns\
  \ string without vowels.\n;; >>> (remove_vowels \"\")\n;; \"\"\n;; >>> (remove_vowels\
  \ \"abcdef\")\n;; \"bcdf\"\n;; >>> (remove_vowels \"aaaaa\")\n;; \"\"\n;; >>> (remove_vowels\
  \ \"aaBAA\")\n;; \"B\"\n;; >>> (remove_vowels \"zbcd\")\n;; \"zbcd\"\n(define (remove_vowels\
  \ text)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate remove_vowels))\n\
  \    (check-equal? (candidate \"\") \"\")\n    (check-equal? (candidate \"abcdef\n\
  ghijklm\") \"bcdf\nghjklm\")\n    (check-equal? (candidate \"fedcba\") \"fdcb\"\
  )\n    (check-equal? (candidate \"eeeee\") \"\")\n    (check-equal? (candidate \"\
  acBAA\") \"cB\")\n    (check-equal? (candidate \"EcBOO\") \"cB\")\n    (check-equal?\
  \ (candidate \"ybcd\") \"ybcd\")\n))\n\n(test-humaneval)"
completions: ["  (define (remove_vowels_helper text result)\n    (if (empty? text)\n\
    \        result\n        (if (char-vowel? (first text))\n            (remove_vowels_helper\
    \ (rest text) result)\n            (remove_vowels_helper (rest text) (string-append\
    \ result (string (first text)))))))\n  (remove_vowels_helper text \"\"))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (string-append (string\
    \ (first text)) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (string-append (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (string-append (string (first text)) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (remove_vowels_helper text result)\n    (cond\n\
    \      [(empty? text) result]\n      [(char-vowel? (first text)) (remove_vowels_helper\
    \ (rest text) result)]\n      [else (remove_vowels_helper (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels_helper text \"\"))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (string-append (string (first text)) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (regexp-replace* #rx\"[aeiouAEIOU]\" text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n   \
    \     (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c #\\o)\n    \
    \    (char=? c #\\u)))\n  (define (remove_vowels-iter text result)\n    (cond\
    \ ((empty? text) result)\n          ((is_vowel? (first text)) (remove_vowels-iter\
    \ (rest text) result))\n          (else (remove_vowels-iter (rest text) (string-append\
    \ result (string (first text)))))))\n  (remove_vowels-iter text \"\"))\n", " \
    \ (regexp-replace* #rx\"[aeiouAEIOU]\" text \"\"))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (string-append (string (first text)) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\\
    i #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(string=?\
    \ text \"\") \"\"]\n    [(string-contains \"aeiouAEIOU\" (string-ref text 0))\
    \ (remove_vowels (substring text 1))]\n    [else (string-append (string-ref text\
    \ 0) (remove_vowels (substring text 1)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else (string-append\
    \ (string (first text)) (remove_vowels (rest text)))]))\n", "  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) result]\n      [(char-vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (string-append (string (first text)) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (string-append (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(or (char=? (first text) #\\a)\n     \
    \    (char=? (first text) #\\e)\n         (char=? (first text) #\\i)\n       \
    \  (char=? (first text) #\\o)\n         (char=? (first text) #\\u))\n     (remove_vowels\
    \ (rest text))]\n    [else (string-append (string (first text)) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond [(empty? text) \"\"]\n        [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \     (remove_vowels (rest text))]\n        [else (string-append (first text)\
    \ (remove_vowels (rest text)))]))\n", "  (define (is_vowel? char)\n    (or (char=?\
    \ char #\\a)\n        (char=? char #\\e)\n        (char=? char #\\i)\n       \
    \ (char=? char #\\o)\n        (char=? char #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (if (string-empty? text)\n        result\n        (if (is_vowel?\
    \ (string-ref text 0))\n            (remove_vowels-iter (substring text 1) result)\n\
    \            (remove_vowels-iter (substring text 1) (string-append result (string\
    \ (string-ref text 0)))))))\n  (remove_vowels-iter text \"\"))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (string-append (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n  \
    \      (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n \
    \ (define (remove_vowels_iter text result)\n    (cond ((string=? text \"\") result)\n\
    \          ((is_vowel? (string-ref text 0))\n           (remove_vowels_iter (substring\
    \ text 1) result))\n          (else (remove_vowels_iter (substring text 1)\n \
    \                                   (string-append result (string (string-ref\
    \ text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (define (is_vowel? char)\n\
    \    (or (char=? char #\\a)\n        (char=? char #\\e)\n        (char=? char\
    \ #\\i)\n        (char=? char #\\o)\n        (char=? char #\\u)))\n  (define (remove_vowels_iter\
    \ text result)\n    (if (string-empty? text)\n        result\n        (if (is_vowel?\
    \ (string-ref text 0))\n            (remove_vowels_iter (substring text 1) result)\n\
    \            (remove_vowels_iter (substring text 1) (string-append result (string\
    \ (string-ref text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n\
    \    [(empty? text) \"\"]\n    [(char-in-set? (first text) \"aeiouAEIOU\") (remove_vowels\
    \ (rest text))]\n    [else (string-append (string (first text)) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (or (equal? c #\\a)\n   \
    \     (equal? c #\\e)\n        (equal? c #\\i)\n        (equal? c #\\o)\n    \
    \    (equal? c #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond\n\
    \      [(empty? text) (reverse result)]\n      [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (cons (first\
    \ text) result))]))\n  (remove_vowels_iter text empty))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n        (char=? ch\
    \ #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n  (define (remove_vowels_iter\
    \ text acc)\n    (if (string-empty? text)\n        acc\n        (let ((ch (string-ref\
    \ text 0)))\n          (if (is_vowel? ch)\n              (remove_vowels_iter (substring\
    \ text 1) acc)\n              (remove_vowels_iter (substring text 1) (string-append\
    \ acc (string ch)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (string-append (string (first text)) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (string-append (string (first text)) (remove_vowels (rest\
    \ text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (define (remove_vowels_iter text result)\n    (cond\n    \
    \  [(empty? text) result]\n      [(char-vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", " \
    \ (cond\n    [(empty? text) text]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (regexp-replace* #rx\"[aeiouAEIOU]\" text \"\"))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n\
    \        (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n\
    \  (define (remove_vowels-iter text result)\n    (cond\n      [(empty? text) result]\n\
    \      [(is_vowel? (first text)) (remove_vowels-iter (rest text) result)]\n  \
    \    [else (remove_vowels-iter (rest text) (string-append result (string (first\
    \ text))))]))\n  (remove_vowels-iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (string-append (string (first text)) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) text]\n    [(member (first text) '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (string-append (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n   \
    \     (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c #\\o)\n    \
    \    (char=? c #\\u)))\n  (define (remove_vowels-iter text)\n    (cond\n     \
    \ [(empty? text) empty]\n      [(is_vowel? (first text)) (remove_vowels-iter (rest\
    \ text))]\n      [else (cons (first text) (remove_vowels-iter (rest text)))]))\n\
    \  (remove_vowels-iter text))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\"\
    \ \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\"\
    \ \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n    [else (string-append\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ \"\"]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (string-append (string (first text)) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (string-append (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) text]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (string-append (string (first text)) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (string-append (string (first text)) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) \"\"]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (regexp-replace* #rx\"\
    [aeiou]\" text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n\
    \        (char=? char #\\e)\n        (char=? char #\\i)\n        (char=? char\
    \ #\\o)\n        (char=? char #\\u)))\n  (define (remove_vowels_iter text result)\n\
    \    (if (string-empty? text)\n        result\n        (if (is_vowel? (string-ref\
    \ text 0))\n            (remove_vowels_iter (substring text 1) result)\n     \
    \       (remove_vowels_iter (substring text 1) (string-append result (string (string-ref\
    \ text 0)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(or (char=? (first text) #\\a)\n    \
    \     (char=? (first text) #\\e)\n         (char=? (first text) #\\i)\n      \
    \   (char=? (first text) #\\o)\n         (char=? (first text) #\\u))\n     (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (string-append (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (string-append (string (first text)) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (cons (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel?\
    \ c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\\
    i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond ((string=? text \"\") result)\n          ((is_vowel?\
    \ (string-ref text 0))\n           (remove_vowels-iter (substring text 1) result))\n\
    \          (else (remove_vowels-iter (substring text 1)\n                    \
    \                (string-append result (string (string-ref text 0)))))))\n  (remove_vowels-iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (remove_vowels_iter\
    \ text result)\n    (cond\n      [(empty? text) result]\n      [(char-vowel? (first\
    \ text)) (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter\
    \ (rest text) (string-append result (string (first text))))]))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (member c '(#\\a #\\e #\\\
    i #\\o #\\u #\\A #\\E #\\I #\\O #\\U)))\n  (define (remove_vowels_iter text result)\n\
    \    (cond\n      [(empty? text) (reverse result)]\n      [(is_vowel? (first text))\
    \ (remove_vowels_iter (rest text) result)]\n      [else (remove_vowels_iter (rest\
    \ text) (cons (first text) result))]))\n  (remove_vowels_iter text '()))\n", " \
    \ (regexp-replace* #rx\"[aeiou]\" text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (string-append (string (first text)) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? ch)\n    (or (char=? ch #\\a)\n        (char=? ch #\\e)\n\
    \        (char=? ch #\\i)\n        (char=? ch #\\o)\n        (char=? ch #\\u)))\n\
    \  (define (remove_vowels_iter text acc)\n    (if (string-empty? text)\n     \
    \   acc\n        (if (is_vowel? (string-ref text 0))\n            (remove_vowels_iter\
    \ (substring text 1) acc)\n            (remove_vowels_iter (substring text 1)\
    \ (string-append acc (string (string-ref text 0)))))))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text))\
    \ (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels (rest\
    \ text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i\
    \ #\\o #\\u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\u)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (regexp-replace* #rx\"[aeiou]\" text \"\"))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n\
    \    (or (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n \
    \       (char=? c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels-iter\
    \ text result)\n    (cond ((string=? text \"\") result)\n          ((is_vowel?\
    \ (string-ref text 0))\n           (remove_vowels-iter (substring text 1) result))\n\
    \          (else (remove_vowels-iter (substring text 1)\n                    \
    \                (string-append result (string (string-ref text 0)))))))\n  (remove_vowels-iter\
    \ text \"\"))\n", "  (define (remove_vowels_iter text result)\n    (cond\n   \
    \   [(empty? text) result]\n      [(char-vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (string-append\
    \ result (string (first text))))]))\n  (remove_vowels_iter text \"\"))\n", " \
    \ (cond\n    [(empty? text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (string-append (string (first text)) (remove_vowels\
    \ (rest text)))]))\n", "  (regexp-replace* #rx\"[aeiou]\" text \"\"))\n", "  (cond\n\
    \    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\"\
    \ \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) \"\"]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond [(empty? text) \"\"]\n        [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n        [else (string-append (string (first\
    \ text)) (remove_vowels (rest text)))]))\n", "  (define (is_vowel? c)\n    (or\
    \ (char=? c #\\a)\n        (char=? c #\\e)\n        (char=? c #\\i)\n        (char=?\
    \ c #\\o)\n        (char=? c #\\u)))\n  (define (remove_vowels_iter text result)\n\
    \    (cond ((string=? text \"\") result)\n          ((is_vowel? (string-ref text\
    \ 0))\n           (remove_vowels_iter (substring text 1) result))\n          (else\
    \ (remove_vowels_iter (substring text 1)\n                                   \
    \ (string-append result (string (string-ref text 0)))))))\n  (remove_vowels_iter\
    \ text \"\"))\n", "  (cond\n    [(empty? text) empty]\n    [(member (first text)\
    \ '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (define (remove_vowels_iter\
    \ text result)\n    (if (empty? text)\n        result\n        (if (char-vowel?\
    \ (first text))\n            (remove_vowels_iter (rest text) result)\n       \
    \     (remove_vowels_iter (rest text) (string-append result (string (first text)))))))\n\
    \  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text) empty]\n \
    \   [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? char)\n    (or (char=? char #\\a)\n        (char=? char #\\\
    e)\n        (char=? char #\\i)\n        (char=? char #\\o)\n        (char=? char\
    \ #\\u)))\n  (define (remove_vowels_iter text result)\n    (if (string-empty?\
    \ text)\n        result\n        (if (is_vowel? (string-ref text 0))\n       \
    \     (remove_vowels_iter (substring text 1) result)\n            (remove_vowels_iter\
    \ (substring text 1) (string-append result (string (string-ref text 0)))))))\n\
    \  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text) empty]\n \
    \   [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons (first\
    \ text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n\
    \    [(char-vowel? (first text)) (remove_vowels (rest text))]\n    [else (cons\
    \ (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty? text)\
    \ empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n        (char=? c #\\e)\n   \
    \     (char=? c #\\i)\n        (char=? c #\\o)\n        (char=? c #\\u)))\n  (define\
    \ (remove_vowels_iter text result)\n    (cond ((empty? text) result)\n       \
    \   ((is_vowel? (first text)) (remove_vowels_iter (rest text) result))\n     \
    \     (else (remove_vowels_iter (rest text) (string-append result (string (first\
    \ text)))))))\n  (remove_vowels_iter text \"\"))\n", "  (cond\n    [(empty? text)\
    \ \"\"]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else (string-append\
    \ (string (first text)) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) \"\"]\n    [(char-vowel? (first text)) (remove_vowels (rest text))]\n\
    \    [else (string-append (string (first text)) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(vowel? (first text)) (remove_vowels (rest\
    \ text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n", " \
    \ (cond\n    [(empty? text) empty]\n    [(char-vowel? (first text)) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) empty]\n    [(member (first text) '(\"a\" \"e\" \"\
    i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) \"\"]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(char-vowel?\
    \ (first text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) \"\"]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n    \
    \ (remove_vowels (rest text))]\n    [else (string-append (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) empty]\n    [(vowel? (first\
    \ text)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (cond\n    [(empty? text) text]\n    [(member (first\
    \ text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels (rest text))]\n    [else\
    \ (string-append (first text) (remove_vowels (rest text)))]))\n", "  (cond\n \
    \   [(empty? text) empty]\n    [(member (first text) '(#\\a #\\e #\\i #\\o #\\\
    u)) (remove_vowels (rest text))]\n    [else (cons (first text) (remove_vowels\
    \ (rest text)))]))\n", "  (define (is_vowel? c)\n    (or (char=? c #\\a)\n   \
    \     (char=? c #\\e)\n        (char=? c #\\i)\n        (char=? c #\\o)\n    \
    \    (char=? c #\\u)))\n  (define (remove_vowels_iter text result)\n    (cond\n\
    \      [(empty? text) (reverse result)]\n      [(is_vowel? (first text)) (remove_vowels_iter\
    \ (rest text) result)]\n      [else (remove_vowels_iter (rest text) (cons (first\
    \ text) result))]))\n  (remove_vowels_iter text '()))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(vowel? (first text)) (remove_vowels (rest text))]\n    [else\
    \ (cons (first text) (remove_vowels (rest text)))]))\n", "  (cond\n    [(empty?\
    \ text) empty]\n    [(member (first text) '(\"a\" \"e\" \"i\" \"o\" \"u\")) (remove_vowels\
    \ (rest text))]\n    [else (cons (first text) (remove_vowels (rest text)))]))\n",
  "  (cond\n    [(empty? text) \"\"]\n    [(member (first text) '(\"a\" \"e\" \"i\"\
    \ \"o\" \"u\" \"A\" \"E\" \"I\" \"O\" \"U\"))\n     (remove_vowels (rest text))]\n\
    \    [else (string-append (first text) (remove_vowels (rest text)))]))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

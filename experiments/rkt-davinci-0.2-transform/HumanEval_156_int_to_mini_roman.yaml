name: HumanEval_156_int_to_mini_roman
language: rkt
prompt: "#lang racket\n\n;; Given a positive integer, obtain its roman numeral equivalent\
  \ as a string,\n;; and return it in lowercase.\n;; Restrictions: 1 <= num <= 1000\n\
  ;; Examples:\n;; >>> (int_to_mini_roman 19)\n;; \"xix\"\n;; >>> (int_to_mini_roman\
  \ 152)\n;; \"clii\"\n;; >>> (int_to_mini_roman 426)\n;; \"cdxxvi\"\n(define (int_to_mini_roman\
  \ number)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate int_to_mini_roman))\n\
  \    (check-equal? (candidate 19) \"xix\")\n    (check-equal? (candidate 152) \"\
  clii\")\n    (check-equal? (candidate 251) \"ccli\")\n    (check-equal? (candidate\
  \ 426) \"cdxxvi\")\n    (check-equal? (candidate 500) \"d\")\n    (check-equal?\
  \ (candidate 1) \"i\")\n    (check-equal? (candidate 4) \"iv\")\n    (check-equal?\
  \ (candidate 43) \"xliii\")\n    (check-equal? (candidate 90) \"xc\")\n    (check-equal?\
  \ (candidate 94) \"xciv\")\n    (check-equal? (candidate 532) \"dxxxii\")\n    (check-equal?\
  \ (candidate 900) \"cm\")\n    (check-equal? (candidate 994) \"cmxciv\")\n    (check-equal?\
  \ (candidate 1000) \"m\")\n))\n\n(test-humaneval)"
completions: ["  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number\
    \ 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n\
    \      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n   \
    \   [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"\
    v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                          \
    \ (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman_helper number)\n    (cond ((= number\
    \ 0) \"\")\n          ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n\
    \          ((= number 3) \"iii\")\n          ((= number 4) \"iv\")\n         \
    \ ((= number 5) \"v\")\n          ((= number 6) \"vi\")\n          ((= number\
    \ 7) \"vii\")\n          ((= number 8) \"viii\")\n          ((= number 9) \"ix\"\
    )\n          ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n       \
    \   ((= number 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number\
    \ 50) \"l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\"\
    )\n          ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n    \
    \      ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((=\
    \ number 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number\
    \ 500) \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"\
    dcc\")\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\"\
    )\n          ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman_helper\
    \ (/ number 10))\n                               (int_to_mini_roman_helper (modulo\
    \ number 10))))))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\n\
    \              (int_to_mini_roman_helper (quotient number 10))\n             \
    \ (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (let ([number-string (number->string number)])\n    (define\
    \ (int-to-mini-roman-helper number-string)\n      (cond\n        [(= (string-length\
    \ number-string) 1)\n         (cond\n           [(= (string->number number-string)\
    \ 1) \"i\"]\n           [(= (string->number number-string) 2) \"ii\"]\n      \
    \     [(= (string->number number-string) 3) \"iii\"]\n           [(= (string->number\
    \ number-string) 4) \"iv\"]\n           [(= (string->number number-string) 5)\
    \ \"v\"]\n           [(= (string->number number-string) 6) \"vi\"]\n         \
    \  [(= (string->number number-string) 7) \"vii\"]\n           [(= (string->number\
    \ number-string) 8) \"viii\"]\n           [(= (string->number number-string) 9)\
    \ \"ix\"])]\n        [(= (string-length number-string) 2)\n         (cond\n  \
    \         [(= (string->number (substring number-string 0 1)) 1)\n            (string-append\
    \ \"x\" (int-to-mini-roman-helper (substring number-string 1)))]\n           [(=\
    \ (string->number (substring number-string 0 1)) 2)\n            (string-append\
    \ \"xx\" (int-to-mini-roman-helper (substring number-string 1)))]\n          \
    \ [(= (string->number (substring number-string 0 1)) 3)\n            (string-append\
    \ \"xxx\" (int-to-mini-roman-helper (substring number-string 1)))]\n         \
    \  [(= (string->number (substring number-string 0 1)) 4)\n            (string-append\
    \ \"xl\" (int-to-mini-roman-helper (substring number-string 1)))]\n          \
    \ [(= (string->number (substring number-string 0 1)) 5)\n            (string-append\
    \ \"l\" (int-to-mini-roman-helper (substring number-string 1)))]\n           [(=\
    \ (string->number (substring number-string 0 1)) 6)\n            (string-append\
    \ \"lx\" (int-to-mini-roman-helper (", "  (define (int_to_mini_roman_helper number)\n\
    \    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n      [(= number\
    \ 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4) \"iv\"]\n    \
    \  [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"\
    ]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n  \
    \    [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 60)\
    \ \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n   \
    \   [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 200)\
    \ \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n   \
    \   [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number 700)\
    \ \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"]\n \
    \     [(= number 1000) \"m\"]\n      [else (int_to_mini_roman_helper (- number\
    \ 1000)) \"m\"]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n\
    \      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n      [(= number\
    \ 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number 18) \"xviii\"\
    ]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"\
    ]\n      [(= number 3) \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n     \
    \ [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"\
    x\"]\n      [(= number 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number\
    \ 13) \"xiii\"]\n      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n\
    \      [(= number 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number\
    \ 18) \"xviii\"]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n\
    \      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n  \
    \    [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number\
    \ 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n\
    \      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"\
    ]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [(= number\
    \ 2000) \"mm\"]\n      [(= number 3000) \"mmm\"]\n      [(= number 4000) \"mv\"\
    ]\n      [(= number 5000) \"v\"]\n      [(= number 6000) \"vm\"]\n      [(= number\
    \ 7000) \"vmm\"]\n      [(= number 8000) \"vmmm\"]\n      [(= number 9000) \"\
    mx\"]\n      [else (string-append (", "  (define (int_to_mini_roman-helper number)\n\
    \    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n   \
    \   [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100)\
    \ \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(=\
    \ number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1)\
    \ \"i\"]\n      [else (append (int_to_mini_roman-helper (quotient number 10))\n\
    \                    (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond ((= number 0) \"\")\n          ((= number 1) \"i\")\n   \
    \       ((= number 2) \"ii\")\n          ((= number 3) \"iii\")\n          ((=\
    \ number 4) \"iv\")\n          ((= number 5) \"v\")\n          ((= number 6) \"\
    vi\")\n          ((= number 7) \"vii\")\n          ((= number 8) \"viii\")\n \
    \         ((= number 9) \"ix\")\n          ((= number 10) \"x\")\n          ((=\
    \ number 11) \"xi\")\n          ((= number 12) \"xii\")\n          ((= number\
    \ 13) \"xiii\")\n          ((= number 14) \"xiv\")\n          ((= number 15) \"\
    xv\")\n          ((= number 16) \"xvi\")\n          ((= number 17) \"xvii\")\n\
    \          ((= number 18) \"xviii\")\n          ((= number 19) \"xix\")\n    \
    \      ((= number 20) \"xx\")\n          ((= number 30) \"xxx\")\n          ((=\
    \ number 40) \"xl\")\n          ((= number 50) \"l\")\n          ((= number 60)\
    \ \"lx\")\n          ((= number 70) \"lxx\")\n          ((= number 80) \"lxxx\"\
    )\n          ((= number 90) \"xc\")\n          ((= number 100) \"c\")\n      \
    \    ((= number 200) \"cc\")\n          ((= number 300) \"ccc\")\n          ((=\
    \ number 400) \"cd\")\n          ((= number 500) \"d\")\n          ((= number\
    \ 600) \"dc\")\n          ((= number 700) \"dcc\")\n          ((= number 800)\
    \ \"dccc\")\n          ((= number 900) \"cm\")\n          ((= number 1000) \"\
    m\")\n          ((= number 2000) \"mm\")\n          ((= number 3000) \"mmm\")\n\
    \          ((= number 4000) \"mmmm\")\n          ((= number 5000) \"mmmmm\")\n\
    \          ((= number 6000) \"mmmmmm\")\n          ((= number 7000) \"mmmmmmm\"\
    )\n          ((= number 8000) \"mmmmmmmm\")\n          ((= number 9000) \"mmmmmmmmm\"\
    )\n          ((= number 10000) \"", "  (define (int_to_mini_roman-helper number)\n\
    \    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n   \
    \   [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100)\
    \ \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(=\
    \ number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1)\
    \ \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient number\
    \ 10))\n                           (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number\
    \ 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"\
    ]\n    [(", "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(=\
    \ number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"\
    d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n   \
    \   [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"\
    v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                          \
    \ (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (string-append (int_to_mini_roman-helper (quotient number 10))\n           \
    \                (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mmmm\"]\n    [(= number\
    \ 5000) \"mmmmm\"]\n    [(= number 6000) \"mmmmmm\"]\n    [(= number 7000) \"\
    mmmmmmm\"]\n    [(= number 8000) \"mmmmmmmm\"]\n    [(= number 9000) \"mmmmmmmmm\"\
    ]\n    [(= number 10000) \"mmmmmmmmmm\"]\n    [(= number 20000) \"mmmmmmmmmmm\"\
    ]\n    [(= number 30000", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman-helper (quotient number 10))\n\
    \                           (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 11) \"xi\"]\n      [(= number\
    \ 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n      [(= number 14) \"xiv\"]\n\
    \      [(= number 15) \"xv\"]\n      [(= number 16) \"xvi\"]\n      [(= number\
    \ 17) \"xvii\"]\n      [(= number 18) \"xviii\"]\n      [(= number 19) \"xix\"\
    ]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n   \
    \   [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n \
    \     [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n\
    \      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 1000) \"m\"]\n      [else (string-append (int_to_mini_roman-helper (/ number\
    \ 10)) (int_to_mini_roman-helper (modulo number 10)))])\n    )\n  (string-downcase\
    \ (int_to_mini_roman-helper number))\n  )\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (define (int_to_mini_roman_helper2 number)\n    (cond ((= number\
    \ 1000) \"m\")\n          ((= number 900) \"m\")\n          ((= number 500) \"\
    d\")\n          ((= number 400) \"d\")\n          ((= number 100) \"c\")\n   \
    \       ((= number 90) \"c\")\n          ((= number 50) \"l\")\n          ((=\
    \ number 40) \"l\")\n          ((= number 10) \"x\")\n          ((= number 9)\
    \ \"x\")\n          ((= number 5) \"v\")\n          ((= number 4) \"v\")\n   \
    \       ((= number 1) \"i\")))\n  (define (int_to_mini_roman_helper3 number)\n\
    \    (cond ((= number 1000) \"m\")\n          ((= number 900) \"c\")\n       \
    \   ((= number 500) \"d\")\n          ((= number 400) \"c\")\n          ((= number\
    \ 100) \"c\")\n          ((= number 90) \"x\")\n          ((= number 50) \"l\"\
    )\n          ((= number 40) \"x\")\n          ((= number 10) \"x\")\n        \
    \  ((= number 9) \"i\")\n          ((= number 5) \"v\")\n          ((= number\
    \ 4) \"i\")\n          ((= number 1) \"i\")))\n  (define (int_to_mini_roman_helper4\
    \ number)\n    (cond ((= number 1000) \"m\")\n          ((= number 900) \"c\"\
    )\n          ((= number 500) \"d\")\n          ((= number 400) \"c", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond ((= number 1000) \"m\")\n     \
    \     ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n          ((=\
    \ number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (define (int_to_mini_roman_helper_2 number)\n    (cond ((= number\
    \ 1000) \"m\")\n          ((= number 900) \"m\")\n          ((= number 500) \"\
    d\")\n          ((= number 400) \"d\")\n          ((= number 100) \"c\")\n   \
    \       ((= number 90) \"c\")\n          ((= number 50) \"l\")\n          ((=\
    \ number 40) \"l\")\n          ((= number 10) \"x\")\n          ((= number 9)\
    \ \"x\")\n          ((= number 5) \"v\")\n          ((= number 4) \"v\")\n   \
    \       ((= number 1) \"i\")))\n  (define (int_to_mini_roman_helper_3 number)\n\
    \    (cond ((= number 1000) \"m\")\n          ((= number 900) \"\")\n        \
    \  ((= number 500) \"d\")\n          ((= number 400) \"\")\n          ((= number\
    \ 100) \"c\")\n          ((= number 90) \"\")\n          ((= number 50) \"l\"\
    )\n          ((= number 40) \"\")\n          ((= number 10) \"x\")\n         \
    \ ((= number 9) \"\")\n          ((= number 5) \"v\")\n          ((= number 4)\
    \ \"\")\n          ((= number 1) \"i\")))\n  (define (int_to_mini_roman_helper_4\
    \ number)\n    (cond ((= number 1000) \"m\")\n          ((= number 900) \"\")\n\
    \          ((= number 500) \"d\")\n          ((= number 400) \"\")\n         \
    \ ((=", "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000)\
    \ \"m\")\n          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n\
    \          ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n       \
    \   ((= number 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number\
    \ 40) \"xl\")\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\"\
    )\n          ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n         \
    \ ((= number 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ 1))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ 1))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1)\n   \
    \                                  (int_to_mini_roman-helper 1)))\n        ((=\
    \ number 3) (string-append (int_to_mini_roman-helper 1)\n                    \
    \                 (int_to_mini_roman-helper 1)\n                             \
    \        (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5)\n                           \
    \          (int_to_mini_roman-helper 1)))\n        ((= number 7) (string-append\
    \ (int_to_mini_roman-helper 5)\n                                     (int_to_mini_roman-helper\
    \ 1)\n                                     (int_to_mini_roman-helper 1)))\n  \
    \      ((= number 8) (string-append (int_to_mini_roman-helper 5)\n           \
    \                          (int_to_mini_roman-helper 1)\n                    \
    \                 (int_to_mini_roman-helper 1)\n                             \
    \        (int_to_mini_roman-helper 1)))\n        ((= number 9) (int_to_mini_roman-helper\
    \ 9))\n        ((= number 10", "  (cond\n    [(= number 1) \"i\"]\n    [(= number\
    \ 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number\
    \ 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number\
    \ 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(=\
    \ number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"\
    ]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16)\
    \ \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(=\
    \ number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"\
    ]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"\
    lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number\
    \ 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(=\
    \ number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"\
    ]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800)\
    \ \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(=\
    \ number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"\
    mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number\
    \ 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"\
    ]\n    [(= number 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number\
    \ 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper number)\n   \
    \ (cond ((= number 0) \"\")\n          ((= number 1) \"i\")\n          ((= number\
    \ 2) \"ii\")\n          ((= number 3) \"iii\")\n          ((= number 4) \"iv\"\
    )\n          ((= number 5) \"v\")\n          ((= number 6) \"vi\")\n         \
    \ ((= number 7) \"vii\")\n          ((= number 8) \"viii\")\n          ((= number\
    \ 9) \"ix\")\n          ((= number 10) \"x\")\n          ((= number 20) \"xx\"\
    )\n          ((= number 30) \"xxx\")\n          ((= number 40) \"xl\")\n     \
    \     ((= number 50) \"l\")\n          ((= number 60) \"lx\")\n          ((= number\
    \ 70) \"lxx\")\n          ((= number 80) \"lxxx\")\n          ((= number 90) \"\
    xc\")\n          ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n \
    \         ((= number 300) \"ccc\")\n          ((= number 400) \"cd\")\n      \
    \    ((= number 500) \"d\")\n          ((= number 600) \"dc\")\n          ((=\
    \ number 700) \"dcc\")\n          ((= number 800) \"dccc\")\n          ((= number\
    \ 900) \"cm\")\n          ((= number 1000) \"m\")\n          ((= number 2000)\
    \ \"mm\")\n          ((= number 3000) \"mmm\")\n          (else (error \"Number\
    \ out of range\"))))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman-helper (/ number 10))\n              \
    \      (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join (int_to_mini_roman-helper\
    \ number) \"\"))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman_helper (quotient number 10))\n\
    \                           (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 400) \"cd\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n     \
    \ [else (int_to_mini_roman-helper (quotient number 10))\n            (int_to_mini_roman-helper\
    \ (remainder number 10))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      ((= number 1000)\
    \ \"m\")\n      ((= number 900) \"cm\")\n      ((= number 500) \"d\")\n      ((=\
    \ number 400) \"cd\")\n      ((= number 100) \"c\")\n      ((= number 90) \"xc\"\
    )\n      ((= number 50) \"l\")\n      ((= number 40) \"xl\")\n      ((= number\
    \ 10) \"x\")\n      ((= number 9) \"ix\")\n      ((= number 5) \"v\")\n      ((=\
    \ number 4) \"iv\")\n      ((= number 1) \"i\")\n      (else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10))))))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\n\
    \              (int_to_mini_roman_helper (quotient number 10))\n             \
    \ (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond ((= number\
    \ 0) \"\")\n          ((= number 1000) \"m\")\n          ((= number 900) \"cm\"\
    )\n          ((= number 500) \"d\")\n          ((= number 400) \"cd\")\n     \
    \     ((= number 100) \"c\")\n          ((= number 90) \"xc\")\n          ((=\
    \ number 50) \"l\")\n          ((= number 40) \"xl\")\n          ((= number 10)\
    \ \"x\")\n          ((= number 9) \"ix\")\n          ((= number 5) \"v\")\n  \
    \        ((= number 4) \"iv\")\n          ((= number 1) \"i\")))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [(= number 0) \"\"]\n \
    \     [else\n       (string-append\n        (int_to_mini_roman_helper (quotient\
    \ number 10))\n        (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper (quotient number\
    \ 10))\n                    (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((< number 1) \"\")\n    \
    \    ((< number 4) (string-append (int_to_mini_roman-helper 1)\n             \
    \                        (int_to_mini_roman (- number 1))))\n        ((< number\
    \ 5) (int_to_mini_roman-helper 4))\n        ((< number 9) (string-append (int_to_mini_roman-helper\
    \ 5)\n                                     (int_to_mini_roman (- number 5))))\n\
    \        ((< number 10) (int_to_mini_roman-helper 9))\n        ((< number 40)\
    \ (string-append (int_to_mini_roman-helper 10)\n                             \
    \         (int_to_mini_roman (- number 10))))\n        ((< number 50) (int_to_mini_roman-helper\
    \ 40))\n        ((< number 90) (string-append (int_to_mini_roman-helper 50)\n\
    \                                      (int_to_mini_roman (- number 50))))\n \
    \       ((< number 100) (int_to_mini_roman-helper 90))\n        ((< number 400)\
    \ (string-append (int_to_mini_roman-helper 100)\n                            \
    \           (int_to_mini_roman (- number 100))))\n        ((< number 500) (int_to_mini_roman-helper\
    \ 400))\n        ((< number 900) (string-append (int_to_mini_roman-helper 500)\n\
    \                                       (int_to_mini_roman (- number 500))))\n\
    \        ((< number 1000)", "  (define (int_to_mini_roman-helper number)\n   \
    \ (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(=\
    \ number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"\
    c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n    \
    \  [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"\
    ]\n      [else (string-append (int_to_mini_roman-helper (quotient number 10))\n\
    \                           (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ 1))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman_helper number roman)\n    (cond\n      [(= number\
    \ 0) roman]\n      [(>= number 1000) (int_to_mini_roman_helper (- number 1000)\
    \ (string-append roman \"m\"))]\n      [(>= number 900) (int_to_mini_roman_helper\
    \ (- number 900) (string-append roman \"cm\"))]\n      [(>= number 500) (int_to_mini_roman_helper\
    \ (- number 500) (string-append roman \"d\"))]\n      [(>= number 400) (int_to_mini_roman_helper\
    \ (- number 400) (string-append roman \"cd\"))]\n      [(>= number 100) (int_to_mini_roman_helper\
    \ (- number 100) (string-append roman \"c\"))]\n      [(>= number 90) (int_to_mini_roman_helper\
    \ (- number 90) (string-append roman \"xc\"))]\n      [(>= number 50) (int_to_mini_roman_helper\
    \ (- number 50) (string-append roman \"l\"))]\n      [(>= number 40) (int_to_mini_roman_helper\
    \ (- number 40) (string-append roman \"xl\"))]\n      [(>= number 10) (int_to_mini_roman_helper\
    \ (- number 10) (string-append roman \"x\"))]\n      [(>= number 9) (int_to_mini_roman_helper\
    \ (- number 9) (string-append roman \"ix\"))]\n      [(>= number 5) (int_to_mini_roman_helper\
    \ (- number 5) (string-append roman \"v\"))]\n      [(>= number 4) (int_to_mini_roman_helper\
    \ (- number 4) (string-append roman \"iv\"))]\n      [(>= number 1) (int_to_mini_roman_helper\
    \ (- number 1) (string-append roman \"i\"))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number \"\")))\n", "  (define (int_to_mini_roman-helper number)\n    (cond ((=\
    \ number 1000) \"m\")\n          ((= number 900) \"cm\")\n          ((= number\
    \ 500) \"d\")\n          ((= number 400) \"cd\")\n          ((= number 100) \"\
    c\")\n          ((= number 90) \"xc\")\n          ((= number 50) \"l\")\n    \
    \      ((= number 40) \"xl\")\n          ((= number 10) \"x\")\n          ((=\
    \ number 9) \"ix\")\n          ((= number 5) \"v\")\n          ((= number 4) \"\
    iv\")\n          ((= number 1) \"i\")))\n  (cond ((= number 0) \"\")\n       \
    \ ((= number 1) (int_to_mini_roman-helper 1))\n        ((= number 2) (string-append\
    \ (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1)))\n        ((= number\
    \ 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1)\
    \ (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n\
    \      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n      [(= number\
    \ 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number 18) \"xviii\"\
    ]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (/ number 10))\n                           (int_to_mini_roman_helper (modulo\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number\
    \ 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"\
    ]\n    [(", "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(=\
    \ number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"\
    d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n   \
    \   [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"\
    v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                          \
    \ (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number)))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (string-append (int_to_mini_roman_helper (quotient number 10))\n           \
    \                (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 400) \"cd\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n     \
    \ [else (int_to_mini_roman_helper (number - 1))]))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (string-append (int_to_mini_roman_helper (quotient number 10))\n           \
    \                (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [(= number\
    \ 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [(= number 4000) '(m\
    \ m m m)]\n      [(= number 5000) '(m m m m m)]\n      [(= number 6000", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 0) \"\")\n  \
    \        ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 10) \"x\")\n          ((= number 40) \"xl\")\n          ((= number\
    \ 50) \"l\")\n          ((= number 90) \"xc\")\n          ((= number 100) \"c\"\
    )\n          ((= number 400) \"cd\")\n          ((= number 500) \"d\")\n     \
    \     ((= number 900) \"cm\")\n          ((= number 1000) \"m\")))\n  (cond ((=\
    \ number 0) \"\")\n        ((= number 1) \"i\")\n        ((= number 2) \"ii\"\
    )\n        ((= number 3) \"iii\")\n        ((= number 4) \"iv\")\n        ((=\
    \ number 5) \"v\")\n        ((= number 6) \"vi\")\n        ((= number 7) \"vii\"\
    )\n        ((= number 8) \"viii\")\n        ((= number 9) \"ix\")\n        ((=\
    \ number 10) \"x\")\n        ((= number 40) \"xl\")\n        ((= number 50) \"\
    l\")\n        ((= number 90) \"xc\")\n        ((= number 100) \"c\")\n       \
    \ ((= number 400) \"cd\")\n        ((= number 500) \"d\")\n        ((= number\
    \ 900) \"cm\")\n        ((= number 1000) \"m\")\n        ((> number 1000) \"\"\
    )\n        ((< number 0) \"\")\n        (else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                             (int_to_mini_roman-helper\
    \ (remainder number 10))))))\n", "  (cond\n    [(= number 1) \"i\"]\n    [(= number\
    \ 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number\
    \ 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number\
    \ 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(=\
    \ number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"\
    ]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16)\
    \ \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(=\
    \ number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"\
    ]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"\
    lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number\
    \ 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(=\
    \ number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"\
    ]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800)\
    \ \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(=\
    \ number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"\
    mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number\
    \ 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"\
    ]\n    [(= number 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number\
    \ 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman_helper number)\n   \
    \ (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(=\
    \ number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"\
    c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n    \
    \  [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"\
    ]\n      [else (string-append (int_to_mini_roman_helper (quotient number 10))\n\
    \                           (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 50) \"l\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n   \
    \   [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 900)\
    \ \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (int_to_mini_roman-helper\
    \ (quotient number 10))\n            (int_to_mini_roman-helper (remainder number\
    \ 10))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (cond\n\
    \    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"\
    ]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9)\
    \ \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number\
    \ 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n  \
    \  [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"\
    xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number\
    \ 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(=\
    \ number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n\
    \    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100)\
    \ \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number\
    \ 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(=\
    \ number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"\
    cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number\
    \ 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n\
    \    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000)\
    \ \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(=\
    \ number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond ((= number 1000) \"m\")\n          ((= number 900) \"cm\"\
    )\n          ((= number 500) \"d\")\n          ((= number 400) \"cd\")\n     \
    \     ((= number 100) \"c\")\n          ((= number 90) \"xc\")\n          ((=\
    \ number 50) \"l\")\n          ((= number 40) \"xl\")\n          ((= number 10)\
    \ \"x\")\n          ((= number 9) \"ix\")\n          ((= number 5) \"v\")\n  \
    \        ((= number 4) \"iv\")\n          ((= number 1) \"i\")))\n  (cond ((=\
    \ number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper 1))\n     \
    \   ((= number 2) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond ((= number 0) \"\")\n  \
    \        ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number\
    \ 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number 50) \"\
    l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n  \
    \        ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n        \
    \  ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((= number\
    \ 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number 500)\
    \ \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"dcc\"\
    )\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\")\n  \
    \        ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                               (int_to_mini_roman_helper\
    \ (remainder number 10))))))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (cond\n    [(= number 1000) \"m\"]\n    [(= number 900) \"cm\"]\n    [(= number\
    \ 500) \"d\"]\n    [(= number 400) \"cd\"]\n    [(= number 100) \"c\"]\n    [(=\
    \ number 90) \"xc\"]\n    [(= number 50) \"l\"]\n    [(= number 40) \"xl\"]\n\
    \    [(= number 10) \"x\"]\n    [(= number 9) \"ix\"]\n    [(= number 5) \"v\"\
    ]\n    [(= number 4) \"iv\"]\n    [(= number 1) \"i\"]\n    [(= number 0) \"\"\
    ]\n    [else (string-append (int_to_mini_roman (quotient number 10))\n       \
    \                  (int_to_mini_roman (remainder number 10)))]))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 0) \"\")\n  \
    \        ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number\
    \ 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number 50) \"\
    l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n  \
    \        ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n        \
    \  ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((= number\
    \ 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number 500)\
    \ \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"dcc\"\
    )\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\")\n  \
    \        ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman-helper\
    \ (/ number 10))\n                               (int_to_mini_roman-helper (modulo\
    \ number 10))))))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3)\
    \ \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number\
    \ 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(=\
    \ number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(= number 11) \"xi\"]\n \
    \   [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"]\n    [(= number 14)\
    \ \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number\
    \ 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n\
    \    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"\
    xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70)\
    \ \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(=\
    \ number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(= number 300) \"ccc\"\
    ]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"]\n    [(= number 600)\
    \ \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(=\
    \ number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(= number 2000) \"mm\"\
    ]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"mv\"]\n    [(= number\
    \ 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number 7000) \"vmm\"]\n\
    \    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"]\n    [(= number\
    \ 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number 30000) \"xxx\"\
    ]\n    [(", "  (define (int_to_mini_roman_helper number)\n    (cond [(= number\
    \ 1000) \"m\"]\n          [(= number 900) \"cm\"]\n          [(= number 500) \"\
    d\"]\n          [(= number 400) \"cd\"]\n          [(= number 100) \"c\"]\n  \
    \        [(= number 90) \"xc\"]\n          [(= number 50) \"l\"]\n          [(=\
    \ number 40) \"xl\"]\n          [(= number 10) \"x\"]\n          [(= number 9)\
    \ \"ix\"]\n          [(= number 5) \"v\"]\n          [(= number 4) \"iv\"]\n \
    \         [(= number 1) \"i\"]\n          [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                               (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n\
    \      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n      [(= number\
    \ 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number 18) \"xviii\"\
    ]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (/ number 10))\n                           (int_to_mini_roman_helper (modulo\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond [(= number 1000) \"m\"]\n\
    \          [(= number 900) \"cm\"]\n          [(= number 500) \"d\"]\n       \
    \   [(= number 400) \"cd\"]\n          [(= number 100) \"c\"]\n          [(= number\
    \ 90) \"xc\"]\n          [(= number 50) \"l\"]\n          [(= number 40) \"xl\"\
    ]\n          [(= number 10) \"x\"]\n          [(= number 9) \"ix\"]\n        \
    \  [(= number 5) \"v\"]\n          [(= number 4) \"iv\"]\n          [(= number\
    \ 1) \"i\"]\n          [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                               (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((>= number 900) (string-append \"cm\" (int_to_mini_roman_helper (-\
    \ number 900))))\n          ((>= number 500) (string-append \"d\" (int_to_mini_roman_helper\
    \ (- number 500))))\n          ((>= number 400) (string-append \"cd\" (int_to_mini_roman_helper\
    \ (- number 400))))\n          ((>= number 100) (string-append \"c\" (int_to_mini_roman_helper\
    \ (- number 100))))\n          ((>= number 90) (string-append \"xc\" (int_to_mini_roman_helper\
    \ (- number 90))))\n          ((>= number 50) (string-append \"l\" (int_to_mini_roman_helper\
    \ (- number 50))))\n          ((>= number 40) (string-append \"xl\" (int_to_mini_roman_helper\
    \ (- number 40))))\n          ((>= number 10) (string-append \"x\" (int_to_mini_roman_helper\
    \ (- number 10))))\n          ((>= number 9) (string-append \"ix\" (int_to_mini_roman_helper\
    \ (- number 9))))\n          ((>= number 5) (string-append \"v\" (int_to_mini_roman_helper\
    \ (- number 5))))\n          ((>= number 4) (string-append \"iv\" (int_to_mini_roman_helper\
    \ (- number 4))))\n          ((>= number 1) (string-append \"i\" (int_to_mini_roman_helper\
    \ (- number 1))))\n          (else \"\")))\n  (string-downcase (int_to_mini_roman_helper\
    \ number)))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n    \
    \  [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(=\
    \ number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else\
    \ (string-append (int_to_mini_roman-helper (quotient number 10))\n           \
    \                (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (cond\n    [(= number\
    \ 1) \"i\"]\n    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number\
    \ 4) \"iv\"]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number\
    \ 7) \"vii\"]\n    [(= number 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(=\
    \ number 10) \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n\
    \    [(= number 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n    [(= number 15)\
    \ \"xv\"]\n    [(= number 16) \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(=\
    \ number 18) \"xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number 20) \"xx\"\
    ]\n    [(= number 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(= number 50)\
    \ \"l\"]\n    [(= number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number\
    \ 80) \"lxxx\"]\n    [(= number 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(=\
    \ number 200) \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number 400) \"cd\"\
    ]\n    [(= number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(= number 700)\
    \ \"dcc\"]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(=\
    \ number 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"\
    ]\n    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000)\
    \ \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n   \
    \ [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(= number 20000)\
    \ \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond ((= number 0) \"\")\n  \
    \        ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number\
    \ 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number 50) \"\
    l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n  \
    \        ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n        \
    \  ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((= number\
    \ 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number 500)\
    \ \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"dcc\"\
    )\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\")\n  \
    \        ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman_helper\
    \ (/ number 10))\n                               (int_to_mini_roman_helper (modulo\
    \ number 10))))))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman-helper\
    \ number roman-string)\n    (cond\n      [(= number 0) roman-string]\n      [(<=\
    \ number 3) (string-append (make-string number #\\i) roman-string)]\n      [(<=\
    \ number 4) (string-append #\\v roman-string)]\n      [(<= number 8) (string-append\
    \ (make-string (- number 5) #\\i) #\\v roman-string)]\n      [(<= number 9) (string-append\
    \ #\\x roman-string)]\n      [(<= number 39) (string-append (make-string (- number\
    \ 10) #\\i) #\\x roman-string)]\n      [(<= number 40) (string-append #\\l roman-string)]\n\
    \      [(<= number 89) (string-append (make-string (- number 50) #\\i) #\\l roman-string)]\n\
    \      [(<= number 90) (string-append #\\c roman-string)]\n      [(<= number 399)\
    \ (string-append (make-string (- number 100) #\\i) #\\c roman-string)]\n     \
    \ [(<= number 400) (string-append #\\d roman-string)]\n      [(<= number 899)\
    \ (string-append (make-string (- number 500) #\\i) #\\d roman-string)]\n     \
    \ [(<= number 900) (string-append #\\m roman-string)]\n      [(<= number 999)\
    \ (string-append (make-string (- number 1000) #\\i) #\\m roman-string)]\n    \
    \  [else (string-append #\\m #\\m roman-string)]))\n  (string-downcase (int_to_mini_roman-helper\
    \ number \"\")))\n", "  (define (int_to_mini_roman-helper number)\n    (cond ((=\
    \ number 1000) \"m\")\n          ((= number 900) \"cm\")\n          ((= number\
    \ 500) \"d\")\n          ((= number 400) \"cd\")\n          ((= number 100) \"\
    c\")\n          ((= number 90) \"xc\")\n          ((= number 50) \"l\")\n    \
    \      ((= number 40) \"xl\")\n          ((= number 10) \"x\")\n          ((=\
    \ number 9) \"ix\")\n          ((= number 5) \"v\")\n          ((= number 4) \"\
    iv\")\n          ((= number 1) \"i\")))\n  (cond ((= number 0) \"\")\n       \
    \ ((= number 1) (int_to_mini_roman-helper 1))\n        ((= number 2) (string-append\
    \ (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1)))\n        ((= number\
    \ 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1)\
    \ (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((< number 0) (error \"Negative\
    \ number\"))\n        ((<= number 1000)\n         (string-append (int_to_mini_roman-helper\
    \ number)\n                        (int_to_mini_roman (- number (modulo number\
    \ 10)))))\n        (else (error \"Number too large\"))))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 11) \"xi\"]\n      [(= number\
    \ 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n      [(= number 14) \"xiv\"]\n\
    \      [(= number 15) \"xv\"]\n      [(= number 16) \"xvi\"]\n      [(= number\
    \ 17) \"xvii\"]\n      [(= number 18) \"xviii\"]\n      [(= number 19) \"xix\"\
    ]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n   \
    \   [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n \
    \     [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n\
    \      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 1000) \"m\"]\n      [(= number 2000) \"mm\"]\n      [(= number 3000) \"mmm\"\
    ]\n      [(= number 4000) \"mmmm\"]\n      [(= number 5000) \"mmmmmm\"]\n    \
    \  [(= number 6000) \"mmmmmmm\"]\n      [(= number 7000) \"mmmmmmmm\"]\n     \
    \ [(= number 8000) \"mmmmmmmmm\"]\n      [(= number 9000) \"mmmmmmmmmm\"]\n  \
    \    [(= number", "  (define (int_to_mini_roman-helper number)\n    (cond\n  \
    \    [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman-helper (quotient number 10)) (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (int_to_mini_roman-helper number))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [else (int_to_mini_roman_helper (- number 1000)) \"m\"]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (cond\n    [(= number 1) \"i\"]\n\
    \    [(= number 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"\
    ]\n    [(= number 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"\
    ]\n    [(= number 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10)\
    \ \"x\"]\n    [(= number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number\
    \ 13) \"xiii\"]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n   \
    \ [(= number 16) \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"\
    xviii\"]\n    [(= number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number\
    \ 30) \"xxx\"]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(=\
    \ number 60) \"lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"\
    ]\n    [(= number 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200)\
    \ \"cc\"]\n    [(= number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(=\
    \ number 500) \"d\"]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"\
    ]\n    [(= number 800) \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number\
    \ 1000) \"m\"]\n    [(= number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n\
    \    [(= number 4000) \"mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000)\
    \ \"vm\"]\n    [(= number 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n   \
    \ [(= number 9000) \"mx\"]\n    [(= number 10000) \"x\"]\n    [(= number 20000)\
    \ \"xx\"]\n    [(= number 30000) \"xxx\"]\n    [(", "  (cond\n    ((= number 1)\
    \ \"i\")\n    ((= number 2) \"ii\")\n    ((= number 3) \"iii\")\n    ((= number\
    \ 4) \"iv\")\n    ((= number 5) \"v\")\n    ((= number 6) \"vi\")\n    ((= number\
    \ 7) \"vii\")\n    ((= number 8) \"viii\")\n    ((= number 9) \"ix\")\n    ((=\
    \ number 10) \"x\")\n    ((= number 11) \"xi\")\n    ((= number 12) \"xii\")\n\
    \    ((= number 13) \"xiii\")\n    ((= number 14) \"xiv\")\n    ((= number 15)\
    \ \"xv\")\n    ((= number 16) \"xvi\")\n    ((= number 17) \"xvii\")\n    ((=\
    \ number 18) \"xviii\")\n    ((= number 19) \"xix\")\n    ((= number 20) \"xx\"\
    )\n    ((= number 30) \"xxx\")\n    ((= number 40) \"xl\")\n    ((= number 50)\
    \ \"l\")\n    ((= number 60) \"lx\")\n    ((= number 70) \"lxx\")\n    ((= number\
    \ 80) \"lxxx\")\n    ((= number 90) \"xc\")\n    ((= number 100) \"c\")\n    ((=\
    \ number 200) \"cc\")\n    ((= number 300) \"ccc\")\n    ((= number 400) \"cd\"\
    )\n    ((= number 500) \"d\")\n    ((= number 600) \"dc\")\n    ((= number 700)\
    \ \"dcc\")\n    ((= number 800) \"dccc\")\n    ((= number 900) \"cm\")\n    ((=\
    \ number 1000) \"m\")\n    ((= number 2000) \"mm\")\n    ((= number 3000) \"mmm\"\
    )\n    ((= number 4000) \"mv\")\n    ((= number 5000) \"v\")\n    ((= number 6000)\
    \ \"vm\")\n    ((= number 7000) \"vmm\")\n    ((= number 8000) \"vmmm\")\n   \
    \ ((= number 9000) \"mx\")\n    ((= number 10000) \"x\")\n    ((= number 20000)\
    \ \"xx\")\n    ((= number 30000) \"xxx\")\n    ((", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 50) \"l\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n   \
    \   [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 900)\
    \ \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (/ number 10))\n                           (int_to_mini_roman_helper (modulo\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number roman-string)\n    (cond ((= number\
    \ 0) roman-string)\n          ((= number 1) (string-append roman-string \"i\"\
    ))\n          ((= number 2) (string-append roman-string \"ii\"))\n          ((=\
    \ number 3) (string-append roman-string \"iii\"))\n          ((= number 4) (string-append\
    \ roman-string \"iv\"))\n          ((= number 5) (string-append roman-string \"\
    v\"))\n          ((= number 6) (string-append roman-string \"vi\"))\n        \
    \  ((= number 7) (string-append roman-string \"vii\"))\n          ((= number 8)\
    \ (string-append roman-string \"viii\"))\n          ((= number 9) (string-append\
    \ roman-string \"ix\"))\n          ((= number 10) (string-append roman-string\
    \ \"x\"))\n          ((= number 11) (string-append roman-string \"xi\"))\n   \
    \       ((= number 12) (string-append roman-string \"xii\"))\n          ((= number\
    \ 13) (string-append roman-string \"xiii\"))\n          ((= number 14) (string-append\
    \ roman-string \"xiv\"))\n          ((= number 15) (string-append roman-string\
    \ \"xv\"))\n          ((= number 16) (string-append roman-string \"xvi\"))\n \
    \         ((= number 17) (string-append roman-string \"xvii\"))\n          ((=\
    \ number 18) (string-append roman-string \"xviii\"))\n          ((= number 19)\
    \ (string-append roman-string \"xix\"))\n          ((= number 20) (string-append\
    \ roman-string \"xx\"))\n          ((= number 30) (string-append roman-string\
    \ \"xxx\"))\n          ((= number 40) (string-append roman-string \"xl\"))\n \
    \         ((= number 50) (string-append roman-string \"l\"))\n          ((= number\
    \ 60) (string-append roman-string \"lx\"))\n          ((= number 70) (string-append\
    \ roman-string \"lxx\"))\n          ((= number 80) (string-append r", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 500) \"d\"]\n      [(= number 100) \"c\"]\n      [(= number\
    \ 50) \"l\"]\n      [(= number 10) \"x\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append\n             (int_to_mini_roman-helper\
    \ (quotient number 10))\n             (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define\
    \ (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (convert-digit digit)\n    (cond ((= digit 1) \"i\")\n          ((= digit\
    \ 2) \"ii\")\n          ((= digit 3) \"iii\")\n          ((= digit 4) \"iv\")\n\
    \          ((= digit 5) \"v\")\n          ((= digit 6) \"vi\")\n          ((=\
    \ digit 7) \"vii\")\n          ((= digit 8) \"viii\")\n          ((= digit 9)\
    \ \"ix\")))\n  (define (convert-tens digit)\n    (cond ((= digit 1) \"x\")\n \
    \         ((= digit 2) \"xx\")\n          ((= digit 3) \"xxx\")\n          ((=\
    \ digit 4) \"xl\")\n          ((= digit 5) \"l\")\n          ((= digit 6) \"lx\"\
    )\n          ((= digit 7) \"lxx\")\n          ((= digit 8) \"lxxx\")\n       \
    \   ((= digit 9) \"xc\")))\n  (define (convert-hundreds digit)\n    (cond ((=\
    \ digit 1) \"c\")\n          ((= digit 2) \"cc\")\n          ((= digit 3) \"ccc\"\
    )\n          ((= digit 4) \"cd\")\n          ((= digit 5) \"d\")\n          ((=\
    \ digit 6) \"dc\")\n          ((= digit 7) \"dcc\")\n          ((= digit 8) \"\
    dccc\")\n          ((= digit 9) \"cm\")))\n  (define (convert-thousands digit)\n\
    \    (cond ((= digit 1) \"m\")\n          ((= digit 2) \"mm\")\n          ((=\
    \ digit 3) \"mmm\")))\n  (define (convert-number number)\n    (cond ((<= number\
    \ 0) \"\")\n          ((<= number 9) (convert-digit number))\n          ((<= number\
    \ 99) (convert-tens (quotient number 10)) (convert-number (remainder number 10)))\n\
    \          ((<= number 999) (convert-hundreds (quotient number 100)) (convert-number\
    \ (remainder number 100)))\n          ((<= number 9999) (convert-thousands (quotient\
    \ number 1000)) (convert-number (remainder number 1000)))))\n  (con", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond ((= number 0) \"\")\n         \
    \ ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((= number\
    \ 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5) \"v\"\
    )\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n       \
    \   ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n          ((= number\
    \ 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number 30) \"xxx\"\
    )\n          ((= number 40) \"xl\")\n          ((= number 50) \"l\")\n       \
    \   ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n          ((= number\
    \ 80) \"lxxx\")\n          ((= number 90) \"xc\")\n          ((= number 100) \"\
    c\")\n          ((= number 200) \"cc\")\n          ((= number 300) \"ccc\")\n\
    \          ((= number 400) \"cd\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 600) \"dc\")\n          ((= number 700) \"dcc\")\n          ((=\
    \ number 800) \"dccc\")\n          ((= number 900) \"cm\")\n          ((= number\
    \ 1000) \"m\")\n          (else (string-append (int_to_mini_roman_helper (/ number\
    \ 10))\n                               (int_to_mini_roman_helper (modulo number\
    \ 10))))))\n  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [else (string-append (int_to_mini_roman_helper (/ number 10))\n         \
    \                  (int_to_mini_roman_helper (modulo number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [(= number 0) \"\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (- number (quotient number 10) * 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 11) \"xi\"]\n      [(= number 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n\
    \      [(= number 14) \"xiv\"]\n      [(= number 15) \"xv\"]\n      [(= number\
    \ 16) \"xvi\"]\n      [(= number 17) \"xvii\"]\n      [(= number 18) \"xviii\"\
    ]\n      [(= number 19) \"xix\"]\n      [(= number 20) \"xx\"]\n      [(= number\
    \ 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n  \
    \    [(= number 60) \"lx\"]\n      [(= number 70) \"lxx\"]\n      [(= number 80)\
    \ \"lxxx\"]\n      [(= number 90) \"xc\"]\n      [(= number 100) \"c\"]\n    \
    \  [(= number 200) \"cc\"]\n      [(= number 300) \"ccc\"]\n      [(= number 400)\
    \ \"cd\"]\n      [(= number 500) \"d\"]\n      [(= number 600) \"dc\"]\n     \
    \ [(= number 700) \"dcc\"]\n      [(= number 800) \"dccc\"]\n      [(= number\
    \ 900) \"cm\"]\n      [(= number 1000) \"m\"]\n      [else (int_to_mini_roman_helper\
    \ (modulo number 1000))\n            (int_to_mini_roman_helper (/ number 1000))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [(= number 2000) '(m m)]\n      [(= number 3000) '(m m m)]\n      [else\
    \ (append (int_to_mini_roman-helper (modulo number 1000))\n                  \
    \  (int_to_mini_roman-helper (/ number 1000)))]))\n  (string-join (int_to_mini_roman-helper\
    \ number) \"\"))\n", "  (define (int_to_mini_roman-helper number)\n    (cond\n\
    \      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number 2) '(i\
    \ i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n      [(= number\
    \ 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v i i)]\n     \
    \ [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(= number 10)\
    \ '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12) '(x i i)]\n      [(=\
    \ number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n      [(= number 15)\
    \ '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n\
    \      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x i x)]\n      [(=\
    \ number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x\
    \ x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(=\
    \ number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90)\
    \ '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(=\
    \ number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n      [(= number 500)\
    \ '(c d)]\n      [(= number 600) '(d)]\n      [(= number 700) '(d c)]\n      [(=\
    \ number 800) '(d c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000)\
    \ '(m)]\n      [else (append (int_to_mini_roman-helper (/ number 10))\n      \
    \              (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-join\
    \ (int_to_mini_", "  (define (int_to_mini_roman-helper number)\n    (cond ((=\
    \ number 1000) \"m\")\n          ((= number 900) \"cm\")\n          ((= number\
    \ 500) \"d\")\n          ((= number 400) \"cd\")\n          ((= number 100) \"\
    c\")\n          ((= number 90) \"xc\")\n          ((= number 50) \"l\")\n    \
    \      ((= number 40) \"xl\")\n          ((= number 10) \"x\")\n          ((=\
    \ number 9) \"ix\")\n          ((= number 5) \"v\")\n          ((= number 4) \"\
    iv\")\n          ((= number 1) \"i\")))\n  (cond ((= number 0) \"\")\n       \
    \ ((< number 0) (error \"number must be positive\"))\n        ((< number 4) (string-append\
    \ (int_to_mini_roman-helper number)\n                                     (int_to_mini_roman\
    \ (- number number))))\n        ((< number 9) (string-append (int_to_mini_roman-helper\
    \ 5)\n                                     (int_to_mini_roman (- number 5))))\n\
    \        ((< number 40) (string-append (int_to_mini_roman-helper 10)\n       \
    \                               (int_to_mini_roman (- number 10))))\n        ((<\
    \ number 50) (string-append (int_to_mini_roman-helper 40)\n                  \
    \                    (int_to_mini_roman (- number 40))))\n        ((< number 90)\
    \ (string-append (int_to_mini_roman-helper 50)\n                             \
    \         (int_to_mini_roman (- number 50))))\n        ((< number 100) (string-append\
    \ (int_to_mini_roman-helper 90)\n                                       (int_to_mini_roman\
    \ (- number 90))))\n        ((< number 400) (string-append (int_to_mini_roman-helper\
    \ 100)\n                                       (int_to_mini_roman (- number 100))))\n\
    \        ((< number 500) (string-append (int_to_mini_roman-helper 400)\n     \
    \                                  (int_to_mini_roman (- number 400))))\n    \
    \    ((< number 900) (string-append (int_to_mini_roman-helper 500", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ 1))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (list->string (int_to", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                    (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [else (string-append (int_to_mini_roman_helper (/ number 10))\n         \
    \                  (int_to_mini_roman_helper (modulo number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number roman-string)\n    (cond ((= number\
    \ 0) roman-string)\n          ((= number 1) (string-append roman-string \"i\"\
    ))\n          ((= number 2) (string-append roman-string \"ii\"))\n          ((=\
    \ number 3) (string-append roman-string \"iii\"))\n          ((= number 4) (string-append\
    \ roman-string \"iv\"))\n          ((= number 5) (string-append roman-string \"\
    v\"))\n          ((= number 6) (string-append roman-string \"vi\"))\n        \
    \  ((= number 7) (string-append roman-string \"vii\"))\n          ((= number 8)\
    \ (string-append roman-string \"viii\"))\n          ((= number 9) (string-append\
    \ roman-string \"ix\"))\n          ((= number 10) (string-append roman-string\
    \ \"x\"))\n          ((= number 11) (string-append roman-string \"xi\"))\n   \
    \       ((= number 12) (string-append roman-string \"xii\"))\n          ((= number\
    \ 13) (string-append roman-string \"xiii\"))\n          ((= number 14) (string-append\
    \ roman-string \"xiv\"))\n          ((= number 15) (string-append roman-string\
    \ \"xv\"))\n          ((= number 16) (string-append roman-string \"xvi\"))\n \
    \         ((= number 17) (string-append roman-string \"xvii\"))\n          ((=\
    \ number 18) (string-append roman-string \"xviii\"))\n          ((= number 19)\
    \ (string-append roman-string \"xix\"))\n          ((= number 20) (string-append\
    \ roman-string \"xx\"))\n          ((= number 30) (string-append roman-string\
    \ \"xxx\"))\n          ((= number 40) (string-append roman-string \"xl\"))\n \
    \         ((= number 50) (string-append roman-string \"l\"))\n          ((= number\
    \ 60) (string-append roman-string \"lx\"))\n          ((= number 70) (string-append\
    \ roman-string \"lxx\"))\n          ((= number 80) (string-append r", "  (define\
    \ (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000) \"m\"]\n\
    \      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(= number\
    \ 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number 10)\
    \ \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number\
    \ 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((<= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ number))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1)\n\
    \                                     (int_to_mini_roman-helper 1)))\n       \
    \ ((= number 3) (string-append (int_to_mini_roman-helper 1)\n                \
    \                     (int_to_mini_roman-helper 1)\n                         \
    \            (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5)\n                           \
    \          (int_to_mini_roman-helper 1)))\n        ((= number 7) (string-append\
    \ (int_to_mini_roman-helper 5)\n                                     (int_to_mini_roman-helper\
    \ 1)\n                                     (int_to_mini_roman-helper 1)))\n  \
    \      ((= number 8) (string-append (int_to_mini_roman-helper 5)\n           \
    \                          (int_to_mini_roman-helper 1)\n                    \
    \                 (int_to_mini_roman-helper 1)\n                             \
    \        (int_to_mini_roman-helper 1)))\n        ((= number 9) (int_to_mini_roman-helper\
    \ 9))\n        ((= number", "  (cond\n    [(= number 1) \"i\"]\n    [(= number\
    \ 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number\
    \ 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number\
    \ 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(=\
    \ number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"\
    ]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16)\
    \ \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(=\
    \ number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"\
    ]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"\
    lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number\
    \ 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(=\
    \ number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"\
    ]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800)\
    \ \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(=\
    \ number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"\
    mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number\
    \ 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"\
    ]\n    [(= number 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number\
    \ 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper number)\n   \
    \ (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n      [(= number\
    \ 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4) '(i v)]\n   \
    \   [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number 7) '(v\
    \ i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n      [(=\
    \ number 10) '(x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n\
    \      [(= number 40) '(x l)]\n      [(= number 50) '(l)]\n      [(= number 60)\
    \ '(l x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n\
    \      [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c d)]\n  \
    \    [(= number 500) '(d)]\n      [(= number 600) '(d c)]\n      [(= number 700)\
    \ '(d c c)]\n      [(= number 800) '(d c c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                    (int_to_mini_roman-helper (remainder number\
    \ 10)))]))\n  (string-join (int_to_mini_roman-helper number) \"\"))\n", "  (let\
    \ ([ones (number % 10)]\n        [tens (number % 100)])\n    (cond [(= number\
    \ 1000) \"m\"]\n          [(= number 900) \"cm\"]\n          [(= number 500) \"\
    d\"]\n          [(= number 400) \"cd\"]\n          [(= number 100) \"c\"]\n  \
    \        [(= number 90) \"xc\"]\n          [(= number 50) \"l\"]\n          [(=\
    \ number 40) \"xl\"]\n          [(= number 10) \"x\"]\n          [(= number 9)\
    \ \"ix\"]\n          [(= number 5) \"v\"]\n          [(= number 4) \"iv\"]\n \
    \         [(= number 1) \"i\"]\n          [else (string-append (int_to_mini_roman\
    \ (quotient number 10))\n                               (int_to_mini_roman (remainder\
    \ number 10)))])))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman_helper (quotient number 10))\n\
    \                           (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 20)\
    \ '(x x)]\n      [(= number 30) '(x x x)]\n      [(= number 40) '(x l)]\n    \
    \  [(= number 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l\
    \ x x)]\n      [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n    \
    \  [(= number 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300)\
    \ '(c c c)]\n      [(= number 400) '(c d)]\n      [(= number 500) '(d)]\n    \
    \  [(= number 600) '(d c)]\n      [(= number 700) '(d c c)]\n      [(= number\
    \ 800) '(d c c c)]\n      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n\
    \      [else (append (int_to_mini_roman_helper (quotient number 10))\n       \
    \             (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-join\
    \ (int_to_mini_roman_helper number) \"\"))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman_helper (/ number 10)) (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-join (int_to_mini_roman_", "  (define (int_to_mini_roman_helper\
    \ number roman-string)\n    (cond ((= number 0) roman-string)\n          ((= number\
    \ 1) (string-append roman-string \"i\"))\n          ((= number 2) (string-append\
    \ roman-string \"ii\"))\n          ((= number 3) (string-append roman-string \"\
    iii\"))\n          ((= number 4) (string-append roman-string \"iv\"))\n      \
    \    ((= number 5) (string-append roman-string \"v\"))\n          ((= number 6)\
    \ (string-append roman-string \"vi\"))\n          ((= number 7) (string-append\
    \ roman-string \"vii\"))\n          ((= number 8) (string-append roman-string\
    \ \"viii\"))\n          ((= number 9) (string-append roman-string \"ix\"))\n \
    \         ((= number 10) (string-append roman-string \"x\"))\n          ((= number\
    \ 20) (string-append roman-string \"xx\"))\n          ((= number 30) (string-append\
    \ roman-string \"xxx\"))\n          ((= number 40) (string-append roman-string\
    \ \"xl\"))\n          ((= number 50) (string-append roman-string \"l\"))\n   \
    \       ((= number 60) (string-append roman-string \"lx\"))\n          ((= number\
    \ 70) (string-append roman-string \"lxx\"))\n          ((= number 80) (string-append\
    \ roman-string \"lxxx\"))\n          ((= number 90) (string-append roman-string\
    \ \"xc\"))\n          ((= number 100) (string-append roman-string \"c\"))\n  \
    \        ((= number 200) (string-append roman-string \"cc\"))\n          ((= number\
    \ 300) (string-append roman-string \"ccc\"))\n          ((= number 400) (string-append\
    \ roman-string \"cd\"))\n          ((= number 500) (string-append roman-string\
    \ \"d\"))\n          ((= number 600) (string-append roman-string \"dc\"))\n  \
    \        ((= number 700) (string-append roman-string \"dcc\"))\n          ((=\
    \ number 800) (string-append roman-string \"dccc", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman-helper (quotient number 10))\n                    (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper (quotient number\
    \ 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number roman-string)\n    (cond\n      [(= number 0) roman-string]\n      [(=\
    \ number 1000) (string-append \"m\" (int_to_mini_roman_helper (- number 1000)\
    \ roman-string))]\n      [(= number 900) (string-append \"cm\" (int_to_mini_roman_helper\
    \ (- number 900) roman-string))]\n      [(= number 500) (string-append \"d\" (int_to_mini_roman_helper\
    \ (- number 500) roman-string))]\n      [(= number 400) (string-append \"cd\"\
    \ (int_to_mini_roman_helper (- number 400) roman-string))]\n      [(= number 100)\
    \ (string-append \"c\" (int_to_mini_roman_helper (- number 100) roman-string))]\n\
    \      [(= number 90) (string-append \"xc\" (int_to_mini_roman_helper (- number\
    \ 90) roman-string))]\n      [(= number 50) (string-append \"l\" (int_to_mini_roman_helper\
    \ (- number 50) roman-string))]\n      [(= number 40) (string-append \"xl\" (int_to_mini_roman_helper\
    \ (- number 40) roman-string))]\n      [(= number 10) (string-append \"x\" (int_to_mini_roman_helper\
    \ (- number 10) roman-string))]\n      [(= number 9) (string-append \"ix\" (int_to_mini_roman_helper\
    \ (- number 9) roman-string))]\n      [(= number 5) (string-append \"v\" (int_to_mini_roman_helper\
    \ (- number 5) roman-string))]\n      [(= number 4) (string-append \"iv\" (int_to_mini_roman_helper\
    \ (- number 4) roman-string))]\n      [(= number 1) (string-append \"i\" (int_to_mini_roman_helper\
    \ (- number 1) roman-string))]\n      [else (error \"Invalid input\")]))\n  (string-downcase",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 0) \"\")\n  \
    \        ((= number 1) \"i\")\n          ((= number 2) \"ii\")\n          ((=\
    \ number 3) \"iii\")\n          ((= number 4) \"iv\")\n          ((= number 5)\
    \ \"v\")\n          ((= number 6) \"vi\")\n          ((= number 7) \"vii\")\n\
    \          ((= number 8) \"viii\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 10) \"x\")\n          ((= number 20) \"xx\")\n          ((= number\
    \ 30) \"xxx\")\n          ((= number 40) \"xl\")\n          ((= number 50) \"\
    l\")\n          ((= number 60) \"lx\")\n          ((= number 70) \"lxx\")\n  \
    \        ((= number 80) \"lxxx\")\n          ((= number 90) \"xc\")\n        \
    \  ((= number 100) \"c\")\n          ((= number 200) \"cc\")\n          ((= number\
    \ 300) \"ccc\")\n          ((= number 400) \"cd\")\n          ((= number 500)\
    \ \"d\")\n          ((= number 600) \"dc\")\n          ((= number 700) \"dcc\"\
    )\n          ((= number 800) \"dccc\")\n          ((= number 900) \"cm\")\n  \
    \        ((= number 1000) \"m\")\n          (else (string-append (int_to_mini_roman-helper\
    \ (/ number 10))\n                               (int_to_mini_roman-helper (modulo\
    \ number 10))))))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    \ ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number\
    \ 3) \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n     \
    \ [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"\
    viii\"]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [(= number 2000) \"mm\"]\n      [(= number 3000) \"mmm\"]\n      [(= number\
    \ 4000) \"mv\"]\n      [(= number 5000) \"v\"]\n      [(= number 6000) \"vm\"\
    ]\n      [(= number 7000) \"vmm\"]\n      [(= number 8000) \"vmmm\"]\n      [(=\
    \ number 9000) \"mx\"]\n      [(= number 10000) \"x\"]\n      [(= number 20000)\
    \ \"xx\"]\n      [(= number 30000) \"xxx\"]\n      [(= number 40000) \"xl\"]\n\
    \      [(= number 50000) \"l\"]\n      [(= number 60000) \"lx\"]\n      [(= number\
    \ 70000) \"lxx\"]\n      [(= number 80000) \"lxxx\"]\n      [(= number 90000)\
    \ \"xc\"]\n      [(= number 100000", "  (define (int_to_mini_roman_helper number\
    \ result)\n    (cond ((= number 0) result)\n          ((= number 1000) (string-append\
    \ result \"m\"))\n          ((= number 900) (string-append result \"cm\"))\n \
    \         ((= number 500) (string-append result \"d\"))\n          ((= number\
    \ 400) (string-append result \"cd\"))\n          ((= number 100) (string-append\
    \ result \"c\"))\n          ((= number 90) (string-append result \"xc\"))\n  \
    \        ((= number 50) (string-append result \"l\"))\n          ((= number 40)\
    \ (string-append result \"xl\"))\n          ((= number 10) (string-append result\
    \ \"x\"))\n          ((= number 9) (string-append result \"ix\"))\n          ((=\
    \ number 5) (string-append result \"v\"))\n          ((= number 4) (string-append\
    \ result \"iv\"))\n          ((= number 1) (string-append result \"i\"))\n   \
    \       (else (int_to_mini_roman_helper (- number (modulo number 10))\n      \
    \                                    (string-append result (int_to_mini_roman_helper\
    \ (modulo number 10) \"\"))))))\n  (string-downcase (int_to_mini_roman_helper\
    \ number \"\")))\n", "  (cond\n    [(= number 1) \"i\"]\n    [(= number 2) \"\
    ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number 5)\
    \ \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number\
    \ 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(=\
    \ number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"\
    ]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16)\
    \ \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(=\
    \ number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"\
    ]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"\
    lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number\
    \ 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(=\
    \ number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"\
    ]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800)\
    \ \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [else\
    \ (string-append (int_to_mini_roman (/ number 10)) (int_to_mini_roman (remainder\
    \ number 10)))]))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n\
    \      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n      [(= number 2) \"\
    ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number\
    \ 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n     \
    \ [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"\
    x\"]\n      [(= number 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 400) \"cd\"]\n \
    \     [(= number 500) \"d\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 1000) \"m\"]\n      [else (int_to_mini_roman_helper (quotient number 10))\n\
    \            (int_to_mini_roman_helper (remainder number 10))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) \"\"]\n      [(= number 1) \"i\"]\n\
    \      [(= number 2) \"ii\"]\n      [(= number 3) \"iii\"]\n      [(= number 4)\
    \ \"iv\"]\n      [(= number 5) \"v\"]\n      [(= number 6) \"vi\"]\n      [(=\
    \ number 7) \"vii\"]\n      [(= number 8) \"viii\"]\n      [(= number 9) \"ix\"\
    ]\n      [(= number 10) \"x\"]\n      [(= number 11) \"xi\"]\n      [(= number\
    \ 12) \"xii\"]\n      [(= number 13) \"xiii\"]\n      [(= number 14) \"xiv\"]\n\
    \      [(= number 15) \"xv\"]\n      [(= number 16) \"xvi\"]\n      [(= number\
    \ 17) \"xvii\"]\n      [(= number 18) \"xviii\"]\n      [(= number 19) \"xix\"\
    ]\n      [(= number 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n   \
    \   [(= number 70) \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number\
    \ 90) \"xc\"]\n      [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n \
    \     [(= number 300) \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n\
    \      [(= number 800) \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 1000) \"m\"]\n      [else (string-append (int_to_mini_roman_helper (/ number\
    \ 10))\n                           (int_to_mini_roman_helper (modulo number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10)) (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond ((= number 1000) \"m\")\n\
    \          ((= number 900) \"cm\")\n          ((= number 500) \"d\")\n       \
    \   ((= number 400) \"cd\")\n          ((= number 100) \"c\")\n          ((= number\
    \ 90) \"xc\")\n          ((= number 50) \"l\")\n          ((= number 40) \"xl\"\
    )\n          ((= number 10) \"x\")\n          ((= number 9) \"ix\")\n        \
    \  ((= number 5) \"v\")\n          ((= number 4) \"iv\")\n          ((= number\
    \ 1) \"i\")))\n  (cond ((= number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper\
    \ 1))\n        ((= number 2) (string-append (int_to_mini_roman-helper 1)\n   \
    \                                  (int_to_mini_roman-helper 1)))\n        ((=\
    \ number 3) (string-append (int_to_mini_roman-helper 1)\n                    \
    \                 (int_to_mini_roman-helper 1)\n                             \
    \        (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5)\n                           \
    \          (int_to_mini_roman-helper 1)))\n        ((= number 7) (string-append\
    \ (int_to_mini_roman-helper 5)\n                                     (int_to_mini_roman-helper\
    \ 1)\n                                     (int_to_mini_roman-helper 1)))\n  \
    \      ((= number 8) (string-append (int_to_mini_roman-helper 5)\n           \
    \                          (int_to_mini_roman-helper 1)\n                    \
    \                 (int_to_mini_roman-helper 1)\n                             \
    \        (int_to_mini_roman-helper 1)))\n        ((= number 9) (int_to_mini_roman-helper\
    \ 9))\n        ((= number 10", "  (cond\n    [(= number 1) \"i\"]\n    [(= number\
    \ 2) \"ii\"]\n    [(= number 3) \"iii\"]\n    [(= number 4) \"iv\"]\n    [(= number\
    \ 5) \"v\"]\n    [(= number 6) \"vi\"]\n    [(= number 7) \"vii\"]\n    [(= number\
    \ 8) \"viii\"]\n    [(= number 9) \"ix\"]\n    [(= number 10) \"x\"]\n    [(=\
    \ number 11) \"xi\"]\n    [(= number 12) \"xii\"]\n    [(= number 13) \"xiii\"\
    ]\n    [(= number 14) \"xiv\"]\n    [(= number 15) \"xv\"]\n    [(= number 16)\
    \ \"xvi\"]\n    [(= number 17) \"xvii\"]\n    [(= number 18) \"xviii\"]\n    [(=\
    \ number 19) \"xix\"]\n    [(= number 20) \"xx\"]\n    [(= number 30) \"xxx\"\
    ]\n    [(= number 40) \"xl\"]\n    [(= number 50) \"l\"]\n    [(= number 60) \"\
    lx\"]\n    [(= number 70) \"lxx\"]\n    [(= number 80) \"lxxx\"]\n    [(= number\
    \ 90) \"xc\"]\n    [(= number 100) \"c\"]\n    [(= number 200) \"cc\"]\n    [(=\
    \ number 300) \"ccc\"]\n    [(= number 400) \"cd\"]\n    [(= number 500) \"d\"\
    ]\n    [(= number 600) \"dc\"]\n    [(= number 700) \"dcc\"]\n    [(= number 800)\
    \ \"dccc\"]\n    [(= number 900) \"cm\"]\n    [(= number 1000) \"m\"]\n    [(=\
    \ number 2000) \"mm\"]\n    [(= number 3000) \"mmm\"]\n    [(= number 4000) \"\
    mv\"]\n    [(= number 5000) \"v\"]\n    [(= number 6000) \"vm\"]\n    [(= number\
    \ 7000) \"vmm\"]\n    [(= number 8000) \"vmmm\"]\n    [(= number 9000) \"mx\"\
    ]\n    [(= number 10000) \"x\"]\n    [(= number 20000) \"xx\"]\n    [(= number\
    \ 30000) \"xxx\"]\n    [(", "  (define (int_to_mini_roman-helper number)\n   \
    \ (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(=\
    \ number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"\
    c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n    \
    \  [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"\
    ]\n      [else (string-append\n              (int_to_mini_roman-helper (quotient\
    \ number (car (filter (lambda (x) (<= x number)) '(1000 900 500 400 100 90 50\
    \ 40 10 9 5 4 1))))))\n              (int_to_mini_roman-helper (remainder number\
    \ (car (filter (lambda (x) (<= x number)) '(1000 900 500 400 100 90 50 40 10 9\
    \ 5 4 1)))))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n", " \
    \ (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\
    \"]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number\
    \ 3) \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n     \
    \ [(= number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"\
    viii\"]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [else (string-append (int_to_mini_roman_helper (/ number 10))\n         \
    \                  (int_to_mini_roman_helper (modulo number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (append (int_to_mini_roman_helper (quotient number\
    \ 10))\n                    (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10)) (int_to_mini_roman-helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond ((= number 1000) \"m\")\n          ((= number 900) \"cm\"\
    )\n          ((= number 500) \"d\")\n          ((= number 400) \"cd\")\n     \
    \     ((= number 100) \"c\")\n          ((= number 90) \"xc\")\n          ((=\
    \ number 50) \"l\")\n          ((= number 40) \"xl\")\n          ((= number 10)\
    \ \"x\")\n          ((= number 9) \"ix\")\n          ((= number 5) \"v\")\n  \
    \        ((= number 4) \"iv\")\n          ((= number 1) \"i\")))\n  (cond ((=\
    \ number 0) \"\")\n        ((= number 1) (int_to_mini_roman-helper 1))\n     \
    \   ((= number 2) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 3) (string-append (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 4) (int_to_mini_roman-helper\
    \ 4))\n        ((= number 5) (int_to_mini_roman-helper 5))\n        ((= number\
    \ 6) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper 1)))\n\
    \        ((= number 7) (string-append (int_to_mini_roman-helper 5) (int_to_mini_roman-helper\
    \ 1) (int_to_mini_roman-helper 1)))\n        ((= number 8) (string-append (int_to_mini_roman-helper\
    \ 5) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper 1) (int_to_mini_roman-helper\
    \ 1)))\n        ((= number 9) (int_to_mini_roman-helper 9))\n        ((= number\
    \ 10) (int_to_mini_roman-helper 10))\n        ((= number 11) (string-append (int",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [(= number 0) \"\"]\n \
    \     [else (append (int_to_mini_roman_helper (quotient number 10))\n        \
    \            (int_to_mini_roman_helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (cond\n    [(= number 1000) \"m\"\
    ]\n    [(= number 900) \"cm\"]\n    [(= number 500) \"d\"]\n    [(= number 400)\
    \ \"cd\"]\n    [(= number 100) \"c\"]\n    [(= number 90) \"xc\"]\n    [(= number\
    \ 50) \"l\"]\n    [(= number 40) \"xl\"]\n    [(= number 10) \"x\"]\n    [(= number\
    \ 9) \"ix\"]\n    [(= number 5) \"v\"]\n    [(= number 4) \"iv\"]\n    [(= number\
    \ 1) \"i\"]\n    [else (string-append (int_to_mini_roman (quotient number 10))\n\
    \                         (int_to_mini_roman (remainder number 10)))]))\n", " \
    \ (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 20) \"xx\"]\n      [(= number 30) \"xxx\"]\n      [(= number 40) \"xl\"]\n \
    \     [(= number 50) \"l\"]\n      [(= number 60) \"lx\"]\n      [(= number 70)\
    \ \"lxx\"]\n      [(= number 80) \"lxxx\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 200) \"cc\"]\n      [(= number 300)\
    \ \"ccc\"]\n      [(= number 400) \"cd\"]\n      [(= number 500) \"d\"]\n    \
    \  [(= number 600) \"dc\"]\n      [(= number 700) \"dcc\"]\n      [(= number 800)\
    \ \"dccc\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]\n  \
    \    [else (string-append (int_to_mini_roman_helper (quotient number 10))\n  \
    \                         (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number roman)\n    (cond\n      [(= number\
    \ 0) (reverse roman)]\n      [(>= number 1000) (int_to_mini_roman-helper (- number\
    \ 1000) (cons 'm roman))]\n      [(>= number 900) (int_to_mini_roman-helper (-\
    \ number 900) (cons 'c (cons 'm roman)))]\n      [(>= number 500) (int_to_mini_roman-helper\
    \ (- number 500) (cons 'd roman))]\n      [(>= number 400) (int_to_mini_roman-helper\
    \ (- number 400) (cons 'c (cons 'd roman)))]\n      [(>= number 100) (int_to_mini_roman-helper\
    \ (- number 100) (cons 'c roman))]\n      [(>= number 90) (int_to_mini_roman-helper\
    \ (- number 90) (cons 'x (cons 'c roman)))]\n      [(>= number 50) (int_to_mini_roman-helper\
    \ (- number 50) (cons 'l roman))]\n      [(>= number 40) (int_to_mini_roman-helper\
    \ (- number 40) (cons 'x (cons 'l roman)))]\n      [(>= number 10) (int_to_mini_roman-helper\
    \ (- number 10) (cons 'x roman))]\n      [(>= number 9) (int_to_mini_roman-helper\
    \ (- number 9) (cons 'i (cons 'x roman)))]\n      [(>= number 5) (int_to_mini_roman-helper\
    \ (- number 5) (cons 'v roman))]\n      [(>= number 4) (int_to_mini_roman-helper\
    \ (- number 4) (cons 'i (cons 'v roman)))]\n      [(>= number 1) (int_to_mini_roman-helper\
    \ (- number 1) (cons 'i roman))]))\n  (string-join (int_to_mini_roman-helper number\
    \ '()) \"\"))\n", "  (define (int_to_mini_roman_helper number)\n    (cond\n  \
    \    [(= number 1000) \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number\
    \ 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(= number 100) \"c\"]\n \
    \     [(= number 90) \"xc\"]\n      [(= number 50) \"l\"]\n      [(= number 40)\
    \ \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(=\
    \ number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(= number 1) \"i\"]\n\
    \      [else (string-append (int_to_mini_roman_helper (quotient number 10))\n\
    \                           (int_to_mini_roman_helper (remainder number 10)))]))\n\
    \  (string-downcase (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 0) '()]\n      [(= number 1) '(i)]\n  \
    \    [(= number 2) '(i i)]\n      [(= number 3) '(i i i)]\n      [(= number 4)\
    \ '(i v)]\n      [(= number 5) '(v)]\n      [(= number 6) '(v i)]\n      [(= number\
    \ 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n      [(= number 9) '(i x)]\n\
    \      [(= number 10) '(x)]\n      [(= number 11) '(x i)]\n      [(= number 12)\
    \ '(x i i)]\n      [(= number 13) '(x i i i)]\n      [(= number 14) '(x i v)]\n\
    \      [(= number 15) '(x v)]\n      [(= number 16) '(x v i)]\n      [(= number\
    \ 17) '(x v i i)]\n      [(= number 18) '(x v i i i)]\n      [(= number 19) '(x\
    \ i x)]\n      [(= number 20) '(x x)]\n      [(= number 30) '(x x x)]\n      [(=\
    \ number 40) '(x x x x)]\n      [(= number 50) '(l)]\n      [(= number 60) '(l\
    \ x)]\n      [(= number 70) '(l x x)]\n      [(= number 80) '(l x x x)]\n    \
    \  [(= number 90) '(x c)]\n      [(= number 100) '(c)]\n      [(= number 200)\
    \ '(c c)]\n      [(= number 300) '(c c c)]\n      [(= number 400) '(c c c c)]\n\
    \      [(= number 500) '(c d)]\n      [(= number 600) '(d)]\n      [(= number\
    \ 700) '(d c)]\n      [(= number 800) '(d c c)]\n      [(= number 900) '(c m)]\n\
    \      [(= number 1000) '(m)]\n      [else (append (int_to_mini_roman_helper (/\
    \ number 10))\n                    (int_to_mini_roman_helper (remainder number\
    \ 10)))]))\n  (string-join (int_to_mini_", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper\
    \ (quotient number 10))\n                           (int_to_mini_roman-helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) \"\"\
    ]\n      [(= number 1) \"i\"]\n      [(= number 2) \"ii\"]\n      [(= number 3)\
    \ \"iii\"]\n      [(= number 4) \"iv\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 6) \"vi\"]\n      [(= number 7) \"vii\"]\n      [(= number 8) \"viii\"\
    ]\n      [(= number 9) \"ix\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 40) \"xl\"]\n      [(= number 50) \"l\"]\n      [(= number 90) \"xc\"]\n   \
    \   [(= number 100) \"c\"]\n      [(= number 400) \"cd\"]\n      [(= number 500)\
    \ \"d\"]\n      [(= number 900) \"cm\"]\n      [(= number 1000) \"m\"]))\n  (string-downcase\
    \ (int_to_mini_roman_helper number)))\n", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 0) '()]\n\
    \      [(= number 1) '(i)]\n      [(= number 2) '(i i)]\n      [(= number 3) '(i\
    \ i i)]\n      [(= number 4) '(i v)]\n      [(= number 5) '(v)]\n      [(= number\
    \ 6) '(v i)]\n      [(= number 7) '(v i i)]\n      [(= number 8) '(v i i i)]\n\
    \      [(= number 9) '(i x)]\n      [(= number 10) '(x)]\n      [(= number 11)\
    \ '(x i)]\n      [(= number 12) '(x i i)]\n      [(= number 13) '(x i i i)]\n\
    \      [(= number 14) '(x i v)]\n      [(= number 15) '(x v)]\n      [(= number\
    \ 16) '(x v i)]\n      [(= number 17) '(x v i i)]\n      [(= number 18) '(x v\
    \ i i i)]\n      [(= number 19) '(x i x)]\n      [(= number 20) '(x x)]\n    \
    \  [(= number 30) '(x x x)]\n      [(= number 40) '(x x x x)]\n      [(= number\
    \ 50) '(l)]\n      [(= number 60) '(l x)]\n      [(= number 70) '(l x x)]\n  \
    \    [(= number 80) '(l x x x)]\n      [(= number 90) '(x c)]\n      [(= number\
    \ 100) '(c)]\n      [(= number 200) '(c c)]\n      [(= number 300) '(c c c)]\n\
    \      [(= number 400) '(c c c c)]\n      [(= number 500) '(c d)]\n      [(= number\
    \ 600) '(d)]\n      [(= number 700) '(d c)]\n      [(= number 800) '(d c c)]\n\
    \      [(= number 900) '(c m)]\n      [(= number 1000) '(m)]\n      [else (append\
    \ (int_to_mini_roman_helper (quotient number 10))\n                    (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-join (int_to", "  (define (int_to_mini_roman_helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper (quotient\
    \ number 10))\n                           (int_to_mini_roman_helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman_helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [else (string-append (int_to_mini_roman_helper\
    \ (quotient number 10))\n                           (int_to_mini_roman_helper\
    \ (remainder number 10)))]))\n  (string-downcase (int_to_mini_roman_helper number)))\n",
  "  (define (int_to_mini_roman-helper number)\n    (cond\n      [(= number 1000)\
    \ \"m\"]\n      [(= number 900) \"cm\"]\n      [(= number 500) \"d\"]\n      [(=\
    \ number 400) \"cd\"]\n      [(= number 100) \"c\"]\n      [(= number 90) \"xc\"\
    ]\n      [(= number 50) \"l\"]\n      [(= number 40) \"xl\"]\n      [(= number\
    \ 10) \"x\"]\n      [(= number 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(=\
    \ number 4) \"iv\"]\n      [(= number 1) \"i\"]\n      [(= number 0) \"\"]\n \
    \     [else (append (int_to_mini_roman-helper (quotient number 10))\n        \
    \            (int_to_mini_roman-helper (remainder number 10)))]))\n  (string-downcase\
    \ (int_to_mini_roman-helper number)))\n", "  (define (int_to_mini_roman-helper\
    \ number)\n    (cond\n      [(= number 1000) \"m\"]\n      [(= number 900) \"\
    cm\"]\n      [(= number 500) \"d\"]\n      [(= number 400) \"cd\"]\n      [(=\
    \ number 100) \"c\"]\n      [(= number 90) \"xc\"]\n      [(= number 50) \"l\"\
    ]\n      [(= number 40) \"xl\"]\n      [(= number 10) \"x\"]\n      [(= number\
    \ 9) \"ix\"]\n      [(= number 5) \"v\"]\n      [(= number 4) \"iv\"]\n      [(=\
    \ number 1) \"i\"]\n      [else (string-append (int_to_mini_roman-helper (quotient\
    \ number 10))\n                           (int_to_mini_roman-helper (remainder\
    \ number 10)))]))\n  (string-downcase (int_to_mini_roman-helper number)))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

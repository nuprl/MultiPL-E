name: HumanEval_138_is_equal_to_sum_even
language: rkt
prompt: "#lang racket\n\n;; Evaluate whether the given number n can be written as\
  \ the sum of exactly 4 positive even numbers\n;; Example\n;; >>> (is_equal_to_sum_even\
  \ 4)\n;; #f\n;; >>> (is_equal_to_sum_even 6)\n;; #f\n;; >>> (is_equal_to_sum_even\
  \ 8)\n;; #t\n(define (is_equal_to_sum_even n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_equal_to_sum_even))\n\
  \    (check-equal? (candidate 4) #f)\n    (check-equal? (candidate 6) #f)\n    (check-equal?\
  \ (candidate 8) #t)\n    (check-equal? (candidate 10) #t)\n    (check-equal? (candidate\
  \ 11) #f)\n    (check-equal? (candidate 12) #t)\n    (check-equal? (candidate 13)\
  \ #f)\n    (check-equal? (candidate 16) #t)\n))\n\n(test-humaneval)"
completions: ["  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(= i n)\
    \ #t]\n      [(= i 0) (is_equal_to_sum_even-iter n 2)]\n      [(= i 1) (is_equal_to_sum_even-iter\
    \ n 4)]\n      [(= i 2) (is_equal_to_sum_even-iter n 6)]\n      [(= i 3) (is_equal_to_sum_even-iter\
    \ n 8)]\n      [(= i 4) (is_equal_to_sum_even-iter n 10)]\n      [(= i 5) (is_equal_to_sum_even-iter\
    \ n 12)]\n      [(= i 6) (is_equal_to_sum_even-iter n 14)]\n      [(= i 7) (is_equal_to_sum_even-iter\
    \ n 16)]\n      [(= i 8) (is_equal_to_sum_even-iter n 18)]\n      [(= i 9) (is_equal_to_sum_even-iter\
    \ n 20)]\n      [(= i 10) (is_equal_to_sum_even-iter n 22)]\n      [(= i 11) (is_equal_to_sum_even-iter\
    \ n 24)]\n      [(= i 12) (is_equal_to_sum_even-iter n 26)]\n      [(= i 13) (is_equal_to_sum_even-iter\
    \ n 28)]\n      [(= i 14) (is_equal_to_sum_even-iter n 30)]\n      [(= i 15) (is_equal_to_sum_even-iter\
    \ n 32)]\n      [(= i 16) (is_equal_to_sum_even-iter n 34)]\n      [(= i 17) (is_equal_to_sum_even-iter\
    \ n 36)]\n      [(= i 18) (is_equal_to_sum_even-iter n 38)]\n      [(= i 19) (is_equal_to_sum_even-iter\
    \ n 40)]\n      [(= i 20) (is_equal_to_sum_even-iter n 42)]\n      [(= i 21) (is_equal_to_sum_even",
  "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond ((= count 4) (= n\
    \ sum))\n          ((= n sum) #t)\n          ((< n sum) #f)\n          (else (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1)))))\n  (is_equal_to_sum_even-iter n 0 0))\n", "  (define\
    \ (is_equal_to_sum_even_helper n i)\n    (cond\n      [(= i n) #t]\n      [(=\
    \ i 0) #f]\n      [(= n 0) #f]\n      [else (or (is_equal_to_sum_even_helper (-\
    \ n i) (+ i 2))\n                (is_equal_to_sum_even_helper n (+ i 2)))]))\n\
    \  (is_equal_to_sum_even_helper n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n 2))\n          ((= i 1) (is_equal_to_sum_even_iter n 4))\n          ((= i\
    \ 2) (is_equal_to_sum_even_iter n 6))\n          ((= i 3) (is_equal_to_sum_even_iter\
    \ n 8))\n          ((= i 4) (is_equal_to_sum_even_iter n 10))\n          ((= i\
    \ 5) (is_equal_to_sum_even_iter n 12))\n          ((= i 6) (is_equal_to_sum_even_iter\
    \ n 14))\n          ((= i 7) (is_equal_to_sum_even_iter n 16))\n          ((=\
    \ i 8) (is_equal_to_sum_even_iter n 18))\n          ((= i 9) (is_equal_to_sum_even_iter\
    \ n 20))\n          ((= i 10) (is_equal_to_sum_even_iter n 22))\n          ((=\
    \ i 11) (is_equal_to_sum_even_iter n 24))\n          ((= i 12) (is_equal_to_sum_even_iter\
    \ n 26))\n          ((= i 13) (is_equal_to_sum_even_iter n 28))\n          ((=\
    \ i 14) (is_equal_to_sum_even_iter n 30))\n          ((= i 15) (is_equal_to_sum_even_iter\
    \ n 32))\n          ((= i 16) (is_equal_to_sum_even_iter n 34))\n          ((=\
    \ i 17) (is_equal_to_sum_even_iter n 36))\n          ((= i 18) (is_equal_to_sum_even_iter\
    \ n 38))\n          ((= i 19) (is_equal_to_sum_even_iter n 40))\n          ((=\
    \ i 20) (is_equal_to_sum_even_iter n 42))\n          ((= i 21) (is_equal_to_sum_even_iter",
  "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n      [(= n sum)\
    \ (= count 4)]\n      [(> n sum) (is_equal_to_sum_even-iter n (+ sum 2) (+ count\
    \ 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n 0 0))\n", "  (define\
    \ (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n          ((= i n)\
    \ #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even-iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even-iter n 2))\n```\n\n### Problem 2\n\n\
    ```racket\n#lang racket\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even\
    \ (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i)\n\
    \    (cond ((= i n) #t)\n          ((= i 0) #f)\n          ((= (remainder n i)\
    \ 0) (is_equal_to_sum_even_iter (- n i) (- i 2)))\n          (else (is_equal_to_sum_even_iter\
    \ n (- i 2)))))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i 0) #f]\n      [(= n i) #f]\n\
    \      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (- i\
    \ 2))]))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n (+ (* 2 i) (* 2 (+ i 1)) (* 2 (+ i 2)) (* 2 (+\
    \ i 3)))) #t]\n      [(> n (+ (* 2 i) (* 2 (+ i 1)) (* 2 (+ i 2)) (* 2 (+ i 3))))\
    \ (is_equal_to_sum_even_iter n (+ i 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond ((=\
    \ count 4) (= n sum))\n          ((= n sum) #t)\n          ((&gt; n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1)))\n          (#t #f)))\n  (is_equal_to_sum_even-iter\
    \ n 0 0))\n</code>\n", "  (define (is_equal_to_sum_even_helper n sum count)\n\
    \    (cond ((= count 4) (= n sum))\n          ((= n sum) #t)\n          ((= n\
    \ 0) #f)\n          ((= n 1) #f)\n          ((= n 2) #f)\n          ((= n 3) #f)\n\
    \          ((= n 4) #f)\n          ((= n 5) #f)\n          ((= n 6) #f)\n    \
    \      ((= n 7) #f)\n          ((= n 8) #t)\n          ((= n 9) #f)\n        \
    \  ((= n 10) #f)\n          ((= n 11) #f)\n          ((= n 12) #t)\n         \
    \ ((= n 13) #f)\n          ((= n 14) #f)\n          ((= n 15) #f)\n          ((=\
    \ n 16) #t)\n          ((= n 17) #f)\n          ((= n 18) #f)\n          ((= n\
    \ 19) #f)\n          ((= n 20) #t)\n          ((= n 21) #f)\n          ((= n 22)\
    \ #f)\n          ((= n 23) #f)\n          ((= n 24) #t)\n          ((= n 25) #f)\n\
    \          ((= n 26) #f)\n          ((= n 27) #f)\n          ((= n 28) #t)\n \
    \         ((= n 29) #f)\n          ((= n 30) #f)\n          ((= n 31) #f)\n  \
    \        ((= n 32) #t)\n          ((= n 33) #f)\n          ((= n 34) #f)\n   \
    \       ((= n 35) #f)\n          ((= n 36) #t)\n          ((= n 37) #f)\n    \
    \      ((= n 38) #f)\n          ((= n 39) #f)\n          ((= n 40) #t)\n     \
    \     ((= n 41) #f)\n          ((= n 42) #f)\n          ((= n 43) #f)\n      \
    \    ((= n 44) #t)\n          ((= n 45) #f)\n          ((= n 46) #", "  (define\
    \ (is_equal_to_sum_even-iter n sum count)\n    (cond\n      [(= n sum) (= count\
    \ 4)]\n      [(> n sum) (is_equal_to_sum_even-iter n (+ sum 2) (+ count 1))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even-iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= i n) #t)\n          ((= i (+ n 2)) #f)\n          ((= i\
    \ (+ n 4)) #f)\n          ((= i (+ n 6)) #f)\n          ((= i (+ n 8)) #f)\n \
    \         (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n  \
    \    [(= count 4) (= n sum)]\n      [(> n sum) (is_equal_to_sum_even-iter n (+\
    \ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n 0 0))\n",
  "  (define (is_equal_to_sum_even-iter n counter)\n    (cond\n      [(= n 0) (= counter\
    \ 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(=\
    \ counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (=\
    \ n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(=\
    \ n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter\
    \ 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(=\
    \ counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (=\
    \ n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(=\
    \ n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter\
    \ 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(=\
    \ counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (=\
    \ n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(=\
    \ n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter\
    \ 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(=\
    \ counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (=\
    \ n 0)]\n      [(= n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(=\
    \ n 0) (= counter 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter\
    \ 4)]\n      [(= counter 4) (= n 0)]\n      [(= n 0) (= counter 4)]\n      [(=\
    \ counter 4) (= n 0)]\n      [(= n", "  (define (is_equal_to_sum_even-iter n i)\n\
    \    (cond\n      [(= i n) #t]\n      [(= i 0) #f]\n      [(= (modulo n i) 0)\
    \ (is_equal_to_sum_even-iter (- n i) (- i 2))]\n      [else (is_equal_to_sum_even-iter\
    \ n (- i 2))]))\n  (is_equal_to_sum_even-iter n n))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 (+ i (* 2 (+ i (* 2 (+ i (* 2 i))))))))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_helper\
    \ n a b c d)\n    (cond ((= n (+ a b c d)) #t)\n          ((< n (+ a b c d)) #f)\n\
    \          ((> n (+ a b c d)) (or (is_equal_to_sum_even_helper n (+ a 2) b c d)\n\
    \                                 (is_equal_to_sum_even_helper n a (+ b 2) c d)\n\
    \                                 (is_equal_to_sum_even_helper n a b (+ c 2) d)\n\
    \                                 (is_equal_to_sum_even_helper n a b c (+ d 2))))))\n\
    \  (is_equal_to_sum_even_helper n 2 2 2 2))\n", "  (cond\n    [(= n 0) #t]\n \
    \   [(< n 0) #f]\n    [else (or (is_equal_to_sum_even (- n 2))\n             \
    \ (is_equal_to_sum_even (- n 4))\n              (is_equal_to_sum_even (- n 6))\n\
    \              (is_equal_to_sum_even (- n 8)))]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= n i) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond [(= i n) #t]\n\
    \          [(= i 0) (is_equal_to_sum_even-iter n 2)]\n          [(= n (+ i (sum-even-numbers\
    \ (- n i)))) #t]\n          [else (is_equal_to_sum_even-iter n (+ i 2))]))\n \
    \ (is_equal_to_sum_even-iter n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i 0) #f]\n      [(= n i) #f]\n\
    \      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (- i\
    \ 2))]))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= n i) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i 0) #f)\n          ((= (remainder n i) 0) (is_equal_to_sum_even_iter\
    \ (- n i) (- i 2)))\n          (else (is_equal_to_sum_even_iter n (- i 2)))))\n\
    \  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even_helper\
    \ n sum count)\n    (cond ((= count 4) (= n sum))\n          ((even? n) (is_equal_to_sum_even_helper\
    \ n (+ sum n) (+ count 1)))\n          (else (is_equal_to_sum_even_helper (- n\
    \ 1) sum count))))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) #f]\n      [(= (remainder\
    \ i 2) 0) (is_equal_to_sum_even_iter (- n i) (- i 2))]\n      [else (is_equal_to_sum_even_iter\
    \ n (- i 2))]))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n (* 4 i)) #t)\n          ((> n (* 4 i)) (is_equal_to_sum_even-iter\
    \ n (+ i 2)))\n          (else #f)))\n  (is_equal_to_sum_even-iter n 2))\n", " \
    \ (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i n) #t]\n   \
    \   [(= i 0) #f]\n      [(= (remainder i 2) 0) (or (is_equal_to_sum_even_iter\
    \ (- n i) i) (is_equal_to_sum_even_iter n (- i 2)))]\n      [else (is_equal_to_sum_even_iter\
    \ n (- i 2))]))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(<= n sum) #f]\n\
    \      [else (is_equal_to_sum_even-iter n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even-iter\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even_iter n i j k l)\n    (cond\n  \
    \    [(= n (+ i j k l)) #t]\n      [(> n (+ i j k l)) (is_equal_to_sum_even_iter\
    \ n (+ i 2) (+ j 2) (+ k 2) (+ l 2))]\n      [else #f]))\n  (is_equal_to_sum_even_iter\
    \ n 2 2 2 2))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n\
    \      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter n\
    \ (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 0\
    \ 0))\n", "  (define (helper n count)\n    (cond\n      [(= n 0) (= count 4)]\n\
    \      [(> n 0) (or (helper (- n 2) (+ count 1)) (helper n count))]))\n  (helper\
    \ n 0))\n", "  (cond\n    [(= n 4) #f]\n    [(= n 6) #f]\n    [(= n 8) #t]\n \
    \   [(= n 10) #f]\n    [(= n 12) #t]\n    [(= n 14) #f]\n    [(= n 16) #t]\n \
    \   [(= n 18) #f]\n    [(= n 20) #t]\n    [(= n 22) #f]\n    [(= n 24) #t]\n \
    \   [(= n 26) #f]\n    [(= n 28) #t]\n    [(= n 30) #f]\n    [(= n 32) #t]\n \
    \   [(= n 34) #f]\n    [(= n 36) #t]\n    [(= n 38) #f]\n    [(= n 40) #t]\n \
    \   [(= n 42) #f]\n    [(= n 44) #t]\n    [(= n 46) #f]\n    [(= n 48) #t]\n \
    \   [(= n 50) #f]\n    [(= n 52) #t]\n    [(= n 54) #f]\n    [(= n 56) #t]\n \
    \   [(= n 58) #f]\n    [(= n 60) #t]\n    [(= n 62) #f]\n    [(= n 64) #t]\n \
    \   [(= n 66) #f]\n    [(= n 68) #t]\n    [(= n 70) #f]\n    [(= n 72) #t]\n \
    \   [(= n 74) #f]\n    [(= n 76) #t]\n    [(= n 78) #f]\n    [(= n 80) #t]\n \
    \   [(= n 82) #f]\n    [(= n 84) #t]\n    [(= n 86) #f]\n    [(= n 88) #t]\n \
    \   [(= n 90) #f]\n    [(= n 92) #t]\n    [(= n 94) #f]\n    [(= n 96) #t]\n \
    \   [(= n 98) #f]\n    [(= n 100) #t]\n    [(= n 102) #f]\n    [(= n 104) #",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i n) #t]\n    \
    \  [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n      [(= n (+ i (* 2 (quotient\
    \ (- n i) 2)))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i\
    \ n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n      [(= n (+\
    \ i (sum-of-even-numbers n))) #t]\n      [else (is_equal_to_sum_even_iter n (+\
    \ i 2))]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n 2)]\n      [(= (remainder i 2) 0) (is_equal_to_sum_even_iter (- n i) 0)]\n\
    \      [else (is_equal_to_sum_even_iter n (+ i 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even-iter n counter)\n    (cond\n    \
    \  [(= n 0) (= counter 4)]\n      [(= counter 4) #f]\n      [(= (remainder n 2)\
    \ 0) (is_equal_to_sum_even-iter (- n 2) (+ counter 1))]\n      [else (is_equal_to_sum_even-iter\
    \ (- n 1) counter)]))\n  (is_equal_to_sum_even-iter n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum)\n    (cond\n      [(= n sum) #t]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 0))\n", " \
    \ (define (is_equal_to_sum_even_helper n sum count)\n    (cond ((= count 4) (=\
    \ n sum))\n          ((= n sum) #t)\n          ((= n 0) #f)\n          ((= n 1)\
    \ #f)\n          ((= n 2) #f)\n          ((= n 3) #f)\n          ((= n 4) #f)\n\
    \          ((= n 5) #f)\n          ((= n 6) #f)\n          ((= n 7) #f)\n    \
    \      ((= n 8) #t)\n          ((= n 9) #f)\n          ((= n 10) #f)\n       \
    \   ((= n 11) #f)\n          ((= n 12) #t)\n          ((= n 13) #f)\n        \
    \  ((= n 14) #f)\n          ((= n 15) #f)\n          ((= n 16) #t)\n         \
    \ ((= n 17) #f)\n          ((= n 18) #f)\n          ((= n 19) #f)\n          ((=\
    \ n 20) #t)\n          ((= n 21) #f)\n          ((= n 22) #f)\n          ((= n\
    \ 23) #f)\n          ((= n 24) #t)\n          ((= n 25) #f)\n          ((= n 26)\
    \ #f)\n          ((= n 27) #f)\n          ((= n 28) #t)\n          ((= n 29) #f)\n\
    \          ((= n 30) #f)\n          ((= n 31) #f)\n          ((= n 32) #t)\n \
    \         ((= n 33) #f)\n          ((= n 34) #f)\n          ((= n 35) #f)\n  \
    \        ((= n 36) #t)\n          ((= n 37) #f)\n          ((= n 38) #f)\n   \
    \       ((= n 39) #f)\n          ((= n 40) #t)\n          ((= n 41) #f)\n    \
    \      ((= n 42) #f)\n          ((= n 43) #f)\n          ((= n 44) #t)\n     \
    \     ((= n 45) #f)\n          ((= n 46) #", "  (define (is_equal_to_sum_even_helper\
    \ n k)\n    (cond\n      [(= k 0) (= n 0)]\n      [(= n 0) #t]\n      [(= n 1)\
    \ #f]\n      [(= n 2) #f]\n      [(= n 3) #f]\n      [(= n 4) #f]\n      [(= n\
    \ 5) #f]\n      [(= n 6) #f]\n      [(= n 7) #f]\n      [(= n 8) #t]\n      [(=\
    \ n 9) #f]\n      [(= n 10) #f]\n      [(= n 11) #f]\n      [(= n 12) #f]\n  \
    \    [(= n 13) #f]\n      [(= n 14) #f]\n      [(= n 15) #f]\n      [(= n 16)\
    \ #t]\n      [(= n 17) #f]\n      [(= n 18) #f]\n      [(= n 19) #f]\n      [(=\
    \ n 20) #f]\n      [(= n 21) #f]\n      [(= n 22) #f]\n      [(= n 23) #f]\n \
    \     [(= n 24) #t]\n      [(= n 25) #f]\n      [(= n 26) #f]\n      [(= n 27)\
    \ #f]\n      [(= n 28) #f]\n      [(= n 29) #f]\n      [(= n 30) #f]\n      [(=\
    \ n 31) #f]\n      [(= n 32) #t]\n      [(= n 33) #f]\n      [(= n 34) #f]\n \
    \     [(= n 35) #f]\n      [(= n 36) #f]\n      [(= n 37) #f]\n      [(= n 38)\
    \ #f]\n      [(= n 39) #f]\n      [(= n 40) #t]\n      [(= n 41) #f]\n      [(=\
    \ n 42) #f]\n      [(= n 43) #f]\n      [(= n 44) #f]\n      [(= n 45) #f]\n \
    \     [(= n 46) #f]\n      [(= n 47)", "  (define (is_equal_to_sum_even-iter n\
    \ i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i i i\
    \ i)) #t]\n      [else (is_equal_to_sum_even-iter n (+ i 2))]))\n  (is_equal_to_sum_even-iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(= i\
    \ n) #t]\n      [(= i 0) (is_equal_to_sum_even-iter n (+ i 2))]\n      [(= n (+\
    \ i (sum-even-numbers (- n i)))) #t]\n      [else (is_equal_to_sum_even-iter n\
    \ (+ i 2))]))\n  (is_equal_to_sum_even-iter n 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond [(= i n) #t]\n          [(= i 0) (is_equal_to_sum_even-iter\
    \ n (+ i 2))]\n          [(= n (+ i (is_equal_to_sum_even-iter n (+ i 2)))) #t]\n\
    \          [else (is_equal_to_sum_even-iter n (+ i 2))]))\n  (is_equal_to_sum_even-iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ i) #t]\n      [(= n (+ i (* 2 2))) #t]\n      [(= n (+ i (* 2 2) (* 2 2))) #t]\n\
    \      [(= n (+ i (* 2 2) (* 2 2) (* 2 2))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even-iter n (+ i 2)))))\n  (is_equal_to_sum_even-iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(< i n) (or (is_equal_to_sum_even_iter\
    \ n (+ i 2))\n                   (is_equal_to_sum_even_iter n (+ i 4))\n     \
    \              (is_equal_to_sum_even_iter n (+ i 6))\n                   (is_equal_to_sum_even_iter\
    \ n (+ i 8)))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(= n 2) #f]\n    [(= n 4) #f]\n    [(= n 6) #f]\n    [(=\
    \ n 8) #t]\n    [(= n 10) #f]\n    [(= n 12) #f]\n    [(= n 14) #f]\n    [(= n\
    \ 16) #t]\n    [(= n 18) #f]\n    [(= n 20) #f]\n    [(= n 22) #f]\n    [(= n\
    \ 24) #t]\n    [(= n 26) #f]\n    [(= n 28) #f]\n    [(= n 30) #f]\n    [(= n\
    \ 32) #t]\n    [(= n 34) #f]\n    [(= n 36) #f]\n    [(= n 38) #f]\n    [(= n\
    \ 40) #t]\n    [(= n 42) #f]\n    [(= n 44) #f]\n    [(= n 46) #f]\n    [(= n\
    \ 48) #t]\n    [(= n 50) #f]\n    [(= n 52) #f]\n    [(= n 54) #f]\n    [(= n\
    \ 56) #t]\n    [(= n 58) #f]\n    [(= n 60) #f]\n    [(= n 62) #f]\n    [(= n\
    \ 64) #t]\n    [(= n 66) #f]\n    [(= n 68) #f]\n    [(= n 70) #f]\n    [(= n\
    \ 72) #t]\n    [(= n 74) #f]\n    [(= n 76) #f]\n    [(= n 78) #f]\n    [(= n\
    \ 80) #t]\n    [(= n 82) #f]\n    [(= n 84) #f]\n    [(= n 86) #f]\n    [(= n\
    \ 88) #t]\n    [(= n 90) #f]\n    [(= n 92) #f]\n    [(= n 94) #f]\n    [(= n\
    \ 96) #t]\n    [(= n 98) #f]\n    [(= n 100) #", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [(= (remainder i 2) 0) (is_equal_to_sum_even_iter (- n i)\
    \ (+ i 2))]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n  \
    \    [(= count 4) (= n sum)]\n      [(< n sum) #f]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (define\
    \ (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n (* 4 i)) #t]\n     \
    \ [(> n (* 4 i)) (is_equal_to_sum_even_iter n (+ i 2))]\n      [else #f]))\n \
    \ (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter n\
    \ sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #f]\n\
    \      [(= n (+ sum 2)) #t]\n      [else (is_equal_to_sum_even_iter n (+ sum 2)\
    \ (+ count 1))]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i 0) #f]\n      [(= n i) #f]\n\
    \      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (- i\
    \ 2))]))\n  (is_equal_to_sum_even_iter n n))\n", "  (define (is_equal_to_sum_even_helper\
    \ n sum count)\n    (cond ((= n sum) (= count 4))\n          ((= count 4) #f)\n\
    \          ((= sum n) #f)\n          ((= sum (+ sum 2)) (is_equal_to_sum_even_helper\
    \ n sum (+ count 1)))\n          (else (is_equal_to_sum_even_helper n (+ sum 2)\
    \ (+ count 1)))))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [(= (remainder i 2) 0) (is_equal_to_sum_even_iter (- n i)\
    \ (+ i 2))]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((=\
    \ count 4) (= n sum))\n          ((= n sum) #t)\n          ((&gt; n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1)))\n          (else #f)))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n</code>\n", "  (define (is_equal_to_sum_even_iter n x y z w)\n    (cond\
    \ ((= n (+ x y z w)) #t)\n          ((= x n) #f)\n          ((= y n) (is_equal_to_sum_even_iter\
    \ n (+ x 2) 2 z w))\n          ((= z n) (is_equal_to_sum_even_iter n x (+ y 2)\
    \ 2 w))\n          ((= w n) (is_equal_to_sum_even_iter n x y (+ z 2) 2))\n   \
    \       (else (is_equal_to_sum_even_iter n x y z (+ w 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2 2 2 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n    \
    \  [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n     \
    \ [(= n (+ i (remainder n i))) #t]\n      [else (is_equal_to_sum_even_iter n (+\
    \ i 2))]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (define (is_equal_to_sum_even_helper\
    \ n sum count)\n    (cond ((= count 4) (= n sum))\n          ((= n sum) #t)\n\
    \          ((= n 0) #f)\n          ((= n 1) #f)\n          ((= n 2) #f)\n    \
    \      ((= n 3) #f)\n          ((= n 4) #f)\n          ((= n 5) #f)\n        \
    \  ((= n 6) #f)\n          ((= n 7) #f)\n          ((= n 8) #t)\n          ((=\
    \ n 9) #f)\n          ((= n 10) #f)\n          ((= n 11) #f)\n          ((= n\
    \ 12) #t)\n          ((= n 13) #f)\n          ((= n 14) #f)\n          ((= n 15)\
    \ #f)\n          ((= n 16) #t)\n          ((= n 17) #f)\n          ((= n 18) #f)\n\
    \          ((= n 19) #f)\n          ((= n 20) #t)\n          ((= n 21) #f)\n \
    \         ((= n 22) #f)\n          ((= n 23) #f)\n          ((= n 24) #t)\n  \
    \        ((= n 25) #f)\n          ((= n 26) #f)\n          ((= n 27) #f)\n   \
    \       ((= n 28) #t)\n          ((= n 29) #f)\n          ((= n 30) #f)\n    \
    \      ((= n 31) #f)\n          ((= n 32) #t)\n          ((= n 33) #f)\n     \
    \     ((= n 34) #f)\n          ((= n 35) #f)\n          ((= n 36) #t)\n      \
    \    ((= n 37) #f)\n          ((= n 38) #f)\n          ((= n 39) #f)\n       \
    \   ((= n 40) #t)\n          ((= n 41) #f)\n          ((= n 42) #f)\n        \
    \  ((= n 43) #f)\n          ((= n 44) #t)\n          ((= n 45) #f)\n         \
    \ ((= n 46) #", "  (let loop ([i 0] [j 0] [k 0] [l 0])\n    (cond\n      [(= n\
    \ (+ (* 2 i) (* 2 j) (* 2 k) (* 2 l))) #t]\n      [(>= i n) #f]\n      [(>= j\
    \ n) (loop (+ i 1) 0 0 0)]\n      [(>= k n) (loop i (+ j 1) 0 0)]\n      [(>=\
    \ l n) (loop i j (+ k 1) 0)]\n      [else (loop i j k (+ l 1))])))\n", "  (define\
    \ (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n          ((= i n)\
    \ #f)\n          ((even? i) (or (is_equal_to_sum_even-iter (- n i) (+ i 2))\n\
    \                         (is_equal_to_sum_even-iter n (+ i 2))))\n          (else\
    \ (is_equal_to_sum_even-iter n (+ i 2)))))\n  (is_equal_to_sum_even-iter n 2))\n",
  "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n      [(= n sum)\
    \ (= count 4)]\n      [(< n sum) #f]\n      [else (or (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))\n                (is_equal_to_sum_even_iter n (+ sum\
    \ 4) (+ count 1))\n                (is_equal_to_sum_even_iter n (+ sum 6) (+ count\
    \ 1))\n                (is_equal_to_sum_even_iter n (+ sum 8) (+ count 1)))]))\n\
    \  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_helper n sum count)\n    (cond\n\
    \      [(= count 4) (= n sum)]\n      [(even? n) (is_equal_to_sum_even_helper\
    \ n (+ sum n) (+ count 1))]\n      [else (is_equal_to_sum_even_helper (- n 1)\
    \ sum count)]))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i (+ n (* 2 4))) #f]\n      [else\
    \ (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 0))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= i n) #t)\n          ((=\
    \ i 0) (is_equal_to_sum_even_iter n (+ i 2)))\n          ((= n i) #f)\n      \
    \    ((< n i) #f)\n          (else (or (is_equal_to_sum_even_iter (- n i) (+ i\
    \ 2))\n                    (is_equal_to_sum_even_iter n (+ i 2))))))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n  \
    \    [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(< n sum) #f]\n   \
    \   [else (is_equal_to_sum_even-iter n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even-iter\
    \ n 0 0))\n", "  (define (helper n acc)\n    (if (= n 0)\n        acc\n      \
    \  (if (and (even? n) (not (zero? (modulo n 2))))\n            (helper (- n 2)\
    \ (cons 2 acc))\n            (helper (- n 1) (cons 1 acc)))))\n  (if (and (even?\
    \ n) (not (zero? (modulo n 2))))\n      (let ([l (helper (- n 2) (list 2))])\n\
    \        (if (= (length l) 4)\n            #t\n            #f))\n      #f))\n",
  "  (define (is_equal_to_sum_even_helper n i)\n    (cond\n      [(= i n) #t]\n  \
    \    [(= i 0) (is_equal_to_sum_even_helper n (+ i 2))]\n      [else (or (is_equal_to_sum_even_helper\
    \ (- n i) (+ i 2))\n                (is_equal_to_sum_even_helper n (+ i 2)))]))\n\
    \  (is_equal_to_sum_even_helper n 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even-iter n (+ i 2)))))\n  (is_equal_to_sum_even-iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ (* 4 i)) #t]\n      [(> n (* 4 i)) (is_equal_to_sum_even_iter n (+ i 2))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= n i) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i n) #f)\n          ((and (even? i) (is_equal_to_sum_even_iter\
    \ (- n i) (+ i 2))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((< n 0) #f)\n          ((= i 0) #f)\n\
    \          (else (or (is_equal_to_sum_even-iter (- n (* i 2)) (- i 1))\n     \
    \               (is_equal_to_sum_even-iter n (- i 1))))))\n  (is_equal_to_sum_even-iter\
    \ n (/ n 2)))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n\
    \      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even-iter n\
    \ (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n 0\
    \ 0))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n    \
    \  [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(> n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_helper n i)\n    (cond\n      [(=\
    \ i n) #t]\n      [(= i 0) #f]\n      [(= n 0) #f]\n      [else (or (is_equal_to_sum_even_helper\
    \ (- n i) (+ i 2))\n                (is_equal_to_sum_even_helper n (+ i 2)))]))\n\
    \  (is_equal_to_sum_even_helper n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(<\
    \ n 0) #f]\n    [else (or (is_equal_to_sum_even (- n 2))\n              (is_equal_to_sum_even\
    \ (- n 4))\n              (is_equal_to_sum_even (- n 6))\n              (is_equal_to_sum_even\
    \ (- n 8)))]))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\
    \ ((= count 4) (= n sum))\n          ((= n sum) #t)\n          ((= n 0) #f)\n\
    \          ((= n 1) #f)\n          ((= n 2) #f)\n          ((= n 3) #f)\n    \
    \      ((= n 4) #f)\n          ((= n 5) #f)\n          ((= n 6) #f)\n        \
    \  ((= n 7) #f)\n          ((= n 8) #t)\n          ((= n 9) #f)\n          ((=\
    \ n 10) #f)\n          ((= n 11) #f)\n          ((= n 12) #t)\n          ((= n\
    \ 13) #f)\n          ((= n 14) #f)\n          ((= n 15) #f)\n          ((= n 16)\
    \ #t)\n          ((= n 17) #f)\n          ((= n 18) #f)\n          ((= n 19) #f)\n\
    \          ((= n 20) #t)\n          ((= n 21) #f)\n          ((= n 22) #f)\n \
    \         ((= n 23) #f)\n          ((= n 24) #t)\n          ((= n 25) #f)\n  \
    \        ((= n 26) #f)\n          ((= n 27) #f)\n          ((= n 28) #t)\n   \
    \       ((= n 29) #f)\n          ((= n 30) #f)\n          ((= n 31) #f)\n    \
    \      ((= n 32) #t)\n          ((= n 33) #f)\n          ((= n 34) #f)\n     \
    \     ((= n 35) #f)\n          ((= n 36) #t)\n          ((= n 37) #f)\n      \
    \    ((= n 38) #f)\n          ((= n 39) #f)\n          ((= n 40) #t)\n       \
    \   ((= n 41) #f)\n          ((= n 42) #f)\n          ((= n 43) #f)\n        \
    \  ((= n 44) #t)\n          ((= n 45) #f)\n          ((= n 46) #f", "  (define\
    \ (is_equal_to_sum_even_helper n sum count)\n    (cond\n      [(= n sum) (= count\
    \ 4)]\n      [(> n sum) (is_equal_to_sum_even_helper n (+ sum 2) (+ count 1))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= n (+ i (* 2 i))) #t]\n      [else\
    \ (is_equal_to_sum_even-iter n (+ i 2))]))\n  (is_equal_to_sum_even-iter n 2))\n",
  "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(= i n) #t]\n    \
    \  [(= i 0) (is_equal_to_sum_even-iter n (+ i 2))]\n      [(= n (+ i (remainder\
    \ n i))) #t]\n      [else (is_equal_to_sum_even-iter n (+ i 2))]))\n  (is_equal_to_sum_even-iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_helper n sum count)\n    (cond ((=\
    \ count 4) (= n sum))\n          ((= n sum) #t)\n          ((even? n) (is_equal_to_sum_even_helper\
    \ n (+ sum n) (+ count 1)))\n          (else (is_equal_to_sum_even_helper (- n\
    \ 1) sum count))))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even-iter n (+ i 2))]))\n  (is_equal_to_sum_even-iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= i n) #t)\n\
    \          ((= i 0) (is_equal_to_sum_even_iter n (+ i 2)))\n          ((= i n)\
    \ #t)\n          ((= i 0) (is_equal_to_sum_even_iter n (+ i 2)))\n          ((=\
    \ i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter n (+ i 2)))\n      \
    \    ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter n (+ i 2)))\n\
    \          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter n (+ i\
    \ 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((= i", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i i\
    \ i i)) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ (* i 4)) #t]\n      [(> n (* i 4)) (is_equal_to_sum_even_iter n (+ i 2))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (cond\n    [(= n\
    \ 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (define (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n          ((=\
    \ i n) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even-iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even-iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= n (+ i i)) #t]\n      [(= n (+\
    \ i i i)) #t]\n      [(= n (+ i i i i)) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i i\
    \ i i)) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i n) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n 2)]\n      [(= (remainder i 2) 0) (is_equal_to_sum_even_iter (- n i) 0)]\n\
    \      [else (is_equal_to_sum_even_iter n (+ i 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i\
    \ n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n      [(= n i)\
    \ #f]\n      [else (or (is_equal_to_sum_even_iter (- n i) (+ i 2))\n         \
    \       (is_equal_to_sum_even_iter n (+ i 2)))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i n) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even-iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i\
    \ n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n      [(= n i)\
    \ #f]\n      [else (or (is_equal_to_sum_even_iter (- n i) (+ i 2))\n         \
    \       (is_equal_to_sum_even_iter n (+ i 2)))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i n) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even-iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even-iter n 2))\n", "  (cond\n    [(= n 0)\
    \ #t]\n    [(= n 2) #f]\n    [(= n 4) #t]\n    [(= n 6) #f]\n    [(= n 8) #t]\n\
    \    [(= n 10) #f]\n    [(= n 12) #t]\n    [(= n 14) #f]\n    [(= n 16) #t]\n\
    \    [(= n 18) #f]\n    [(= n 20) #t]\n    [(= n 22) #f]\n    [(= n 24) #t]\n\
    \    [(= n 26) #f]\n    [(= n 28) #t]\n    [(= n 30) #f]\n    [(= n 32) #t]\n\
    \    [(= n 34) #f]\n    [(= n 36) #t]\n    [(= n 38) #f]\n    [(= n 40) #t]\n\
    \    [(= n 42) #f]\n    [(= n 44) #t]\n    [(= n 46) #f]\n    [(= n 48) #t]\n\
    \    [(= n 50) #f]\n    [(= n 52) #t]\n    [(= n 54) #f]\n    [(= n 56) #t]\n\
    \    [(= n 58) #f]\n    [(= n 60) #t]\n    [(= n 62) #f]\n    [(= n 64) #t]\n\
    \    [(= n 66) #f]\n    [(= n 68) #t]\n    [(= n 70) #f]\n    [(= n 72) #t]\n\
    \    [(= n 74) #f]\n    [(= n 76) #t]\n    [(= n 78) #f]\n    [(= n 80) #t]\n\
    \    [(= n 82) #f]\n    [(= n 84) #t]\n    [(= n 86) #f]\n    [(= n 88) #t]\n\
    \    [(= n 90) #f]\n    [(= n 92) #t]\n    [(= n 94) #f]\n    [(= n 96) #t]\n\
    \    [(= n 98) #f]\n    [(= n 100) #", "  (define (is_equal_to_sum_even_helper\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n\
    \      [(> n sum) (is_equal_to_sum_even_helper n (+ sum 2) (+ count 1))]\n   \
    \   [else #f]))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n count)\n    (cond\n      [(= n 0) (= count 4)]\n      [(= n 2) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(= n 4) (is_equal_to_sum_even_iter 0 (+ count 1))]\n\
    \      [(= n 6) (is_equal_to_sum_even_iter 0 (+ count 1))]\n      [(= n 8) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(= n 10) (is_equal_to_sum_even_iter 0 (+ count 1))]\n\
    \      [(= n 12) (is_equal_to_sum_even_iter 0 (+ count 1))]\n      [(= n 14) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(= n 16) (is_equal_to_sum_even_iter 0 (+ count 1))]\n\
    \      [(= n 18) (is_equal_to_sum_even_iter 0 (+ count 1))]\n      [(= n 20) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(= n 22) (is_equal_to_sum_even_iter 0 (+ count 1))]\n\
    \      [(= n 24) (is_equal_to_sum_even_iter 0 (+ count 1))]\n      [(= n 26) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(= n 28) (is_equal_to_sum_even_iter 0 (+ count 1))]\n\
    \      [(= n 30) (is_equal_to_sum_even_iter 0 (+ count 1))]\n      [(= n 32) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(= n 34) (is_equal_to_sum_even_iter 0 (+ count 1))]\n\
    \      [(= n 36) (is_equal_to_sum_even_iter 0 (+ count 1))]\n      [(= n 38) (is_equal_to_sum_even_iter\
    \ 0 (+ count 1))]\n      [(", "  (define (is_equal_to_sum_even-iter n i)\n   \
    \ (cond ((= i 0) #f)\n          ((= n (* i 2)) #t)\n          (else (is_equal_to_sum_even-iter\
    \ n (- i 1)))))\n  (is_equal_to_sum_even-iter n (/ n 2)))\n", "  (define (is_equal_to_sum_even_helper\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i 0) #f]\n      [(= n i) #f]\n\
    \      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_helper n (+\
    \ i 2))]))\n  (is_equal_to_sum_even_helper n n))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i (+ n (* 2 2))) #t]\n      [(=\
    \ i (+ n (* 2 2) (* 2 2))) #t]\n      [(= i (+ n (* 2 2) (* 2 2) (* 2 2))) #t]\n\
    \      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n  \
    \    [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(< n sum) #f]\n   \
    \   [else (is_equal_to_sum_even_iter n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond ((=\
    \ count 4) (= n sum))\n          ((= n sum) #t)\n          ((&gt; n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1)))\n          (else #f)))\n  (is_equal_to_sum_even-iter\
    \ n 0 0))\n</code>\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n\
    \      [(= n (* i 4)) #t]\n      [(> n (* i 4)) #f]\n      [else (is_equal_to_sum_even-iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i count)\n    (cond ((= count 4) #t)\n          ((= n 0) #f)\n          ((=\
    \ i n) (is_equal_to_sum_even-iter n 2 (+ count 1)))\n          ((= 0 (modulo n\
    \ i)) (is_equal_to_sum_even-iter (- n i) i (+ count 1)))\n          (else (is_equal_to_sum_even-iter\
    \ n (+ i 2) count))))\n  (is_equal_to_sum_even-iter n 2 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (*\
    \ 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= n i) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even-iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ (* 2\
    \ i) (* 2 (+ i 1)))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 1))]))\n\
    \  (is_equal_to_sum_even_iter n 1))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((=\
    \ n sum) (= count 4))\n          ((> n sum) (is_equal_to_sum_even_iter n (+ sum\
    \ 2) (+ count 1)))\n          (else #f)))\n  (is_equal_to_sum_even_iter n 0 0))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n 0) #t]\n    \
    \  [(= i 0) #f]\n      [(= n (* 2 i)) #t]\n      [(= n (+ (* 2 i) (* 2 (- i 1))))\
    \ #t]\n      [(= n (+ (* 2 i) (* 2 (- i 1)) (* 2 (- i 2)))) #t]\n      [(= n (+\
    \ (* 2 i) (* 2 (- i 1)) (* 2 (- i 2)) (* 2 (- i 3)))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (- i 1))]))\n  (is_equal_to_sum_even_iter n (/ n 2)))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n  \
    \    [(= count 4) (= n sum)]\n      [(> n sum) (is_equal_to_sum_even-iter n (+\
    \ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n 0 0))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i n) #t]\n    \
    \  [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n      [(= i n) #t]\n     \
    \ [else (or (is_equal_to_sum_even_iter n (+ i 2))\n                (is_equal_to_sum_even_iter\
    \ (- n i) 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond\n      [(= n (* i 4)) #t]\n      [(< n (* i 4)) #f]\n      [else\
    \ (is_equal_to_sum_even-iter n (+ i 2))]))\n  (is_equal_to_sum_even-iter n 2))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n 0) #t]\n    \
    \  [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i n) #f)\n          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 1))\n", "  (define (is_equal_to_sum_even_helper\
    \ n i)\n    (cond ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even_helper\
    \ n 2))\n          ((= n (+ i (is_equal_to_sum_even_helper (- n i) 0))) #t)\n\
    \          (else (is_equal_to_sum_even_helper n (+ i 2)))))\n  (is_equal_to_sum_even_helper\
    \ n 0))\n", "  (define (is_equal_to_sum_even_helper n sum count)\n    (cond\n\
    \      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_helper\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_helper\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(=\
    \ i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n 2)]\n      [(= (remainder\
    \ i 2) 0) (is_equal_to_sum_even_iter (- n i) 0)]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 1))]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= i n) #t)\n          ((= i 0) (is_equal_to_sum_even-iter\
    \ n (+ i 2)))\n          ((= i n) #t)\n          ((< i n) (or (is_equal_to_sum_even-iter\
    \ (- n i) (+ i 2))\n                       (is_equal_to_sum_even-iter n (+ i 2))))\n\
    \          (else #f)))\n  (is_equal_to_sum_even-iter n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= i n) #t)\n          ((= i (+ n (* 2 2))) #t)\n         \
    \ ((= i (+ n (* 2 2) (* 2 2))) #t)\n          ((= i (+ n (* 2 2) (* 2 2) (* 2\
    \ 2))) #t)\n          ((= i (+ n (* 2 2) (* 2 2) (* 2 2) (* 2 2))) #t)\n     \
    \     (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond ((= n 0) #t)\n\
    \          ((= i 0) #f)\n          ((= n (* i 2)) #t)\n          ((= n (+ (* i\
    \ 2) (* (- i 1) 2))) #t)\n          ((= n (+ (* i 2) (* (- i 1) 2) (* (- i 2)\
    \ 2))) #t)\n          ((= n (+ (* i 2) (* (- i 1) 2) (* (- i 2) 2) (* (- i 3)\
    \ 2))) #t)\n          (else (is_equal_to_sum_even-iter n (- i 1)))))\n  (is_equal_to_sum_even-iter\
    \ n (/ n 2)))\n", "  (define (is_equal_to_sum_even_helper n i)\n    (cond ((=\
    \ i 0) #f)\n          ((= n (* i 2)) #t)\n          (else (is_equal_to_sum_even_helper\
    \ (- n (* i 2)) (- i 1)))))\n  (is_equal_to_sum_even_helper n (/ n 2)))\n", " \
    \ (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n      [(= n sum)\
    \ (= count 4)]\n      [(= count 4) #f]\n      [(= n (+ sum 2)) #t]\n      [else\
    \ (is_equal_to_sum_even_iter n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(=\
    \ n (* 4 i)) #t]\n      [(> n (* 4 i)) (is_equal_to_sum_even_iter n (+ i 2))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_helper\
    \ n sum count)\n    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_helper\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_helper\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(=\
    \ n i) #t]\n      [(> n i) (or (is_equal_to_sum_even-iter n (+ i 2)) (is_equal_to_sum_even-iter\
    \ (- n i) (+ i 2)))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n 2))\n",
  "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n      [(= n sum)\
    \ (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter n (+ sum 2) (+ count\
    \ 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (define\
    \ (is_equal_to_sum_even_iter n sum count)\n    (cond ((= n sum) (= count 4))\n\
    \          ((< n sum) #f)\n          ((< count 4) (is_equal_to_sum_even_iter n\
    \ (+ sum 2) (+ count 1)))\n          (else (is_equal_to_sum_even_iter n (+ sum\
    \ 2) count))))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even_iter n (+ i 2)))))\n  (is_equal_to_sum_even_iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n  \
    \    [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter n (+\
    \ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 0 0))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n (* 4 i)) #t]\n\
    \      [(> n (* 4 i)) (is_equal_to_sum_even_iter n (+ i 2))]\n      [else #f]))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i count)\n    (cond\n      [(= count 4) #t]\n      [(= n 0) #f]\n      [(=\
    \ i n) (is_equal_to_sum_even-iter n 2 (+ count 1))]\n      [(= (remainder i 2)\
    \ 0) (is_equal_to_sum_even-iter (- n i) (+ i 2) (+ count 1))]\n      [else (is_equal_to_sum_even-iter\
    \ n (+ i 2) count)]))\n  (is_equal_to_sum_even-iter n 2 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n\
    \      [(< n sum) #f]\n      [else (is_equal_to_sum_even-iter n (+ sum 2) (+ count\
    \ 1))]))\n  (is_equal_to_sum_even-iter n 0 0))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n i) #f)\n\
    \          ((= n (+ i i)) #t)\n          ((= n (+ i i i)) #t)\n          ((= n\
    \ (+ i i i i)) #t)\n          (else (is_equal_to_sum_even-iter n (+ i 2)))))\n\
    \  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ (* 2\
    \ i) (* 2 (is_equal_to_sum_even_iter (- n i) (+ i 1))))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 1))]))\n  (is_equal_to_sum_even_iter n 1))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even-iter n (+ i 2)))))\n  (is_equal_to_sum_even-iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(< n 0) #f]\n      [(= i n) #f]\n      [else (or (is_equal_to_sum_even_iter\
    \ (- n (* i 2)) (+ i 2))\n                (is_equal_to_sum_even_iter n (+ i 2)))]))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (define (helper n sum count)\n    (cond\n\
    \      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(= n 0) #f]\n   \
    \   [(= n 1) #f]\n      [(= n 2) #f]\n      [(= n 3) #f]\n      [(= n 4) #f]\n\
    \      [(= n 5) #f]\n      [(= n 6) #f]\n      [(= n 7) #f]\n      [(= n 8) #t]\n\
    \      [(= n 9) #f]\n      [(= n 10) #f]\n      [(= n 11) #f]\n      [(= n 12)\
    \ #t]\n      [(= n 13) #f]\n      [(= n 14) #f]\n      [(= n 15) #f]\n      [(=\
    \ n 16) #t]\n      [(= n 17) #f]\n      [(= n 18) #f]\n      [(= n 19) #f]\n \
    \     [(= n 20) #t]\n      [(= n 21) #f]\n      [(= n 22) #f]\n      [(= n 23)\
    \ #f]\n      [(= n 24) #t]\n      [(= n 25) #f]\n      [(= n 26) #f]\n      [(=\
    \ n 27) #f]\n      [(= n 28) #t]\n      [(= n 29) #f]\n      [(= n 30) #f]\n \
    \     [(= n 31) #f]\n      [(= n 32) #t]\n      [(= n 33) #f]\n      [(= n 34)\
    \ #f]\n      [(= n 35) #f]\n      [(= n 36) #t]\n      [(= n 37) #f]\n      [(=\
    \ n 38) #f]\n      [(= n 39) #f]\n      [(= n 40) #t]\n      [(= n 41) #f]\n \
    \     [(= n 42) #f]\n      [(= n 43) #f]\n      [(= n 44) #t]\n      [(= n 45)\
    \ #f]\n      [(= n 46) #f]\n      [(= n 47", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [(= n (+ i (* 2 (quotient (- n i) 2)))) #t]\n      [else\
    \ (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 0))\n",
  "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i n) #t]\n    \
    \  [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n\
    \  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n i) #f)\n\
    \          ((= n (+ i (* 2 i))) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even-helper\
    \ n count)\n    (cond\n      [(= n 0) (= count 4)]\n      [(= count 4) (= n 0)]\n\
    \      [(= n 2) #f]\n      [else (is_equal_to_sum_even-helper (- n 2) (+ count\
    \ 1))]))\n  (is_equal_to_sum_even-helper n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond ((= count 4) (= n sum))\n          ((= n sum) #t)\n\
    \          ((= n 0) #f)\n          ((= n 1) #f)\n          ((= n 2) #f)\n    \
    \      ((= n 3) #f)\n          ((= n 4) #f)\n          ((= n 5) #f)\n        \
    \  ((= n 6) #f)\n          ((= n 7) #f)\n          ((= n 8) #t)\n          ((=\
    \ n 9) #f)\n          ((= n 10) #f)\n          ((= n 11) #f)\n          ((= n\
    \ 12) #t)\n          ((= n 13) #f)\n          ((= n 14) #f)\n          ((= n 15)\
    \ #f)\n          ((= n 16) #t)\n          ((= n 17) #f)\n          ((= n 18) #f)\n\
    \          ((= n 19) #f)\n          ((= n 20) #t)\n          ((= n 21) #f)\n \
    \         ((= n 22) #f)\n          ((= n 23) #f)\n          ((= n 24) #t)\n  \
    \        ((= n 25) #f)\n          ((= n 26) #f)\n          ((= n 27) #f)\n   \
    \       ((= n 28) #t)\n          ((= n 29) #f)\n          ((= n 30) #f)\n    \
    \      ((= n 31) #f)\n          ((= n 32) #t)\n          ((= n 33) #f)\n     \
    \     ((= n 34) #f)\n          ((= n 35) #f)\n          ((= n 36) #t)\n      \
    \    ((= n 37) #f)\n          ((= n 38) #f)\n          ((= n 39) #f)\n       \
    \   ((= n 40) #t)\n          ((= n 41) #f)\n          ((= n 42) #f)\n        \
    \  ((= n 43) #f)\n          ((= n 44) #t)\n          ((= n 45) #f)\n         \
    \ ((= n 46) #f", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n     \
    \ [(= n 0) #t]\n      [(= i n) #f]\n      [(= n (+ (* 2 i) (* 2 (+ i 1)))) #t]\n\
    \      [else (is_equal_to_sum_even_iter n (+ i 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 1))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((=\
    \ count 4) (= n sum))\n          ((even? n) (is_equal_to_sum_even_iter n (+ sum\
    \ n) (+ count 1)))\n          (else (is_equal_to_sum_even_iter (- n 1) sum count))))\n\
    \  (is_equal_to_sum_even_iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n (* i 4)) #t]\n      [(> n (* i 4)) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 2))\n```\n\n\
    ## Problem 3\n\n```racket\n#lang racket\n", "  (define (is_equal_to_sum_even_helper\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n\
    \      [(> n sum) (is_equal_to_sum_even_helper n (+ sum 2) (+ count 1))]\n   \
    \   [else #f]))\n  (is_equal_to_sum_even_helper n 0 0))\n", "  (define (is_equal_to_sum_even_helper\
    \ n i)\n    (cond\n      [(= i 0) #f]\n      [(= n (* i 2)) #t]\n      [else (is_equal_to_sum_even_helper\
    \ (- n (* i 2)) (- i 1))]))\n  (is_equal_to_sum_even_helper n n))\n", "  (define\
    \ (is_equal_to_sum_even-iter n acc)\n    (cond\n      [(= n 0) (equal? acc 4)]\n\
    \      [(= n 2) (is_equal_to_sum_even-iter 0 (+ acc 1))]\n      [(= n 4) (is_equal_to_sum_even-iter\
    \ 0 (+ acc 1))]\n      [(= n 6) (is_equal_to_sum_even-iter 0 (+ acc 1))]\n   \
    \   [(= n 8) (is_equal_to_sum_even-iter 0 (+ acc 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i j k l)\n    (cond\n    \
    \  [(= n (+ i j k l)) #t]\n      [(> n (+ i j k l)) (is_equal_to_sum_even_iter\
    \ n (+ i 2) (+ j 2) (+ k 2) (+ l 2))]\n      [else #f]))\n  (is_equal_to_sum_even_iter\
    \ n 2 2 2 2))\n", "  (define (helper n sum count)\n    (cond ((= count 4) (= n\
    \ sum))\n          ((= n sum) #t)\n          ((= n 0) #f)\n          ((= n 1)\
    \ #f)\n          ((= n 2) #f)\n          ((= n 3) #f)\n          ((= n 4) #f)\n\
    \          ((= n 5) #f)\n          ((= n 6) #f)\n          ((= n 7) #f)\n    \
    \      ((= n 8) #t)\n          ((= n 9) #f)\n          ((= n 10) #f)\n       \
    \   ((= n 11) #f)\n          ((= n 12) #t)\n          ((= n 13) #f)\n        \
    \  ((= n 14) #f)\n          ((= n 15) #f)\n          ((= n 16) #t)\n         \
    \ ((= n 17) #f)\n          ((= n 18) #f)\n          ((= n 19) #f)\n          ((=\
    \ n 20) #t)\n          ((= n 21) #f)\n          ((= n 22) #f)\n          ((= n\
    \ 23) #f)\n          ((= n 24) #t)\n          ((= n 25) #f)\n          ((= n 26)\
    \ #f)\n          ((= n 27) #f)\n          ((= n 28) #t)\n          ((= n 29) #f)\n\
    \          ((= n 30) #f)\n          ((= n 31) #f)\n          ((= n 32) #t)\n \
    \         ((= n 33) #f)\n          ((= n 34) #f)\n          ((= n 35) #f)\n  \
    \        ((= n 36) #t)\n          ((= n 37) #f)\n          ((= n 38) #f)\n   \
    \       ((= n 39) #f)\n          ((= n 40) #t)\n          ((= n 41) #f)\n    \
    \      ((= n 42) #f)\n          ((= n 43) #f)\n          ((= n 44) #t)\n     \
    \     ((= n 45) #f)\n          ((= n 46) #f)\n          ((= n 47) #", "  (define\
    \ (is_equal_to_sum_even_iter n i count)\n    (cond\n      [(= count 4) #t]\n \
    \     [(= n 0) #f]\n      [(= n i) #f]\n      [(= n (+ i i)) (is_equal_to_sum_even_iter\
    \ n (+ i 2) (+ count 1))]\n      [else (is_equal_to_sum_even_iter (- n i) (+ i\
    \ 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter n 2 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond ((= n sum) (= count 4))\n          ((> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1)))\n          (else #f)))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\n\
    \      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(< n sum) #f]\n \
    \     [else (is_equal_to_sum_even_iter n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 0 0))\n", "  (define (is_equal_to_sum_even_helper n i)\n    (cond\n      [(=\
    \ i n) #t]\n      [(= i 0) (is_equal_to_sum_even_helper n (+ i 2))]\n      [else\
    \ (or (is_equal_to_sum_even_helper (- n i) (+ i 2))\n                (is_equal_to_sum_even_helper\
    \ n (+ i 2)))]))\n  (is_equal_to_sum_even_helper n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [(= n (+ i (is_equal_to_sum_even_iter n (+ i 2)))) #t]\n\
    \      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (-\
    \ n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even_iter n i)\n   \
    \ (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n 2)]\n\
    \      [(= (modulo n i) 0) (is_equal_to_sum_even_iter (- n i) 2)]\n      [else\
    \ (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n",
  "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond\n      [(= count 4)\
    \ (= n sum)]\n      [(= n sum) #t]\n      [(> n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even-iter n sum count)\n    (cond ((=\
    \ n sum) (= count 4))\n          ((= count 4) #f)\n          ((= n 0) #f)\n  \
    \        ((= n 1) #f)\n          ((= n 2) #f)\n          ((= n 3) #f)\n      \
    \    ((= n 4) #f)\n          ((= n 5) #f)\n          ((= n 6) #f)\n          ((=\
    \ n 7) #f)\n          ((= n 8) #t)\n          ((= n 9) #f)\n          ((= n 10)\
    \ #f)\n          ((= n 11) #f)\n          ((= n 12) #f)\n          ((= n 13) #f)\n\
    \          ((= n 14) #f)\n          ((= n 15) #f)\n          ((= n 16) #t)\n \
    \         ((= n 17) #f)\n          ((= n 18) #f)\n          ((= n 19) #f)\n  \
    \        ((= n 20) #f)\n          ((= n 21) #f)\n          ((= n 22) #f)\n   \
    \       ((= n 23) #f)\n          ((= n 24) #t)\n          ((= n 25) #f)\n    \
    \      ((= n 26) #f)\n          ((= n 27) #f)\n          ((= n 28) #f)\n     \
    \     ((= n 29) #f)\n          ((= n 30) #f)\n          ((= n 31) #f)\n      \
    \    ((= n 32) #t)\n          ((= n 33) #f)\n          ((= n 34) #f)\n       \
    \   ((= n 35) #f)\n          ((= n 36) #f)\n          ((= n 37) #f)\n        \
    \  ((= n 38) #f)\n          ((= n 39) #f)\n          ((= n 40) #t)\n         \
    \ ((= n 41) #f)\n          ((= n 42) #f)\n          ((= n 43) #f)\n          ((=\
    \ n 44) #f)\n          ((= n 45) #f)\n          ((= n 46) #f", "  (define (is_equal_to_sum_even_helper\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_helper\
    \ n (+ i 2))]\n      [else (or (is_equal_to_sum_even_helper n (+ i 2))\n     \
    \           (is_equal_to_sum_even_helper (- n i) (+ i 2)))]))\n  (is_equal_to_sum_even_helper\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ 0) #t]\n      [(= i n) #f]\n      [(= n (+ i (* 2 i))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(> n sum) (is_equal_to_sum_even-iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even-iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond ((=\
    \ count 4) (= n sum))\n          ((= n sum) #t)\n          ((= n (+ sum 2)) #t)\n\
    \          ((= n (+ sum 4)) #t)\n          ((= n (+ sum 6)) #t)\n          ((=\
    \ n (+ sum 8)) #t)\n          ((= n (+ sum 10)) #t)\n          ((= n (+ sum 12))\
    \ #t)\n          ((= n (+ sum 14)) #t)\n          ((= n (+ sum 16)) #t)\n    \
    \      ((= n (+ sum 18)) #t)\n          ((= n (+ sum 20)) #t)\n          ((= n\
    \ (+ sum 22)) #t)\n          ((= n (+ sum 24)) #t)\n          ((= n (+ sum 26))\
    \ #t)\n          ((= n (+ sum 28)) #t)\n          ((= n (+ sum 30)) #t)\n    \
    \      ((= n (+ sum 32)) #t)\n          ((= n (+ sum 34)) #t)\n          ((= n\
    \ (+ sum 36)) #t)\n          ((= n (+ sum 38)) #t)\n          ((= n (+ sum 40))\
    \ #t)\n          ((= n (+ sum 42)) #t)\n          ((= n (+ sum 44)) #t)\n    \
    \      ((= n (+ sum 46)) #t)\n          ((= n (+ sum 48)) #t)\n          ((= n\
    \ (+ sum 50)) #t)\n          ((= n (+ sum 52)) #t)\n          ((= n (+ sum 54))\
    \ #t)\n          ((= n (+ sum 56)) #t)\n          ((= n (+ sum 58)) #t)\n    \
    \      ((= n (+ sum 60)) #t)\n          ((= n (+ sum 62)) #t)\n          ((= n\
    \ (+ sum 64)) #t)\n          ((= n (+ sum 66)) #t)\n          ((= n (+ sum 68))\
    \ #t)\n          ((= n (+ sum 70)) #t)\n          ((= n (+ sum 72)) #t)\n    \
    \      ((= n (+ sum 74)) #t)\n          ((= n (+ sum 76)) #t)\n          ((= n\
    \ (+ sum 78)) #t)\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n\
    \      [(= n (* 4 i)) #t]\n      [(= n (* 4 (+ i 1))) #t]\n      [(> n (* 4 (+\
    \ i 1))) #f]\n      [else (is_equal_to_sum_even_iter n (+ i 1))]))\n  (is_equal_to_sum_even_iter\
    \ n 1))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= i\
    \ n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter n (+ i 2))]\n      [(= n (+\
    \ i (is_equal_to_sum_even_iter (- n i) 2))) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ i 2))]))\n  (is_equal_to_sum_even_iter n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (define (helper n i)\n    (cond ((= i 0) #f)\n          ((= n (*\
    \ i 2)) #t)\n          (else (helper (- n (* i 2)) (- i 1)))))\n  (helper n (/\
    \ n 2)))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(=\
    \ n (* 4 i)) #t]\n      [(> n (* 4 i)) (is_equal_to_sum_even-iter n (+ i 2))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even-iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n\
    \      [(> n sum) (is_equal_to_sum_even-iter n (+ sum 2) (+ count 1))]\n     \
    \ [else #f]))\n  (is_equal_to_sum_even-iter n 0 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i count)\n    (cond ((= n 0) (= count 4))\n          ((= count 4) #t)\n  \
    \        ((= i n) #f)\n          ((= (remainder n i) 0) (is_equal_to_sum_even_iter\
    \ (- n i) (+ i 2) (+ count 1)))\n          (else (is_equal_to_sum_even_iter n\
    \ (+ i 2) count))))\n  (is_equal_to_sum_even_iter n 2 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= i n) #t]\n      [(= i 0) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [(= (remainder n i) 0) (is_equal_to_sum_even_iter (- n i)\
    \ (+ i 2))]\n      [else (is_equal_to_sum_even_iter n (+ i 2))]))\n  (is_equal_to_sum_even_iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond\n      [(= n\
    \ (* i 4)) #t]\n      [(> n (* i 4)) (is_equal_to_sum_even_iter n (+ i 2))]\n\
    \      [else #f]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even-iter\
    \ n sum count)\n    (cond ((= count 4) (= n sum))\n          ((= n sum) #t)\n\
    \          ((= n 0) #f)\n          ((= n 1) #f)\n          ((= n 2) #f)\n    \
    \      ((= n 3) #f)\n          ((= n 4) #f)\n          ((= n 5) #f)\n        \
    \  ((= n 6) #f)\n          ((= n 7) #f)\n          ((= n 8) #t)\n          ((=\
    \ n 9) #f)\n          ((= n 10) #f)\n          ((= n 11) #f)\n          ((= n\
    \ 12) #t)\n          ((= n 13) #f)\n          ((= n 14) #f)\n          ((= n 15)\
    \ #f)\n          ((= n 16) #t)\n          ((= n 17) #f)\n          ((= n 18) #f)\n\
    \          ((= n 19) #f)\n          ((= n 20) #t)\n          ((= n 21) #f)\n \
    \         ((= n 22) #f)\n          ((= n 23) #f)\n          ((= n 24) #t)\n  \
    \        ((= n 25) #f)\n          ((= n 26) #f)\n          ((= n 27) #f)\n   \
    \       ((= n 28) #t)\n          ((= n 29) #f)\n          ((= n 30) #f)\n    \
    \      ((= n 31) #f)\n          ((= n 32) #t)\n          ((= n 33) #f)\n     \
    \     ((= n 34) #f)\n          ((= n 35) #f)\n          ((= n 36) #t)\n      \
    \    ((= n 37) #f)\n          ((= n 38) #f)\n          ((= n 39) #f)\n       \
    \   ((= n 40) #t)\n          ((= n 41) #f)\n          ((= n 42) #f)\n        \
    \  ((= n 43) #f)\n          ((= n 44) #t)\n          ((= n 45) #f)\n         \
    \ ((= n 46) #f", "  (define (is_equal_to_sum_even_iter n sum count)\n    (cond\
    \ ((= count 4) (= n sum))\n          ((= n sum) #t)\n          ((= n (+ sum 2))\
    \ #t)\n          ((= n (+ sum 4)) #t)\n          ((= n (+ sum 6)) #t)\n      \
    \    ((= n (+ sum 8)) #t)\n          ((= n (+ sum 10)) #t)\n          ((= n (+\
    \ sum 12)) #t)\n          ((= n (+ sum 14)) #t)\n          ((= n (+ sum 16)) #t)\n\
    \          ((= n (+ sum 18)) #t)\n          ((= n (+ sum 20)) #t)\n          ((=\
    \ n (+ sum 22)) #t)\n          ((= n (+ sum 24)) #t)\n          ((= n (+ sum 26))\
    \ #t)\n          ((= n (+ sum 28)) #t)\n          ((= n (+ sum 30)) #t)\n    \
    \      ((= n (+ sum 32)) #t)\n          ((= n (+ sum 34)) #t)\n          ((= n\
    \ (+ sum 36)) #t)\n          ((= n (+ sum 38)) #t)\n          ((= n (+ sum 40))\
    \ #t)\n          ((= n (+ sum 42)) #t)\n          ((= n (+ sum 44)) #t)\n    \
    \      ((= n (+ sum 46)) #t)\n          ((= n (+ sum 48)) #t)\n          ((= n\
    \ (+ sum 50)) #t)\n          ((= n (+ sum 52)) #t)\n          ((= n (+ sum 54))\
    \ #t)\n          ((= n (+ sum 56)) #t)\n          ((= n (+ sum 58)) #t)\n    \
    \      ((= n (+ sum 60)) #t)\n          ((= n (+ sum 62)) #t)\n          ((= n\
    \ (+ sum 64)) #t)\n          ((= n (+ sum 66)) #t)\n          ((= n (+ sum 68))\
    \ #t)\n          ((= n (+ sum 70)) #t)\n          ((= n (+ sum 72)) #t)\n    \
    \      ((= n (+ sum 74)) #t)\n          ((= n (+ sum 76)) #t)\n          ((= n\
    \ (+ sum 78)) #t)\n", "  (define (is_equal_to_sum_even_helper n sum count)\n \
    \   (cond\n      [(= count 4) (= n sum)]\n      [(= n sum) #t]\n      [(> n sum)\
    \ (is_equal_to_sum_even_helper n (+ sum 2) (+ count 1))]\n      [else #f]))\n\
    \  (is_equal_to_sum_even_helper n 0 0))\n", "  (cond\n    [(= n 0) #t]\n    [(even?\
    \ n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n", "  (define (is_equal_to_sum_even-iter\
    \ n i)\n    (cond ((= n 0) #t)\n          ((= i n) #f)\n          ((= n (+ i (*\
    \ 2 i))) #t)\n          (else (is_equal_to_sum_even-iter n (+ i 2)))))\n  (is_equal_to_sum_even-iter\
    \ n 2))\n", "  (define (is_equal_to_sum_even-iter n i)\n    (cond\n      [(= i\
    \ n) #t]\n      [(= i 0) (is_equal_to_sum_even-iter n (+ i 2))]\n      [(= i (-\
    \ n 2)) #f]\n      [else (or (is_equal_to_sum_even-iter n (+ i 2))\n         \
    \       (is_equal_to_sum_even-iter n (- n i)))]))\n  (is_equal_to_sum_even-iter\
    \ n 0))\n", "  (define (is_equal_to_sum_even_iter n i)\n    (cond ((= i n) #t)\n\
    \          ((= (+ i i i i) n) #t)\n          (else (is_equal_to_sum_even_iter\
    \ n (+ i 2)))))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define (is_equal_to_sum_even_iter\
    \ n sum count)\n    (cond\n      [(= n sum) (= count 4)]\n      [(> n sum) (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n\
    \ 0 0))\n", "  (define (is_equal_to_sum_even_iter n i acc)\n    (cond\n      [(=\
    \ i 0) (if (= n acc) #t #f)]\n      [(even? i) (is_equal_to_sum_even_iter n (-\
    \ i 1) (+ acc i))]\n      [else (is_equal_to_sum_even_iter n (- i 1) acc)]))\n\
    \  (is_equal_to_sum_even_iter n n 0))\n", "  (define (is_equal_to_sum_even_iter\
    \ n i)\n    (cond\n      [(= n (* 4 i)) #t]\n      [(> n (* 4 i)) (is_equal_to_sum_even_iter\
    \ n (+ i 2))]\n      [else #f]))\n  (is_equal_to_sum_even_iter n 2))\n", "  (define\
    \ (is_equal_to_sum_even_iter n sum count)\n    (cond\n      [(= count 4) (= n\
    \ sum)]\n      [(= n sum) #t]\n      [(= n (+ sum 2)) #t]\n      [else (is_equal_to_sum_even_iter\
    \ n (+ sum 2) (+ count 1))]))\n  (is_equal_to_sum_even_iter n 0 0))\n", "  (cond\n\
    \    [(= n 0) #t]\n    [(even? n) (is_equal_to_sum_even (- n 2))]\n    [else #f]))\n",
  "  (letrec ([even? (lambda (n) (if (zero? n) #t (odd? (- n 1))))]\n           [odd?\
    \ (lambda (n) (if (zero? n) #f (even? (- n 1))))])\n    (letrec ([sum-even (lambda\
    \ (n)\n                         (if (zero? n)\n                             0\n\
    \                             (+ (if (even? n) n 0) (sum-even (- n 1)))))]\n \
    \            [sum-odd (lambda (n)\n                        (if (zero? n)\n   \
    \                         0\n                            (+ (if (odd? n) n 0)\
    \ (sum-odd (- n 1)))))]\n             [sum-even-odd (lambda (n)\n            \
    \                 (if (zero? n)\n                                 0\n        \
    \                         (+ (if (even? n) n 0) (sum-even-odd (- n 1))))])\n \
    \     (letrec ([sum-even-even (lambda (n)\n                                (if\
    \ (zero? n)\n                                    0\n                         \
    \           (+ (if (even? n) n 0) (sum-even-even (- n 1)))))]\n              \
    \ [sum-even-odd-even (lambda (n)\n                                    (if (zero?\
    \ n)\n                                        0\n                            \
    \            (+ (if (even? n) n 0) (sum-even-odd-even (- n 1)))))]\n         \
    \      [sum-even-even-even (lambda (n)\n                                     (if\
    \ (zero? n)\n                                         0\n                    \
    \                     (+ (if (even? n) n 0) (sum-even-even-even (- n 1)))))]\n\
    \               [sum-even-even-odd (lambda (n)\n                             \
    \       (if (zero? n)\n                                        0\n           \
    \                             (+ (if (even? n) n 0) (sum-even-even-odd (- n 1)))))]\n\
    \               [sum-even-odd-odd (lambda (n)\n                              \
    \     (if (zero? n)\n                                       0\n              \
    \                         (+ (if (even? n) n 0) (sum-even-odd-odd (- n 1)))))]\n\
    \               [sum-even-even-even-even (lambda (n)\n                       \
    \                    (if (zero? n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

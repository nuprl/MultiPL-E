name: HumanEval_130_tri
language: rkt
prompt: "#lang racket\n\n;; Everyone knows Fibonacci sequence, it was studied deeply\
  \ by mathematicians in \n;; the last couple centuries. However, what people don't\
  \ know is Tribonacci sequence.\n;; Tribonacci sequence is defined by the recurrence:\n\
  ;; tri(1) = 3\n;; tri(n) = 1 + n / 2, if n is even.\n;; tri(n) =  tri(n - 1) + tri(n\
  \ - 2) + tri(n + 1), if n is odd.\n;; For example:\n;; tri(2) = 1 + (2 / 2) = 2\n\
  ;; tri(4) = 3\n;; tri(3) = tri(2) + tri(1) + tri(4)\n;; = 2 + 3 + 3 = 8 \n;; You\
  \ are given a non-negative integer number n, you have to a return a list of the\
  \ \n;; first n + 1 numbers of the Tribonacci sequence.\n;; Examples:\n;; >>> (tri\
  \ 3)\n;; (list 1 3 2 8)\n(define (tri n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate tri))\n\
  \    (check-equal? (candidate 3) (list 1 3 2 8))\n    (check-equal? (candidate 4)\
  \ (list 1 3 2 8 3))\n    (check-equal? (candidate 5) (list 1 3 2 8 3 15))\n    (check-equal?\
  \ (candidate 6) (list 1 3 2 8 3 15 4))\n    (check-equal? (candidate 7) (list 1\
  \ 3 2 8 3 15 4 24))\n    (check-equal? (candidate 8) (list 1 3 2 8 3 15 4 24 5))\n\
  \    (check-equal? (candidate 9) (list 1 3 2 8 3 15 4 24 5 35))\n    (check-equal?\
  \ (candidate 20) (list 1 3 2 8 3 15 4 24 5 35 6 48 7 63 8 80 9 99 10 120 11))\n\
  \    (check-equal? (candidate 0) (list 1))\n    (check-equal? (candidate 1) (list\
  \ 1 3))\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(=\
    \ n 2) (list 1 3 2)]\n    [else (cons 1 (cons 3 (cons 2 (tri-helper n))))]))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (define (tri-iter n a b c)\n    (if (= n 0)\n        (list a b c)\n        (if\
    \ (even? n)\n            (tri-iter (- n 1) a b (+ c (/ n 2)))\n            (tri-iter\
    \ (- n 1) a (+ b c) (+ c b a)))))\n  (tri-iter n 1 3 2))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n          \
    \        (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (+\
    \ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (+ n 1)))) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                           (list-ref (tri (- n 2)) (-\
    \ n 2))\n                           (list-ref (tri (+ n 1)) (+ n 1)))\n      \
    \                  (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons\
    \ 3 (cons 2 (tri-helper n))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n        \
    \          (if (= n 4)\n                      (list 1 3 2 8 21)\n            \
    \          (if (= n 5)\n                          (list 1 3 2 8 21 55)\n     \
    \                     (if (= n 6)\n                              (list 1 3 2 8\
    \ 21 55 144)\n                              (if (= n 7)\n                    \
    \              (list 1 3 2 8 21 55 144 377)\n                                \
    \  (if (= n 8)\n                                      (list 1 3 2 8 21 55 144\
    \ 377 987)\n                                      (if (= n 9)\n              \
    \                            (list 1 3 2 8 21 55 144 377 987 2584)\n         \
    \                                 (if (= n 10)\n                             \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765)\n               \
    \                               (if (= n 11)\n                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n       \
    \                                           (if (= n 12)\n                   \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368)\n                                                      (if (= n\
    \ 13)\n                                                          (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393)\n                          \
    \                                (if (= n 14)\n                              \
    \                                (list 1 3 2 8 21 55 144 377 987 2584 6765 17711\
    \ 46368 121393 317811)\n                                                     \
    \         (if (= n 15)\n                                                     \
    \             (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040\
    \ 2178309)\n                                                                 \
    \     (if (= n 17)\n                                                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", " \
    \ (define (tri-iter n acc)\n    (cond\n      [(= n 0) acc]\n      [(= n 1) (cons\
    \ 3 acc)]\n      [(= n 2) (cons 2 (cons 3 acc))]\n      [(= (remainder n 2) 0)\
    \ (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))]\n      [else (tri-iter (- n 1)\
    \ (cons (+ (car acc) (cadr acc) (car (cddr acc))) acc))]))\n  (tri-iter n '()))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n        (tri-iter (-\
    \ n 1) (cons (tri-n n) acc))))\n  (tri-iter n '()))\n", "  (if (= n 0)\n     \
    \ (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n \
    \             (list 1 3 2)\n              (if (= (modulo n 2) 0)\n           \
    \       (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (+ n\
    \ 1)) n)) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (modulo n 2) 0)\n                  (cons (add1 (quotient\
    \ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) 0)\
    \ (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (tri n) (tri (- n 1)))\n                  (cons\
    \ (tri n) (cons (tri (- n 1)) (cons (tri (- n 2)) (tri (+ n 1))))))))))\n", " \
    \ (define (tri-iter n acc)\n    (cond\n      [(= n 0) acc]\n      [(= n 1) (cons\
    \ 3 acc)]\n      [(= n 2) (cons 2 (cons 3 acc))]\n      [(even? n) (tri-iter (-\
    \ n 1) (cons (+ 1 (/ n 2)) acc))]\n      [else (tri-iter (- n 1) (cons (+ (car\
    \ acc) (cadr acc) (car (cddr acc))) acc))]))\n  (tri-iter n '()))\n", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n \
    \                                         (list-ref (tri (- n 1)) (- n 2))\n \
    \                                         (list-ref (tri (- n 1)) (+ n 1)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (+ 1 (/ n 2)) (tri (- n 1)))\n            \
    \      (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref\
    \ (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (-\
    \ n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2\
    \ 8)\n                  (if (= n 4)\n                      (list 1 3 2 8 21)\n\
    \                      (if (= n 5)\n                          (list 1 3 2 8 21\
    \ 55)\n                          (if (= n 6)\n                              (list\
    \ 1 3 2 8 21 55 144)\n                              (if (= n 7)\n            \
    \                      (list 1 3 2 8 21 55 144 377)\n                        \
    \          (if (= n 8)\n                                      (list 1 3 2 8 21\
    \ 55 144 377 987)\n                                      (if (= n 9)\n       \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584)\n  \
    \                                        (if (= n 10)\n                      \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765)\n        \
    \                                      (if (= n 11)\n                        \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n\
    \                  (list 1 3 2 8)\n                  (if (= n 4)\n           \
    \           (list 1 3 2 8 21)\n                      (if (= n 5)\n           \
    \               (list 1 3 2 8 21 55)\n                          (if (= n 6)\n\
    \                              (list 1 3 2 8 21 55 144)\n                    \
    \          (if (= n 7)\n                                  (list 1 3 2 8 21 55\
    \ 144 377)\n                                  (if (= n 8)\n                  \
    \                    (list 1 3 2 8 21 55 144 377 987)\n                      \
    \                (if (= n 9)\n                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584)\n                                          (if\
    \ (= n 10)\n                                              (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765)\n                                              (if (=\
    \ n 11)\n                                                  (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711)\n                                             \
    \     (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n                         \
    \                             (if (= n 13)\n                                 \
    \                         (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 121393)\n                                                          (if (= n\
    \ 14)\n                                                              (list 1 3\
    \ 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393 317811 832040)\n                          \
    \                                        (if (= n 16)\n                      \
    \                                                (list 1 3 2 8 21 55 144 377 987\
    \ 2584 6765 17711 46368 121393 317811 832040 2178309)\n                      \
    \                                                (if (= n 17)\n              \
    \                                                            (list 1 3 2 8 21\
    \ 55 144 377 987 2584 6765 17711 46368 12", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons\
    \ 3 (cons 2 (tri (- n 2)))))])\n  )\n)\n", "  (if (= n 0)\n      (list 1)\n  \
    \    (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (add1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n        [(= n 2) (list\
    \ 1 3 2)]\n        [else (cons 1 (cons 3 (cons 2 (tri (- n 1)))))])\n  )", " \
    \ (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n        (tri-iter (-\
    \ n 1) (cons (tri-n n) acc))))\n  (tri-iter n (list)))\n", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 21)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 21 55)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n \
    \                                 (list 1 3 2 8 21 55 144 377)\n             \
    \                     (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n        [(=\
    \ n 2) (list 1 3 2)]\n        [else (append (tri (- n 1))\n                  \
    \    (list (+ (list-ref (tri (- n 1)) (- n 1))\n                             \
    \  (list-ref (tri (- n 1)) (- n 2))\n                               (list-ref\
    \ (tri (- n 1)) (- n 3))))])]))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n        \
    \          (if (= n 4)\n                      (list 1 3 2 8 21)\n            \
    \          (if (= n 5)\n                          (list 1 3 2 8 21 55)\n     \
    \                     (if (= n 6)\n                              (list 1 3 2 8\
    \ 21 55 144)\n                              (if (= n 7)\n                    \
    \              (list 1 3 2 8 21 55 144 377)\n                                \
    \  (if (= n 8)\n                                      (list 1 3 2 8 21 55 144\
    \ 377 987)\n                                      (if (= n 9)\n              \
    \                            (list 1 3 2 8 21 55 144 377 987 2584)\n         \
    \                                 (if (= n 10)\n                             \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765)\n               \
    \                               (if (= n 11)\n                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n       \
    \                                           (if (= n 12)\n                   \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368)\n                                                      (if (= n\
    \ 13)\n                                                          (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393)\n                          \
    \                                (if (= n 14)\n                              \
    \                                (list 1 3 2 8 21 55 144 377 987 2584 6765 17711\
    \ 46368 121393 317811)\n                                                     \
    \         (if (= n 15)\n                                                     \
    \             (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040\
    \ 2178309)\n                                                                 \
    \     (if (= n 17)\n                                                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", " \
    \ (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n        (if (even? n)\n\
    \            (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))\n            (tri-iter\
    \ (- n 1) (cons (+ (car acc) (cadr acc) (caddr acc)) acc)))))\n  (tri-iter n (list\
    \ 3)))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ n 3)\n                  (list 1 3 2 8)\n                  (if (= n 4)\n    \
    \                  (list 1 3 2 8 21)\n                      (if (= n 5)\n    \
    \                      (list 1 3 2 8 21 55)\n                          (if (=\
    \ n 6)\n                              (list 1 3 2 8 21 55 144)\n             \
    \                 (if (= n 7)\n                                  (list 1 3 2 8\
    \ 21 55 144 377)\n                                  (if (= n 8)\n            \
    \                          (list 1 3 2 8 21 55 144 377 987)\n                \
    \                      (if (= n 9)\n                                         \
    \ (list 1 3 2 8 21 55 144 377 987 2584)\n                                    \
    \      (if (= n 10)\n                                              (list 1 3 2\
    \ 8 21 55 144 377 987 2584 6765)\n                                           \
    \   (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 21 55 144 377 987 2584 6765 17711)\n                                   \
    \               (if (= n 12)\n                                               \
    \       (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n             \
    \                                         (if (= n 13)\n                     \
    \                                     (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393)\n                                                      \
    \    (if (= n 14)\n                                                          \
    \    (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n  \
    \                                                            (if (= n 15)\n  \
    \                                                                (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040)\n            \
    \                                                      (if (= n 16)\n        \
    \                                                              (list 1 3 2 8 21\
    \ 55 144 377 987 2584 6765 17711 46368 121393 317811 832040 2178309)\n       \
    \                                                               (if (= n 17)\n\
    \                                                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                 \
    \ (cons (floor (/ n 2)) (tri (- n 1)))\n                  (append (tri (- n 1))\
    \ (tri (- n 2)) (tri (+ n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n     \
    \ (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (add1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ (- n 1)) (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n 1)))\
    \ (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (modulo n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (tri (- n 1)) (tri (- n 2)) (tri\
    \ (+ n 1))) (tri (- n 1))))))))\n", "  (define (tri-iter n acc)\n    (if (= n\
    \ 0)\n        acc\n        (let ((last (car (reverse acc))))\n          (if (even?\
    \ n)\n              (tri-iter (- n 1) (append acc (list (+ 1 (/ n 2)))))\n   \
    \           (tri-iter (- n 1) (append acc (list (+ last (car (reverse (cdr (reverse\
    \ acc)))) (car (reverse (cdr (reverse (cdr (reverse acc))))))))))))))\n  (tri-iter\
    \ n (list 3)))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n       \
    \   (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n          \
    \    (if (= (modulo n 2) 0)\n                  (cons 1 (cons (/ n 2) (tri (- n\
    \ 1))))\n                  (cons 1 (cons (tri (- n 1)) (cons (tri (- n 2)) (cons\
    \ (tri (+ n 1)) '())))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (let ((lst (tri (- n 1))))\n                (append lst (list (+\
    \ (list-ref lst (- n 1)) (list-ref lst (- n 2)) (list-ref lst (- n 3))))))))))\n",
  "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n        [(= n 2) (list\
    \ 1 3 2)]\n        [else (cons 1 (map (lambda (x y z) (+ x y z)) (tri (- n 1))\
    \ (tri (- n 2)) (tri (- n 3))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(=\
    \ n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\
    \ (list (+ (list-ref (tri (- n 1)) (- n 1))\n                                \
    \          (list-ref (tri (- n 1)) (- n 2))\n                                \
    \          (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (define (tri-iter n acc)\n\
    \    (cond ((= n 0) acc)\n          ((= n 1) (cons 3 acc))\n          ((= n 2)\
    \ (cons 2 (cons 3 acc)))\n          ((even? n) (tri-iter (- n 1) (cons (+ 1 (/\
    \ n 2)) acc)))\n          (else (tri-iter (- n 1) (cons (+ (car acc) (cadr acc)\
    \ (caddr acc)) acc)))))\n  (tri-iter n '()))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (append (tri (- n 1)) (tri\
    \ (- n 2)) (tri (+ n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n\
    \ 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\
    \ (list (+ (list-ref (tri (- n 1)) (- n 1))\n                                \
    \          (list-ref (tri (- n 1)) (- n 2))\n                                \
    \          (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (define (tri-iter n a\
    \ b c)\n    (if (= n 0)\n        (list a b c)\n        (if (even? n)\n       \
    \     (tri-iter (- n 1) b c (+ 1 (/ n 2)))\n            (tri-iter (- n 1) c (+\
    \ a b c) (+ 1 (/ n 2))))))\n  (tri-iter n 1 3 2))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                 \
    \ (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (nth (tri (-\
    \ n 1)) (- n 1))\n                           (nth (tri (- n 2)) (- n 2))\n   \
    \                        (nth (tri (+ n 1)) (+ n 1)))\n                      \
    \  (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1))\n                                         \
    \ (list-ref (tri (- n 1)) (- n 2))\n                                         \
    \ (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 2))\n                       \
    \                   (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n          \
    \        (cons (tri n) (tri (- n 1)))\n                  (cons (tri n) (tri (-\
    \ n 1)))\n                  )))))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n        \
    \          (if (= n 4)\n                      (list 1 3 2 8 13)\n            \
    \          (if (= n 5)\n                          (list 1 3 2 8 13 21)\n     \
    \                     (if (= n 6)\n                              (list 1 3 2 8\
    \ 13 21 34)\n                              (if (= n 7)\n                     \
    \             (list 1 3 2 8 13 21 34 55)\n                                  (if\
    \ (= n 8)\n                                      (list 1 3 2 8 13 21 34 55 89)\n\
    \                                      (if (= n 9)\n                         \
    \                 (list 1 3 2 8 13 21 34 55 89 144)\n                        \
    \                  (if (= n 10)\n                                            \
    \  (list 1 3 2 8 13 21 34 55 89 144 233)\n                                   \
    \           (if (= n 11)\n                                                  (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377)\n                                      \
    \            (if (= n 12)\n                                                  \
    \    (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                         \
    \                             (if (= n 13)\n                                 \
    \                         (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n\
    \                                                          (if (= n 14)\n    \
    \                                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987 1597)\n                                       \
    \                       (if (= n 15)\n                                       \
    \                           (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597\
    \ 2584)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n     \
    \                                                                 (if (= n 17)\n\
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n          \
    \                                                                (if (= n 18)\n\
    \                                                                            \
    \  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= n 3)\n              \
    \    (list 1 3 2 8)\n                  (if (= n 4)\n                      (list\
    \ 1 3 2 8 13)\n                      (if (= n 5)\n                          (list\
    \ 1 3 2 8 13 21)\n                          (if (= n 6)\n                    \
    \          (list 1 3 2 8 13 21 34)\n                              (if (= n 7)\n\
    \                                  (list 1 3 2 8 13 21 34 55)\n              \
    \                    (if (= n 8)\n                                      (list\
    \ 1 3 2 8 13 21 34 55 89)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 13 21 34 55 89 144)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 13 21 34 55 89 144 233)\n           \
    \                                   (if (= n 11)\n                           \
    \                       (list 1 3 2 8 13 21 34 55 89 144 233 377)\n          \
    \                                        (if (= n 12)\n                      \
    \                                (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987)\n                                                     \
    \     (if (= n 14)\n                                                         \
    \     (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 13 21 34 55\
    \ 89 144 233 377 610 987 1597 2584)\n                                        \
    \                          (if (= n 16)\n                                    \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610\
    \ 987 1597 2584 4181)\n                                                      \
    \                (if (= n 17)\n                                              \
    \                            (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987\
    \ 1597 2584 4181 6765)\n                                                     \
    \                     (if (= n 18)\n                                         \
    \                                     (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n  \
    \        (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n     \
    \         (if (= (modulo n 2) 0)\n                  (cons (quotient (+ n 1) 2)\
    \ (tri (- n 1)))\n                  (append (tri (- n 1)) (list (+ (tri (- n 1))\
    \ (tri (- n 2)) (tri (+ n 1))))))))))\n", "  (define (tri-iter n acc)\n    (if\
    \ (= n 0)\n        acc\n        (tri-iter (- n 1) (cons (tri-aux n) acc))))\n\
    \  (tri-iter n '()))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= (remainder n 2) 0)\n                  (cons (add1 (quotient\
    \ n 2)) (tri (sub1 n)))\n                  (append (tri (sub1 n)) (list (+ (list-ref\
    \ (tri (sub1 n)) 0) (list-ref (tri (sub2 n)) 0) (list-ref (tri (add1 n)) 0)))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 2))\n                                          (list-ref (tri (- n 1)) (+ n\
    \ 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n\
    \                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n               \
    \   (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri\
    \ (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri\
    \ (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n   \
    \               (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n\
    \ 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2", "  (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n\
    \        (tri-iter (- n 1) (cons (if (even? n)\n                             \
    \       (quotient n 2)\n                                    (+ (car acc) (cadr\
    \ acc) (car (cddr acc))))\n                                acc))))\n  (tri-iter\
    \ n (list 3)))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n\
    \    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                                          (list-ref\
    \ (tri (- n 1)) (- n 2))\n                                          (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (modulo n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) 0)\n    \
    \                       (list-ref (tri (- n 2)) 0)\n                         \
    \  (list-ref (tri (+ n 1)) 0))\n                        (tri (- n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                          \
    \ (list-ref (tri (- n 2)) (- n 2))\n                           (list-ref (tri\
    \ (+ n 1)) (+ n 1)))\n                        (tri (- n 1))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref (tri\
    \ (- n 1)) (- n 2))\n                           (list-ref (tri (+ n 1)) (- n 1)))\n\
    \                        (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (-\
    \ n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n    \
    \              (list 1 3 2 8)\n                  (if (= n 4)\n               \
    \       (list 1 3 2 8 21)\n                      (if (= n 5)\n               \
    \           (list 1 3 2 8 21 55)\n                          (if (= n 6)\n    \
    \                          (list 1 3 2 8 21 55 144)\n                        \
    \      (if (= n 7)\n                                  (list 1 3 2 8 21 55 144\
    \ 377)\n                                  (if (= n 8)\n                      \
    \                (list 1 3 2 8 21 55 144 377 987)\n                          \
    \            (if (= n 9)\n                                          (list 1 3\
    \ 2 8 21 55 144 377 987 2584)\n                                          (if (=\
    \ n 10)\n                                              (list 1 3 2 8 21 55 144\
    \ 377 987 2584 6765)\n                                              (if (= n 11)\n\
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711)\n                                                  (if\
    \ (= n 12)\n                                                      (list 1 3 2\
    \ 8 21 55 144 377 987 2584 6765 17711 46368)\n                               \
    \                       (if (= n 13)\n                                       \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n\
    \                                                          (if (= n 14)\n    \
    \                                                          (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711 46368 121393 317811)\n                         \
    \                                     (if (= n 15)\n                         \
    \                                         (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368 121393 317811 832040)\n                                   \
    \                               (if (= n 16)\n                               \
    \                                       (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811 832040 2178309)\n                                \
    \                                      (if (= n 17)\n                        \
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 12", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (modulo n 2) 0)\n                  (cons (+ 1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri\
    \ (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n   \
    \               (cons (quotient (+ n 1) 2) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref (tri\
    \ (- n 1)) (- n 2))\n                           (list-ref (tri (+ n 1)) n))\n\
    \                        (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (floor (+ 1 (/ n 2))) (tri (- n 1)))\n                  (cons (+ (tri (- n 1))\
    \ (tri (- n 2)) (tri (+ n 1))) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 2)) (- n 2)) (list-ref (tri (+ n\
    \ 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n     \
    \ (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n      \
    \            (if (= n 4)\n                      (list 1 3 2 8 21)\n          \
    \            (if (= n 5)\n                          (list 1 3 2 8 21 55)\n   \
    \                       (if (= n 6)\n                              (list 1 3 2\
    \ 8 21 55 144)\n                              (if (= n 7)\n                  \
    \                (list 1 3 2 8 21 55 144 377)\n                              \
    \    (if (= n 8)\n                                      (list 1 3 2 8 21 55 144\
    \ 377 987)\n                                      (if (= n 9)\n              \
    \                            (list 1 3 2 8 21 55 144 377 987 2584)\n         \
    \                                 (if (= n 10)\n                             \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765)\n               \
    \                               (if (= n 11)\n                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n       \
    \                                           (if (= n 12)\n                   \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368)\n                                                      (if (= n\
    \ 13)\n                                                          (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393)\n                          \
    \                                (if (= n 14)\n                              \
    \                                (list 1 3 2 8 21 55 144 377 987 2584 6765 17711\
    \ 46368 121393 317811)\n                                                     \
    \         (if (= n 15)\n                                                     \
    \             (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040\
    \ 2178309)\n                                                                 \
    \     (if (= n 17)\n                                                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n\
    \ 2) 0)\n                  (cons (tri n) (tri (- n 1)))\n                  (cons\
    \ (tri n) (tri (- n 1)))\n                  )))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2\
    \ 8)\n                  (if (= n 4)\n                      (list 1 3 2 8 21)\n\
    \                      (if (= n 5)\n                          (list 1 3 2 8 21\
    \ 55)\n                          (if (= n 6)\n                              (list\
    \ 1 3 2 8 21 55 144)\n                              (if (= n 7)\n            \
    \                      (list 1 3 2 8 21 55 144 377)\n                        \
    \          (if (= n 8)\n                                      (list 1 3 2 8 21\
    \ 55 144 377 987)\n                                      (if (= n 9)\n       \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584)\n  \
    \                                        (if (= n 10)\n                      \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765)\n        \
    \                                      (if (= n 11)\n                        \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (add1 (tri (- n 1))) (cons (tri (- n 2)) (tri (+ n 1)))))))))\n",
  "  (cond ((= n 0) (list 1))\n        ((= n 1) (list 1 3))\n        ((= n 2) (list\
    \ 1 3 2))\n        (else (cons 1 (cons 3 (cons 2 (tri-helper n)))))))\n", "  (if\
    \ (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n         \
    \ (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (floor (+ 1 (/ n 2))) (tri (- n 1)))\n              \
    \    (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref\
    \ (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n \
    \     (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n             \
    \ (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (-\
    \ n 1)) (- n 1))\n                           (list-ref (tri (- n 2)) (- n 2))\n\
    \                           (list-ref (tri (+ n 1)) (+ n 1)))\n              \
    \          (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n\
    \                           (list-ref (tri (- n 2)) (- n 2))\n               \
    \            (list-ref (tri (+ n 1)) (+ n 1)))\n                        (tri (-\
    \ n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n\
    \    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                                          (list-ref\
    \ (tri (- n 1)) (- n 2))\n                                          (list-ref\
    \ (tri (- n 1)) (+ n 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (modulo n 2) 0)\n                  (cons (quotient (+ n\
    \ 1) 2) (tri (- n 1)))\n                  (append (tri (- n 1)) (tri (- n 2))\
    \ (tri (+ n 1))))))))\n", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list\
    \ 1 3)]\n        [(= n 2) (list 1 3 2)]\n        [else (append (tri (- n 1)) (list\
    \ (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= n 3)\n                  (list 1 3 2 8)\n               \
    \   (if (= n 4)\n                      (list 1 3 2 8 21)\n                   \
    \   (if (= n 5)\n                          (list 1 3 2 8 21 55)\n            \
    \              (if (= n 6)\n                              (list 1 3 2 8 21 55\
    \ 144)\n                              (if (= n 7)\n                          \
    \        (list 1 3 2 8 21 55 144 377)\n                                  (if (=\
    \ n 8)\n                                      (list 1 3 2 8 21 55 144 377 987)\n\
    \                                      (if (= n 9)\n                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584)\n                    \
    \                      (if (= n 10)\n                                        \
    \      (list 1 3 2 8 21 55 144 377 987 2584 6765)\n                          \
    \                    (if (= n 11)\n                                          \
    \        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n                  \
    \                                (if (= n 12)\n                              \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393)\n                                        \
    \                  (if (= n 14)\n                                            \
    \                  (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811)\n                                                              (if (=\
    \ n 15)\n                                                                  (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040)\n    \
    \                                                              (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040 2178309)\n\
    \                                                                      (if (=\
    \ n 17)\n                                                                    \
    \      (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", "  (cond\n \
    \   [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (quotient (+ n 1) 2) (tri (- n 1)))\n               \
    \   (append (tri (- n 1)) (list (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1\
    \ (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1)))\
    \ (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n\
    \                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n               \
    \   (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri\
    \ (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri\
    \ (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n   \
    \               (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (add1 (+ (list-ref (tri (- n 1)) (- n 1))\n                    \
    \             (list-ref (tri (- n 2)) (- n 2))\n                             \
    \    (list-ref (tri (+ n 1)) (+ n 1))))\n                        (tri (- n 1))))))))\n",
  "  (define (tri-iter n acc)\n    (cond ((= n 0) acc)\n          ((even? n) (tri-iter\
    \ (- n 1) (cons (+ 1 (/ n 2)) acc)))\n          (else (tri-iter (- n 1) (cons\
    \ (+ (car acc) (cadr acc) (car (cddr acc))) acc)))))\n  (tri-iter n (list 3)))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n           \
    \       (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref\
    \ (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons\
    \ 3 (cons 2 (tri-helper 3 n))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons (floor (/\
    \ n 2)) (tri (- n 1)))\n                  (append (tri (- n 1)) (tri (- n 2))\
    \ (tri (+ n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) 0) (list-ref\
    \ (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (if\
    \ (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n         \
    \ (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2)\
    \ 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                \
    \  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref\
    \ (tri (- n 2)) (- n 2))\n                           (list-ref (tri (+ n 1)) (+\
    \ n 1)))\n                        (tri (- n 1))))))))\n", "  (if (= n 0)\n   \
    \   (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1\
    \ (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1)))\
    \ (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n\
    \                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n               \
    \   (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri\
    \ (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri\
    \ (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n   \
    \               (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n \
    \                                         (list-ref (tri (- n 1)) (- n 2))\n \
    \                                         (list-ref (tri (- n 1)) (+ n 1)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (tri (- n 1)) (list (+ (tri (- n 1)) (tri (- n 2))\
    \ (tri (+ n 1)))))\n                  (cons (tri (- n 1)) (list (+ (tri (- n 1))\
    \ (tri (- n 2)) (tri (+ n 1))))))))))\n", "  (if (= n 0)\n      '()\n      (cons\
    \ (if (= n 1)\n                3\n                (if (even? n)\n            \
    \        (+ 1 (/ n 2))\n                    (+ (tri (- n 1)) (tri (- n 2)) (tri\
    \ (+ n 1)))))\n            (tri (- n 1)))))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2 8)\n\
    \                  (if (= n 4)\n                      (list 1 3 2 8 21)\n    \
    \                  (if (= n 5)\n                          (list 1 3 2 8 21 55)\n\
    \                          (if (= n 6)\n                              (list 1\
    \ 3 2 8 21 55 144)\n                              (if (= n 7)\n              \
    \                    (list 1 3 2 8 21 55 144 377)\n                          \
    \        (if (= n 8)\n                                      (list 1 3 2 8 21 55\
    \ 144 377 987)\n                                      (if (= n 9)\n          \
    \                                (list 1 3 2 8 21 55 144 377 987 2584)\n     \
    \                                     (if (= n 10)\n                         \
    \                     (list 1 3 2 8 21 55 144 377 987 2584 6765)\n           \
    \                                   (if (= n 11)\n                           \
    \                       (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n   \
    \                                               (if (= n 12)\n               \
    \                                       (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368)\n                                                      (if (= n\
    \ 13)\n                                                          (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393)\n                          \
    \                                (if (= n 14)\n                              \
    \                                (list 1 3 2 8 21 55 144 377 987 2584 6765 17711\
    \ 46368 121393 317811)\n                                                     \
    \         (if (= n 15)\n                                                     \
    \             (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040)\n                                                                  (if\
    \ (= n 16)\n                                                                 \
    \     (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040\
    \ 2178309)\n                                                                 \
    \     (if (= n 17)\n                                                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", " \
    \ (define (tri-iter n acc)\n    (if (= n 0)\n        acc\n        (if (even? n)\n\
    \            (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))\n            (tri-iter\
    \ (- n 1) (cons (+ (car acc) (cadr acc) (caddr acc)) acc)))))\n  (tri-iter n (list\
    \ 3)))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(=\
    \ n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri\
    \ (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (+\
    \ n 1)))))]))\n", "  (if (= n 0)\n      '()\n      (cons (if (= n 1)\n       \
    \         3\n                (if (even? n)\n                    (+ 1 (/ n 2))\n\
    \                    (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1)))))\n       \
    \     (tri (- n 1)))))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n    \
    \    acc\n        (if (even? n)\n            (tri-iter (- n 1) (cons (+ 1 (/ n\
    \ 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car acc) (cadr acc) (caddr\
    \ acc)) acc)))))\n  (tri-iter n (list 3)))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons\
    \ (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1)))\
    \ (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n\
    \                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n               \
    \   (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri\
    \ (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri\
    \ (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n   \
    \               (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n\
    \ 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= n 3)\n                  (list 1 3 2\
    \ 8)\n                  (if (= n 4)\n                      (list 1 3 2 8 21)\n\
    \                      (if (= n 5)\n                          (list 1 3 2 8 21\
    \ 55)\n                          (if (= n 6)\n                              (list\
    \ 1 3 2 8 21 55 144)\n                              (if (= n 7)\n            \
    \                      (list 1 3 2 8 21 55 144 377)\n                        \
    \          (if (= n 8)\n                                      (list 1 3 2 8 21\
    \ 55 144 377 987)\n                                      (if (= n 9)\n       \
    \                                   (list 1 3 2 8 21 55 144 377 987 2584)\n  \
    \                                        (if (= n 10)\n                      \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765)\n        \
    \                                      (if (= n 11)\n                        \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n\
    \                  (list 1 3 2 8)\n                  (if (= n 4)\n           \
    \           (list 1 3 2 8 21)\n                      (if (= n 5)\n           \
    \               (list 1 3 2 8 21 55)\n                          (if (= n 6)\n\
    \                              (list 1 3 2 8 21 55 144)\n                    \
    \          (if (= n 7)\n                                  (list 1 3 2 8 21 55\
    \ 144 377)\n                                  (if (= n 8)\n                  \
    \                    (list 1 3 2 8 21 55 144 377 987)\n                      \
    \                (if (= n 9)\n                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584)\n                                          (if\
    \ (= n 10)\n                                              (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765)\n                                              (if (=\
    \ n 11)\n                                                  (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711)\n                                             \
    \     (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n                         \
    \                             (if (= n 13)\n                                 \
    \                         (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 121393)\n                                                          (if (= n\
    \ 14)\n                                                              (list 1 3\
    \ 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393 317811 832040)\n                          \
    \                                        (if (= n 16)\n                      \
    \                                                (list 1 3 2 8 21 55 144 377 987\
    \ 2584 6765 17711 46368 121393 317811 832040 2178309)\n                      \
    \                                                (if (= n 17)\n              \
    \                                                            (list 1 3 2 8 21\
    \ 55 144 377 987 2584 6765 17711 46368 12", "  (cond\n    [(= n 0) (list 1)]\n\
    \    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                   (list-ref (tri (- n 1)) (- n 2))\n                       \
    \                   (list-ref (tri (- n 1)) (+ n 1)))))]))\n", "  (cond\n    [(=\
    \ n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n          \
    \                                (list-ref (tri (- n 1)) (- n 2))\n          \
    \                                (list-ref (tri (- n 1)) (+ n 1)))))]))\n", " \
    \ (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n        [(= n 2) (list\
    \ 1 3 2)]\n        [else (cons 1 (cons 3 (cons 2 (tri (- n 2)))))])\n  )\n", " \
    \ (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list\
    \ 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (-\
    \ n 1))\n                                          (list-ref (tri (- n 1)) (-\
    \ n 2))\n                                          (list-ref (tri (- n 1)) (+\
    \ n 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n        \
    \  (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n           \
    \   (if (= n 3)\n                  (list 1 3 2 8)\n                  (if (= n\
    \ 4)\n                      (list 1 3 2 8 13)\n                      (if (= n\
    \ 5)\n                          (list 1 3 2 8 13 21)\n                       \
    \   (if (= n 6)\n                              (list 1 3 2 8 13 21 34)\n     \
    \                         (if (= n 7)\n                                  (list\
    \ 1 3 2 8 13 21 34 55)\n                                  (if (= n 8)\n      \
    \                                (list 1 3 2 8 13 21 34 55 89)\n             \
    \                         (if (= n 9)\n                                      \
    \    (list 1 3 2 8 13 21 34 55 89 144)\n                                     \
    \     (if (= n 10)\n                                              (list 1 3 2\
    \ 8 13 21 34 55 89 144 233)\n                                              (if\
    \ (= n 11)\n                                                  (list 1 3 2 8 13\
    \ 21 34 55 89 144 233 377)\n                                                 \
    \ (if (= n 12)\n                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610)\n                                    \
    \                  (if (= n 13)\n                                            \
    \              (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n           \
    \                                               (if (= n 14)\n               \
    \                                               (list 1 3 2 8 13 21 34 55 89 144\
    \ 233 377 610 987 1597)\n                                                    \
    \          (if (= n 15)\n                                                    \
    \              (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n \
    \                                                                 (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (define (tri-iter\
    \ n acc)\n    (if (= n 0)\n        acc\n        (if (even? n)\n            (tri-iter\
    \ (- n 1) (cons (+ 1 (/ n 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car\
    \ acc) (cadr acc) (caddr acc)) acc)))))\n  (tri-iter n (list 3)))\n", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (cons 1 (cons 3 (cons 2 (tri (- n 2)))))])\n  )\n)\n", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n\
    \ 1)) 0)) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= n 3)\n                  (list 1 3 2 8)\n               \
    \   (if (= n 4)\n                      (list 1 3 2 8 13)\n                   \
    \   (if (= n 5)\n                          (list 1 3 2 8 13 21)\n            \
    \              (if (= n 6)\n                              (list 1 3 2 8 13 21\
    \ 34)\n                              (if (= n 7)\n                           \
    \       (list 1 3 2 8 13 21 34 55)\n                                  (if (= n\
    \ 8)\n                                      (list 1 3 2 8 13 21 34 55 89)\n  \
    \                                    (if (= n 9)\n                           \
    \               (list 1 3 2 8 13 21 34 55 89 144)\n                          \
    \                (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n          \
    \        (cons (tri n) (tri (- n 1)))\n                  (cons (tri n) (cons (tri\
    \ (- n 1)) (cons (tri (- n 2)) (tri (+ n 1))))))))))\n", "  (if (= n 0)\n    \
    \  (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 13)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 13 21)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 13 21 34)\n                              (if (= n 7)\n  \
    \                                (list 1 3 2 8 13 21 34 55)\n                \
    \                  (if (= n 8)\n                                      (list 1\
    \ 3 2 8 13 21 34 55 89)\n                                      (if (= n 9)\n \
    \                                         (list 1 3 2 8 13 21 34 55 89 144)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 13 21 34 55 89 144 233)\n           \
    \                                   (if (= n 11)\n                           \
    \                       (list 1 3 2 8 13 21 34 55 89 144 233 377)\n          \
    \                                        (if (= n 12)\n                      \
    \                                (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987)\n                                                     \
    \     (if (= n 14)\n                                                         \
    \     (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 13 21 34 55\
    \ 89 144 233 377 610 987 1597 2584)\n                                        \
    \                          (if (= n 16)\n                                    \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610\
    \ 987 1597 2584 4181)\n                                                      \
    \                (if (= n 17)\n                                              \
    \                            (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987\
    \ 1597 2584 4181 6765)\n                                                     \
    \                     (if (= n 18)\n                                         \
    \                                     (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n  \
    \        (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n     \
    \         (if (= (remainder n 2) 0)\n                  (cons 1 (cons (/ n 2) (tri\
    \ (- n 1))))\n                  (cons 1 (cons (tri (- n 1)) (cons (tri (- n 2))\
    \ (cons (tri (+ n 1)) '())))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (+ 1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (tri n) (tri (- n 1)))\n                  (cons\
    \ (tri n) (cons (tri (- n 1)) (cons (tri (- n 2)) (tri (+ n 1))))))))))\n", " \
    \ (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n     \
    \     (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n\
    \ 2) 0)\n                  (cons (quotient (+ n 1) 2) (tri (- n 1)))\n       \
    \           (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                      \
    \     (list-ref (tri (- n 1)) (- n 2))\n                           (list-ref (tri\
    \ (+ n 1)) n))\n                        (tri (- n 1))))))))\n", "  (define (tri-iter\
    \ n acc)\n    (if (= n 0)\n        acc\n        (tri-iter (- n 1) (cons (tri-n\
    \ n) acc))))\n  (tri-iter n (list 1 3 2)))\n", "  (if (= n 0)\n      (list 1)\n\
    \      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n            \
    \  (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ (quotient n 2) (tri (- n 1)))\n                  (append (tri (- n 1)) (list\
    \ (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))))\n", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 13)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 13 21)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 13 21 34)\n                              (if (= n 7)\n  \
    \                                (list 1 3 2 8 13 21 34 55)\n                \
    \                  (if (= n 8)\n                                      (list 1\
    \ 3 2 8 13 21 34 55 89)\n                                      (if (= n 9)\n \
    \                                         (list 1 3 2 8 13 21 34 55 89 144)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 13 21 34 55 89 144 233)\n           \
    \                                   (if (= n 11)\n                           \
    \                       (list 1 3 2 8 13 21 34 55 89 144 233 377)\n          \
    \                                        (if (= n 12)\n                      \
    \                                (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987)\n                                                     \
    \     (if (= n 14)\n                                                         \
    \     (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 13 21 34 55\
    \ 89 144 233 377 610 987 1597 2584)\n                                        \
    \                          (if (= n 16)\n                                    \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610\
    \ 987 1597 2584 4181)\n                                                      \
    \                (if (= n 17)\n                                              \
    \                            (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987\
    \ 1597 2584 4181 6765)\n                                                     \
    \                     (if (= n 18)\n                                         \
    \                                     (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n  \
    \        (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n     \
    \         (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 2)) (- n 2)) (list-ref (tri (+ n 1)) (+ n 1))) (tri (- n 1))))))))\n",
  "  (define (tri-helper n)\n    (cond [(= n 1) 3]\n          [(= n 2) 2]\n      \
    \    [(= n 3) 8]\n          [(even? n) (+ 1 (/ n 2))]\n          [else (+ (tri-helper\
    \ (- n 1)) (tri-helper (- n 2)) (tri-helper (+ n 1)))]))\n  (build-list (+ n 1)\
    \ (lambda (x) (tri-helper x))))\n", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons (tri n)\
    \ (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1)))\n           \
    \       )))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n        \
    \  (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n           \
    \   (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (-\
    \ n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) 0) (list-ref (tri\
    \ (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n", "  (cond\n \
    \   [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else\n     (let* ([n-1 (tri (- n 1))]\n            [n-2 (tri (- n 2))]\n\
    \            [n-3 (tri (- n 3))])\n       (append n-1 (list (+ (last n-1) (last\
    \ n-2) (last n-3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= n 3)\n                  (list 1 3 2 8)\n                  (if\
    \ (= n 4)\n                      (list 1 3 2 8 13)\n                      (if\
    \ (= n 5)\n                          (list 1 3 2 8 13 21)\n                  \
    \        (if (= n 6)\n                              (list 1 3 2 8 13 21 34)\n\
    \                              (if (= n 7)\n                                 \
    \ (list 1 3 2 8 13 21 34 55)\n                                  (if (= n 8)\n\
    \                                      (list 1 3 2 8 13 21 34 55 89)\n       \
    \                               (if (= n 9)\n                                \
    \          (list 1 3 2 8 13 21 34 55 89 144)\n                               \
    \           (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri\
    \ (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n     \
    \     (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n        \
    \      (if (= (modulo n 2) 0)\n                  (cons (tri (- n 1)) (tri (- n\
    \ 2)))\n                  (cons (tri (- n 1)) (tri (- n 2)) (tri (- n 3))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (+ 1 (/ n 2)) (tri (- n 1)))\n                 \
    \ (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (define (tri-iter n)\n  \
    \  (cond\n      [(= n 1) '(3)]\n      [(= n 2) '(1 3 2)]\n      [(= n 3) '(1 3\
    \ 2 8)]\n      [(= n 4) '(1 3 2 8 3)]\n      [(= n 5) '(1 3 2 8 3 11)]\n     \
    \ [(= n 6) '(1 3 2 8 3 11 19)]\n      [(= n 7) '(1 3 2 8 3 11 19 32)]\n      [(=\
    \ n 8) '(1 3 2 8 3 11 19 32 55)]\n      [(= n 9) '(1 3 2 8 3 11 19 32 55 89)]\n\
    \      [(= n 10) '(1 3 2 8 3 11 19 32 55 89 144)]\n      [(= n 11) '(1 3 2 8 3\
    \ 11 19 32 55 89 144 233)]\n      [(= n 12) '(1 3 2 8 3 11 19 32 55 89 144 233\
    \ 377)]\n      [(= n 13) '(1 3 2 8 3 11 19 32 55 89 144 233 377 610)]\n      [(=\
    \ n 14) '(1 3 2 8 3 11 19 32 55 89 144 233 377 610 987)]\n      [(= n 15) '(1\
    \ 3 2 8 3 11 19 32 55 89 144 233 377 610 987 1597)]\n      [(= n 16) '(1 3 2 8\
    \ 3 11 19 32 55 89 144 233 377 610 987 1597 2584)]\n      [(= n 17) '(1 3 2 8\
    \ 3 11 19 32 55 89 144 233 377 610 987 1597 2584 4181)]\n      [(= n 18) '(1 3\
    \ 2 8 3 11 19 32 55 89 144 233 377 610 987 1597 2584 4181 6765)]\n      [(= n\
    \ 19) '(1 3 2 8 3 11 19 32 55 89 144 233 377 610 987 1597 2584 4181 6765 10946)]\n\
    \      [(= n 20) '(1 3 2 8 3 11 19 32 55 89 144 233 377 610 987 1597 2584 4181\
    \ 6765 10946 17711)]\n      [(= n 21) '(1 3 2 8 3 11 19 32 55 89 144 233 377 610\
    \ 987 1597 2584 4181 6765 10946 17711 28657)]\n      [(= n 22) '(1 3 2 8 3 11\
    \ 19 32 55 89 144 233 377 610", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1)\
    \ (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list\
    \ (+ (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= n 3)\n                  (list 1 3 2 8)\n               \
    \   (if (= n 4)\n                      (list 1 3 2 8 13)\n                   \
    \   (if (= n 5)\n                          (list 1 3 2 8 13 21)\n            \
    \              (if (= n 6)\n                              (list 1 3 2 8 13 21\
    \ 34)\n                              (if (= n 7)\n                           \
    \       (list 1 3 2 8 13 21 34 55)\n                                  (if (= n\
    \ 8)\n                                      (list 1 3 2 8 13 21 34 55 89)\n  \
    \                                    (if (= n 9)\n                           \
    \               (list 1 3 2 8 13 21 34 55 89 144)\n                          \
    \                (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (if (= n 0)\n  \
    \    (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri\
    \ (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n     \
    \     (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n        \
    \      (if (= (modulo n 2) 0)\n                  (cons (quotient (+ n 1) 2) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n   \
    \                        (list-ref (tri (- n 1)) (- n 2))\n                  \
    \         (list-ref (tri (- n 1)) (+ n 1)))\n                        (tri (- n\
    \ 1))))))))\n", "  (define (tri-helper n)\n    (cond\n      [(= n 1) 3]\n    \
    \  [(= n 2) 2]\n      [(= n 3) 8]\n      [(even? n) (+ 1 (/ n 2))]\n      [else\
    \ (+ (tri-helper (- n 1)) (tri-helper (- n 2)) (tri-helper (+ n 1)))]))\n  (build-list\
    \ (+ n 1) tri-helper))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n\
    \          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n   \
    \           (if (= (modulo n 2) 0)\n                  (cons (tri n) (tri (- n\
    \ 1)))\n                  (cons (tri n) (tri (- n 1)))\n                  )))))\n\
    </code>\nI am trying to write a function that returns the first n + 1 numbers\
    \ of the Tribonacci sequence. I am not sure how to write the recursive part of\
    \ the function. I am trying to write it in a way that if n is even, it will return\
    \ 1 + n / 2, if n is odd, it will return tri(n - 1) + tri(n - 2) + tri(n + 1).\n\
    I am not sure how to write the recursive part of the function.\nAny help would\
    \ be appreciated.\n\n\nA:\n\nYou need to define a helper function that takes the\
    \ current number and the previous three numbers.\n<code>(define (tri n)\n  (define\
    \ (tri-helper n a b c)\n    (if (= n 0)\n        (list a b c)\n        (tri-helper\
    \ (- n 1) b c (+ a b c))))\n  (tri-helper n 1 3 2))\n</code>\n", "  (if (= n 0)\n\
    \      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n          \
    \        (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (nth\
    \ (tri (- n 1)) (- n 1)) (nth (tri (- n 2)) (- n 2)) (nth (tri (+ n 1)) (+ n 1)))\
    \ (tri (- n 1))))))))\n", "  (if (= n 0)\n      '()\n      (cons (if (= n 1) 3\
    \ (if (even? n) (+ 1 (/ n 2)) (+ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1)))))\n\
    \            (tri (- n 1)))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n\
    \ 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\
    \ (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n\
    \                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n               \
    \   (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri\
    \ (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri\
    \ (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n   \
    \               (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n\
    \ 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n\
    \ 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (+ n 1))) (tri (- n\
    \ 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2", "  (if (= n 0)\n      (list 1)\n      (if\
    \ (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1\
    \ 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (add1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ (- n 1))\n                           (list-ref (tri (- n 2)) (- n 2))\n    \
    \                       (list-ref (tri (+ n 1)) (+ n 1)))\n                  \
    \      (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n\
    \ 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= n 3)\n                  (list 1 3 2 8)\n               \
    \   (if (= n 4)\n                      (list 1 3 2 8 21)\n                   \
    \   (if (= n 5)\n                          (list 1 3 2 8 21 55)\n            \
    \              (if (= n 6)\n                              (list 1 3 2 8 21 55\
    \ 144)\n                              (if (= n 7)\n                          \
    \        (list 1 3 2 8 21 55 144 377)\n                                  (if (=\
    \ n 8)\n                                      (list 1 3 2 8 21 55 144 377 987)\n\
    \                                      (if (= n 9)\n                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584)\n                    \
    \                      (if (= n 10)\n                                        \
    \      (list 1 3 2 8 21 55 144 377 987 2584 6765)\n                          \
    \                    (if (= n 11)\n                                          \
    \        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n                  \
    \                                (if (= n 12)\n                              \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393)\n                                        \
    \                  (if (= n 14)\n                                            \
    \                  (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811)\n                                                              (if (=\
    \ n 15)\n                                                                  (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040)\n    \
    \                                                              (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040 2178309)\n\
    \                                                                      (if (=\
    \ n 17)\n                                                                    \
    \      (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n   \
    \               (cons (floor (/ n 2)) (tri (- n 1)))\n                  (append\
    \ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append\
    \ (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n\
    \ 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(= n\
    \ 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\n\
    \     (let ([a (tri (- n 1))]\n           [b (tri (- n 2))]\n           [c (tri\
    \ (- n 3))])\n       (append a (list (+ (car a) (car b) (car c))))])))\n", " \
    \ (define (tri-iter n a b c)\n    (if (= n 0)\n        (list a b c)\n        (if\
    \ (even? n)\n            (tri-iter (- n 1) a b (+ c (/ n 2)))\n            (tri-iter\
    \ (- n 1) a (+ b c) (+ c (+ b a))))))\n  (tri-iter n 1 3 2))\n", "  (define (tri-helper\
    \ n)\n    (cond\n      [(= n 1) 3]\n      [(= n 2) 2]\n      [(= n 3) 8]\n   \
    \   [(even? n) (tri-helper (- n 1))]\n      [else (+ (tri-helper (- n 1)) (tri-helper\
    \ (- n 2)) (tri-helper (- n 3)))]))\n  (build-list (+ n 1) (lambda (x) (tri-helper\
    \ x))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (modulo n 2) 0)\n                  (cons (round (/ (+ n 1) 2)) (tri (- n 1)))\n\
    \                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (-\
    \ n 1)) (- n 2)) (list-ref (tri (+ n 1)) n)) (tri (- n 1))))))))\n", "  (cond\n\
    \    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n\
    \    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n \
    \                                         (list-ref (tri (- n 1)) (- n 2))\n \
    \                                         (list-ref (tri (- n 1)) (- n 3)))))]))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2)\
    \ 0)\n                  (cons (tri n) (tri (- n 1)))\n                  (cons\
    \ (tri n) (tri (- n 1)))\n                  )))))\n", "  (define (tri-iter n acc)\n\
    \    (if (= n 0)\n        acc\n        (if (even? n)\n            (tri-iter (-\
    \ n 1) (cons (+ 1 (/ n 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car\
    \ acc) (cadr acc) (caddr acc)) acc)))))\n  (tri-iter n '(3)))\n", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 2)) (- n 2)) (list-ref\
    \ (tri (+ n 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                 \
    \ (cons (tri n) (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1))\
    \ (tri (- n 2)) (tri (+ n 1))))))))\n", "  (cond ((= n 0) (list 1))\n        ((=\
    \ n 1) (list 1 3))\n        ((= n 2) (list 1 3 2))\n        (else (append (tri\
    \ (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1))\n                       \
    \                      (list-ref (tri (- n 1)) (- n 2))\n                    \
    \                         (list-ref (tri (- n 1)) (- n 3))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (quotient (+ n 1) 2) (tri (- n 1)))\n               \
    \   (cons (+ (list-ref (tri (- n 1)) (- n 1))\n                           (list-ref\
    \ (tri (- n 1)) (- n 2))\n                           (list-ref (tri (- n 1)) (+\
    \ n 1)))\n                        (tri (- n 1))))))))\n", "  (if (zero? n)\n \
    \     (list 1)\n      (let ([prev (tri (- n 1))])\n        (cons (if (even? n)\n\
    \                  (+ 1 (/ n 2))\n                  (+ (list-ref prev 0) (list-ref\
    \ prev 1) (list-ref prev 2)))\n              prev))))\n", "  (define (tri-iter\
    \ n acc)\n    (if (= n 0)\n        acc\n        (tri-iter (- n 1) (cons (tri-n\
    \ n) acc))))\n  (tri-iter n (list)))\n", "  (if (zero? n)\n      (list 1)\n  \
    \    (if (zero? (modulo n 2))\n          (cons (quotient n 2) (tri (- n 1)))\n\
    \          (append (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n\
    \                  (cons (quotient n 2) (tri (- n 1)))\n                  (append\
    \ (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons 1 (tri (- n 1)))\n                  (append (tri (- n 1)) (tri (- n\
    \ 2)) (tri (+ n 1))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (cons 1 (cons 3 (cons 2 (tri-helper\
    \ n))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (modulo n 2) 0)\n                  (cons (tri n) (tri (- n 1)))\n          \
    \        (append (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n", "  (if (=\
    \ n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if\
    \ (= n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n\
    \                  (cons (add1 (/ n 2)) (tri (- n 1)))\n                  (cons\
    \ (+ (list-ref (tri (- n 1)) 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n\
    \ 1)) 0)) (tri (- n 1))))))))\n", "  (cond [(= n 0) (list 1)]\n        [(= n 1)\
    \ (list 1 3)]\n        [(= n 2) (list 1 3 2)]\n        [else (append (tri (- n\
    \ 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2))\
    \ (list-ref (tri (- n 1)) (- n 3)))))]))", "  (if (= n 0)\n      (list 1)\n  \
    \    (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (remainder n 2) 0)\n                  (cons (add1\
    \ (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1))\
    \ 0) (list-ref (tri (- n 2)) 0) (list-ref (tri (+ n 1)) 0)) (tri (- n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else\n     (let* ([n-1 (tri (- n 1))]\n            [n-2 (tri (-\
    \ n 2))]\n            [n-3 (tri (- n 3))])\n       (append n-1 (list (+ (last\
    \ n-1) (last n-2) (last n-3)))))]))\n", "  (if (= n 0)\n      (list 1)\n     \
    \ (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list\
    \ 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons (tri n)\
    \ (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1)))\n           \
    \       )))))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n        \
    \  (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n           \
    \   (if (= (remainder n 2) 0)\n                  (cons (quotient n 2) (tri (-\
    \ n 1)))\n                  (append (tri (- n 1)) (tri (- n 2)) (tri (+ n 1))))))))\n",
  "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1\
    \ 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n\
    \ 1))\n                                          (list-ref (tri (- n 1)) (- n\
    \ 2))\n                                          (list-ref (tri (- n 1)) (+ n\
    \ 1)))))]))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n      acc\n    \
    \  (tri-iter (- n 1) (cons (if (even? n)\n                                 (+\
    \ 1 (/ n 2))\n                                 (+ (car acc) (cadr acc) (caddr\
    \ acc)))\n                               acc))))\n  (tri-iter n (list 3)))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n    \
    \              (list 1 3 2 8)\n                  (if (= n 4)\n               \
    \       (list 1 3 2 8 13)\n                      (if (= n 5)\n               \
    \           (list 1 3 2 8 13 21)\n                          (if (= n 6)\n    \
    \                          (list 1 3 2 8 13 21 34)\n                         \
    \     (if (= n 7)\n                                  (list 1 3 2 8 13 21 34 55)\n\
    \                                  (if (= n 8)\n                             \
    \         (list 1 3 2 8 13 21 34 55 89)\n                                    \
    \  (if (= n 9)\n                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144)\n                                          (if (= n 10)\n    \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233)\n\
    \                                              (if (= n 11)\n                \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610)\n                                                      (if (= n 13)\n\
    \                                                          (list 1 3 2 8 13 21\
    \ 34 55 89 144 233 377 610 987)\n                                            \
    \              (if (= n 14)\n                                                \
    \              (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n      \
    \                                                        (if (= n 15)\n      \
    \                                                            (list 1 3 2 8 13\
    \ 21 34 55 89 144 233 377 610 987 1597 2584)\n                               \
    \                                   (if (= n 16)\n                           \
    \                                           (list 1 3 2 8 13 21 34 55 89 144 233\
    \ 377 610 987 1597 2584 4181)\n                                              \
    \                        (if (= n 17)\n                                      \
    \                                    (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4181 6765)\n                                             \
    \                             (if (= n 18)\n                                 \
    \                                             (list 1 3 2 8 13 21 34 55 89 144\
    \ 233 377 610 987 1597 2584 4", "  (if (= n 0)\n      (list 1)\n      (if (= n\
    \ 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (remainder n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n\
    \                  (cons (add1 (tri (+ n 1))) (tri (- n 1)))\n               \
    \   )))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n   \
    \ [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+ (list-ref (tri\
    \ (- n 1)) (- n 1))\n                                          (list-ref (tri\
    \ (- n 1)) (- n 2))\n                                          (list-ref (tri\
    \ (- n 1)) (+ n 1)))))]))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n 1) (list\
    \ 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1)) (list (+\
    \ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= n 3)\n                  (list 1 3 2 8)\n               \
    \   (if (= n 4)\n                      (list 1 3 2 8 21)\n                   \
    \   (if (= n 5)\n                          (list 1 3 2 8 21 55)\n            \
    \              (if (= n 6)\n                              (list 1 3 2 8 21 55\
    \ 144)\n                              (if (= n 7)\n                          \
    \        (list 1 3 2 8 21 55 144 377)\n                                  (if (=\
    \ n 8)\n                                      (list 1 3 2 8 21 55 144 377 987)\n\
    \                                      (if (= n 9)\n                         \
    \                 (list 1 3 2 8 21 55 144 377 987 2584)\n                    \
    \                      (if (= n 10)\n                                        \
    \      (list 1 3 2 8 21 55 144 377 987 2584 6765)\n                          \
    \                    (if (= n 11)\n                                          \
    \        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n                  \
    \                                (if (= n 12)\n                              \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393)\n                                        \
    \                  (if (= n 14)\n                                            \
    \                  (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811)\n                                                              (if (=\
    \ n 15)\n                                                                  (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040)\n    \
    \                                                              (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040 2178309)\n\
    \                                                                      (if (=\
    \ n 17)\n                                                                    \
    \      (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n\
    \ 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (=\
    \ n 2)\n              (list 1 3 2)\n              (if (= (modulo n 2) 0)\n   \
    \               (cons (tri n) (tri (- n 1)))\n                  (cons (tri n)\
    \ (tri (- n 1)))\n                  )))))\n</code>\nI am getting an error:\n<code>cons:\
    \ expects argument of type &lt;pair&gt;; given (tri 3)\n</code>\nI am not sure\
    \ what I am doing wrong.\n\n\nA:\n\nYou have a few problems in your code:\n\n\
    You're not using the <code>cons</code> procedure correctly. It expects a pair\
    \ as its second argument, but you're passing it the result of calling <code>tri</code>\
    \ again.\nYou're not returning the result of the recursive calls to <code>tri</code>,\
    \ so the result of the function is always <code>#&lt;void&gt;</code>.\nYou're\
    \ not handling the case where <code>n</code> is negative.\n\nHere's how I'd write\
    \ it:\n<code>(define (tri n)\n  (cond\n    [(negative? n) '()]\n    [(zero? n)\
    \ '(1)]\n    [(= n 1) '(1 3)]\n    [(= n 2) '(1 3 2)]\n    [(even? n) (append\
    \ (tri (- n 1)) (list (/ n 2)))]\n    [else (append (tri (- n 1)) (list (+ (tri\
    \ (- n 1)) (tri (- n 2)) (tri (+ n 1)))))]))\n</code>\n", "  (if (= n 0)\n   \
    \   (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 13)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 13 21)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 13 21 34)\n                              (if (= n 7)\n  \
    \                                (list 1 3 2 8 13 21 34 55)\n                \
    \                  (if (= n 8)\n                                      (list 1\
    \ 3 2 8 13 21 34 55 89)\n                                      (if (= n 9)\n \
    \                                         (list 1 3 2 8 13 21 34 55 89 144)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 13 21 34 55 89 144 233)\n           \
    \                                   (if (= n 11)\n                           \
    \                       (list 1 3 2 8 13 21 34 55 89 144 233 377)\n          \
    \                                        (if (= n 12)\n                      \
    \                                (list 1 3 2 8 13 21 34 55 89 144 233 377 610)\n\
    \                                                      (if (= n 13)\n        \
    \                                                  (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987)\n                                                     \
    \     (if (= n 14)\n                                                         \
    \     (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 13 21 34 55\
    \ 89 144 233 377 610 987 1597 2584)\n                                        \
    \                          (if (= n 16)\n                                    \
    \                                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610\
    \ 987 1597 2584 4181)\n                                                      \
    \                (if (= n 17)\n                                              \
    \                            (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987\
    \ 1597 2584 4181 6765)\n                                                     \
    \                     (if (= n 18)\n                                         \
    \                                     (list 1 3 2 8 13 21 34 55 89 144 233 377\
    \ 610 987 1597 2584 4", "  (define (tri-iter n acc)\n    (cond\n      [(= n 0)\
    \ acc]\n      [(= n 1) (cons 3 acc)]\n      [(= n 2) (cons 2 (cons 3 acc))]\n\
    \      [(even? n) (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc))]\n      [else (tri-iter\
    \ (- n 1) (cons (+ (car acc) (cadr acc) (car (cddr acc))) acc))]))\n  (tri-iter\
    \ n '()))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list\
    \ 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n              (if (=\
    \ (remainder n 2) 0)\n                  (cons (add1 (/ n 2)) (tri (- n 1)))\n\
    \                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n               \
    \   (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri\
    \ (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri\
    \ (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n   \
    \               (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n\
    \ 2)))\n                  (cons (add1 (tri (- n 1))) (tri (- n 2)))\n        \
    \          (cons (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons\
    \ (add1 (tri (- n 1))) (tri (- n 2)))\n                  (cons (add1 (tri (- n\
    \ 1))) (tri (- n 2", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n     \
    \     (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n        \
    \      (if (= (modulo n 2) 0)\n                  (cons (floor (+ 1 (/ n 2))) (tri\
    \ (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref\
    \ (tri (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (+ n 1))) (tri (- n 1))))))))\n",
  "  (define (tri-iter n a b c)\n    (if (= n 0)\n        (list a b c)\n        (if\
    \ (even? n)\n            (tri-iter (- n 1) a b (+ c (/ n 2)))\n            (tri-iter\
    \ (- n 1) a (+ b c) (+ c (+ b a))))))\n  (tri-iter n 1 3 2))\n", "  (define (tri-iter\
    \ n acc)\n    (if (= n 0)\n        acc\n        (let ((last-three (take acc 3)))\n\
    \          (tri-iter (- n 1) (append acc (list (+ (first last-three) (second last-three)\
    \ (third last-three))))))))\n  (tri-iter n (list 3 2 1)))\n", "  (cond\n    [(=\
    \ n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (cons 1 (cons 3 (cons 2 (tri-helper 3 n))))]))\n", "  (cond\n    [(= n 0) (list\
    \ 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append\
    \ (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n\
    \ 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (if (= n 0)\n   \
    \   (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (append (tri (- n 1))\n           \
    \           (list (+ (list-ref (tri (- n 1)) (- n 1))\n                      \
    \         (list-ref (tri (- n 1)) (- n 2))\n                               (list-ref\
    \ (tri (- n 1)) (- n 3))))))))\n", "  (cond\n    [(= n 0) (list 1)]\n    [(= n\
    \ 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else (append (tri (- n 1))\
    \ (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref\
    \ (tri (- n 1)) (- n 3)))))]))\n", "  (define (tri-iter n acc)\n    (if (= n 0)\n\
    \        acc\n        (tri-iter (- n 1)\n                  (cons (if (even? n)\n\
    \                            (+ 1 (/ n 2))\n                            (+ (car\
    \ acc) (cadr acc) (car (cddr acc))))\n                        acc))))\n  (tri-iter\
    \ n (list 3)))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n       \
    \   (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n          \
    \    (if (= n 3)\n                  (list 1 3 2 8)\n                  (if (= n\
    \ 4)\n                      (list 1 3 2 8 21)\n                      (if (= n\
    \ 5)\n                          (list 1 3 2 8 21 55)\n                       \
    \   (if (= n 6)\n                              (list 1 3 2 8 21 55 144)\n    \
    \                          (if (= n 7)\n                                  (list\
    \ 1 3 2 8 21 55 144 377)\n                                  (if (= n 8)\n    \
    \                                  (list 1 3 2 8 21 55 144 377 987)\n        \
    \                              (if (= n 9)\n                                 \
    \         (list 1 3 2 8 21 55 144 377 987 2584)\n                            \
    \              (if (= n 10)\n                                              (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765)\n                                     \
    \         (if (= n 11)\n                                                  (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n                               \
    \                   (if (= n 12)\n                                           \
    \           (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n         \
    \                                             (if (= n 13)\n                 \
    \                                         (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368 121393)\n                                                 \
    \         (if (= n 14)\n                                                     \
    \         (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n\
    \                                                              (if (= n 15)\n\
    \                                                                  (list 1 3 2\
    \ 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040)\n          \
    \                                                        (if (= n 16)\n      \
    \                                                                (list 1 3 2 8\
    \ 21 55 144 377 987 2584 6765 17711 46368 121393 317811 832040 2178309)\n    \
    \                                                                  (if (= n 17)\n\
    \                                                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (letrec ([tri-helper (lambda (n)\n       \
    \                              (if (= n 0)\n                                 \
    \        (list 1)\n                                         (if (= n 1)\n    \
    \                                         (list 1 3)\n                       \
    \                      (if (= n 2)\n                                         \
    \        (list 1 3 2)\n                                                 (let*\
    \ ([prev (tri-helper (- n 1))]\n                                             \
    \           [prev-prev (tri-helper (- n 2))]\n                               \
    \                         [prev-prev-prev (tri-helper (- n 3))])\n           \
    \                                        (append prev (list (+ (car prev) (car\
    \ prev-prev) (car prev-prev-prev)))))))))]\n                           [tri-helper-n\
    \ (tri-helper n)])\n                tri-helper-n)))))\n", "  (if (= n 0)\n   \
    \   (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= n 3)\n                  (list\
    \ 1 3 2 8)\n                  (if (= n 4)\n                      (list 1 3 2 8\
    \ 21)\n                      (if (= n 5)\n                          (list 1 3\
    \ 2 8 21 55)\n                          (if (= n 6)\n                        \
    \      (list 1 3 2 8 21 55 144)\n                              (if (= n 7)\n \
    \                                 (list 1 3 2 8 21 55 144 377)\n             \
    \                     (if (= n 8)\n                                      (list\
    \ 1 3 2 8 21 55 144 377 987)\n                                      (if (= n 9)\n\
    \                                          (list 1 3 2 8 21 55 144 377 987 2584)\n\
    \                                          (if (= n 10)\n                    \
    \                          (list 1 3 2 8 21 55 144 377 987 2584 6765)\n      \
    \                                        (if (= n 11)\n                      \
    \                            (list 1 3 2 8 21 55 144 377 987 2584 6765 17711)\n\
    \                                                  (if (= n 12)\n            \
    \                                          (list 1 3 2 8 21 55 144 377 987 2584\
    \ 6765 17711 46368)\n                                                      (if\
    \ (= n 13)\n                                                          (list 1\
    \ 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393)\n                    \
    \                                      (if (= n 14)\n                        \
    \                                      (list 1 3 2 8 21 55 144 377 987 2584 6765\
    \ 17711 46368 121393 317811)\n                                               \
    \               (if (= n 15)\n                                               \
    \                   (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393\
    \ 317811 832040)\n                                                           \
    \       (if (= n 16)\n                                                       \
    \               (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811\
    \ 832040 2178309)\n                                                          \
    \            (if (= n 17)\n                                                  \
    \                        (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 12", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n\
    \          (if (= n 2)\n              (list 1 3 2)\n              (if (= n 3)\n\
    \                  (list 1 3 2 8)\n                  (if (= n 4)\n           \
    \           (list 1 3 2 8 21)\n                      (if (= n 5)\n           \
    \               (list 1 3 2 8 21 55)\n                          (if (= n 6)\n\
    \                              (list 1 3 2 8 21 55 144)\n                    \
    \          (if (= n 7)\n                                  (list 1 3 2 8 21 55\
    \ 144 377)\n                                  (if (= n 8)\n                  \
    \                    (list 1 3 2 8 21 55 144 377 987)\n                      \
    \                (if (= n 9)\n                                          (list\
    \ 1 3 2 8 21 55 144 377 987 2584)\n                                          (if\
    \ (= n 10)\n                                              (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765)\n                                              (if (=\
    \ n 11)\n                                                  (list 1 3 2 8 21 55\
    \ 144 377 987 2584 6765 17711)\n                                             \
    \     (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368)\n                         \
    \                             (if (= n 13)\n                                 \
    \                         (list 1 3 2 8 21 55 144 377 987 2584 6765 17711 46368\
    \ 121393)\n                                                          (if (= n\
    \ 14)\n                                                              (list 1 3\
    \ 2 8 21 55 144 377 987 2584 6765 17711 46368 121393 317811)\n               \
    \                                               (if (= n 15)\n               \
    \                                                   (list 1 3 2 8 21 55 144 377\
    \ 987 2584 6765 17711 46368 121393 317811 832040)\n                          \
    \                                        (if (= n 16)\n                      \
    \                                                (list 1 3 2 8 21 55 144 377 987\
    \ 2584 6765 17711 46368 121393 317811 832040 2178309)\n                      \
    \                                                (if (= n 17)\n              \
    \                                                            (list 1 3 2 8 21\
    \ 55 144 377 987 2584 6765 17711 46368 12", "  (if (= n 0)\n      (list 1)\n \
    \     (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n             \
    \ (list 1 3 2)\n              (if (= (modulo n 2) 0)\n                  (cons\
    \ 1 (cons (/ n 2) (tri (- n 1))))\n                  (cons 1 (cons (tri (- n 1))\
    \ (cons (tri (- n 2)) (cons (tri (+ n 1)) '())))))))))\n", "  (cond\n    [(= n\
    \ 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (append (tri (- n 1)) (list (+ (list-ref (tri (- n 1)) (- n 1)) (list-ref (tri\
    \ (- n 1)) (- n 2)) (list-ref (tri (- n 1)) (- n 3)))))]))\n", "  (cond\n    [(=\
    \ n 0) (list 1)]\n    [(= n 1) (list 1 3)]\n    [(= n 2) (list 1 3 2)]\n    [else\
    \ (cons (tri (- n 1)) (tri (- n 2)) (tri (- n 3)))]))\n", "  (if (= n 0)\n   \
    \   (list 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n\
    \              (list 1 3 2)\n              (if (= (remainder n 2) 0)\n       \
    \           (cons (+ 1 (/ n 2)) (tri (- n 1)))\n                  (cons (+ (list-ref\
    \ (tri (- n 1)) (- n 1)) (list-ref (tri (- n 1)) (- n 2)) (list-ref (tri (- n\
    \ 1)) (+ n 1))) (tri (- n 1))))))))\n", "  (define (tri-iter n)\n    (cond ((=\
    \ n 1) 3)\n          ((even? n) (+ 1 (/ n 2)))\n          (else (+ (tri-iter (-\
    \ n 1)) (tri-iter (- n 2)) (tri-iter (+ n 1))))))\n  (map tri-iter (range 0 (+\
    \ n 1))))\n", "  (cond [(= n 0) (list 1)]\n        [(= n 1) (list 1 3)]\n    \
    \    [(= n 2) (list 1 3 2)]\n        [else (append (tri (- n 1)) (list (+ (list-ref\
    \ (tri (- n 1)) (- n 1))\n                                             (list-ref\
    \ (tri (- n 1)) (- n 2))\n                                             (list-ref\
    \ (tri (- n 1)) (+ n 1)))))]))\n", "  (if (= n 0)\n      (list 1)\n      (if (=\
    \ n 1)\n          (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n\
    \              (if (= (modulo n 2) 0)\n                  (cons (add1 (/ n 2))\
    \ (tri (- n 1)))\n                  (cons (+ (list-ref (tri (- n 1)) (- n 1))\n\
    \                           (list-ref (tri (- n 1)) (- n 2))\n               \
    \            (list-ref (tri (+ n 1)) n))\n                        (tri (- n 1))))))))\n",
  "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n          (list 1 3)\n      \
    \    (if (= n 2)\n              (list 1 3 2)\n              (if (= (remainder\
    \ n 2) 0)\n                  (cons (tri n) (tri (- n 1)))\n                  (cons\
    \ (tri n) (tri (- n 1)))\n                  )))))\n", "  (if (= n 0)\n      (list\
    \ 1)\n      (if (= n 1)\n          (list 1 3)\n          (if (= n 2)\n       \
    \       (list 1 3 2)\n              (if (= (remainder n 2) 0)\n              \
    \    (cons (tri n) (tri (- n 1)))\n                  (cons (tri n) (tri (- n 1)))\n\
    \                  )))))\n", "  (define (tri-iter n acc)\n    (cond ((= n 0) acc)\n\
    \          ((= n 1) (cons 3 acc))\n          ((= n 2) (cons 2 (cons 3 acc)))\n\
    \          ((even? n) (tri-iter (- n 1) (cons (+ 1 (/ n 2)) acc)))\n         \
    \ (else (tri-iter (- n 1) (cons (+ (car acc) (cadr acc) (caddr acc)) acc)))))\n\
    \  (tri-iter n '()))\n", "  (if (= n 0)\n      (list 1)\n      (if (= n 1)\n \
    \         (list 1 3)\n          (if (= n 2)\n              (list 1 3 2)\n    \
    \          (if (= n 3)\n                  (list 1 3 2 8)\n                  (if\
    \ (= n 4)\n                      (list 1 3 2 8 13)\n                      (if\
    \ (= n 5)\n                          (list 1 3 2 8 13 21)\n                  \
    \        (if (= n 6)\n                              (list 1 3 2 8 13 21 34)\n\
    \                              (if (= n 7)\n                                 \
    \ (list 1 3 2 8 13 21 34 55)\n                                  (if (= n 8)\n\
    \                                      (list 1 3 2 8 13 21 34 55 89)\n       \
    \                               (if (= n 9)\n                                \
    \          (list 1 3 2 8 13 21 34 55 89 144)\n                               \
    \           (if (= n 10)\n                                              (list\
    \ 1 3 2 8 13 21 34 55 89 144 233)\n                                          \
    \    (if (= n 11)\n                                                  (list 1 3\
    \ 2 8 13 21 34 55 89 144 233 377)\n                                          \
    \        (if (= n 12)\n                                                      (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610)\n                                  \
    \                    (if (= n 13)\n                                          \
    \                (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987)\n         \
    \                                                 (if (= n 14)\n             \
    \                                                 (list 1 3 2 8 13 21 34 55 89\
    \ 144 233 377 610 987 1597)\n                                                \
    \              (if (= n 15)\n                                                \
    \                  (list 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584)\n\
    \                                                                  (if (= n 16)\n\
    \                                                                      (list 1\
    \ 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181)\n                 \
    \                                                     (if (= n 17)\n         \
    \                                                                 (list 1 3 2\
    \ 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765)\n                \
    \                                                          (if (= n 18)\n    \
    \                                                                          (list\
    \ 1 3 2 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4", "  (define (tri-iter\
    \ n acc)\n    (if (= n 0)\n        acc\n        (if (even? n)\n            (tri-iter\
    \ (- n 1) (cons (+ 1 (/ n 2)) acc))\n            (tri-iter (- n 1) (cons (+ (car\
    \ acc) (cadr acc) (caddr acc)) acc)))))\n  (tri-iter n (list 3)))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

{
  "name": "mbpp_413_extract_nth_element",
  "language": "lua",
  "prompt": "-- Write a function to extract the nth element from a given table of tables.\nlocal function extract_nth_element(list1, n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_413_extract_nth_element.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = extract_nth_element\n    lu.assertEquals(candidate({{'Greyson Fulton', 98, 99}, {'Brady Kent', 97, 96}, {'Wyatt Knott', 91, 94}, {'Beau Turnbull', 94, 98}}, 0), {'Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull'})\n    lu.assertEquals(candidate({{'Greyson Fulton', 98, 99}, {'Brady Kent', 97, 96}, {'Wyatt Knott', 91, 94}, {'Beau Turnbull', 94, 98}}, 2), {99, 96, 94, 98})\n    lu.assertEquals(candidate({{'Greyson Fulton', 98, 99}, {'Brady Kent', 97, 96}, {'Wyatt Knott', 91, 94}, {'Beau Turnbull', 94, 98}}, 1), {98, 97, 91, 94})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "  local list2 = {}\n  for i, v in ipairs(list1) do\n    list2[i] = v[n]\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        list2[i] = list1[i][n]\n    end\n    return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i, v in ipairs(list1) do\n        list2[i] = v[n]\n    end\n    return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "  local list2 = {}\n  for _, list in ipairs(list1) do\n    table.insert(list2, list[n])\n  end\n  return list2\nend",
    "  local list2 = {}\n  for i, v in ipairs(list1) do\n    list2[i] = v[n]\n  end\n  return list2\nend",
    "    local result = {}\n    for _, list2 in ipairs(list1) do\n        table.insert(result, list2[n])\n    end\n    return result\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        list2[i] = list1[i][n]\n    end\n    return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        list2[i] = list1[i][n]\n    end\n    return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        list2[i] = list1[i][n]\n    end\n    return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        list2[i] = list1[i][n]\n    end\n    return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    list2[i] = list1[i][n]\n  end\n  return list2\nend"
  ]
}
{
  "name": "mbpp_439_multiple_to_single",
  "language": "lua",
  "prompt": "-- Write a function to join a table of multiple integers into a single integer.\nlocal function multiple_to_single(L)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_439_multiple_to_single.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = multiple_to_single\n    lu.assertEquals(candidate({11, 33, 50}), 113350)\n    lu.assertEquals(candidate({-1, 2, 3, 4, 5, 6}), -123456)\n    lu.assertEquals(candidate({10, 15, 20, 25}), 10152025)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal s = \"\"\n\tfor _, v in ipairs(L) do\n\t\ts = s .. string.char(v)\n\tend\n\treturn s\nend",
    "    local s = \"\"\n    for _, v in ipairs(L) do\n        s = s .. v\n    end\n    return tonumber(s)\nend",
    "\tlocal s = \"\"\n\tfor i, v in ipairs(L) do\n\t\ts = s .. v\n\tend\n\treturn tonumber(s)\nend",
    "  local result = 0\n  for i, v in ipairs(L) do\n    result = result + v\n  end\n  return result\nend",
    "  local result = 0\n  for i, v in ipairs(L) do\n    result = result + v\n  end\n  return result\nend",
    "  local s = ''\n  for _,v in ipairs(L) do\n    s = s .. v\n  end\n  return tonumber(s)\nend",
    "\tlocal s = \"\"\n\tfor _,v in ipairs(L) do\n\t\ts = s .. v\n\tend\n\treturn tonumber(s)\nend",
    "\tlocal result = 0\n\tfor i = 1, #L do\n\t\tresult = result * 10 + L[i]\n\tend\n\treturn result\nend",
    "\tlocal n = 0\n\tfor i = 1, #L do\n\t\tn = n * 256 + L[i]\n\tend\n\treturn n\nend",
    "    local res = 0\n    for i, v in ipairs(L) do\n        res = res * 10 + v\n    end\n    return res\nend",
    "\tlocal result = 0\n\tfor i, v in ipairs(L) do\n\t\tresult = result + v\n\tend\n\treturn result\nend",
    "\tlocal s = \"\"\n\tfor _, v in ipairs(L) do\n\t\ts = s .. v\n\tend\n\treturn tonumber(s)\nend",
    "  local s = ''\n  for i = 1, #L do\n    s = s .. L[i]\n  end\n  return s\nend",
    "  local s = \"\"\n  for _, v in ipairs(L) do\n    s = s .. v\n  end\n  return s\nend",
    "  local s = \"\"\n  for _, v in ipairs(L) do\n    s = s .. v\n  end\n  return tonumber(s)\nend",
    "\tlocal s = \"\"\n\tfor _, v in ipairs(L) do\n\t\ts = s .. v\n\tend\n\treturn tonumber(s)\nend",
    "    local s = \"\"\n    for _, v in ipairs(L) do\n        s = s .. v\n    end\n    return tonumber(s)\nend",
    "  local s = \"\"\n  for i = 1, #L do\n    s = s .. tostring(L[i])\n  end\n  return tonumber(s)\nend",
    "    local s = \"\"\n    for i = 1, #L do\n        s = s .. L[i]\n    end\n    return tonumber(s)\nend",
    "    local result = 0\n    for i, v in ipairs(L) do\n        result = result * 10 + v\n    end\n    return result\nend"
  ]
}
{
  "name": "mbpp_748_capital_words_spaces",
  "language": "lua",
  "prompt": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend",
    "    return str1:gsub(\"%u%l+\", \" %1\")\nend",
    "\treturn str1:gsub(\"%u%l+\", \" %1\")\nend",
    "    return str1:gsub(\"%u%l+\", \" %1\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend",
    "    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            str2 = str2 .. \" \" .. char\n        else\n            str2 = str2 .. char\n        end\n    end\n    return str2\nend",
    "    return str1:gsub(\"%u%l+\", \" %1\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            if i > 1 then\n                str2 = str2 .. \" \"\n            end\n        end\n        str2 = str2 .. char\n    end\n    return str2\nend",
    "  local str2 = str1:gsub(\"%u%l+\", \" %1\")\n  return str2\nend",
    "  return str1:gsub(\"%u%l+\", \" %1\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if i == 1 then\n            str2 = str2 .. c\n        else\n            local prev = str1:sub(i - 1, i - 1)\n            if prev:find(\"%a\") and c == c:upper() then\n                str2 = str2 .. \" \" .. c\n            else\n                str2 = str2 .. c\n            end\n        end\n    end\n    return str2\nend",
    "    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend",
    "    return (string.gsub(str1, \"(%a)([%u])\", \"%1 %2\"))\nend",
    "    return str1:gsub(\"%u%l+\", \" %1\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i,i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend",
    "    str1 = str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\n    return str1\nend",
    "    local str2 = str1:gsub(\"(%u%l+)\", \" %1\")\n    return str2\nend",
    "    return (str1:gsub(\"%u%l+\", \" %1\"))\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. str1:sub(i, i)\n    end\n    return str2\nend"
  ]
}
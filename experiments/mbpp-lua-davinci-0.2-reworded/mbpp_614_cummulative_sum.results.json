{
  "name": "mbpp_614_cummulative_sum",
  "language": "lua",
  "prompt": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_614_cummulative_sum.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor k, v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdy5pt5vg.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpdy5pt5vg.lua:5: in function 'candidate'\n\t/tmp/tmpdy5pt5vg.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_list[i] = sum\n    end\n    return cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj59phfjs.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpj59phfjs.lua:6: in function 'candidate'\n\t/tmp/tmpj59phfjs.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_table = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_table[i] = sum\n    end\n    return cummulative_sum_table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpybowkhnn.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpybowkhnn.lua:6: in function 'candidate'\n\t/tmp/tmpybowkhnn.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local cummulative_sum_list = {}\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    cummulative_sum_list[i] = sum\n  end\n  return cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc43tfcck.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpc43tfcck.lua:6: in function 'candidate'\n\t/tmp/tmpc43tfcck.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphs8pu8s8.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphs8pu8s8.lua:5: in function 'candidate'\n\t/tmp/tmphs8pu8s8.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for k, v in pairs(test_list) do\n    sum = sum + v\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_b1ku3es.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp_b1ku3es.lua:5: in function 'candidate'\n\t/tmp/tmp_b1ku3es.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i=1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjpi22ch_.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpjpi22ch_.lua:5: in function 'candidate'\n\t/tmp/tmpjpi22ch_.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphs8pu8s8.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphs8pu8s8.lua:5: in function 'candidate'\n\t/tmp/tmphs8pu8s8.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe96gqjb5.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpe96gqjb5.lua:5: in local 'candidate'\n\t/tmp/tmpe96gqjb5.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor k, v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdy5pt5vg.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpdy5pt5vg.lua:5: in function 'candidate'\n\t/tmp/tmpdy5pt5vg.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_list[i] = sum\n    end\n    return cummulative_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm_167iy1.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpm_167iy1.lua:6: in local 'candidate'\n\t/tmp/tmpm_167iy1.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphs8pu8s8.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphs8pu8s8.lua:5: in function 'candidate'\n\t/tmp/tmphs8pu8s8.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local cummulative_sum = 0\n    for _, value in ipairs(test_list) do\n        cummulative_sum = cummulative_sum + value\n    end\n    return cummulative_sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0u_835jd.lua:5: attempt to perform arithmetic on a table value (local 'value')\nstack traceback:\n\t/tmp/tmp0u_835jd.lua:5: in local 'candidate'\n\t/tmp/tmp0u_835jd.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxbruvcp5.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpxbruvcp5.lua:5: in local 'candidate'\n\t/tmp/tmpxbruvcp5.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphs8pu8s8.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphs8pu8s8.lua:5: in function 'candidate'\n\t/tmp/tmphs8pu8s8.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxbruvcp5.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpxbruvcp5.lua:5: in local 'candidate'\n\t/tmp/tmpxbruvcp5.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local result = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        result[i] = sum\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjfhax2uh.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpjfhax2uh.lua:6: in local 'candidate'\n\t/tmp/tmpjfhax2uh.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor k, v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdy5pt5vg.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpdy5pt5vg.lua:5: in function 'candidate'\n\t/tmp/tmpdy5pt5vg.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_list[i] = sum\n    end\n    return cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj59phfjs.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpj59phfjs.lua:6: in function 'candidate'\n\t/tmp/tmpj59phfjs.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3wj7ahdm.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp3wj7ahdm.lua:5: in local 'candidate'\n\t/tmp/tmp3wj7ahdm.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local cum_sum = 0\n    for i = 1, #test_list do\n        cum_sum = cum_sum + test_list[i]\n    end\n    return cum_sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8rxxn04d.lua:5: attempt to perform arithmetic on a table value (field '?')\nstack traceback:\n\t/tmp/tmp8rxxn04d.lua:5: in local 'candidate'\n\t/tmp/tmp8rxxn04d.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local cummulative_sum = 0\n    for i,v in ipairs(test_list) do\n        cummulative_sum = cummulative_sum + v\n    end\n    return cummulative_sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1xg6eocj.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp1xg6eocj.lua:5: in local 'candidate'\n\t/tmp/tmp1xg6eocj.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local result = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd73arylf.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpd73arylf.lua:6: in local 'candidate'\n\t/tmp/tmpd73arylf.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor k,v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpophqcwwe.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpophqcwwe.lua:5: in local 'candidate'\n\t/tmp/tmpophqcwwe.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_list[i] = sum\n    end\n    return cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj59phfjs.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpj59phfjs.lua:6: in function 'candidate'\n\t/tmp/tmpj59phfjs.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local result = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd73arylf.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpd73arylf.lua:6: in local 'candidate'\n\t/tmp/tmpd73arylf.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor _, v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppvbhrvb_.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmppvbhrvb_.lua:5: in local 'candidate'\n\t/tmp/tmppvbhrvb_.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tlocal cummulative_sum_list = {}\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\tcummulative_sum_list[i] = sum\n\tend\n\treturn cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoor2r6qj.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpoor2r6qj.lua:6: in local 'candidate'\n\t/tmp/tmpoor2r6qj.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_table = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_table[i] = sum\n    end\n    return cummulative_sum_table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8g2pn3yf.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp8g2pn3yf.lua:6: in local 'candidate'\n\t/tmp/tmp8g2pn3yf.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local cummulative_sum_list = {}\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    cummulative_sum_list[i] = sum\n  end\n  return cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc43tfcck.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpc43tfcck.lua:6: in function 'candidate'\n\t/tmp/tmpc43tfcck.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_list[i] = sum\n    end\n    return cummulative_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj59phfjs.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpj59phfjs.lua:6: in function 'candidate'\n\t/tmp/tmpj59phfjs.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_list[i] = sum\n    end\n    return cummulative_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7lipr60b.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp7lipr60b.lua:6: in local 'candidate'\n\t/tmp/tmp7lipr60b.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for _, v in ipairs(test_list) do\n        sum = sum + v\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd6iytwnc.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpd6iytwnc.lua:5: in local 'candidate'\n\t/tmp/tmpd6iytwnc.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor k, v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdy5pt5vg.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpdy5pt5vg.lua:5: in function 'candidate'\n\t/tmp/tmpdy5pt5vg.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local new_list = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    new_list[i] = sum\n  end\n  return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy6z2w2vt.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpy6z2w2vt.lua:6: in local 'candidate'\n\t/tmp/tmpy6z2w2vt.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for _,v in ipairs(test_list) do\n    sum = sum + v\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkd0jna2x.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpkd0jna2x.lua:5: in local 'candidate'\n\t/tmp/tmpkd0jna2x.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for _, v in ipairs(test_list) do\n    sum = sum + v\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7qcbru7e.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp7qcbru7e.lua:5: in local 'candidate'\n\t/tmp/tmp7qcbru7e.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for k,v in pairs(test_list) do\n        sum = sum + v\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp581sfn0r.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp581sfn0r.lua:5: in local 'candidate'\n\t/tmp/tmp581sfn0r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local new_list = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    new_list[i] = sum\n  end\n  return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy6z2w2vt.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpy6z2w2vt.lua:6: in local 'candidate'\n\t/tmp/tmpy6z2w2vt.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor _,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp91tw0rse.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp91tw0rse.lua:5: in local 'candidate'\n\t/tmp/tmp91tw0rse.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for _, v in ipairs(test_list) do\n        sum = sum + v\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd6iytwnc.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpd6iytwnc.lua:5: in local 'candidate'\n\t/tmp/tmpd6iytwnc.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor _, v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppvbhrvb_.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmppvbhrvb_.lua:5: in local 'candidate'\n\t/tmp/tmppvbhrvb_.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor _, v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppvbhrvb_.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmppvbhrvb_.lua:5: in local 'candidate'\n\t/tmp/tmppvbhrvb_.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local cummulative_sum_table = {}\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    cummulative_sum_table[i] = sum\n  end\n  return cummulative_sum_table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9k9xqmo_.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp9k9xqmo_.lua:6: in local 'candidate'\n\t/tmp/tmp9k9xqmo_.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3wj7ahdm.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp3wj7ahdm.lua:5: in local 'candidate'\n\t/tmp/tmp3wj7ahdm.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for k, v in pairs(test_list) do\n    sum = sum + v\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_b1ku3es.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp_b1ku3es.lua:5: in function 'candidate'\n\t/tmp/tmp_b1ku3es.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local cum_sum_list = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    cum_sum_list[i] = sum\n  end\n  return cum_sum_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp33ivms5m.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp33ivms5m.lua:6: in local 'candidate'\n\t/tmp/tmp33ivms5m.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tlocal cummulative_sum_table = {}\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\tcummulative_sum_table[i] = sum\n\tend\n\treturn cummulative_sum_table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn_u91u3a.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpn_u91u3a.lua:6: in local 'candidate'\n\t/tmp/tmpn_u91u3a.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal cummulative_sum = 0\n\tfor i = 1, #test_list do\n\t\tcummulative_sum = cummulative_sum + test_list[i]\n\tend\n\treturn cummulative_sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp79egw8hh.lua:5: attempt to perform arithmetic on a table value (field '?')\nstack traceback:\n\t/tmp/tmp79egw8hh.lua:5: in local 'candidate'\n\t/tmp/tmp79egw8hh.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv6qkno51.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpv6qkno51.lua:5: in local 'candidate'\n\t/tmp/tmpv6qkno51.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor k,v in pairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpophqcwwe.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpophqcwwe.lua:5: in local 'candidate'\n\t/tmp/tmpophqcwwe.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i = 1, #test_list do\n    sum = sum + test_list[i]\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pwvtm6t.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp7pwvtm6t.lua:5: in function 'candidate'\n\t/tmp/tmp7pwvtm6t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local new_list = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    new_list[i] = sum\n  end\n  return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy6z2w2vt.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpy6z2w2vt.lua:6: in local 'candidate'\n\t/tmp/tmpy6z2w2vt.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor _,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp91tw0rse.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp91tw0rse.lua:5: in local 'candidate'\n\t/tmp/tmp91tw0rse.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuf5a1lk.lua:6: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmphuf5a1lk.lua:6: in function 'candidate'\n\t/tmp/tmphuf5a1lk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local new_list = {}\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    new_list[i] = sum\n  end\n  return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2f9ar84n.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp2f9ar84n.lua:6: in local 'candidate'\n\t/tmp/tmp2f9ar84n.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxbruvcp5.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpxbruvcp5.lua:5: in local 'candidate'\n\t/tmp/tmpxbruvcp5.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp3um6iz5.lua:6: attempt to perform arithmetic on a table value (field '?')\nstack traceback:\n\t/tmp/tmpp3um6iz5.lua:6: in local 'candidate'\n\t/tmp/tmpp3um6iz5.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for k, v in pairs(test_list) do\n        sum = sum + v\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvztn9bow.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpvztn9bow.lua:5: in local 'candidate'\n\t/tmp/tmpvztn9bow.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local new_table = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    new_table[i] = sum\n  end\n  return new_table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv583e7kt.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpv583e7kt.lua:6: in local 'candidate'\n\t/tmp/tmpv583e7kt.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_list = {}\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n        cummulative_list[i] = sum\n    end\n    return cummulative_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps64uykgs.lua:6: attempt to perform arithmetic on a table value (field '?')\nstack traceback:\n\t/tmp/tmps64uykgs.lua:6: in local 'candidate'\n\t/tmp/tmps64uykgs.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local new_list = {}\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    new_list[i] = sum\n  end\n  return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy6z2w2vt.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpy6z2w2vt.lua:6: in local 'candidate'\n\t/tmp/tmpy6z2w2vt.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for _, v in ipairs(test_list) do\n        sum = sum + v\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd6iytwnc.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpd6iytwnc.lua:5: in local 'candidate'\n\t/tmp/tmpd6iytwnc.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_list[i] = sum\n    end\n    return cummulative_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7lipr60b.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp7lipr60b.lua:6: in local 'candidate'\n\t/tmp/tmp7lipr60b.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i, v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbwp9jgay.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpbwp9jgay.lua:5: in function 'candidate'\n\t/tmp/tmpbwp9jgay.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrllshx2.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpvrllshx2.lua:5: in function 'candidate'\n\t/tmp/tmpvrllshx2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        test_list[i] = sum\n    end\n    return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppxx3lu0z.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmppxx3lu0z.lua:5: in function 'candidate'\n\t/tmp/tmppxx3lu0z.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i,v in ipairs(test_list) do\n\t\tsum = sum + v\n\t\ttest_list[i] = sum\n\tend\n\treturn test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgfw3mfv3.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmpgfw3mfv3.lua:5: in function 'candidate'\n\t/tmp/tmpgfw3mfv3.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for _, value in ipairs(test_list) do\n        sum = sum + value\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu2g6k_1z.lua:5: attempt to perform arithmetic on a table value (local 'value')\nstack traceback:\n\t/tmp/tmpu2g6k_1z.lua:5: in local 'candidate'\n\t/tmp/tmpu2g6k_1z.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local new_list = {}\n    for i,v in ipairs(test_list) do\n        sum = sum + v\n        new_list[i] = sum\n    end\n    return new_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdeb6j503.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmpdeb6j503.lua:6: in local 'candidate'\n\t/tmp/tmpdeb6j503.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    local cummulative_sum_table = {}\n    for i, v in ipairs(test_list) do\n        sum = sum + v\n        cummulative_sum_table[i] = sum\n    end\n    return cummulative_sum_table\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8g2pn3yf.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp8g2pn3yf.lua:6: in local 'candidate'\n\t/tmp/tmp8g2pn3yf.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  local result = {}\n  for i, v in ipairs(test_list) do\n    sum = sum + v\n    result[i] = sum\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2k9kme23.lua:6: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp2k9kme23.lua:6: in local 'candidate'\n\t/tmp/tmp2k9kme23.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for _, v in ipairs(test_list) do\n    sum = sum + v\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122558,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7qcbru7e.lua:5: attempt to perform arithmetic on a table value (local 'v')\nstack traceback:\n\t/tmp/tmp7qcbru7e.lua:5: in local 'candidate'\n\t/tmp/tmp7qcbru7e.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n    local sum = 0\n    for i = 1, #test_list do\n        sum = sum + test_list[i]\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcxih1614.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmpcxih1614.lua:5: in function 'candidate'\n\t/tmp/tmpcxih1614.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n\tlocal sum = 0\n\tfor i = 1, #test_list do\n\t\tsum = sum + test_list[i]\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0qg340si.lua:5: attempt to perform arithmetic on field '?' (a table value)\nstack traceback:\n\t/tmp/tmp0qg340si.lua:5: in function 'candidate'\n\t/tmp/tmp0qg340si.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to find the cumulative sum of all the values that are present in the given table table.\nlocal function cummulative_sum(test_list)\n  local sum = 0\n  for i,v in ipairs(test_list) do\n    sum = sum + v\n    test_list[i] = sum\n  end\n  return test_list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = cummulative_sum\n    lu.assertEquals(candidate({{1, 3}, {5, 6, 7}, {2, 6}}), 30)\n    lu.assertEquals(candidate({{2, 4}, {6, 7, 8}, {3, 7}}), 37)\n    lu.assertEquals(candidate({{3, 5}, {7, 8, 9}, {4, 8}}), 44)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027814,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9eztoh4p.lua:5: attempt to perform arithmetic on local 'v' (a table value)\nstack traceback:\n\t/tmp/tmp9eztoh4p.lua:5: in function 'candidate'\n\t/tmp/tmp9eztoh4p.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
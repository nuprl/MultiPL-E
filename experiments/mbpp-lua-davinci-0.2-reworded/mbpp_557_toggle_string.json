{
  "name": "mbpp_557_toggle_string",
  "language": "lua",
  "prompt": "-- Write a function to toggle the case of all characters in a string.\nlocal function toggle_string(string)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = toggle_string\n    lu.assertEquals(candidate('Python'), 'pYTHON')\n    lu.assertEquals(candidate('Pangram'), 'pANGRAM')\n    lu.assertEquals(candidate('LIttLE'), 'liTTle')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "\tlocal new_string = \"\"\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif char == char:upper() then\n\t\t\tnew_string = new_string .. char:lower()\n\t\telse\n\t\t\tnew_string = new_string .. char:upper()\n\t\tend\n\tend\n\treturn new_string\nend",
    "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == char:upper() then\n      new_string = new_string .. char:lower()\n    else\n      new_string = new_string .. char:upper()\n    end\n  end\n  return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"%a\") then\n            if char == char:upper() then\n                new_string = new_string .. char:lower()\n            else\n                new_string = new_string .. char:upper()\n            end\n        else\n            new_string = new_string .. char\n        end\n    end\n    return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "  local toggled = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == char:upper() then\n      toggled[#toggled + 1] = char:lower()\n    else\n      toggled[#toggled + 1] = char:upper()\n    end\n  end\n  return table.concat(toggled)\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "    local result = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            result = result .. char:lower()\n        else\n            result = result .. char:upper()\n        end\n    end\n    return result\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:lower() then\n            new_string = new_string .. char:upper()\n        else\n            new_string = new_string .. char:lower()\n        end\n    end\n    return new_string\nend",
    "    local toggled = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            toggled = toggled .. char:lower()\n        else\n            toggled = toggled .. char:upper()\n        end\n    end\n    return toggled\nend",
    "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == char:upper() then\n      new_string = new_string .. char:lower()\n    else\n      new_string = new_string .. char:upper()\n    end\n  end\n  return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i,i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "    local result = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"%l\") then\n            result = result .. char:upper()\n        elseif char:match(\"%u\") then\n            result = result .. char:lower()\n        else\n            result = result .. char\n        end\n    end\n    return result\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:lower() == char then\n            new_string = new_string .. char:upper()\n        else\n            new_string = new_string .. char:lower()\n        end\n    end\n    return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "    local result = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:lower() then\n            result = result .. char:upper()\n        else\n            result = result .. char:lower()\n        end\n    end\n    return result\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match(\"%l\") then\n            new_string = new_string .. char:upper()\n        elseif char:match(\"%u\") then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char\n        end\n    end\n    return new_string\nend",
    "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == char:upper() then\n            new_string = new_string .. char:lower()\n        else\n            new_string = new_string .. char:upper()\n        end\n    end\n    return new_string\nend"
  ]
}
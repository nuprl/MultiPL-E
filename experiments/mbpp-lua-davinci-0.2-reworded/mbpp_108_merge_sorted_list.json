{
  "name": "mbpp_108_merge_sorted_list",
  "language": "lua",
  "prompt": "-- Write a function to merge three tables into a single sorted table.\nlocal function merge_sorted_list(num1, num2, num3)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = merge_sorted_list\n    lu.assertEquals(candidate({25, 24, 15, 4, 5, 29, 110}, {19, 20, 11, 56, 25, 233, 154}, {24, 26, 54, 48}), {4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233})\n    lu.assertEquals(candidate({1, 3, 5, 6, 8, 9}, {2, 5, 7, 11}, {1, 4, 7, 8, 12}), {1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12})\n    lu.assertEquals(candidate({18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1}, {25, 35, 22, 85, 14, 65, 75, 25, 58}, {12, 74, 9, 50, 61, 41}), {1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] < num2[j] then\n\t\t\tif num1[i] < num3[k] then\n\t\t\t\ttable.insert(result, num1[i])\n\t\t\t\ti = i + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\telse\n\t\t\tif num2[j] < num3[k] then\n\t\t\t\ttable.insert(result, num2[j])\n\t\t\t\tj = j + 1\n\t\t\telse\n\t\t\t\ttable.insert(result, num3[k])\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\ttable.insert(result, num1[i])\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\ttable.insert(result, num2[j])\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\ttable.insert(result, num3[k])\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] and num1[i] < num3[k] then\n            result[#result + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] < num1[i] and num2[j] < num3[k] then\n            result[#result + 1] = num2[j]\n            j = j + 1\n        else\n            result[#result + 1] = num3[k]\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        result[#result + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        result[#result + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        result[#result + 1] = num3[k]\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      result[#result + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      result[#result + 1] = num2[j]\n      j = j + 1\n    else\n      result[#result + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    result[#result + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    result[#result + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    result[#result + 1] = num3[k]\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        local min = math.min(num1[i], num2[j], num3[k])\n        if min == num1[i] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif min == num2[j] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] < num2[j] then\n      if num1[i] < num3[k] then\n        table.insert(result, num1[i])\n        i = i + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    else\n      if num2[j] < num3[k] then\n        table.insert(result, num2[j])\n        j = j + 1\n      else\n        table.insert(result, num3[k])\n        k = k + 1\n      end\n    end\n  end\n  while i <= #num1 do\n    table.insert(result, num1[i])\n    i = i + 1\n  end\n  while j <= #num2 do\n    table.insert(result, num2[j])\n    j = j + 1\n  end\n  while k <= #num3 do\n    table.insert(result, num3[k])\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] and num1[i] < num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] < num1[i] and num2[j] < num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        elseif num3[k] < num1[i] and num3[k] < num2[j] then\n            table.insert(result, num3[k])\n            k = k + 1\n        elseif num1[i] == num2[j] and num1[i] < num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n            j = j + 1\n        elseif num1[i] == num3[k] and num1[i] < num2[j] then\n            table.insert(result, num1[i])\n            i = i + 1\n            k = k + 1\n        elseif num2[j] == num3[k] and num2[j] < num1[i] then\n            table.insert(result, num2[j])\n            j = j + 1\n            k = k + 1\n        elseif num1[i] == num2[j] and num1[i] == num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n            j = j + 1\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n   ",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            result[#result + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            result[#result + 1] = num2[j]\n            j = j + 1\n        else\n            result[#result + 1] = num3[k]\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        result[#result + 1] = num1[i]\n        i = i + 1\n    end\n    while j <= #num2 do\n        result[#result + 1] = num2[j]\n        j = j + 1\n    end\n    while k <= #num3 do\n        result[#result + 1] = num3[k]\n        k = k + 1\n    end\n    return result\nend",
    "  local result = {}\n  local i, j, k = 1, 1, 1\n  while i <= #num1 and j <= #num2 and k <= #num3 do\n    if num1[i] <= num2[j] and num1[i] <= num3[k] then\n      result[#result + 1] = num1[i]\n      i = i + 1\n    elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n      result[#result + 1] = num2[j]\n      j = j + 1\n    elseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n      result[#result + 1] = num3[k]\n      k = k + 1\n    end\n  end\n  while i <= #num1 do\n    result[#result + 1] = num1[i]\n    i = i + 1\n  end\n  while j <= #num2 do\n    result[#result + 1] = num2[j]\n    j = j + 1\n  end\n  while k <= #num3 do\n    result[#result + 1] = num3[k]\n    k = k + 1\n  end\n  return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            result[#result + 1] = num1[i]\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            result[#result + 1] = num2[j]\n            j = j + 1\n        else\n            result[#result + 1] = num3[k]\n            k = k + 1\n        end\n    end",
    "\tlocal result = {}\n\tlocal i, j, k = 1, 1, 1\n\twhile i <= #num1 and j <= #num2 and k <= #num3 do\n\t\tif num1[i] <= num2[j] and num1[i] <= num3[k] then\n\t\t\tresult[#result + 1] = num1[i]\n\t\t\ti = i + 1\n\t\telseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n\t\t\tresult[#result + 1] = num2[j]\n\t\t\tj = j + 1\n\t\telseif num3[k] <= num1[i] and num3[k] <= num2[j] then\n\t\t\tresult[#result + 1] = num3[k]\n\t\t\tk = k + 1\n\t\tend\n\tend\n\twhile i <= #num1 do\n\t\tresult[#result + 1] = num1[i]\n\t\ti = i + 1\n\tend\n\twhile j <= #num2 do\n\t\tresult[#result + 1] = num2[j]\n\t\tj = j + 1\n\tend\n\twhile k <= #num3 do\n\t\tresult[#result + 1] = num3[k]\n\t\tk = k + 1\n\tend\n\treturn result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] < num2[j] then\n            if num1[i] < num3[k] then\n                table.insert(result, num1[i])\n                i = i + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        else\n            if num2[j] < num3[k] then\n                table.insert(result, num2[j])\n                j = j + 1\n            else\n                table.insert(result, num3[k])\n                k = k + 1\n            end\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend",
    "    local result = {}\n    local i, j, k = 1, 1, 1\n    while i <= #num1 and j <= #num2 and k <= #num3 do\n        if num1[i] <= num2[j] and num1[i] <= num3[k] then\n            table.insert(result, num1[i])\n            i = i + 1\n        elseif num2[j] <= num1[i] and num2[j] <= num3[k] then\n            table.insert(result, num2[j])\n            j = j + 1\n        else\n            table.insert(result, num3[k])\n            k = k + 1\n        end\n    end\n    while i <= #num1 do\n        table.insert(result, num1[i])\n        i = i + 1\n    end\n    while j <= #num2 do\n        table.insert(result, num2[j])\n        j = j + 1\n    end\n    while k <= #num3 do\n        table.insert(result, num3[k])\n        k = k + 1\n    end\n    return result\nend"
  ]
}
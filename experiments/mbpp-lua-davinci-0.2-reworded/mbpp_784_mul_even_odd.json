{
  "name": "mbpp_784_mul_even_odd",
  "language": "lua",
  "prompt": "-- Write a function to find the product of first even and odd number of a given table.\nlocal function mul_even_odd(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = mul_even_odd\n    lu.assertEquals(candidate({1, 3, 5, 7, 4, 1, 6, 8}), 4)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), 2)\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), 10)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal even,odd = 1,1\n\tfor i,v in ipairs(list1) do\n\t\tif v%2 == 0 then\n\t\t\teven = even * v\n\t\t\tbreak\n\t\telse\n\t\t\todd = odd * v\n\t\tend\n\tend\n\treturn even,odd\nend",
    "\tlocal even_odd_mul = 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_odd_mul = even_odd_mul * list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\teven_odd_mul = even_odd_mul * list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_odd_mul\nend",
    "\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\tlocal even,odd = 1,1\n\tfor i = 1,#list1 do\n\t\tif list1[i]%2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even,odd\nend",
    "\tlocal even, odd = 1, 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal product = 1\n\tlocal flag = false\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\tif flag == false then\n\t\t\t\tproduct = product * list1[i]\n\t\t\t\tflag = true\n\t\t\tend\n\t\telse\n\t\t\tif flag == true then\n\t\t\t\tproduct = product * list1[i]\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn product\nend",
    "\tlocal even, odd = 1, 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even, odd = 1, 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even, odd = 1, 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even,odd = 1,1\n\tfor i,v in ipairs(list1) do\n\t\tif v%2 == 0 then\n\t\t\teven = even * v\n\t\telse\n\t\t\todd = odd * v\n\t\tend\n\tend\n\treturn even,odd\nend",
    "\tlocal even, odd = 1, 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even, odd = 1, 1\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven = even * list1[i]\n\t\telse\n\t\t\todd = odd * list1[i]\n\t\tend\n\tend\n\treturn even, odd\nend",
    "\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal mul = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tmul = even_num * odd_num\n\treturn mul\nend",
    "\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even_num * odd_num\nend",
    "\tlocal even,odd = 1,1\n\tfor i=1,#list1 do\n\t\tif list1[i]%2 == 0 then\n\t\t\teven = even * list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i=1,#list1 do\n\t\tif list1[i]%2 ~= 0 then\n\t\t\todd = odd * list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even,odd\nend",
    "\tlocal even_odd_mul = 0\n\tlocal even_num = 0\n\tlocal odd_num = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = #list1, 1, -1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\teven_odd_mul = even_num * odd_num\n\treturn even_odd_mul\nend",
    "\tlocal even,odd=0,0\n\tfor i=1,#list1 do\n\t\tif(list1[i]%2==0) then\n\t\t\teven=list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i=1,#list1 do\n\t\tif(list1[i]%2~=0) then\n\t\t\todd=list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\treturn even*odd\nend",
    "\tlocal even_num = 0\n\tlocal odd_num = 0\n\tlocal mul = 0\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 == 0 then\n\t\t\teven_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #list1 do\n\t\tif list1[i] % 2 ~= 0 then\n\t\t\todd_num = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tmul = even_num * odd_num\n\treturn mul\nend",
    "\tlocal even,odd,product = 0,0,0\n\tfor i=1,#list1 do\n\t\tif list1[i]%2==0 then\n\t\t\teven = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i=1,#list1 do\n\t\tif list1[i]%2~=0 then\n\t\t\todd = list1[i]\n\t\t\tbreak\n\t\tend\n\tend\n\tproduct = even*odd\n\treturn product\nend"
  ]
}
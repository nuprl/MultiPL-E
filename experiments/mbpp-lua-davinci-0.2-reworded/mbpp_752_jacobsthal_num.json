{
  "name": "mbpp_752_jacobsthal_num",
  "language": "lua",
  "prompt": "-- Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\nlocal function jacobsthal_num(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = jacobsthal_num\n    lu.assertEquals(candidate(5), 11)\n    lu.assertEquals(candidate(2), 1)\n    lu.assertEquals(candidate(4), 5)\n    lu.assertEquals(candidate(13), 2731)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "\tif n == 1 then return 0 end\n\tif n == 2 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + 2 * b\n    end\n    return a\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n\tend\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n\tend\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n\tend\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "\tlocal a, b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, 2*b + a\n\tend\n\treturn a\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n  end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n\tend\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + 2 * b\n  end\n  return a\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + 2 * b\n    end\n    return a\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n\tend\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + 2 * b\n    end\n    return a\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "    if n == 0 then return 0\n    elseif n == 1 then return 1\n    else return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n\tend\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + 2 * b\n  end\n  return a\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  if n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n  end\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n\tend\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then return 0 end\n    if n == 1 then return 1 end\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + 2 * b\n  end\n  return a\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n        return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\n    end\nend"
  ]
}
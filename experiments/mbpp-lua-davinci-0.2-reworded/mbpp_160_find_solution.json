{
  "name": "mbpp_160_find_solution",
  "language": "lua",
  "prompt": "-- Write a function that returns integers x and y that satisfy ax + by = n as a table, or return None if no solution exists.\nlocal function find_solution(a, b, n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_solution\n    lu.assertEquals(candidate(2, 3, 7), {2, 1})\n    lu.assertEquals(candidate(4, 2, 7), None)\n    lu.assertEquals(candidate(1, 13, 17), {4, 1})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\tlocal d = gcd(a, b)\n\tif n % d ~= 0 then\n\t\treturn nil\n\tend\n\tlocal x0, y0 = find_solution(b % a, a, n % a)\n\tif x0 then\n\t\tx = y0 - (b // a) * x0\n\t\ty = x0\n\tend\n\treturn x, y\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n    else\n        return nil\n    end\n    return {x, y}\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = math.gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local a1 = a / d\n    local b1 = b / d\n    local n1 = n / d\n    local x1, y1 = find_solution(b1, a1 % b1, n1)\n    if x1 ~= nil then\n        x = y1\n        y = x1 - math.floor(a1 / b1) * y1\n    end\n    return {x, y}\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        local r = n - a * x\n        if r % b == 0 then\n            return {x, r / b}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local r = a * x + b * y\n        if r == n then\n            return {x, y}\n        elseif r > n then\n            if x == 0 then\n                return nil\n            end\n            x = x - 1\n            y = (n - a * x) / b\n        else\n            x = x + 1\n        end\n    end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    if n == 0 then\n        return 0, 0\n    end",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 1\n\twhile a ~= 0 do\n\t\tlocal q, r = math.floor(b / a), b % a\n\t\tlocal m, n = x - q * y, y\n\t\tb, a, x, y = a, r, m, n\n\tend\n\tif b == 1 then\n\t\treturn x * n\n\telse\n\t\treturn nil\n\tend\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local x0, y0 = find_solution(b % a, a, n % a)\n    x = y0 - (b // a) * x0\n    y = x0\n    return x, y\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while true do\n        local q, r = math.floor(n / b), n % b\n        if r == 0 then\n            return {x, y}\n        end\n        n = b\n        b = r\n        x, y = y, x - q * y\n    end\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local aa = a / d\n    local bb = b / d\n    local nn = n / d\n    local x1, y1 = find_solution(bb, aa - math.floor(aa / bb) * bb, nn)\n    if x1 then\n        x = y1\n        y = x1 - math.floor(aa / bb) * y1\n    end\n    return x, y\nend",
    "    local x, y = 0, 0\n    for i = 0, n do\n        if (i * a) % b == n % b then\n            x = i\n            y = (n - i * a) / b\n            break\n        end\n    end\n    if x == 0 and y == 0 then\n        return nil\n    else\n        return { x, y }\n    end\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y == math.floor(y) then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if math.floor(y) == y then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local r = a * x + b * y\n        if r == n then\n            return {x, y}\n        elseif r > n then\n            x = x - 1\n        else\n            y = y + 1\n        end\n    end\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local a1 = a / d\n    local b1 = b / d\n    local n1 = n / d\n    local x1, y1 = find_solution(b1, a1 % b1, n1)\n    if x1 == nil then\n        return nil\n    end\n    x = y1\n    y = x1 - (a1 / b1) * y1\n    return x, y\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local x0, y0 = find_solution(b % a, a, n % a)\n    x = y0 - (b // a) * x0\n    y = x0\n    return x, y\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\tlocal d = gcd(a, b)\n\tif n % d == 0 then\n\t\tlocal x0, y0 = find_solution(a / d, b / d, n / d)\n\t\tx = x0\n\t\ty = y0\n\t\treturn {x, y}\n\telse\n\t\treturn nil\n\tend\nend",
    "    if a == 0 and b == 0 then\n        return n == 0 and {0, 0} or nil\n    elseif a == 0 then\n        return n % b == 0 and {0, n / b} or nil\n    elseif b == 0 then\n        return n % a == 0 and {n / a, 0} or nil\n    end\n    local x, y = find_solution(b, a % b, n)\n    if x == nil then\n        return nil\n    end\n    return {y, x - math.floor(a / b) * y}\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 1, 0\n\tlocal x1, y1 = 0, 1\n\twhile a ~= 0 do\n\t\tlocal q, r = math.floor(b / a), b % a\n\t\tlocal m, n = x - q * x1, y - q * y1\n\t\tb, a, x, y, x1, y1 = a, r, x1, y1, m, n\n\tend\n\tif b ~= 1 then return nil end\n\treturn x * n, y * n\nend",
    "    local x, y = 0, 1\n    while a ~= 0 do\n        local q, r = math.floor(b / a), b % a\n        local m, n = x - q * y, y\n        x, y, b, a = m, n, a, r\n    end\n    if b == 1 then\n        return n - y * n\n    else\n        return nil\n    end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local r = a * x + b * y\n        if r == n then\n            return {x, y}\n        elseif r > n then\n            if y == 0 then\n                return nil\n            end\n            y = y - 1\n        else\n            x = x + 1\n        end\n    end\nend",
    "  local x = 0\n  while a * x <= n do\n    local y = (n - a * x) / b\n    if y == math.floor(y) then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\tlocal d = gcd(a, b)\n\tif n % d ~= 0 then\n\t\treturn nil\n\tend\n\tlocal x0, y0 = find_solution(b % a, a, n % a)\n\tif x0 == nil then\n\t\treturn nil\n\tend\n\tx = y0 - (b // a) * x0\n\ty = x0\n\treturn x, y\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        y = (n - a * x) / b\n        if math.floor(y) == y then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while x * a <= n do\n    if (n - x * a) % b == 0 then\n      y = (n - x * a) / b\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        local r = n - a * x\n        if r % b == 0 then\n            y = r / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    a = a / d\n    b = b / d\n    n = n / d\n    local x0, y0 = find_solution(b, a % b, n)\n    if x0 then\n        x = y0\n        y = x0 - (a / b) * y0\n    end\n    return x, y\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if math.floor(y) == y then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        y = (n - a * x) / b\n        if math.floor(y) == y then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return x, y\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return {x, y}\n    else\n        return nil\n    end\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        if (a * x + b * y) == n then\n            return {x, y}\n        end\n        x = x + 1\n        y = (n - a * x) / b\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y == math.floor(y) then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if math.floor(y) == y then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 1\n    while a ~= 0 do\n        local q, r = b // a, b % a\n        local m, n = x - q * m, y - q * n\n        b, a, x, y = a, r, m, n\n    end\n    if b ~= 1 then\n        return nil\n    else\n        return x * n\n    end\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        if a * x + b * y == n then\n            return {x, y}\n        elseif a * x + b * y > n then\n            return nil\n        end\n        x = x + 1\n    end\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        y = (n - a * x) / b\n        if math.floor(y) == y then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y == math.floor(y) then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y == math.floor(y) then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 1, 0\n    while a ~= 0 do\n        local q, r = math.floor(b / a), b % a\n        x, y = y, x - q * y\n        b, a = a, r\n    end\n    if b ~= 1 then\n        return nil\n    end\n    return x * n\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local r = a * x + b * y\n        if r == n then\n            return {x, y}\n        elseif r > n then\n            if y == 0 then\n                return nil\n            end\n            x = x - 1\n            y = y + 1\n        else\n            x = x + 1\n        end\n    end\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 1\n    while a ~= 0 do\n        local q, r = b // a, b % a\n        local m = x - q * y\n        b, a, x, y = a, r, y, m\n    end\n    if b ~= 1 then return nil end\n    return n * x\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local q, r = math.floor(n / b), n % b\n        if r == 0 then\n            return {x, q}\n        end\n        n = b\n        b = r\n        x, y = y, x - q * y\n    end\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    while a * x <= n do\n        local y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  while a * x <= n do\n    local y = (n - a * x) / b\n    if math.floor(y) == y then\n      return {x, y}\n    end\n    x = x + 1\n  end\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    while a * x <= n do\n        local r = n - a * x\n        if r % b == 0 then\n            return {x, r / b}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\tif (n - a * x) % b == 0 then\n\t\t\ty = (n - a * x) / b\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\tlocal d = gcd(a, b)\n\tif n % d == 0 then\n\t\tlocal x0, y0 = find_solution(a/d, b/d, n/d)\n\t\tx = x0\n\t\ty = y0\n\t\treturn {x, y}\n\telse\n\t\treturn nil\n\tend\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        if (a * x + b * y) == n then\n            return {x, y}\n        end\n        x = x + 1\n        y = (n - a * x) / b\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\tlocal r = n - a * x\n\t\tif r % b == 0 then\n\t\t\ty = r / b\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local aa = a / d\n    local bb = b / d\n    local nn = n / d\n    local x1, y1 = find_solution(bb, aa - math.floor(aa / bb) * bb, nn)\n    if x1 == nil then\n        return nil\n    end\n    x = y1\n    y = x1 - math.floor(aa / bb) * y1\n    return x, y\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\tlocal r = n - a * x\n\t\tif r % b == 0 then\n\t\t\treturn {x, r / b}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n        return x, y\n    else\n        return nil\n    end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 1\n    local last_x, last_y = 1, 0\n    local q, r = math.floor(a / b), a % b\n    while r ~= 0 do\n        local c = math.floor(b / r)\n        q, r = c * q, b - c * r\n        x, last_x = last_x - q * x, x\n        y, last_y = last_y - q * y, y\n    end\n    if n % b ~= 0 then return nil end\n    return last_x * (n / b)\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y == math.floor(y) then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local q, r = math.modf(a / b)\n        if r == 0 then\n            return nil\n        end\n        x = x - q * y\n        a, b = b, r\n        if a == n then\n            return {x, y}\n        end\n        q, r = math.modf(b / a)\n        if r == 0 then\n            return nil\n        end\n        y = y - q * x\n        b, a = a, r\n        if b == n then\n            return {x, y}\n        end\n    end\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local r = a * x + b * y\n        if r == n then\n            return {x, y}\n        elseif r > n then\n            return nil\n        end\n        if x == 0 then\n            x = 1\n        else\n            x = 0\n            y = y + 1\n        end\n    end\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local a1, b1 = a / d, b / d\n    local c1, c2 = extended_gcd(a1, b1)\n    x = n / d * c1\n    y = n / d * c2\n    return {x, y}\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local a1 = a / d\n        local b1 = b / d\n        local n1 = n / d\n        local x1, y1 = find_solution(a1, b1, n1)\n        x = x1\n        y = y1\n    else\n        return nil\n    end\n    return x, y\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile x * a <= n do\n\t\ty = (n - x * a) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x < n do\n        y = 0\n        while a * x + b * y < n do\n            y = y + 1\n        end\n        if a * x + b * y == n then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  local y = 0\n  while a * x <= n do\n    y = (n - a * x) / b\n    if y == math.floor(y) then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\tlocal remainder = n - a * x\n\t\tif remainder % b == 0 then\n\t\t\ty = remainder / b\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "\tlocal x = 0\n\tlocal y = 0\n\twhile true do\n\t\tlocal r = a * x + b * y\n\t\tif r == n then\n\t\t\treturn {x, y}\n\t\telseif r > n then\n\t\t\treturn nil\n\t\tend\n\t\tif b * x > n then\n\t\t\treturn nil\n\t\tend\n\t\tx = x + 1\n\tend\nend",
    "\tlocal x, y = 0, 0\n\twhile x <= n do\n\t\ty = (n - a * x) / b\n\t\tif y % 1 == 0 then\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    -- We need to find a solution to ax + by = n.\n    -- We can do this by finding the GCD of a and b, and then checking if n is a multiple of the GCD.\n    -- If it is, we can find a solution by using the extended Euclidean algorithm.\n    local gcd = math.gcd(a, b)\n    if n % gcd ~= 0 then\n        return nil\n    end",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        y = (n - x * a) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 1, 0\n\tlocal last_x, last_y = 0, 1\n\twhile a ~= 0 do\n\t\tlocal q, r = math.floor(b / a), b % a\n\t\tlocal temp = x\n\t\tx = last_x - q * x\n\t\tlast_x = temp\n\t\ttemp = y\n\t\ty = last_y - q * y\n\t\tlast_y = temp\n\t\tb = a\n\t\ta = r\n\tend\n\tif b ~= 1 then\n\t\treturn nil\n\tend\n\treturn last_y, last_x\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x = 0\n  while a * x <= n do\n    local y = (n - a * x) / b\n    if y % 1 == 0 then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "\tlocal x, y = 0, 0\n\twhile a * x <= n do\n\t\tif (n - a * x) % b == 0 then\n\t\t\ty = (n - a * x) / b\n\t\t\treturn {x, y}\n\t\tend\n\t\tx = x + 1\n\tend\n\treturn nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        y = (n - a * x) / b\n        if y == math.floor(y) then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local d = a * x + b * y\n        if d == n then\n            return {x, y}\n        elseif d > n then\n            return nil\n        end\n        x = x + 1\n        y = y + 1\n    end\nend",
    "  local x, y = 0, 0\n  while a * x <= n do\n    local r = n - a * x\n    if r % b == 0 then\n      y = r / b\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d == 0 then\n        local x0, y0 = find_solution(a / d, b / d, n / d)\n        x = x0\n        y = y0\n    else\n        return nil\n    end\n    return {x, y}\nend",
    "  local x, y = 0, 1\n  while a * x + b * y ~= n do\n    if n > a * x + b * y then\n      x = x + 1\n    else\n      y = y - 1\n    end\n  end\n  return x, y\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    local d = gcd(a, b)\n    if n % d ~= 0 then\n        return nil\n    end\n    local x0, y0 = find_solution(b % a, a, n % a)\n    if x0 then\n        x = y0 - (b // a) * x0\n        y = x0\n    end\n    return x, y\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "  local x, y = 0, 0\n  while x <= n do\n    y = (n - a * x) / b\n    if math.floor(y) == y then\n      return {x, y}\n    end\n    x = x + 1\n  end\n  return nil\nend",
    "    local x = 0\n    local y = 0\n    while x * a <= n do\n        if (n - x * a) % b == 0 then\n            y = (n - x * a) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while true do\n        local q, r = math.modf(n / a)\n        if r == 0 then\n            return {x, y}\n        end\n        n = n - q * a\n        x, y = y, x + q * y\n    end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        local r = n - a * x\n        if r % b == 0 then\n            y = r / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while x <= n do\n        y = (n - a * x) / b\n        if y % 1 == 0 then\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x, y = 0, 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend",
    "    local x = 0\n    local y = 0\n    while a * x <= n do\n        if (n - a * x) % b == 0 then\n            y = (n - a * x) / b\n            return {x, y}\n        end\n        x = x + 1\n    end\n    return nil\nend"
  ]
}
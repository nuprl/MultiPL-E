{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "lua",
  "prompt": "-- Write a function to pack consecutive duplicates of a given table elements into subtables.\nlocal function pack_consecutive_duplicates(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pack_consecutive_duplicates\n    lu.assertEquals(candidate({0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4}), {{0, 0}, {1}, {2}, {3}, {4, 4}, {5}, {6, 6, 6}, {7}, {8}, {9}, {4, 4}})\n    lu.assertEquals(candidate({10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10}), {{10, 10}, {15}, {19}, {18, 18}, {17}, {26, 26}, {17}, {18}, {10}})\n    lu.assertEquals(candidate({'a', 'a', 'b', 'c', 'd', 'd'}), {{'a', 'a'}, {'b'}, {'c'}, {'d', 'd'}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local list2 = {}\n    local list3 = {}\n    for i = 1, #list1 do\n        if list1[i] == list1[i + 1] then\n            table.insert(list2, list1[i])\n        else\n            table.insert(list2, list1[i])\n            table.insert(list3, list2)\n            list2 = {}\n        end\n    end\n    return list3\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            table.insert(list2, {v})\n        else\n            table.insert(list2[#list2], v)\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element ~= last_element then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n    else\n      table.insert(sublist, element)\n    end\n    last_element = element\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        last = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = list1[1]\n    for i, element in ipairs(list1) do\n        if element == previous_element then\n            table.insert(sublist, element)\n        else\n            table.insert(list2, sublist)\n            sublist = {element}\n            previous_element = element\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_item = nil\n  for _, item in ipairs(list1) do\n    if item ~= last_item then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {item}\n    else\n      table.insert(sublist, item)\n    end\n    last_item = item\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        last = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            table.insert(list2, sublist)\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local current_element = list1[1]\n    local current_sublist = {current_element}\n    for i = 2, #list1 do\n        local element = list1[i]\n        if element == current_element then\n            table.insert(current_sublist, element)\n        else\n            table.insert(list2, current_sublist)\n            current_element = element\n            current_sublist = {current_element}\n        end\n    end\n    table.insert(list2, current_sublist)\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            table.insert(list2, {v})\n        else\n            table.insert(list2[#list2], v)\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local prev = nil\n  for i, v in ipairs(list1) do\n    if v ~= prev then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {v}\n    else\n      table.insert(sublist, v)\n    end\n    prev = v\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "  local list2 = {}\n  local i = 1\n  local j = 1\n  while i <= #list1 do\n    local k = i\n    while k <= #list1 and list1[i] == list1[k] do\n      k = k + 1\n    end\n    list2[j] = {unpack(list1, i, k - 1)}\n    i = k\n    j = j + 1\n  end\n  return list2\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i\n    while j <= #list1 and list1[j] == list1[i] do\n      j = j + 1\n    end\n    list2[#list2 + 1] = {unpack(list1, i, j - 1)}\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local current_sublist = {}\n    local current_value = nil\n    for i, v in ipairs(list1) do\n        if v ~= current_value then\n            if #current_sublist > 0 then\n                table.insert(list2, current_sublist)\n            end\n            current_sublist = {v}\n            current_value = v\n        else\n            table.insert(current_sublist, v)\n        end\n    end\n    if #current_sublist > 0 then\n        table.insert(list2, current_sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n            last_element = element\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal list2_index = 1\n\tlocal list2_subindex = 1\n\tlocal list1_index = 1\n\tlocal list1_value = list1[list1_index]\n\tlist2[list2_index] = {}\n\tlist2[list2_index][list2_subindex] = list1_value\n\tlist1_index = list1_index + 1\n\twhile list1[list1_index] do\n\t\tif list1_value == list1[list1_index] then\n\t\t\tlist2_subindex = list2_subindex + 1\n\t\t\tlist2[list2_index][list2_subindex] = list1_value\n\t\telse\n\t\t\tlist2_index = list2_index + 1\n\t\t\tlist2_subindex = 1\n\t\t\tlist2[list2_index] = {}\n\t\t\tlist2[list2_index][list2_subindex] = list1[list1_index]\n\t\tend\n\t\tlist1_value = list1[list1_index]\n\t\tlist1_index = list1_index + 1\n\tend\n\treturn list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element ~= last_element then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {}\n    end\n    table.insert(sublist, element)\n    last_element = element\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            sublist[#sublist+1] = list1[i]\n        elseif list1[i] == list1[i-1] then\n            sublist[#sublist+1] = list1[i]\n        else\n            list2[#list2+1] = sublist\n            sublist = {}\n            sublist[#sublist+1] = list1[i]\n        end\n    end\n    list2[#list2+1] = sublist\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last = nil\n  for _, v in ipairs(list1) do\n    if v ~= last then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {v}\n    else\n      table.insert(sublist, v)\n    end\n    last = v\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal sublist = {}\n\tlocal previous = nil\n\tfor i, v in ipairs(list1) do\n\t\tif v == previous then\n\t\t\ttable.insert(sublist, v)\n\t\telse\n\t\t\tif #sublist > 0 then\n\t\t\t\ttable.insert(list2, sublist)\n\t\t\t\tsublist = {}\n\t\t\tend\n\t\t\ttable.insert(sublist, v)\n\t\t\tprevious = v\n\t\tend\n\tend\n\tif #sublist > 0 then\n\t\ttable.insert(list2, sublist)\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = list1[1]\n    for i, v in ipairs(list1) do\n        if v == prev then\n            table.insert(sublist, v)\n        else\n            table.insert(list2, sublist)\n            sublist = {v}\n            prev = v\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "  local list2 = {}\n  local last = list1[1]\n  local sublist = {last}\n  for i = 2, #list1 do\n    local current = list1[i]\n    if current == last then\n      table.insert(sublist, current)\n    else\n      table.insert(list2, sublist)\n      sublist = {current}\n      last = current\n    end\n  end\n  table.insert(list2, sublist)\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = { element }\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element ~= last_element then\n      table.insert(list2, sublist)\n      sublist = {}\n    end\n    table.insert(sublist, element)\n    last_element = element\n  end\n  table.insert(list2, sublist)\n  return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_item = nil\n  for _, item in ipairs(list1) do\n    if item ~= last_item then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {item}\n    else\n      table.insert(sublist, item)\n    end\n    last_item = item\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, { list1[i], j - i })\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = list1[1]\n    local sublist = {last}\n    for i = 2, #list1 do\n        local elem = list1[i]\n        if elem == last then\n            table.insert(sublist, elem)\n        else\n            table.insert(list2, sublist)\n            sublist = {elem}\n            last = elem\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v == last then\n            table.insert(sublist, v)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        end\n        last = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal i = 1\n\tlocal j = 1\n\twhile i <= #list1 do\n\t\tlocal k = i\n\t\twhile k <= #list1 and list1[i] == list1[k] do\n\t\t\tk = k + 1\n\t\tend\n\t\tlist2[j] = {unpack(list1, i, k - 1)}\n\t\ti = k\n\t\tj = j + 1\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i + 1\n        while k <= #list1 and list1[k] == list1[i] do\n            k = k + 1\n        end\n        list2[j] = {list1[i]}\n        for l = i + 1, k - 1 do\n            list2[j][#list2[j] + 1] = list1[l]\n        end\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = { element }\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for i, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i + 1\n    while j <= #list1 and list1[j] == list1[i] do\n      j = j + 1\n    end\n    list2[#list2 + 1] = {unpack(list1, i, j - 1)}\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local list2_index = 1\n    local list1_index = 1\n    local list1_length = #list1\n    while list1_index <= list1_length do\n        local list1_value = list1[list1_index]\n        local list1_value_count = 1\n        while list1[list1_index + list1_value_count] == list1_value do\n            list1_value_count = list1_value_count + 1\n        end\n        list2[list2_index] = {list1_value, list1_value_count}\n        list2_index = list2_index + 1\n        list1_index = list1_index + list1_value_count\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = { element }\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = list1[1]\n    local sublist = {last}\n    for i = 2, #list1 do\n        local current = list1[i]\n        if current == last then\n            table.insert(sublist, current)\n        else\n            table.insert(list2, sublist)\n            sublist = {current}\n        end\n        last = current\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local current_element = list1[1]\n    local current_subtable = {current_element}\n    for i = 2, #list1 do\n        if list1[i] == current_element then\n            table.insert(current_subtable, list1[i])\n        else\n            table.insert(list2, current_subtable)\n            current_element = list1[i]\n            current_subtable = {current_element}\n        end\n    end\n    table.insert(list2, current_subtable)\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local i = 1\n  local j = 1\n  while i <= #list1 do\n    list2[j] = {}\n    local k = 1\n    while i <= #list1 and list1[i] == list1[i+1] do\n      list2[j][k] = list1[i]\n      k = k + 1\n      i = i + 1\n    end\n    list2[j][k] = list1[i]\n    i = i + 1\n    j = j + 1\n  end\n  return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        list2[j] = {}\n        list2[j][1] = list1[i]\n        local k = 2\n        while i+1 <= #list1 and list1[i+1] == list1[i] do\n            i = i + 1\n            list2[j][k] = list1[i]\n            k = k + 1\n        end\n        i = i + 1\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element ~= last_element then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n    else\n      table.insert(sublist, element)\n    end\n    last_element = element\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            sublist = {}\n            table.insert(list2, sublist)\n        end\n        table.insert(sublist, v)\n        last = v\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal i = 1\n\twhile i <= #list1 do\n\t\tlocal j = i + 1\n\t\twhile j <= #list1 and list1[j] == list1[i] do\n\t\t\tj = j + 1\n\t\tend\n\t\tlist2[#list2 + 1] = {unpack(list1, i, j - 1)}\n\t\ti = j\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            sublist[i] = list1[i]\n        elseif list1[i] == list1[i-1] then\n            sublist[#sublist + 1] = list1[i]\n        else\n            list2[#list2 + 1] = sublist\n            sublist = {}\n            sublist[1] = list1[i]\n        end\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local list3 = {}\n    local list4 = {}\n    local list5 = {}\n    local list6 = {}\n    local list7 = {}\n    local list8 = {}\n    local list9 = {}\n    local list10 = {}\n    local list11 = {}\n    local list12 = {}\n    local list13 = {}\n    local list14 = {}\n    local list15 = {}\n    local list16 = {}\n    local list17 = {}\n    local list18 = {}\n    local list19 = {}\n    local list20 = {}\n    local list21 = {}\n    local list22 = {}\n    local list23 = {}\n    local list24 = {}\n    local list25 = {}\n    local list26 = {}\n    local list27 = {}\n    local list28 = {}\n    local list29 = {}\n    local list30 = {}\n    local list31 = {}\n    local list32 = {}\n    local list33 = {}\n    local list34 = {}\n    local list35 = {}\n    local list36 = {}\n    local list37 = {}\n    local list38 = {}\n    local list39 = {}\n    local list40 = {}\n    local list41 = {}\n    local list42 = {}\n    local list43 = {}\n    local list44 = {}\n    local list45 = {}\n    local list46 = {}\n    local list47 = {}\n    local list48 = {}\n    local list49 = {}\n    local list50 = {}\n    local list51 = {}\n    local list52 = {}\n    local list53 = {}\n    local list54 = {}\n    local list55 = {}\n    local list56 = {}\n    local list57 = {}\n    local list58 = {}\n    local list59 = {}\n    local list60 = {}\n    local list61 = {}\n    local list62 = {}\n    local list63 = {}\n    local list64 = {}\n    local list65 = {}\n    local list66 = {}\n    local list67 = {}\n    local list68 = {}\n    local list69 = {}\n    local list70 = {}\n    local list71 = {}\n    local list72 = {}\n    local list73 = {}\n    local list74 = {}\n",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v == prev then\n            table.insert(sublist, v)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element == previous_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        end\n        previous_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        list2[j] = {list1[i]}\n        while list1[i] == list1[i+1] do\n            table.insert(list2[j], list1[i+1])\n            i = i + 1\n        end\n        i = i + 1\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal prev = list1[1]\n\tlocal sublist = {prev}\n\tfor i = 2, #list1 do\n\t\tlocal curr = list1[i]\n\t\tif curr == prev then\n\t\t\ttable.insert(sublist, curr)\n\t\telse\n\t\t\ttable.insert(list2, sublist)\n\t\t\tsublist = {curr}\n\t\t\tprev = curr\n\t\tend\n\tend\n\ttable.insert(list2, sublist)\n\treturn list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element == last_element then\n      table.insert(sublist, element)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n    end\n    last_element = element\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        last = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local prev_value = nil\n  for _, value in ipairs(list1) do\n    if value ~= prev_value then\n      table.insert(list2, sublist)\n      sublist = {}\n    end\n    table.insert(sublist, value)\n    prev_value = value\n  end\n  table.insert(list2, sublist)\n  return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local v = list1[i]\n        list2[j] = {v}\n        while i <= #list1 and list1[i] == v do\n            i = i + 1\n        end\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i, v in ipairs(list1) do\n        if i == 1 then\n            table.insert(sublist, v)\n        elseif v == list1[i - 1] then\n            table.insert(sublist, v)\n        else\n            table.insert(list2, sublist)\n            sublist = {}\n            table.insert(sublist, v)\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last = nil\n  for _, v in ipairs(list1) do\n    if v == last then\n      table.insert(sublist, v)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {v}\n      last = v\n    end\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = 1\n        while list1[i] == list1[i+k] do\n            k = k + 1\n        end\n        list2[j] = {}\n        for l = 0, k-1 do\n            list2[j][l+1] = list1[i+l]\n        end\n        i = i + k\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_value = nil\n    for _, value in ipairs(list1) do\n        if value ~= last_value then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n            last_value = value\n        end\n        table.insert(sublist, value)\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element == last_element then\n      table.insert(sublist, element)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n      last_element = element\n    end\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local last = list1[1]\n    local sublist = {last}\n    for i = 2, #list1 do\n        local v = list1[i]\n        if v ~= last then\n            list2[#list2 + 1] = sublist\n            sublist = {v}\n        else\n            sublist[#sublist + 1] = v\n        end\n        last = v\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal sublist = {}\n\tlocal prev = nil\n\tfor _, v in ipairs(list1) do\n\t\tif v == prev then\n\t\t\ttable.insert(sublist, v)\n\t\telse\n\t\t\tif #sublist > 0 then\n\t\t\t\ttable.insert(list2, sublist)\n\t\t\tend\n\t\t\tsublist = {v}\n\t\t\tprev = v\n\t\tend\n\tend\n\tif #sublist > 0 then\n\t\ttable.insert(list2, sublist)\n\tend\n\treturn list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for i, element in ipairs(list1) do\n    if element ~= last_element then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n    else\n      table.insert(sublist, element)\n    end\n    last_element = element\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "  local list2 = {}\n  local last = list1[1]\n  local sublist = {last}\n  for i = 2, #list1 do\n    local current = list1[i]\n    if current ~= last then\n      list2[#list2 + 1] = sublist\n      sublist = {current}\n    else\n      sublist[#sublist + 1] = current\n    end\n    last = current\n  end\n  list2[#list2 + 1] = sublist\n  return list2\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i + 1\n    while j <= #list1 and list1[j] == list1[i] do\n      j = j + 1\n    end\n    table.insert(list2, {list1[i], j - i})\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element == previous_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        end\n        previous_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal last = list1[1]\n\tlocal sublist = {last}\n\tfor i = 2, #list1 do\n\t\tlocal v = list1[i]\n\t\tif v == last then\n\t\t\ttable.insert(sublist, v)\n\t\telse\n\t\t\ttable.insert(list2, sublist)\n\t\t\tsublist = {v}\n\t\t\tlast = v\n\t\tend\n\tend\n\ttable.insert(list2, sublist)\n\treturn list2\nend",
    "    local list2 = {}\n    local index = 1\n    local prev = list1[1]\n    for i = 2, #list1 do\n        if list1[i] ~= prev then\n            index = index + 1\n            list2[index] = {}\n            list2[index][1] = list1[i]\n            prev = list1[i]\n        else\n            table.insert(list2[index], list1[i])\n        end\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v == prev then\n            table.insert(sublist, v)\n        else\n            if sublist[1] then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        end\n        prev = v\n    end\n    if sublist[1] then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev_elem = nil\n    for i, elem in ipairs(list1) do\n        if elem ~= prev_elem then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, elem)\n        prev_elem = elem\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local temp = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            table.insert(temp, list1[i])\n        else\n            if list1[i] == list1[i - 1] then\n                table.insert(temp, list1[i])\n            else\n                table.insert(list2, temp)\n                temp = {}\n                table.insert(temp, list1[i])\n            end\n        end\n    end\n    table.insert(list2, temp)\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= previous_element then\n            table.insert(list2, sublist)\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        previous_element = element\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_item = nil\n    for _, item in ipairs(list1) do\n        if item ~= last_item then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {item}\n        else\n            table.insert(sublist, item)\n        end\n        last_item = item\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            table.insert(sublist, list1[i])\n        elseif list1[i] == list1[i - 1] then\n            table.insert(sublist, list1[i])\n        else\n            table.insert(list2, sublist)\n            sublist = {}\n            table.insert(sublist, list1[i])\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local index = 1\n    local prev = list1[1]\n    list2[index] = {}\n    for i = 1, #list1 do\n        if list1[i] == prev then\n            table.insert(list2[index], list1[i])\n        else\n            index = index + 1\n            list2[index] = {}\n            table.insert(list2[index], list1[i])\n            prev = list1[i]\n        end\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= previous_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        previous_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local i = 1\n  local j = 1\n  while i <= #list1 do\n    local k = i\n    while k <= #list1 and list1[i] == list1[k] do\n      k = k + 1\n    end\n    list2[j] = {unpack(list1, i, k - 1)}\n    i = k\n    j = j + 1\n  end\n  return list2\nend",
    "\tlocal list2 = {}\n\tlocal i = 1\n\tlocal j = 1\n\twhile i <= #list1 do\n\t\tlist2[j] = {list1[i]}\n\t\twhile list1[i+1] == list1[i] do\n\t\t\ti = i + 1\n\t\t\tlist2[j][#list2[j]+1] = list1[i]\n\t\tend\n\t\ti = i + 1\n\t\tj = j + 1\n\tend\n\treturn list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local prev_elem = nil\n  for _, elem in ipairs(list1) do\n    if elem == prev_elem then\n      table.insert(sublist, elem)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = { elem }\n      prev_elem = elem\n    end\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v == last then\n            table.insert(sublist, v)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        end\n        last = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local temp = {}\n    local prev = nil\n    for i, v in ipairs(list1) do\n        if v ~= prev then\n            if #temp > 0 then\n                table.insert(list2, temp)\n            end\n            temp = {v}\n        else\n            table.insert(temp, v)\n        end\n        prev = v\n    end\n    if #temp > 0 then\n        table.insert(list2, temp)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            table.insert(list2, {v})\n        else\n            table.insert(list2[#list2], v)\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local list3 = {}\n    local list4 = {}\n    local list5 = {}\n    local list6 = {}\n    local list7 = {}\n    local list8 = {}\n    local list9 = {}\n    local list10 = {}\n    local list11 = {}\n    local list12 = {}\n    local list13 = {}\n    local list14 = {}\n    local list15 = {}\n    local list16 = {}\n    local list17 = {}\n    local list18 = {}\n    local list19 = {}\n    local list20 = {}\n    local list21 = {}\n    local list22 = {}\n    local list23 = {}\n    local list24 = {}\n    local list25 = {}\n    local list26 = {}\n    local list27 = {}\n    local list28 = {}\n    local list29 = {}\n    local list30 = {}\n    local list31 = {}\n    local list32 = {}\n    local list33 = {}\n    local list34 = {}\n    local list35 = {}\n    local list36 = {}\n    local list37 = {}\n    local list38 = {}\n    local list39 = {}\n    local list40 = {}\n    local list41 = {}\n    local list42 = {}\n    local list43 = {}\n    local list44 = {}\n    local list45 = {}\n    local list46 = {}\n    local list47 = {}\n    local list48 = {}\n    local list49 = {}\n    local list50 = {}\n    local list51 = {}\n    local list52 = {}\n    local list53 = {}\n    local list54 = {}\n    local list55 = {}\n    local list56 = {}\n    local list57 = {}\n    local list58 = {}\n    local list59 = {}\n    local list60 = {}\n    local list61 = {}\n    local list62 = {}\n    local list63 = {}\n    local list64 = {}\n    local list65 = {}\n    local list66 = {}\n    local list67 = {}\n    local list68 = {}\n    local list69 = {}\n    local list70 = {}\n    local list71 = {}\n    local list72 = {}\n    local list73 = {}\n    local list74 = {}\n",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        last = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i + 1\n        while k <= #list1 and list1[i] == list1[k] do\n            k = k + 1\n        end\n        list2[j] = {list1[i]}\n        for l = i + 1, k - 1 do\n            list2[j][#list2[j] + 1] = list1[l]\n        end\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "  local list2 = {}\n  local i = 1\n  local j = 1\n  while i <= #list1 do\n    local k = i\n    while k <= #list1 and list1[k] == list1[i] do\n      k = k + 1\n    end\n    list2[j] = {unpack(list1, i, k - 1)}\n    i = k\n    j = j + 1\n  end\n  return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        list2[j] = {}\n        local k = 1\n        list2[j][k] = list1[i]\n        while list1[i] == list1[i+1] do\n            k = k + 1\n            i = i + 1\n            list2[j][k] = list1[i]\n        end\n        i = i + 1\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            sublist[#sublist + 1] = list1[i]\n        elseif list1[i] == list1[i - 1] then\n            sublist[#sublist + 1] = list1[i]\n        else\n            list2[#list2 + 1] = sublist\n            sublist = {}\n            sublist[#sublist + 1] = list1[i]\n        end\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local last_element = nil\n    local last_index = 0\n    for i, v in ipairs(list1) do\n        if v ~= last_element then\n            last_element = v\n            last_index = last_index + 1\n            list2[last_index] = {v}\n        else\n            table.insert(list2[last_index], v)\n        end\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n            last_element = element\n        else\n            table.insert(sublist, element)\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = list1[1]\n    local sublist = {last}\n    for i = 2, #list1 do\n        local current = list1[i]\n        if current == last then\n            table.insert(sublist, current)\n        else\n            table.insert(list2, sublist)\n            sublist = {current}\n            last = current\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal sublist = {}\n\tlocal last = nil\n\tfor _, v in ipairs(list1) do\n\t\tif v ~= last then\n\t\t\ttable.insert(list2, sublist)\n\t\t\tsublist = {}\n\t\tend\n\t\ttable.insert(sublist, v)\n\t\tlast = v\n\tend\n\ttable.insert(list2, sublist)\n\treturn list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            sublist[#sublist + 1] = list1[i]\n        elseif list1[i] == list1[i - 1] then\n            sublist[#sublist + 1] = list1[i]\n        else\n            list2[#list2 + 1] = sublist\n            sublist = {}\n            sublist[#sublist + 1] = list1[i]\n        end\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i\n        while k <= #list1 and list1[k] == list1[i] do\n            k = k + 1\n        end\n        list2[j] = {unpack(list1, i, k - 1)}\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_value = nil\n  for _, value in ipairs(list1) do\n    if value ~= last_value then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {value}\n    else\n      table.insert(sublist, value)\n    end\n    last_value = value\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = list1[1]\n    local sublist = {last}\n    for i = 2, #list1 do\n        local v = list1[i]\n        if v == last then\n            table.insert(sublist, v)\n        else\n            table.insert(list2, sublist)\n            sublist = {v}\n            last = v\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i\n        while k <= #list1 and list1[i] == list1[k] do\n            k = k + 1\n        end\n        list2[j] = {}\n        for l = i, k - 1 do\n            list2[j][#list2[j] + 1] = list1[l]\n        end\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i + 1\n    while j <= #list1 and list1[i] == list1[j] do\n      j = j + 1\n    end\n    table.insert(list2, {list1[i], j - i})\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            table.insert(sublist, list1[i])\n        elseif list1[i] == list1[i-1] then\n            table.insert(sublist, list1[i])\n        else\n            table.insert(list2, sublist)\n            sublist = {}\n            table.insert(sublist, list1[i])\n        end\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local current_sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= previous_element then\n            table.insert(list2, current_sublist)\n            current_sublist = {}\n        end\n        table.insert(current_sublist, element)\n        previous_element = element\n    end\n    table.insert(list2, current_sublist)\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element == last_element then\n      table.insert(sublist, element)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n      last_element = element\n    end\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "\tlocal list2 = {}\n\tlocal sublist = {}\n\tlocal prev = nil\n\tfor _, v in ipairs(list1) do\n\t\tif v == prev then\n\t\t\ttable.insert(sublist, v)\n\t\telse\n\t\t\tif #sublist > 0 then\n\t\t\t\ttable.insert(list2, sublist)\n\t\t\tend\n\t\t\tsublist = {v}\n\t\t\tprev = v\n\t\tend\n\tend\n\tif #sublist > 0 then\n\t\ttable.insert(list2, sublist)\n\tend\n\treturn list2\nend",
    "\tlocal list2 = {}\n\tlocal i = 1\n\twhile i <= #list1 do\n\t\tlocal j = i + 1\n\t\twhile j <= #list1 and list1[j] == list1[i] do\n\t\t\tj = j + 1\n\t\tend\n\t\tlist2[#list2 + 1] = {unpack(list1, i, j - 1)}\n\t\ti = j\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    local last = list1[1]\n    local sublist = {last}\n    for i = 2, #list1 do\n        if list1[i] ~= last then\n            list2[#list2 + 1] = sublist\n            sublist = {list1[i]}\n        else\n            sublist[#sublist + 1] = list1[i]\n        end\n        last = list1[i]\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n            last_element = element\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[j] == list1[i] do\n            j = j + 1\n        end\n        list2[#list2 + 1] = {unpack(list1, i, j - 1)}\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local last = nil\n  for i, v in ipairs(list1) do\n    if v ~= last then\n      list2[#list2 + 1] = {v}\n    else\n      list2[#list2][#list2[#list2] + 1] = v\n    end\n    last = v\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous = nil\n    for _, v in ipairs(list1) do\n        if v ~= previous then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        previous = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local current = nil\n    local count = 0\n    for _, v in ipairs(list1) do\n        if v ~= current then\n            if count > 0 then\n                table.insert(list2, {current, count})\n            end\n            current = v\n            count = 1\n        else\n            count = count + 1\n        end\n    end\n    if count > 0 then\n        table.insert(list2, {current, count})\n    end\n    return list2\nend",
    "  local list2 = {}\n  local last = list1[1]\n  local sublist = {last}\n  for i = 2, #list1 do\n    if list1[i] ~= last then\n      list2[#list2 + 1] = sublist\n      sublist = {}\n    end\n    last = list1[i]\n    sublist[#sublist + 1] = last\n  end\n  list2[#list2 + 1] = sublist\n  return list2\nend",
    "\tlocal list2 = {}\n\tlocal sublist = {}\n\tlocal last_item = nil\n\tfor _, item in ipairs(list1) do\n\t\tif item == last_item then\n\t\t\ttable.insert(sublist, item)\n\t\telse\n\t\t\tif #sublist > 0 then\n\t\t\t\ttable.insert(list2, sublist)\n\t\t\t\tsublist = {}\n\t\t\tend\n\t\t\ttable.insert(sublist, item)\n\t\tend\n\t\tlast_item = item\n\tend\n\tif #sublist > 0 then\n\t\ttable.insert(list2, sublist)\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    local list3 = {}\n    local i = 1\n    local j = 1\n    local k = 1\n    while i <= #list1 do\n        if list1[i] == list1[i + 1] then\n            list2[j] = list1[i]\n            j = j + 1\n        else\n            list3[k] = list2\n            k = k + 1\n            list2 = {}\n            j = 1\n        end\n        i = i + 1\n    end\n    return list3\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i + 1\n    while j <= #list1 and list1[i] == list1[j] do\n      j = j + 1\n    end\n    table.insert(list2, {list1[i], j - i})\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            table.insert(list2, {v})\n        else\n            table.insert(list2[#list2], v)\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local last_element = nil\n  local last_index = 0\n  for i, v in ipairs(list1) do\n    if v ~= last_element then\n      last_element = v\n      last_index = last_index + 1\n      list2[last_index] = {v}\n    else\n      table.insert(list2[last_index], v)\n    end\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local prev_item = nil\n  for _, item in ipairs(list1) do\n    if item == prev_item then\n      table.insert(sublist, item)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {item}\n    end\n    prev_item = item\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for i, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i + 1\n        while k <= #list1 and list1[k] == list1[i] do\n            k = k + 1\n        end\n        list2[j] = {unpack(list1, i, k - 1)}\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal list3 = {}\n\tlocal i = 1\n\tlocal j = 1\n\twhile i <= #list1 do\n\t\tif list1[i] == list1[i+1] then\n\t\t\tlist2[j] = list1[i]\n\t\t\ti = i + 1\n\t\telse\n\t\t\tlist2[j] = list1[i]\n\t\t\tj = j + 1\n\t\t\tlist3[j] = list2\n\t\t\tlist2 = {}\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn list3\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local prev = nil\n  for i, v in ipairs(list1) do\n    if v ~= prev then\n      list2[#list2 + 1] = {v}\n    else\n      list2[#list2][#list2[#list2] + 1] = v\n    end\n    prev = v\n  end\n  return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element == last_element then\n      table.insert(sublist, element)\n    else\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n      last_element = element\n    end\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local prev = nil\n    for _, v in ipairs(list1) do\n        if v ~= prev then\n            list2[#list2+1] = {v}\n        else\n            list2[#list2][#list2[#list2]+1] = v\n        end\n        prev = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local prev_elem = nil\n  for _, elem in ipairs(list1) do\n    if elem ~= prev_elem then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {elem}\n    else\n      table.insert(sublist, elem)\n    end\n    prev_elem = elem\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i + 1\n    while j <= #list1 and list1[i] == list1[j] do\n      j = j + 1\n    end\n    table.insert(list2, {list1[i], j - i})\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if #sublist == 0 then\n            sublist[1] = list1[i]\n        elseif list1[i] == sublist[1] then\n            sublist[#sublist + 1] = list1[i]\n        else\n            list2[#list2 + 1] = sublist\n            sublist = {list1[i]}\n        end\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        list2[j] = {list1[i]}\n        while list1[i] == list1[i + 1] do\n            table.insert(list2[j], list1[i + 1])\n            i = i + 1\n        end\n        i = i + 1\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= previous_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        previous_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            sublist[#sublist + 1] = list1[i]\n        elseif list1[i] == list1[i - 1] then\n            sublist[#sublist + 1] = list1[i]\n        else\n            list2[#list2 + 1] = sublist\n            sublist = {}\n            sublist[#sublist + 1] = list1[i]\n        end\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local list2_index = 1\n  local list2_subindex = 1\n  local previous_element = nil\n  for _, element in ipairs(list1) do\n    if element ~= previous_element then\n      list2[list2_index] = {}\n      list2_subindex = 1\n      list2_index = list2_index + 1\n    end\n    list2[list2_index - 1][list2_subindex] = element\n    list2_subindex = list2_subindex + 1\n    previous_element = element\n  end\n  return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for _, element in ipairs(list1) do\n    if element ~= last_element then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {element}\n    else\n      table.insert(sublist, element)\n    end\n    last_element = element\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "\tlocal list2 = {}\n\tlocal index = 1\n\tlocal last_element = list1[1]\n\tlist2[index] = {}\n\tfor i, element in ipairs(list1) do\n\t\tif element == last_element then\n\t\t\ttable.insert(list2[index], element)\n\t\telse\n\t\t\tindex = index + 1\n\t\t\tlist2[index] = {}\n\t\t\ttable.insert(list2[index], element)\n\t\tend\n\t\tlast_element = element\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = { element }\n            last_element = element\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i + 1\n        while k <= #list1 and list1[i] == list1[k] do\n            k = k + 1\n        end\n        list2[j] = {}\n        for l = i, k - 1 do\n            list2[j][l - i + 1] = list1[l]\n        end\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal sublist = {}\n\tlocal last_element = nil\n\tfor _, element in ipairs(list1) do\n\t\tif element ~= last_element then\n\t\t\tlist2[#list2 + 1] = sublist\n\t\t\tsublist = {}\n\t\tend\n\t\tsublist[#sublist + 1] = element\n\t\tlast_element = element\n\tend\n\tlist2[#list2 + 1] = sublist\n\treturn list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = { element }\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v == last then\n            table.insert(sublist, v)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n            last = v\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_element = nil\n  for i, v in ipairs(list1) do\n    if v ~= last_element then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {v}\n    else\n      table.insert(sublist, v)\n    end\n    last_element = v\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous_element = nil\n    for _, element in ipairs(list1) do\n        if element == previous_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        end\n        previous_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n            last_element = element\n        else\n            table.insert(sublist, element)\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j-i})\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    local j = 1\n    while i <= #list1 do\n        local k = i\n        while k <= #list1 and list1[i] == list1[k] do\n            k = k + 1\n        end\n        list2[j] = {unpack(list1, i, k - 1)}\n        i = k\n        j = j + 1\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[i] == list1[j] do\n            j = j + 1\n        end\n        table.insert(list2, {list1[i], j - i})\n        i = j\n    end\n    return list2\nend",
    "  local list2 = {}\n  local prev = nil\n  for _, v in ipairs(list1) do\n    if v ~= prev then\n      table.insert(list2, {v})\n    else\n      table.insert(list2[#list2], v)\n    end\n    prev = v\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local previous = nil\n    for _, v in ipairs(list1) do\n        if v ~= previous then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        previous = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local i = 1\n    while i <= #list1 do\n        local j = i + 1\n        while j <= #list1 and list1[j] == list1[i] do\n            j = j + 1\n        end\n        list2[#list2 + 1] = {unpack(list1, i, j - 1)}\n        i = j\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last = nil\n  for _, v in ipairs(list1) do\n    if v ~= last then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {v}\n    else\n      table.insert(sublist, v)\n    end\n    last = v\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element == last_element then\n            table.insert(sublist, element)\n        else\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n            last_element = element\n        end\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local sublist = {}\n  local last_value = nil\n  for _, value in ipairs(list1) do\n    if value ~= last_value then\n      if #sublist > 0 then\n        table.insert(list2, sublist)\n      end\n      sublist = {value}\n    else\n      table.insert(sublist, value)\n    end\n    last_value = value\n  end\n  if #sublist > 0 then\n    table.insert(list2, sublist)\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            table.insert(list2, sublist)\n            sublist = {}\n        end\n        table.insert(sublist, element)\n        last_element = element\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {element}\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last = nil\n    for _, v in ipairs(list1) do\n        if v ~= last then\n            table.insert(list2, sublist)\n            sublist = {}\n        end\n        table.insert(sublist, v)\n        last = v\n    end\n    table.insert(list2, sublist)\n    return list2\nend",
    "    local list2 = {}\n    local j = 1\n    local i = 1\n    while i <= #list1 do\n        local v = list1[i]\n        list2[j] = {v}\n        i = i + 1\n        while i <= #list1 and list1[i] == v do\n            list2[j][#list2[j] + 1] = v\n            i = i + 1\n        end\n        j = j + 1\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal subtable = {}\n\tlocal last_element = nil\n\tfor i, v in ipairs(list1) do\n\t\tif v ~= last_element then\n\t\t\ttable.insert(list2, subtable)\n\t\t\tsubtable = {}\n\t\tend\n\t\ttable.insert(subtable, v)\n\t\tlast_element = v\n\tend\n\ttable.insert(list2, subtable)\n\treturn list2\nend",
    "    local list2 = {}\n    local last = nil\n    for i, v in ipairs(list1) do\n        if v ~= last then\n            list2[#list2 + 1] = {v}\n        else\n            list2[#list2][#list2[#list2] + 1] = v\n        end\n        last = v\n    end\n    return list2\nend",
    "  local list2 = {}\n  local i = 1\n  while i <= #list1 do\n    local j = i + 1\n    while j <= #list1 and list1[j] == list1[i] do\n      j = j + 1\n    end\n    table.insert(list2, {list1[i], j - i})\n    i = j\n  end\n  return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    for i = 1, #list1 do\n        if i == 1 then\n            sublist[1] = list1[i]\n        elseif list1[i] ~= list1[i - 1] then\n            list2[#list2 + 1] = sublist\n            sublist = {}\n            sublist[1] = list1[i]\n        else\n            sublist[#sublist + 1] = list1[i]\n        end\n    end\n    list2[#list2 + 1] = sublist\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local last_element = nil\n    for _, element in ipairs(list1) do\n        if element ~= last_element then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = { element }\n        else\n            table.insert(sublist, element)\n        end\n        last_element = element\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend",
    "    local list2 = {}\n    local sublist = {}\n    local prev = nil\n    for i, v in ipairs(list1) do\n        if v ~= prev then\n            if #sublist > 0 then\n                table.insert(list2, sublist)\n            end\n            sublist = {v}\n        else\n            table.insert(sublist, v)\n        end\n        prev = v\n    end\n    if #sublist > 0 then\n        table.insert(list2, sublist)\n    end\n    return list2\nend"
  ]
}
{
  "name": "mbpp_756_text_match_zero_one",
  "language": "lua",
  "prompt": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a+b*\"\n    return re.match(pattern, text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt34e579s.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpt34e579s.lua:4: in function 'candidate'\n\t/tmp/tmpt34e579s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b+$\"\n    local match = string.match(text, pattern)\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq9jne2jt.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpq9jne2jt.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n\tlocal pattern = \"^a?b+$\"\n\treturn re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj_j9esg9.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpj_j9esg9.lua:4: in function 'candidate'\n\t/tmp/tmpj_j9esg9.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    local result = ngx.re.match(text, pattern, \"jo\")\n    if result then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp88wvtsl5.lua:4: attempt to index global 'ngx' (a nil value)\nstack traceback:\n\t/tmp/tmp88wvtsl5.lua:4: in function 'candidate'\n\t/tmp/tmp88wvtsl5.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmcug84wg.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpmcug84wg.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpurngg50y.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpurngg50y.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a+b*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfjxzy5r7.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpfjxzy5r7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe73pwgcc.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpe73pwgcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8vjw_78.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpk8vjw_78.lua:4: in function 'candidate'\n\t/tmp/tmpk8vjw_78.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b\"\n    local match = string.match(text, pattern)\n    if match then\n        print(\"Match found: \" .. match)\n    else\n        print(\"No match found\")\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "No match found\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxgjvf4wy.lua:15: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpxgjvf4wy.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a+b*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_a426sf.lua:9: expected: false, actual: \"a\"\nstack traceback:\n\t/tmp/tmpr_a426sf.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8p1je39.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpy8p1je39.lua:4: in function 'candidate'\n\t/tmp/tmpy8p1je39.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = '^a?b$'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp47yvhnci.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp47yvhnci.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8vjw_78.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpk8vjw_78.lua:4: in function 'candidate'\n\t/tmp/tmpk8vjw_78.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8p1je39.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpy8p1je39.lua:4: in function 'candidate'\n\t/tmp/tmpy8p1je39.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp739qcg5s.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp739qcg5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21lxm8_9.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp21lxm8_9.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppeouz37g.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmppeouz37g.lua:4: in local 'candidate'\n\t/tmp/tmppeouz37g.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    local result = string.match(text, pattern)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1_h7t1ew.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp1_h7t1ew.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = '^a?b$'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp47yvhnci.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp47yvhnci.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    local match = string.match(text, pattern)\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdcmjkls4.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpdcmjkls4.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = '^a?b?$'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp85f5gwzy.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp85f5gwzy.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"a?b\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2e7sksu1.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp2e7sksu1.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"ab?\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwvtfmx18.lua:9: expected: false, actual: \"a\"\nstack traceback:\n\t/tmp/tmpwvtfmx18.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8vjw_78.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpk8vjw_78.lua:4: in function 'candidate'\n\t/tmp/tmpk8vjw_78.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8p1je39.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpy8p1je39.lua:4: in function 'candidate'\n\t/tmp/tmpy8p1je39.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbu7ju7_x.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpbu7ju7_x.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmcug84wg.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpmcug84wg.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  -- TODO: Implement this function\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0zm5cuql.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp0zm5cuql.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return string.match(text, \"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap3lhxym.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpap3lhxym.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    local match = string.match(text, pattern)\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgjg_a12c.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpgjg_a12c.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpry4oa9y6.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpry4oa9y6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21lxm8_9.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp21lxm8_9.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    local result = string.match(text, pattern)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8zos8a2t.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8zos8a2t.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a+b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp86z3yr_6.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp86z3yr_6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpurngg50y.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpurngg50y.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"a?b\"\n  return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp98hpt2xa.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmp98hpt2xa.lua:4: in local 'candidate'\n\t/tmp/tmp98hpt2xa.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpry4oa9y6.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpry4oa9y6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"ab*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfc1mcke2.lua:9: expected: false, actual: \"a\"\nstack traceback:\n\t/tmp/tmpfc1mcke2.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    local match = string.match(text, pattern)\n    if match then\n        print(\"Found a match!\")\n    else\n        print(\"No match found.\")\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "No match found.\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpep_0t5w0.lua:15: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpep_0t5w0.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8p1je39.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpy8p1je39.lua:4: in function 'candidate'\n\t/tmp/tmpy8p1je39.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  local match = string.match(text, pattern)\n  if match then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw3pgds75.lua:17: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpw3pgds75.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2_5jh1zu.lua:4: attempt to call a nil value (global 'match')\nstack traceback:\n\t/tmp/tmp2_5jh1zu.lua:4: in local 'candidate'\n\t/tmp/tmp2_5jh1zu.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe73pwgcc.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpe73pwgcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp739qcg5s.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp739qcg5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmcug84wg.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpmcug84wg.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b+$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgag59213.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpgag59213.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    local match = string.match(text, pattern)\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd979o3qa.lua:17: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpd979o3qa.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a+b*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_a426sf.lua:9: expected: false, actual: \"a\"\nstack traceback:\n\t/tmp/tmpr_a426sf.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppeouz37g.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmppeouz37g.lua:4: in local 'candidate'\n\t/tmp/tmppeouz37g.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9vr90wkn.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp9vr90wkn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21lxm8_9.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp21lxm8_9.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"a?b\"\n  local match = string.match(text, pattern)\n  return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq0kggaqf.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpq0kggaqf.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a+b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp86z3yr_6.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp86z3yr_6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b?$\"\n  return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi50sganj.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmpi50sganj.lua:4: in local 'candidate'\n\t/tmp/tmpi50sganj.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    local match = string.match(text, pattern)\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgjg_a12c.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpgjg_a12c.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = '^a?b?$'\n    local result = string.match(text, pattern)\n    if result then\n        print('match')\n    else\n        print('not match')\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "not match\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa3mok3_y.lua:15: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpa3mok3_y.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return string.match(text, \"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap3lhxym.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpap3lhxym.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmcug84wg.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpmcug84wg.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = '^a?b?$'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp85f5gwzy.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp85f5gwzy.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    -- body\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg6o538jt.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpg6o538jt.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  local pattern = \"^a?b$\"\n  local result = string.match(text, pattern)\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjq0_kd33.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpjq0_kd33.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    local result = string.match(text, pattern)\n    if result then\n        print(\"Text matches the pattern\")\n    else\n        print(\"Text does not match the pattern\")\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "Text does not match the pattern\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphgez4x2p.lua:15: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmphgez4x2p.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a+b*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_a426sf.lua:9: expected: false, actual: \"a\"\nstack traceback:\n\t/tmp/tmpr_a426sf.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b+$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxqfqs_aj.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpxqfqs_aj.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx9xmh_ct.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmpx9xmh_ct.lua:4: in local 'candidate'\n\t/tmp/tmpx9xmh_ct.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    local result = string.match(text, pattern)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8zos8a2t.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8zos8a2t.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8vjw_78.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpk8vjw_78.lua:4: in function 'candidate'\n\t/tmp/tmpk8vjw_78.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp0pgyqfq.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpp0pgyqfq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy8p1je39.lua:4: attempt to index global 're' (a nil value)\nstack traceback:\n\t/tmp/tmpy8p1je39.lua:4: in function 'candidate'\n\t/tmp/tmpy8p1je39.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a+b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp86z3yr_6.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp86z3yr_6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return string.match(text, \"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap3lhxym.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpap3lhxym.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b+$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpawe25js2.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmpawe25js2.lua:4: in local 'candidate'\n\t/tmp/tmpawe25js2.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9vr90wkn.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp9vr90wkn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b+$\"\n    return re.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpawe25js2.lua:4: attempt to index a nil value (global 're')\nstack traceback:\n\t/tmp/tmpawe25js2.lua:4: in local 'candidate'\n\t/tmp/tmpawe25js2.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = '^a?b?$'\n    local match = text:match(pattern)\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkulepuz.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpjkulepuz.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return string.match(text, \"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7bcnn76j.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp7bcnn76j.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp0pgyqfq.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpp0pgyqfq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp0pgyqfq.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpp0pgyqfq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b+$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxqfqs_aj.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpxqfqs_aj.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b+$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxqfqs_aj.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpxqfqs_aj.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return string.match(text, \"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap3lhxym.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpap3lhxym.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp739qcg5s.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp739qcg5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"a+b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6s0435bw.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6s0435bw.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp78bajgjc.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp78bajgjc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n  return text:match(\"^a?b$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoluxye3a.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpoluxye3a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    -- TODO\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz1clteli.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpz1clteli.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b?$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpybw710uk.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpybw710uk.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    local match = string.match(text, pattern)\n    if match then\n        print(\"Match found\")\n    else\n        print(\"No match found\")\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "No match found\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm1u0yb3a.lua:15: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpm1u0yb3a.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b?$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpybw710uk.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpybw710uk.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcj1jws7o.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcj1jws7o.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp739qcg5s.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp739qcg5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    local match = string.match(text, pattern)\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgjg_a12c.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpgjg_a12c.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprog5lhnh.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmprog5lhnh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21lxm8_9.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp21lxm8_9.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptlq49s30.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptlq49s30.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprog5lhnh.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmprog5lhnh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    local result = string.match(text, pattern)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1_h7t1ew.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp1_h7t1ew.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return string.match(text, \"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap3lhxym.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpap3lhxym.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp739qcg5s.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp739qcg5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx76005_6.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpx76005_6.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b$\"\n    local result = string.match(text, pattern)\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdw4pesxf.lua:11: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpdw4pesxf.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"a?b\"\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp66nauc1k.lua:10: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp66nauc1k.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    local pattern = \"^a?b?$\"\n    local match = string.match(text, pattern)\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123737,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd979o3qa.lua:17: expected: true, actual: false\nstack traceback:\n\t/tmp/tmpd979o3qa.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a+b*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfjxzy5r7.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpfjxzy5r7.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"^a?b+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6eic8cdi.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6eic8cdi.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/luathon-exercises/re/luathon-re-exercise-3.php\nlocal function text_match_zero_one(text)\n    return text:match(\"a?b\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_zero_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abbbba'), true)\n    lu.assertEquals(candidate('dsabbbba'), true)\n    lu.assertEquals(candidate('asbbbba'), false)\n    lu.assertEquals(candidate('abaaa'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027740,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8b2mvo99.lua:9: expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8b2mvo99.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_83_get_Char",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_83_get_Char.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i=1,#strr do\n\t\tsum = sum + string.byte(strr,i)\n\tend\n\treturn string.char(sum%26+65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt1l106oz.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpt1l106oz.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj70xzftq.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpj70xzftq.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw_t76dk3.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpw_t76dk3.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal str = string.lower(strr)\n\tlocal sum = 0\n\tfor i = 1, #str do\n\t\tsum = sum + string.byte(str, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxxcgvwo0.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpxxcgvwo0.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char((sum % 26) + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7mz658eh.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp7mz658eh.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal str = strr:lower()\n\tlocal sum = 0\n\tfor i = 1, #str do\n\t\tsum = sum + string.byte(str, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx0hl833t.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpx0hl833t.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i=1,#strr do\n\t\tsum = sum + string.byte(strr,i)\n\tend\n\treturn string.char(sum%26+97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4z59c26a.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp4z59c26a.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7dfdy3aq.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp7dfdy3aq.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7dfdy3aq.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp7dfdy3aq.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(97 + (sum % 26))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp80f0yiz_.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp80f0yiz_.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9708_5ys.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp9708_5ys.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9708_5ys.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp9708_5ys.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz8zen87z.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpz8zen87z.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9708_5ys.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp9708_5ys.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i,i))\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiqqsjtuy.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpiqqsjtuy.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal str = strr:lower()\n\tlocal sum = 0\n\tfor i = 1, #str do\n\t\tsum = sum + str:byte(i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnppc_xm1.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpnppc_xm1.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw_t76dk3.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpw_t76dk3.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum=0\n\tfor i=1,#strr do\n\t\tsum=sum+string.byte(strr,i)\n\tend\n\treturn string.char(sum%26+97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj8t2o2w2.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpj8t2o2w2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i=1,#strr do\n\t\tsum = sum + string.byte(strr,i)\n\tend\n\treturn string.char(sum%26+97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4z59c26a.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp4z59c26a.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i=1,#strr do\n\t\tsum = sum + string.byte(strr,i)\n\tend\n\treturn string.char(sum%26+65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt1l106oz.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpt1l106oz.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i=1,#strr do\n\t\tsum = sum + string.byte(strr,i)\n\tend\n\treturn string.char(sum%26+97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4z59c26a.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp4z59c26a.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw_t76dk3.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpw_t76dk3.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7dfdy3aq.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp7dfdy3aq.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i,i))\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiqqsjtuy.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpiqqsjtuy.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal str = strr:lower()\n\tlocal sum = 0\n\tfor i = 1, #str do\n\t\tsum = sum + str:byte(i)\n\tend\n\treturn string.char(97 + (sum % 26))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_sjzsyg.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpt_sjzsyg.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr:sub(i, i))\n  end\n  return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpothl2xr2.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpothl2xr2.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i,i))\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8w1u16cm.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp8w1u16cm.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a') - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmx8glprg.lua:13: expected: \"f\"\nactual: \"h\"\nstack traceback:\n\t/tmp/tmpmx8glprg.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a') - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmx8glprg.lua:13: expected: \"f\"\nactual: \"h\"\nstack traceback:\n\t/tmp/tmpmx8glprg.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7dfdy3aq.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp7dfdy3aq.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + strr:byte(i)\n  end\n  return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjgpn6z0t.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpjgpn6z0t.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7dfdy3aq.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp7dfdy3aq.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9708_5ys.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp9708_5ys.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i,i))\n\tend\n\treturn string.char(sum%26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuv1_sa7f.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpuv1_sa7f.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i,i))\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiqqsjtuy.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpiqqsjtuy.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local str = strr:lower()\n    local sum = 0\n    for i = 1, #str do\n        sum = sum + string.byte(str, i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_i3o_g2c.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp_i3o_g2c.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal str = strr:lower()\n\tlocal sum = 0\n\tfor i = 1, #str do\n\t\tsum = sum + str:byte(i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnppc_xm1.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpnppc_xm1.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3xivcphb.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp3xivcphb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i=1,#strr do\n    sum = sum + string.byte(strr,i)\n  end\n  return string.char(sum%26+97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps_6rxdjt.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmps_6rxdjt.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal str = string.lower(strr)\n\tlocal sum = 0\n\tfor i = 1, #str do\n\t\tsum = sum + string.byte(str, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxxcgvwo0.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpxxcgvwo0.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local str = strr:lower()\n    local sum = 0\n    for i = 1, #str do\n        sum = sum + str:byte(i)\n    end\n    return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8_ec87ew.lua:14: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp8_ec87ew.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9708_5ys.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp9708_5ys.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr, i)\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr45iz48m.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpr45iz48m.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i=1,#strr do\n\t\tsum = sum + strr:byte(i)\n\tend\n\treturn string.char(sum%26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp99jm8rlz.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp99jm8rlz.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i, i))\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfr6v9htf.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpfr6v9htf.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr:sub(i, i))\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjeaapkag.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpjeaapkag.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n    local sum = 0\n    for i = 1, #strr do\n        sum = sum + string.byte(strr:sub(i, i))\n    end\n    return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx_j9x_2i.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpx_j9x_2i.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + string.byte('a'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn6_rsa4b.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpn6_rsa4b.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw_t76dk3.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpw_t76dk3.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 97)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qfuhw6r.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp2qfuhw6r.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n  local sum = 0\n  for i = 1, #strr do\n    sum = sum + string.byte(strr, i)\n  end\n  return string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbyjtbza.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmpcbyjtbza.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(sum % 26 + 65)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_mfo2dbb.lua:13: expected: \"f\"\nactual: \"I\"\nstack traceback:\n\t/tmp/tmp_mfo2dbb.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.\nlocal function get_Char(strr)\n\tlocal sum = 0\n\tfor i = 1, #strr do\n\t\tsum = sum + string.byte(strr, i)\n\tend\n\treturn string.char(97 + (sum % 26))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_Char\n    lu.assertEquals(candidate('abc'), 'f')\n    lu.assertEquals(candidate('gfg'), 't')\n    lu.assertEquals(candidate('ab'), 'c')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123802,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpacd25_68.lua:13: expected: \"f\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmpacd25_68.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
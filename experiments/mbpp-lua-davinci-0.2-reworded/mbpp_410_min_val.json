{
  "name": "mbpp_410_min_val",
  "language": "lua",
  "prompt": "-- Write a function to find the minimum value in a given heterogeneous table.\nlocal function min_val(listval)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_410_min_val.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = min_val\n    lu.assertEquals(candidate({'Python', 3, 2, 4, 5, 'version'}), 2)\n    lu.assertEquals(candidate({'Python', 15, 20, 25}), 15)\n    lu.assertEquals(candidate({'Python', 30, 20, 40, 50, 'version'}), 20)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif type(listval[i]) == \"number\" then\n\t\t\tif listval[i] < min then\n\t\t\t\tmin = listval[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if type(listval[i]) == 'number' then\n      if listval[i] < min then\n        min = listval[i]\n      end\n    end\n  end\n  return min\nend",
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif type(listval[i]) == \"number\" then\n\t\t\tif listval[i] < min then\n\t\t\t\tmin = listval[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if listval[i] < min then\n      min = listval[i]\n    end\n  end\n  return min\nend",
    "    local min = listval[1]\n    for i=2, #listval do\n        if listval[i] < min then\n            min = listval[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif type(listval[i]) == \"number\" then\n\t\t\tif listval[i] < min then\n\t\t\t\tmin = listval[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = listval[1]\n  for i,v in ipairs(listval) do\n    if type(v) == \"number\" and v < min then\n      min = v\n    end\n  end\n  return min\nend",
    "    local min = listval[1]\n    for i = 2, #listval do\n        if type(listval[i]) == 'number' then\n            if listval[i] < min then\n                min = listval[i]\n            end\n        end\n    end\n    return min\nend",
    "  local min = listval[1]\n  for i=2,#listval do\n    if listval[i] < min then\n      min = listval[i]\n    end\n  end\n  return min\nend",
    "    local min = listval[1]\n    for i = 2, #listval do\n        if type(listval[i]) == \"number\" then\n            if listval[i] < min then\n                min = listval[i]\n            end\n        end\n    end\n    return min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if listval[i] < min then\n      min = listval[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif listval[i] < min then\n\t\t\tmin = listval[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif type(listval[i]) == \"number\" and listval[i] < min then\n\t\t\tmin = listval[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = listval[1]\n    for i = 2, #listval do\n        if type(listval[i]) == \"number\" and listval[i] < min then\n            min = listval[i]\n        end\n    end\n    return min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if type(listval[i]) == \"number\" then\n      if listval[i] < min then\n        min = listval[i]\n      end\n    end\n  end\n  return min\nend",
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif type(listval[i]) == \"number\" then\n\t\t\tif listval[i] < min then\n\t\t\t\tmin = listval[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if type(min) == 'number' and type(listval[i]) == 'number' then\n      if min > listval[i] then\n        min = listval[i]\n      end\n    elseif type(min) == 'string' and type(listval[i]) == 'string' then\n      if min > listval[i] then\n        min = listval[i]\n      end\n    elseif type(min) == 'boolean' and type(listval[i]) == 'boolean' then\n      if min == true and listval[i] == false then\n        min = listval[i]\n      end\n    end\n  end\n  return min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if type(listval[i]) == \"number\" then\n      if listval[i] < min then\n        min = listval[i]\n      end\n    end\n  end\n  return min\nend",
    "\tlocal min = listval[1]\n\tfor i = 2, #listval do\n\t\tif type(listval[i]) == \"number\" then\n\t\t\tif listval[i] < min then\n\t\t\t\tmin = listval[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = listval[1]\n  for i = 2, #listval do\n    if listval[i] < min then\n      min = listval[i]\n    end\n  end\n  return min\nend"
  ]
}
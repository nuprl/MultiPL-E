{
  "name": "mbpp_299_max_aggregate",
  "language": "lua",
  "prompt": "-- Write a function to calculate the maximum aggregate from the table of tables.\nlocal function max_aggregate(stdata)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_aggregate\n    lu.assertEquals(candidate({{'Juan Whelan', 90}, {'Sabah Colley', 88}, {'Peter Nichols', 7}, {'Juan Whelan', 122}, {'Sabah Colley', 84}}), {'Juan Whelan', 212})\n    lu.assertEquals(candidate({{'Juan Whelan', 50}, {'Sabah Colley', 48}, {'Peter Nichols', 37}, {'Juan Whelan', 22}, {'Sabah Colley', 14}}), {'Juan Whelan', 72})\n    lu.assertEquals(candidate({{'Juan Whelan', 10}, {'Sabah Colley', 20}, {'Peter Nichols', 30}, {'Juan Whelan', 40}, {'Sabah Colley', 50}}), {'Sabah Colley', 70})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal max = 0\n\tfor _, t in ipairs(stdata) do\n\t\tlocal agg = 0\n\t\tfor _, v in ipairs(t) do\n\t\t\tagg = agg + v\n\t\tend\n\t\tif agg > max then\n\t\t\tmax = agg\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, v in pairs(stdata) do\n        if v.aggregate > max then\n            max = v.aggregate\n        end\n    end\n    return max\nend",
    "  local max = 0\n  for _, t in pairs(stdata) do\n    for _, v in pairs(t) do\n      if v > max then max = v end\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for _, t in ipairs(stdata) do\n        for _, v in ipairs(t) do\n            if v > max then\n                max = v\n            end\n        end\n    end\n    return max\nend",
    "    local max_aggregate = 0\n    for i, v in ipairs(stdata) do\n        local aggregate = 0\n        for j, w in ipairs(v) do\n            aggregate = aggregate + w\n        end\n        if aggregate > max_aggregate then\n            max_aggregate = aggregate\n        end\n    end\n    return max_aggregate\nend",
    "    local max_aggregate = 0\n    for _, t in ipairs(stdata) do\n        local aggregate = 0\n        for _, v in ipairs(t) do\n            aggregate = aggregate + v\n        end\n        max_aggregate = math.max(max_aggregate, aggregate)\n    end\n    return max_aggregate\nend",
    "    local max_aggregate = 0\n    for _, v in pairs(stdata) do\n        local aggregate = v.aggregate\n        if aggregate > max_aggregate then\n            max_aggregate = aggregate\n        end\n    end\n    return max_aggregate\nend",
    "\tlocal max_aggregate = 0\n\tfor _, table in pairs(stdata) do\n\t\tlocal aggregate = 0\n\t\tfor _, value in pairs(table) do\n\t\t\taggregate = aggregate + value\n\t\tend\n\t\tif aggregate > max_aggregate then\n\t\t\tmax_aggregate = aggregate\n\t\tend\n\tend\n\treturn max_aggregate\nend",
    "\tlocal max = 0\n\tfor _, v in pairs(stdata) do\n\t\tif v.aggregate > max then\n\t\t\tmax = v.aggregate\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, v in pairs(stdata) do\n        local agg = v.aggregate\n        if agg > max then max = agg end\n    end\n    return max\nend",
    "    local max = 0\n    for i,v in ipairs(stdata) do\n        local agg = aggregate(v)\n        if agg > max then\n            max = agg\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for _, t in pairs(stdata) do\n        for _, v in pairs(t) do\n            if v > max then\n                max = v\n            end\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for _, v in ipairs(stdata) do\n        local agg = v.aggregate\n        if agg > max then\n            max = agg\n        end\n    end\n    return max\nend",
    "    local max = 0\n    for _, v in pairs(stdata) do\n        if v.aggregate > max then\n            max = v.aggregate\n        end\n    end\n    return max\nend",
    "    local max_aggregate = 0\n    for _, table in pairs(stdata) do\n        local aggregate = table.aggregate\n        if aggregate > max_aggregate then\n            max_aggregate = aggregate\n        end\n    end\n    return max_aggregate\nend",
    "\tlocal max = 0\n\tfor _, v in pairs(stdata) do\n\t\tfor _, v2 in pairs(v) do\n\t\t\tif v2 > max then\n\t\t\t\tmax = v2\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_aggregate = 0\n    for _, v in ipairs(stdata) do\n        local aggregate = 0\n        for _, v2 in ipairs(v) do\n            aggregate = aggregate + v2\n        end\n        if aggregate > max_aggregate then\n            max_aggregate = aggregate\n        end\n    end\n    return max_aggregate\nend",
    "    local max_aggregate = 0\n    for _, v in pairs(stdata) do\n        local aggregate = v.aggregate\n        if aggregate > max_aggregate then\n            max_aggregate = aggregate\n        end\n    end\n    return max_aggregate\nend",
    "    local max = 0\n    for _, t in ipairs(stdata) do\n        for _, v in ipairs(t) do\n            if v > max then\n                max = v\n            end\n        end\n    end\n    return max\nend",
    "    local max_aggregate = 0\n    for _, v in pairs(stdata) do\n        local aggregate = 0\n        for _, v2 in pairs(v) do\n            aggregate = aggregate + v2\n        end\n        if aggregate > max_aggregate then\n            max_aggregate = aggregate\n        end\n    end\n    return max_aggregate\nend"
  ]
}
{
  "name": "mbpp_166_find_even_pair",
  "language": "lua",
  "prompt": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local even_count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        even_count = even_count + 1\n      end\n    end\n  end\n  return even_count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
    "    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend",
    "  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend"
  ]
}
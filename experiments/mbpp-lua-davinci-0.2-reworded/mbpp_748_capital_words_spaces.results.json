{
  "name": "mbpp_748_capital_words_spaces",
  "language": "lua",
  "prompt": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\treturn str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7o7gu5io.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp7o7gu5io.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            str2 = str2 .. \" \" .. char\n        else\n            str2 = str2 .. char\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptmo217sp.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmptmo217sp.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            if i > 1 then\n                str2 = str2 .. \" \"\n            end\n        end\n        str2 = str2 .. char\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  local str2 = str1:gsub(\"%u%l+\", \" %1\")\n  return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl11myfh2.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpl11myfh2.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if i == 1 then\n            str2 = str2 .. c\n        else\n            local prev = str1:sub(i - 1, i - 1)\n            if prev:find(\"%a\") and c == c:upper() then\n                str2 = str2 .. \" \" .. c\n            else\n                str2 = str2 .. c\n            end\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (string.gsub(str1, \"(%a)([%u])\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i,i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkteorxad.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpkteorxad.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    str1 = str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\n    return str1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprqw0ds8u.lua:10: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmprqw0ds8u.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = str1:gsub(\"(%u%l+)\", \" %1\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25glk4ao.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp25glk4ao.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprphrpwgo.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmprphrpwgo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. str1:sub(i, i)\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            if str1:sub(i-1, i-1):match(\"%u\") or str1:sub(i-1, i-1):match(\"%s\") then\n                str2 = str2 .. str1:sub(i, i)\n            else\n                str2 = str2 .. \" \" .. str1:sub(i, i)\n            end\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbofyqvu2.lua:21: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpbofyqvu2.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and not str1:sub(i - 1, i - 1):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i):match(\"%u\") and str1:sub(i-1, i-1):match(\"%l\") then\n\t\t\tstr2 = str2 .. \" \"\n\t\tend\n\t\tstr2 = str2 .. str1:sub(i, i)\n\tend\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = str1:gsub(\"%u%l+\", \" %1\")\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4wtiwxgw.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp4wtiwxgw.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (string.gsub(str1, \"(%a)([%u])\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev_is_capital = false\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            if prev_is_capital then\n                str2 = str2 .. c\n            else\n                str2 = str2 .. \" \" .. c\n            end\n            prev_is_capital = true\n        else\n            str2 = str2 .. c\n            prev_is_capital = false\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2kg05uv9.lua:25: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp2kg05uv9.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. string.sub(str1, i, i)\n        else\n            if string.match(string.sub(str1, i, i), \"%u\") and not string.match(string.sub(str1, i - 1, i - 1), \"%u\") then\n                str2 = str2 .. \" \" .. string.sub(str1, i, i)\n            else\n                str2 = str2 .. string.sub(str1, i, i)\n            end\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev_char = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if prev_char == \"\" then\n            str2 = str2 .. char\n        elseif prev_char:match(\"%a\") and char:match(\"%u\") then\n            str2 = str2 .. \" \" .. char\n        else\n            str2 = str2 .. char\n        end\n        prev_char = char\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local i = 1\n    while i <= #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") and i > 1 then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n        i = i + 1\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptik9zrkw.lua:10: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmptik9zrkw.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprphrpwgo.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmprphrpwgo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local str3 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    for i = 1, #str2 do\n        if str2:sub(i, i) == \" \" and str2:sub(i + 1, i + 1) == \" \" then\n            str3 = str3\n        else\n            str3 = str3 .. str2:sub(i, i)\n        end\n    end\n    return str3:sub(2, #str3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u%l+)\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2gw3vjrc.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp2gw3vjrc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return string.gsub(str1, \"(%u%l+)\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy9tv2qbk.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpy9tv2qbk.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa9obcqbk.lua:10: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpa9obcqbk.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    str1 = str1:gsub(\"%u%l+\", \" %1\")\n    return str1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1rs8dv7u.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1rs8dv7u.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = string.gsub(str1, \"(%a)([A-Z])\", \"%1 %2\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i):match(\"%u\") then\n\t\t\tstr2 = str2 .. \" \" .. str1:sub(i, i)\n\t\telse\n\t\t\tstr2 = str2 .. str1:sub(i, i)\n\t\tend\n\tend\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnfhb_fuq.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnfhb_fuq.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev_char = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") and prev_char:match(\"%l\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. char\n        prev_char = char\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            if i > 1 then\n                str2 = str2 .. \" \"\n            end\n        end\n        str2 = str2 .. c\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = string.gsub(str1, \"(%a)([A-Z])\", \"%1 %2\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev_char = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if prev_char:match(\"%a\") and char:match(\"%u\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. char\n        prev_char = char\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):find(\"%u\") and str1:sub(i - 1, i - 1):find(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"[A-Z]\") then\n            str2 = str2 .. \" \" .. char\n        else\n            str2 = str2 .. char\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpey35zgcz.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpey35zgcz.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            if i == 1 then\n                str2 = str2 .. str1:sub(i, i)\n            else\n                str2 = str2 .. \" \" .. str1:sub(i, i)\n            end\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  local str2 = \"\"\n  for i = 1, #str1 do\n    local c = str1:sub(i, i)\n    if i > 1 and c:match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n      str2 = str2 .. \" \"\n    end\n    str2 = str2 .. c\n  end\n  return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (string.gsub(str1, \"(%a)([%u%w]*)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2p_zsu11.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp2p_zsu11.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") and i > 1 then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprphrpwgo.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmprphrpwgo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprphrpwgo.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmprphrpwgo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_61h439l.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp_61h439l.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"([%u][%l]*)\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5zpamwja.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp5zpamwja.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprphrpwgo.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmprphrpwgo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfmy2yhf.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmphfmy2yhf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfmy2yhf.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmphfmy2yhf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local i = 1\n    while i <= #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n        i = i + 1\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptn8vbd0e.lua:20: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmptn8vbd0e.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            if i ~= 1 then\n                str2 = str2 .. \" \"\n            end\n        end\n        str2 = str2 .. str1:sub(i, i)\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return (str1:gsub(\"(%u%l+)\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps3se2sjr.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmps3se2sjr.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \"%1 \")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnp0s8uu6.lua:9: expected: \"Python\"\nactual: \"Python \"\nstack traceback:\n\t/tmp/tmpnp0s8uu6.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u%l+)\", \" %1\"):sub(2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = str1:gsub(\"%u%l+\", \" %1\")\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4wtiwxgw.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp4wtiwxgw.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = str1:gsub(\"%u%l+\", \" %1\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoe7terg4.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpoe7terg4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return string.gsub(str1, \"(%a)([%u])\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfmy2yhf.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmphfmy2yhf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        else\n            if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n                str2 = str2 .. \" \" .. str1:sub(i, i)\n            else\n                str2 = str2 .. str1:sub(i, i)\n            end\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"([A-Z])\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2bluws49.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp2bluws49.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = str1:gsub(\"%u%l+\", \" %1\")\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4wtiwxgw.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp4wtiwxgw.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\treturn (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_hhu1mtb.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp_hhu1mtb.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local last_char = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") and last_char:match(\"%l\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. char\n        last_char = char\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = str1:gsub(\"([A-Z])\", \" %1\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiqsoz26_.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpiqsoz26_.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i,i)\n        if c:match(\"%u\") then\n            if i > 1 then\n                str2 = str2 .. \" \"\n            end\n        end\n        str2 = str2 .. c\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfmy2yhf.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmphfmy2yhf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfmy2yhf.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmphfmy2yhf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%a\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tlocal char = str1:sub(i, i)\n\t\tif char:match(\"%u\") and i > 1 and str1:sub(i - 1, i - 1):match(\"%l\") then\n\t\t\tstr2 = str2 .. \" \"\n\t\tend\n\t\tstr2 = str2 .. char\n\tend\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = ''\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match('%u') then\n            str2 = str2 .. ' ' .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyt908ifl.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyt908ifl.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"%u%l+\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprphrpwgo.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmprphrpwgo.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = \"\"\n\tlocal prev = \"\"\n\tfor i = 1, #str1 do\n\t\tlocal c = str1:sub(i, i)\n\t\tif c:match(\"%u\") and prev:match(\"%l\") then\n\t\t\tstr2 = str2 .. \" \"\n\t\tend\n\t\tstr2 = str2 .. c\n\t\tprev = c\n\tend\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev_char_is_capital = false\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            if prev_char_is_capital then\n                str2 = str2 .. \" \" .. char\n            else\n                str2 = str2 .. char\n            end\n            prev_char_is_capital = true\n        else\n            str2 = str2 .. char\n            prev_char_is_capital = false\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuohur_ps.lua:26: expected: \"Python Programming Examples\"\nactual: \"PythonProgrammingExamples\"\nstack traceback:\n\t/tmp/tmpuohur_ps.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i,i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkteorxad.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpkteorxad.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u)(%l+)\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ux06r8i.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmp8ux06r8i.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = str1:gsub(\"%u%l+\", \" %1\")\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoe7terg4.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpoe7terg4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if prev:match(\"%a\") and c:match(\"%u\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. c\n        prev = c\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        elseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%a)([%u%d])\", \"%1 %2\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u%l+)\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0je6trl.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpk0je6trl.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. \" \" .. c\n        else\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfmy2yhf.lua:18: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmphfmy2yhf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"(%a)(%u)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            str2 = str2 .. \" \" .. char\n        else\n            str2 = str2 .. char\n        end\n    end\n    return str2:sub(2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return (str1:gsub(\"(%u%l+)\", \" %1\"))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0je6trl.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpk0je6trl.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tlocal c = str1:sub(i, i)\n\t\tif i > 1 and c:match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n\t\t\tstr2 = str2 .. \" \"\n\t\tend\n\t\tstr2 = str2 .. c\n\tend\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%a)(%u)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr9r00eu.lua:17: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpnr9r00eu.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tif i == 1 then\n\t\t\tstr2 = str2 .. str1:sub(i, i)\n\t\telseif str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n\t\t\tstr2 = str2 .. \" \" .. str1:sub(i, i)\n\t\telse\n\t\t\tstr2 = str2 .. str1:sub(i, i)\n\t\tend\n\tend\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        local ch = str1:sub(i, i)\n        if i > 1 and ch:match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \"\n        end\n        str2 = str2 .. ch\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return string.gsub(str1, \"(%a)([%u])\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local last_char = \"\"\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") and not last_char:match(\"%u\") then\n            str2 = str2 .. \" \" .. char\n        else\n            str2 = str2 .. char\n        end\n        last_char = char\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp96sltmkv.lua:20: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp96sltmkv.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\treturn str1:gsub(\"(%u%l+)\", \" %1\")\nend\nprint(capital_words_spaces(\"ThisIsAString\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": " This IsA String\t3\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp23koys1v.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp23koys1v.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if i == 1 then\n            str2 = str2 .. str1:sub(i, i)\n        else\n            if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n                str2 = str2 .. \" \" .. str1:sub(i, i)\n            else\n                str2 = str2 .. str1:sub(i, i)\n            end\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return string.gsub(str1, \"(%a)([A-Z])\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for word in string.gmatch(str1, \"%u%l+\") do\n        str2 = str2 .. \" \" .. word\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjxrizbjf.lua:13: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpjxrizbjf.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") then\n            if i > 1 then\n                str2 = str2 .. \" \"\n            end\n        end\n        str2 = str2 .. str1:sub(i, i)\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n\tlocal str2 = str1:gsub(\"%u%l+\", \" %1\")\n\treturn str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4wtiwxgw.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp4wtiwxgw.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pk9_cmx.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1pk9_cmx.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n  return str1:gsub(\"(%u%l+)\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwrlmep9f.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpwrlmep9f.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    str1 = str1:gsub(\"%u%l+\", \" %1\")\n    return str1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1rs8dv7u.lua:10: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmp1rs8dv7u.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    local prev_is_capital = false\n    for i = 1, #str1 do\n        local char = str1:sub(i, i)\n        if char:match(\"%u\") then\n            if prev_is_capital then\n                str2 = str2 .. \" \" .. char\n            else\n                str2 = str2 .. char\n            end\n            prev_is_capital = true\n        else\n            str2 = str2 .. char\n            prev_is_capital = false\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0h00v5lv.lua:26: expected: \"Python Programming Examples\"\nactual: \"PythonProgrammingExamples\"\nstack traceback:\n\t/tmp/tmp0h00v5lv.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    local str2 = \"\"\n    for i = 1, #str1 do\n        if str1:sub(i, i):match(\"%u\") and str1:sub(i - 1, i - 1):match(\"%l\") then\n            str2 = str2 .. \" \" .. str1:sub(i, i)\n        else\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123054,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"(%u)(%l+)\", \"%1 %2\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxn2s_5c.lua:9: expected: \"Python\"\nactual: \"P ython\"\nstack traceback:\n\t/tmp/tmpoxn2s_5c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to put spaces between words starting with capital letters in a given string.\nlocal function capital_words_spaces(str1)\n    return str1:gsub(\"%u%l+\", \" %1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = capital_words_spaces\n    lu.assertEquals(candidate('Python'), 'Python')\n    lu.assertEquals(candidate('PythonProgrammingExamples'), 'Python Programming Examples')\n    lu.assertEquals(candidate('GetReadyToBeCodingFreak'), 'Get Ready To Be Coding Freak')\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027738,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyc8mprz8.lua:9: expected: \"Python\"\nactual: \" Python\"\nstack traceback:\n\t/tmp/tmpyc8mprz8.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
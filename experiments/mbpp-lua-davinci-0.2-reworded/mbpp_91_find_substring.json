{
  "name": "mbpp_91_find_substring",
  "language": "lua",
  "prompt": "-- Write a function to check if a string is present as a substring in a given table of string values.\nlocal function find_substring(str1, sub_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_substring\n    lu.assertEquals(candidate({'red', 'black', 'white', 'green', 'orange'}, 'ack'), true)\n    lu.assertEquals(candidate({'red', 'black', 'white', 'green', 'orange'}, 'abc'), false)\n    lu.assertEquals(candidate({'red', 'black', 'white', 'green', 'orange'}, 'ange'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tif not str1 or not sub_str then return false end\n\tlocal str1_len = #str1\n\tlocal sub_str_len = #sub_str\n\tif sub_str_len > str1_len then return false end\n\tfor i = 1, str1_len - sub_str_len + 1 do\n\t\tif string.sub(str1, i, i + sub_str_len - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local str_len = #str1\n    local sub_str_len = #sub_str\n    local found = false\n    for i = 1, str_len - sub_str_len + 1 do\n        if str1:sub(i, i + sub_str_len - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i=1, #str1 do\n        if string.sub(str1, i, i+#sub_str-1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "  local found = false\n  for i, str2 in ipairs(sub_str) do\n    if str1:find(str2) then\n      found = true\n      break\n    end\n  end\n  return found\nend",
    "    for _, str2 in ipairs(str1) do\n        if string.find(str2, sub_str) then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i=1, #str1 do\n        local j = i\n        local k = 1\n        while str1:sub(j, j) == sub_str:sub(k, k) do\n            j = j + 1\n            k = k + 1\n            if k > #sub_str then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    if type(str1) ~= \"string\" or type(sub_str) ~= \"string\" then\n        return false\n    end",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    local i = 1\n    local j = 1\n    local k = 1\n    while i <= #str1 and j <= #sub_str do\n        if str1[i] == sub_str[j] then\n            i = i + 1\n            j = j + 1\n        else\n            j = 1\n            k = k + 1\n            i = k\n        end\n    end\n    if j > #sub_str then\n        return true\n    else\n        return false\n    end\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        local j = 1\n        while j <= #sub_str and string.sub(str1, i, i + j - 1) == string.sub(sub_str, j, j) do\n            j = j + 1\n        end\n        if j > #sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tlocal found = false\n\tfor _, str2 in pairs(str1) do\n\t\tif string.find(str2, sub_str) then\n\t\t\tfound = true\n\t\t\tbreak\n\t\tend\n\tend\n\treturn found\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        local j = 1\n        while j <= #sub_str and str1:byte(i + j - 1) == sub_str:byte(j) do\n            j = j + 1\n        end\n        if j > #sub_str then return true end\n    end\n    return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    if str1 == nil or sub_str == nil then\n        return false\n    end\n    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "  for i = 1, #str1 do\n    if str1:sub(i, i + #sub_str - 1) == sub_str then\n      return true\n    end\n  end\n  return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tlocal str1_len = string.len(str1)\n\tlocal sub_str_len = string.len(sub_str)\n\tlocal i = 1\n\tlocal j = 1\n\twhile i <= str1_len and j <= sub_str_len do\n\t\tif str1:sub(i,i) == sub_str:sub(j,j) then\n\t\t\ti = i + 1\n\t\t\tj = j + 1\n\t\telse\n\t\t\ti = i - j + 2\n\t\t\tj = 1\n\t\tend\n\tend\n\tif j > sub_str_len then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local str1_len = string.len(str1)\n    local sub_str_len = string.len(sub_str)\n    local i = 1\n    local j = 1\n    while i <= str1_len and j <= sub_str_len do\n        if str1[i] == sub_str[j] then\n            i = i + 1\n            j = j + 1\n        else\n            i = i - j + 2\n            j = 1\n        end\n    end\n    if j > sub_str_len then\n        return true\n    else\n        return false\n    end\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i, str2 in ipairs(sub_str) do\n\t\tif string.find(str1, str2) then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    local str1_len = #str1\n    local sub_str_len = #sub_str\n    local i = 1\n    local j = 1\n    while i <= str1_len and j <= sub_str_len do\n        if str1:sub(i, i) == sub_str:sub(j, j) then\n            i = i + 1\n            j = j + 1\n        else\n            i = i - j + 2\n            j = 1\n        end\n    end\n    if j > sub_str_len then\n        return true\n    else\n        return false\n    end\nend",
    "    local str1_len = string.len(str1)\n    local sub_str_len = string.len(sub_str)\n    if sub_str_len > str1_len then\n        return false\n    end\n    for i = 1, str1_len - sub_str_len + 1 do\n        if string.sub(str1, i, i + sub_str_len - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tlocal found = false\n\tfor i, str2 in ipairs(sub_str) do\n\t\tif string.find(str1, str2) then\n\t\t\tfound = true\n\t\t\tbreak\n\t\tend\n\tend\n\treturn found\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    if type(str1) ~= \"string\" or type(sub_str) ~= \"string\" then\n        return false\n    end\n    return string.find(str1, sub_str) ~= nil\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        local j = 1\n        while j <= #sub_str and str1:sub(i + j - 1, i + j - 1) == sub_str:sub(j, j) do\n            j = j + 1\n        end\n        if j > #sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        local match = true\n        for j = 1, #sub_str do\n            if str1:sub(i + j - 1, i + j - 1) ~= sub_str:sub(j, j) then\n                match = false\n                break\n            end\n        end\n        if match then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in ipairs(sub_str) do\n        if str1:find(str2) then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in pairs(str1) do\n        if string.find(str2, sub_str) then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tif string.find(str1, sub_str) then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    if str1 == nil or sub_str == nil then\n        return false\n    end\n    local str1_len = string.len(str1)\n    local sub_str_len = string.len(sub_str)\n    if str1_len < sub_str_len then\n        return false\n    end\n    for i = 1, str1_len - sub_str_len + 1 do\n        if string.sub(str1, i, i + sub_str_len - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local str1_len = string.len(str1)\n    local sub_str_len = string.len(sub_str)\n    local i = 1\n    local j = 1\n    while i <= str1_len and j <= sub_str_len do\n        if str1[i] == sub_str[j] then\n            i = i + 1\n            j = j + 1\n        else\n            i = i - j + 2\n            j = 1\n        end\n    end\n    if j > sub_str_len then\n        return true\n    else\n        return false\n    end\nend",
    "\tfor i=1, #str1 do\n\t\tif string.sub(str1, i, i+#sub_str-1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) ~= nil then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        local j = 1\n        while j <= #sub_str and str1[i + j - 1] == sub_str[j] do\n            j = j + 1\n        end\n        if j > #sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "  for i = 1, #str1 - #sub_str + 1 do\n    if str1:sub(i, i + #sub_str - 1) == sub_str then\n      return true\n    end\n  end\n  return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        local j = i\n        local k = 1\n        while str1:sub(j, j) == sub_str:sub(k, k) do\n            k = k + 1\n            j = j + 1\n            if k > #sub_str then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  local str1_len = #str1\n  local sub_str_len = #sub_str\n  local i = 1\n  local j = 1\n  while i <= str1_len and j <= sub_str_len do\n    if str1:sub(i, i) == sub_str:sub(j, j) then\n      i = i + 1\n      j = j + 1\n    else\n      i = i - j + 2\n      j = 1\n    end\n  end\n  if j > sub_str_len then\n    return true\n  else\n    return false\n  end\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "  for i = 1, #str1 do\n    if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n      return true\n    end\n  end\n  return false\nend",
    "    local found = false\n    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "  if type(str1) ~= \"string\" or type(sub_str) ~= \"string\" then\n    return false\n  end\n  return string.find(str1, sub_str) ~= nil\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "  local str1_len = string.len(str1)\n  local sub_str_len = string.len(sub_str)\n  local found = false\n  for i = 1, str1_len do\n    if string.sub(str1, i, i + sub_str_len - 1) == sub_str then\n      found = true\n      break\n    end\n  end\n  return found\nend",
    "    for i = 1, #str1 do\n        local j = i\n        local k = 1\n        while str1:sub(j, j) == sub_str:sub(k, k) do\n            j = j + 1\n            k = k + 1\n            if k > #sub_str then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    if not str1 or not sub_str then\n        return false\n    end\n    local len1 = #str1\n    local len2 = #sub_str\n    if len1 < len2 then\n        return false\n    end\n    for i = 1, len1 - len2 + 1 do\n        if string.sub(str1, i, i + len2 - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    if str1 == nil or sub_str == nil then\n        return false\n    end\n    local str1_len = string.len(str1)\n    local sub_str_len = string.len(sub_str)\n    if sub_str_len > str1_len then\n        return false\n    end\n    for i = 1, str1_len do\n        if string.sub(str1, i, i + sub_str_len - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i=1, #str1 do\n\t\tif string.sub(str1, i, i+#sub_str-1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        local j = 1\n        while j <= #sub_str and str1:sub(i + j - 1, i + j - 1) == sub_str:sub(j, j) do\n            j = j + 1\n        end\n        if j > #sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tlocal found = false\n\tfor i, str2 in ipairs(sub_str) do\n\t\tif string.find(str1, str2) then\n\t\t\tfound = true\n\t\t\tbreak\n\t\tend\n\tend\n\treturn found\nend",
    "    if not str1 or not sub_str then\n        return false\n    end\n    return string.find(str1, sub_str)\nend",
    "  for i = 1, #str1 do\n    if str1:sub(i, i + #sub_str - 1) == sub_str then\n      return true\n    end\n  end\n  return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    if type(str1) ~= \"string\" or type(sub_str) ~= \"string\" then\n        return false\n    end\n    return string.find(str1, sub_str) ~= nil\nend",
    "    for i = 1, #str1 do\n        local j = 1\n        while j <= #sub_str and string.sub(str1, i, i + j - 1) == string.sub(sub_str, j, j) do\n            j = j + 1\n        end\n        if j == #sub_str + 1 then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local str_len = string.len(str1)\n    local sub_str_len = string.len(sub_str)\n    local i = 1\n    local j = 1\n    local found = false\n    while i <= str_len and j <= sub_str_len do\n        if str1[i] == sub_str[j] then\n            i = i + 1\n            j = j + 1\n        else\n            i = i - j + 2\n            j = 1\n        end\n        if j > sub_str_len then\n            found = true\n        end\n    end\n    return found\nend",
    "  for i = 1, #str1 do\n    local j = i\n    local k = 1\n    while str1[j] == sub_str[k] do\n      j = j + 1\n      k = k + 1\n      if k > #sub_str then\n        return true\n      end\n    end\n  end\n  return false\nend",
    "    if str1 == nil or sub_str == nil then\n        return false\n    end",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    if str1 == nil or sub_str == nil then\n        return false\n    end\n    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            return true\n        end\n    end\n    return false\nend",
    "\tlocal found = false\n\tfor i, str2 in ipairs(sub_str) do\n\t\tif str1:find(str2) then\n\t\t\tfound = true\n\t\t\tbreak\n\t\tend\n\tend\n\treturn found\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "  for i = 1, #str1 - #sub_str + 1 do\n    if str1:sub(i, i + #sub_str - 1) == sub_str then\n      return true\n    end\n  end\n  return false\nend",
    "\tlocal found = false\n\tfor i, str2 in ipairs(sub_str) do\n\t\tif str1:find(str2) then\n\t\t\tfound = true\n\t\t\tbreak\n\t\tend\n\tend\n\treturn found\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        local j = 1\n        while j <= #sub_str and str1:sub(i + j - 1, i + j - 1) == sub_str:sub(j, j) do\n            j = j + 1\n        end\n        if j > #sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend"
  ]
}
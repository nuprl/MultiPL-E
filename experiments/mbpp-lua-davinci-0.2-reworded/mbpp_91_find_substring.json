{
  "name": "mbpp_91_find_substring",
  "language": "lua",
  "prompt": "-- Write a function to check if a string is present as a substring in a given table of string values.\nlocal function find_substring(str1, sub_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_substring\n    lu.assertEquals(candidate({'red', 'black', 'white', 'green', 'orange'}, 'ack'), true)\n    lu.assertEquals(candidate({'red', 'black', 'white', 'green', 'orange'}, 'abc'), false)\n    lu.assertEquals(candidate({'red', 'black', 'white', 'green', 'orange'}, 'ange'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tif not str1 or not sub_str then return false end\n\tlocal str1_len = #str1\n\tlocal sub_str_len = #sub_str\n\tif sub_str_len > str1_len then return false end\n\tfor i = 1, str1_len - sub_str_len + 1 do\n\t\tif string.sub(str1, i, i + sub_str_len - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    local str_len = #str1\n    local sub_str_len = #sub_str\n    local found = false\n    for i = 1, str_len - sub_str_len + 1 do\n        if str1:sub(i, i + sub_str_len - 1) == sub_str then\n            found = true\n            break\n        end\n    end\n    return found\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, str2 in ipairs(sub_str) do\n        if string.find(str1, str2) then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 - #sub_str + 1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif str1:sub(i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #str1 do\n        if str1:sub(i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "\tfor i = 1, #str1 do\n\t\tif string.sub(str1, i, i + #sub_str - 1) == sub_str then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i=1, #str1 do\n        if string.sub(str1, i, i+#sub_str-1) == sub_str then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #str1 do\n        if string.sub(str1, i, i + #sub_str - 1) == sub_str then\n            return true\n        end\n    end\n    return false\nend"
  ]
}
{
  "name": "mbpp_411_snake_to_camel",
  "language": "lua",
  "prompt": "-- Write a function to convert the given snake case string to camel case string.\nlocal function snake_to_camel(word)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = snake_to_camel\n    lu.assertEquals(candidate('android_tv'), 'AndroidTv')\n    lu.assertEquals(candidate('google_pixel'), 'GooglePixel')\n    lu.assertEquals(candidate('apple_watch'), 'AppleWatch')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "\treturn word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%l)\", string.upper)\nend",
    "\treturn word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub('_%l', string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  -- TODO: Implement the function\n  return word\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  local result = \"\"\n  for w in word:gmatch(\"[^_]+\") do\n    result = result .. w:sub(1,1):upper() .. w:sub(2)\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", function(w) return w:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = false\n  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c == \"_\" then\n      upper = true\n    else\n      if upper then\n        c = c:upper()\n        upper = false\n      end\n      result = result .. c\n    end\n  end\n  return result\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_(.)\", function(x) return x:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local capitalize = true\n  for char in word:gmatch(\".\") do\n    if char == \"_\" then\n      capitalize = true\n    else\n      if capitalize then\n        result = result .. char:upper()\n      else\n        result = result .. char\n      end\n      capitalize = false\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%a)\", function(letter)\n    return letter:upper()\n  end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%l)\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = false\n  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c == \"_\" then\n      upper = true\n    else\n      if upper then\n        result = result .. c:upper()\n        upper = false\n      else\n        result = result .. c\n      end\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    local result = word:gsub(\"_(%w)\", function(w)\n        return w:upper()\n    end)\n    return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = false\n  for i = 1, #word do\n    local char = word:sub(i, i)\n    if char == \"_\" then\n      upper = true\n    else\n      if upper then\n        result = result .. char:upper()\n        upper = false\n      else\n        result = result .. char\n      end\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local capitalize = false\n  for i = 1, #word do\n    local char = word:sub(i, i)\n    if char == \"_\" then\n      capitalize = true\n    else\n      if capitalize then\n        result = result .. char:upper()\n        capitalize = false\n      else\n        result = result .. char\n      end\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_(%a)\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", function(letter)\n    return letter:upper()\n  end)\nend",
    "    local result = \"\"\n    local upper = false\n    for i = 1, #word do\n        local c = word:sub(i, i)\n        if c == \"_\" then\n            upper = true\n        else\n            if upper then\n                result = result .. c:upper()\n                upper = false\n            else\n                result = result .. c\n            end\n        end\n    end\n    return result\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper_next = false\n  for i = 1, #word do\n    local char = word:sub(i, i)\n    if char == \"_\" then\n      upper_next = true\n    else\n      if upper_next then\n        char = char:upper()\n        upper_next = false\n      end\n      result = result .. char\n    end\n  end\n  return result\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"_\", \"\")\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local capitalize = false\n  for i = 1, #word do\n    local char = word:sub(i, i)\n    if char == \"_\" then\n      capitalize = true\n    else\n      if capitalize then\n        result = result .. char:upper()\n        capitalize = false\n      else\n        result = result .. char\n      end\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend"
  ]
}
{
  "name": "mbpp_411_snake_to_camel",
  "language": "lua",
  "prompt": "-- Write a function to convert the given snake case string to camel case string.\nlocal function snake_to_camel(word)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = snake_to_camel\n    lu.assertEquals(candidate('android_tv'), 'AndroidTv')\n    lu.assertEquals(candidate('google_pixel'), 'GooglePixel')\n    lu.assertEquals(candidate('apple_watch'), 'AppleWatch')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "\treturn word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%l)\", string.upper)\nend",
    "\treturn word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub('_%l', string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend"
  ]
}
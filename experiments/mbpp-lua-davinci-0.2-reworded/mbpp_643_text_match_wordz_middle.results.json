{
  "name": "mbpp_643_text_match_wordz_middle",
  "language": "lua",
  "prompt": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_643_text_match_wordz_middle.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqlw22x00.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpqlw22x00.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local match = string.match(text, '%w*z%w*')\n  if match then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa_vmci_o.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpa_vmci_o.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  -- your code here\n  return nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_aprcy0.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp7_aprcy0.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\tlocal pattern = \"^[^z]*z[^z]*$\"\n\treturn string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplel7r292.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmplel7r292.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]+z[^z]+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpac7szp_f.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpac7szp_f.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  -- TODO: Implement this function\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfiflgiz.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpvfiflgiz.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '%w*z%w*')\n    if match then\n        return match\n    else\n        return nil\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4lka7g4f.lua:14: expected: true, actual: \"pythonzabc\"\nstack traceback:\n\t/tmp/tmp4lka7g4f.lua:14: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"%f[%a]z%f[%A]\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl3ilefa_.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpl3ilefa_.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, 'z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fy539ak.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmp_fy539ak.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%a]z%f[%A]'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphtskahos.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmphtskahos.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, '^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvb30gkh.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnvb30gkh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\tlocal pattern = \"%f[%a]z%f[%A]\"\n\treturn string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpabc1ah.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpxpabc1ah.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpav0fjpjd.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpav0fjpjd.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps4ind2k5.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmps4ind2k5.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqz8623oe.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpqz8623oe.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '^[^z]*z[^z]*$')\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxc7ocwnp.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxc7ocwnp.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\treturn string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbigufzi5.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpbigufzi5.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local match = string.match(text, '%w*[z]%w*')\n  if match then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp43ncq0dp.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp43ncq0dp.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"%f[%a]z%f[%A]\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl3ilefa_.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpl3ilefa_.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3eptpz_f.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp3eptpz_f.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjliomqok.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpjliomqok.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\treturn string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm69pyp83.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpm69pyp83.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, 'z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fy539ak.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmp_fy539ak.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"%f[%w]z%f[%W]\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwh4hjpn4.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpwh4hjpn4.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.find(text, \"%z%w*z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1hv7edjc.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp1hv7edjc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  -- TODO: implement this function\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkq9bc_b2.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpkq9bc_b2.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]+z[^z]+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf__t7auv.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpf__t7auv.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n\treturn text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwut0z1zd.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpwut0z1zd.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, '^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvb30gkh.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnvb30gkh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpav0fjpjd.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpav0fjpjd.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, 'z')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnhqa2_do.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpnhqa2_do.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"%w*z%w*\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghgpzc41.lua:9: expected: true, actual: \"pythonzabc\"\nstack traceback:\n\t/tmp/tmpghgpzc41.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  -- ...\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9tkdgt3c.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp9tkdgt3c.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, \"^[^z]*z[^z]*$\")\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpez8lad2r.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpez8lad2r.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, '^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvb30gkh.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnvb30gkh.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, '^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps1p5arya.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmps1p5arya.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqlw22x00.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpqlw22x00.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"%f[%a]z%f[%A]\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2txjqgi_.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp2txjqgi_.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '^[^z]*z[^z]*$')\n    if match then\n        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxc7ocwnp.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxc7ocwnp.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3eptpz_f.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp3eptpz_f.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkp_5_4my.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkp_5_4my.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%a]z%f[%A]'\n    return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphtskahos.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmphtskahos.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps4ind2k5.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmps4ind2k5.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, \"z\")\n    if match == nil then\n        return false\n    end\n    local match_start = string.match(text, \"^z\")\n    local match_end = string.match(text, \"z$\")\n    if match_start ~= nil or match_end ~= nil then\n        return false\n    end\n    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]+z[^z]+$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf__t7auv.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpf__t7auv.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp33btnbg2.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp33btnbg2.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp33btnbg2.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp33btnbg2.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z.-z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8q0up47d.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp8q0up47d.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmsos5dcn.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpmsos5dcn.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefybxjln.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpefybxjln.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '%f[%a]z%f[%A]'\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxfo94lt4.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpxfo94lt4.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '%w*z%w*')\n    if match == nil then\n        return false\n    else\n        return true\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbwx69d7j.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbwx69d7j.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  --[[\n  local pattern = \"^[^z]*z[^z]*$\"\n  local match = string.match(text, pattern)\n  if match then\n    return true\n  else\n    return false\n  end\n  --]]\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmqjkx78r.lua:18: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpmqjkx78r.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '^[^z]*z[^z]*$'\n    return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmo3sa0jk.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpmo3sa0jk.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"z\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqlw22x00.lua:9: expected: true, actual: \"z\"\nstack traceback:\n\t/tmp/tmpqlw22x00.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"^[^z]*z[^z]*$\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnggt8a5s.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpnggt8a5s.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local match = string.match(text, '%w*z%w*')\n    return match\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptvo26sjn.lua:10: expected: true, actual: \"pythonzabc\"\nstack traceback:\n\t/tmp/tmptvo26sjn.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = '^[^z]*z[^z]*$'\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkp_5_4my.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpkp_5_4my.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = \"%f[%a]z%f[%A]\"\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2txjqgi_.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp2txjqgi_.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"%f[%a]z%f[%A]\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppab_kelc.lua:9: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmppab_kelc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return text:match(pattern) ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpav0fjpjd.lua:11: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpav0fjpjd.lua:11: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\") ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdhfwveek.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdhfwveek.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolmjyqsq.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpolmjyqsq.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local match = string.match(text, \"%w*z%w*\")\n  if match then\n    return true\n  else\n    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3tor4yrf.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp3tor4yrf.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match('^[^z]*z[^z]*$') ~= nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsp3_fbwk.lua:10: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpsp3_fbwk.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return text:match(\"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84ecbvh0.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp84ecbvh0.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  return string.match(text, \"^[^z]*z[^z]*$\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qbxtk1a.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmp5qbxtk1a.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return string.match(text, '^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps1p5arya.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmps1p5arya.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n  local pattern = \"^[^z]*z[^z]*$\"\n  return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsfdlnt_n.lua:10: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpsfdlnt_n.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    local pattern = '%f[%a]z%f[%A]'\n    return string.match(text, pattern)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123833,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpircbo5us.lua:10: expected: true, actual: nil\nstack traceback:\n\t/tmp/tmpircbo5us.lua:10: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that checks if a strings contains 'z', except at the start and end of the word.\nlocal function text_match_wordz_middle(text)\n    return text:match('^[^z]*z[^z]*$')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_wordz_middle\n    lu.assertEquals(candidate('pythonzabc.'), true)\n    lu.assertEquals(candidate('zxyabc.'), false)\n    lu.assertEquals(candidate('  lang  .'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027793,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvu02tcc.lua:9: expected: true, actual: \"pythonzabc.\"\nstack traceback:\n\t/tmp/tmpgvu02tcc.lua:9: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
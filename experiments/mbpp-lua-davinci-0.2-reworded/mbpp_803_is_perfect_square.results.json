{
  "name": "mbpp_803_is_perfect_square",
  "language": "lua",
  "prompt": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027840,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local x = math.floor(math.sqrt(n))\n  return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local x = math.floor(math.sqrt(n))\n    return x*x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  local floor_sqrt_n = math.floor(sqrt_n)\n  return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then\n    return false\n  end\n  local s = math.sqrt(n)\n  return math.floor(s) == s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027840,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  local floor = math.floor(sqrt)\n  return floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  local floor = math.floor(sqrt)\n  return floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    local floor = math.floor(sqrt)\n    return floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    local floor = math.floor(sqrt)\n    return floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local x = math.floor(math.sqrt(n))\n  return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt_n = math.sqrt(n)\n    local sqrt_n_int = math.floor(sqrt_n)\n    return sqrt_n_int * sqrt_n_int == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.sqrt(n)\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghhz7fg6.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpghhz7fg6.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then return false end\n  local t = math.sqrt(n)\n  return t == math.floor(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sq = math.sqrt(n)\n    return sq == math.floor(sq)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  local floor_sqrt_n = math.floor(sqrt_n)\n  return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then\n    return false\n  end\n  local s = math.floor(math.sqrt(n))\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return math.floor(sqrt) == sqrt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.sqrt(n)\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghhz7fg6.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpghhz7fg6.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027840,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027840,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local x = math.floor(math.sqrt(n))\n    return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local i = 1\n  while i * i <= n do\n    if i * i == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  local floor_sqrt_n = math.floor(sqrt_n)\n  return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local i = 1\n  while i * i <= n do\n    if i * i == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then return false end\n  local sqrt_n = math.sqrt(n)\n  return sqrt_n == math.floor(sqrt_n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ua63_p5.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9ua63_p5.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local i = 1\n  while i * i <= n do\n    if i * i == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ua63_p5.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9ua63_p5.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local s = math.sqrt(n)\n  return math.floor(s) == s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local s = math.sqrt(n)\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp29vevko1.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp29vevko1.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  local floor = math.floor(sqrt)\n  return floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt_n = math.sqrt(n)\n\treturn (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local x = math.sqrt(n)\n    return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsrk0z4b_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpsrk0z4b_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s * s == n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppmdtf_l_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmppmdtf_l_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s * s == n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppmdtf_l_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmppmdtf_l_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\tlocal floor = math.floor(sqrt)\n\treturn floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s * s == n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppmdtf_l_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmppmdtf_l_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  local floor_sqrt_n = math.floor(sqrt_n)\n  return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s - math.floor(s)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s * s == n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppmdtf_l_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmppmdtf_l_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  local sqrt_n_int = math.floor(sqrt_n)\n  return sqrt_n_int * sqrt_n_int == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.sqrt(n)\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghhz7fg6.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpghhz7fg6.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local i = 1\n  while i * i <= n do\n    if i * i == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s * s == n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppmdtf_l_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmppmdtf_l_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then\n    return false\n  end\n  local s = math.floor(math.sqrt(n))\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local i = 1\n  while i * i <= n do\n    if i * i == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  local floor_sqrt_n = math.floor(sqrt_n)\n  return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt_n = math.sqrt(n)\n    local floor_sqrt_n = math.floor(sqrt_n)\n    return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return math.floor(s) == s\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return sqrt_n == math.floor(sqrt_n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.floor(math.sqrt(n))\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local x = math.sqrt(n)\n    return x == math.floor(x)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local s = math.sqrt(n)\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp29vevko1.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmp29vevko1.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local x = math.floor(math.sqrt(n))\n    return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    if n < 0 then\n        return false\n    end\n    local s = math.sqrt(n)\n    return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghhz7fg6.lua:15: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpghhz7fg6.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then return false end\n  local x = math.floor(math.sqrt(n))\n  return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return sqrt_n == math.floor(sqrt_n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local i = 1\n    while i * i <= n do\n        if i * i == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt_n = math.sqrt(n)\n    local floor_sqrt_n = math.floor(sqrt_n)\n    return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt_n = math.sqrt(n)\n    return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then\n    return false\n  end\n  local s = math.floor(math.sqrt(n))\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return math.floor(sqrt) == sqrt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local s = math.floor(math.sqrt(n))\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn (sqrt - math.floor(sqrt)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return (sqrt - math.floor(sqrt)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n\tlocal sqrt = math.sqrt(n)\n\treturn sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return (sqrt - math.floor(sqrt)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local root = math.sqrt(n)\n  return root == math.floor(root)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local s = math.sqrt(n)\n    return (s * s == n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppmdtf_l_.lua:12: expected: false, actual: true\nstack traceback:\n\t/tmp/tmppmdtf_l_.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  local floor = math.floor(sqrt)\n  return floor * floor == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt_n = math.sqrt(n)\n    return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  if n < 0 then\n    return false\n  end\n  local s = math.floor(math.sqrt(n))\n  return s * s == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt_n = math.sqrt(n)\n    local floor_sqrt_n = math.floor(sqrt_n)\n    return floor_sqrt_n * floor_sqrt_n == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt_n = math.sqrt(n)\n  return (sqrt_n - math.floor(sqrt_n)) == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local x = math.floor(math.sqrt(n))\n    return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666124111,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local x = math.floor(math.sqrt(n))\n  return x * x == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n  local sqrt = math.sqrt(n)\n  return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\nlocal function is_perfect_square(n)\n    local sqrt = math.sqrt(n)\n    return sqrt == math.floor(sqrt)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_perfect_square\n    lu.assertEquals(candidate(10), false)\n    lu.assertEquals(candidate(36), true)\n    lu.assertEquals(candidate(14), false)\n    lu.assertEquals(candidate(196), true)\n    lu.assertEquals(candidate(125), false)\n    lu.assertEquals(candidate(15625), true)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027841,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
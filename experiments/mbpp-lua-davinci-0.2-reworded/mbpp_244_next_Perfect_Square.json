{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the next perfect square greater than a given number.\nlocal function next_Perfect_Square(N)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = next_Perfect_Square\n    lu.assertEquals(candidate(35), 36)\n    lu.assertEquals(candidate(6), 9)\n    lu.assertEquals(candidate(9), 16)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal i = 1\n\twhile i*i <= N do\n\t\ti = i + 1\n\tend\n\treturn i*i\nend",
    "  local i = 1\n  while true do\n    if i * i > N then\n      return i * i\n    end\n    i = i + 1\n  end\nend",
    "    local sqrt = math.sqrt(N)\n    local ceil = math.ceil(sqrt)\n    return ceil * ceil\nend",
    "\tlocal i = 1\n\twhile i * i <= N do\n\t\ti = i + 1\n\tend\n\treturn i * i\nend",
    "  local i = 1\n  while i*i <= N do\n    i = i + 1\n  end\n  return i*i\nend",
    "\tlocal i = 1\n\twhile i*i <= N do\n\t\ti = i + 1\n\tend\n\treturn i*i\nend",
    "\tlocal i = 1\n\twhile true do\n\t\tif i*i > N then\n\t\t\treturn i*i\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "\tlocal i = 1\n\twhile true do\n\t\tlocal square = i * i\n\t\tif square > N then\n\t\t\treturn square\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "    local sqrt_N = math.sqrt(N)\n    local next_sqrt_N = math.ceil(sqrt_N)\n    return next_sqrt_N * next_sqrt_N\nend",
    "\tlocal i = 1\n\twhile i*i <= N do\n\t\ti = i + 1\n\tend\n\treturn i*i\nend",
    "\tlocal i = 1\n\twhile true do\n\t\tif i*i > N then\n\t\t\treturn i*i\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "\tlocal i = 1\n\twhile i*i <= N do\n\t\ti = i + 1\n\tend\n\treturn i*i\nend",
    "\tlocal i = 1\n\twhile true do\n\t\tlocal sq = i * i\n\t\tif sq > N then\n\t\t\treturn sq\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "\tlocal i = 1\n\twhile i*i <= N do\n\t\ti = i + 1\n\tend\n\treturn i*i\nend",
    "\tlocal i = 1\n\twhile i * i < N do\n\t\ti = i + 1\n\tend\n\treturn i * i\nend",
    "\tlocal i = 1\n\twhile i * i <= N do\n\t\ti = i + 1\n\tend\n\treturn i * i\nend",
    "    local i = 1\n    while true do\n        if i * i > N then\n            return i * i\n        end\n        i = i + 1\n    end\nend",
    "\tlocal i = 1\n\twhile i*i <= N do\n\t\ti = i + 1\n\tend\n\treturn i*i\nend",
    "\tlocal i = 1\n\twhile true do\n\t\tif i*i > N then\n\t\t\treturn i*i\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "    local i = 1\n    while i*i <= N do\n        i = i + 1\n    end\n    return i*i\nend"
  ]
}
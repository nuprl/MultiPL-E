{
  "name": "mbpp_562_Find_Max_Length",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the length of the longest subtables.\nlocal function Find_Max_Length(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Find_Max_Length\n    lu.assertEquals(candidate({{1}, {1, 4}, {5, 6, 7, 8}}), 4)\n    lu.assertEquals(candidate({{0, 1}, {2, 2}, {3, 2, 1}}), 3)\n    lu.assertEquals(candidate({{7}, {22, 23}, {13, 14, 15}, {10, 20, 30, 40, 50}}), 5)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max_length = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max = 0\n\tfor i = 1, #lst do\n\t\tlocal len = #lst[i]\n\t\tif len > max then\n\t\t\tmax = len\n\t\tend\n\tend\n\treturn max\nend",
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "  local max = 0\n  for _, v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = Find_Max_Length(v)\n      if len > max then\n        max = len\n      end\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i,v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = Find_Max_Length(v)\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "  local max = 0\n  for _,v in ipairs(lst) do\n    local len = #v\n    if len > max then\n      max = len\n    end\n  end\n  return max\nend",
    "\tlocal max = 0\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "    local max = 0\n    for i = 1, #lst do\n        if type(lst[i]) == \"table\" then\n            local len = Find_Max_Length(lst[i])\n            if len > max then\n                max = len\n            end\n        end\n    end\n    return max\nend",
    "    local max_length = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length\nend",
    "  local max_length = 0\n  for _, v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local length = Find_Max_Length(v)\n      if length > max_length then\n        max_length = length\n      end\n    end\n  end\n  return max_length\nend",
    "    local max_length = 0\n    for i,v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length\nend",
    "  local max = 0\n  for _, v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = Find_Max_Length(v)\n      if len > max then\n        max = len\n      end\n    end\n  end\n  return max\nend",
    "\tlocal max_length = 0\n\tfor _,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tlocal max = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = Find_Max_Length(v)\n\t\t\tif len > max then\n\t\t\t\tmax = len\n\t\t\tend\n\t\tend\n\tend\n\treturn max\nend",
    "  local max_length = 0\n  for k, v in pairs(lst) do\n    if type(v) == \"table\" then\n      local length = Find_Max_Length(v)\n      if length > max_length then\n        max_length = length\n      end\n    end\n  end\n  return max_length\nend",
    "    local max_length = 0\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local length = Find_Max_Length(v)\n            if length > max_length then\n                max_length = length\n            end\n        end\n    end\n    return max_length\nend",
    "  local max = 0\n  for _,v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = Find_Max_Length(v)\n      if len > max then max = len end\n    end\n  end\n  return max\nend",
    "\tlocal max_length = 0\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal length = Find_Max_Length(v)\n\t\t\tif length > max_length then\n\t\t\t\tmax_length = length\n\t\t\tend\n\t\tend\n\tend\n\treturn max_length\nend"
  ]
}
{
  "name": "mbpp_624_is_upper",
  "language": "lua",
  "prompt": "-- Write a luathon function to convert a given string to uppercase.\nlocal function is_upper(string)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_624_is_upper.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_upper\n    lu.assertEquals(candidate('person'), 'PERSON')\n    lu.assertEquals(candidate('final'), 'FINAL')\n    lu.assertEquals(candidate('Valid'), 'VALID')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "    return string == string:upper()\nend",
    "    return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "    return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "    if string == string:upper() then\n        return true\n    else\n        return false\n    end\nend",
    "  return string.upper(string)\nend",
    "  return string == string:upper()\nend",
    "  return string.upper(string)\nend",
    "    return string.upper(string)\nend",
    "  return string.upper(string)\nend",
    "    return string.upper(string)\nend",
    "    return string.upper(string)\nend",
    "    return string:upper()\nend",
    "  return string.upper(string)\nend"
  ]
}
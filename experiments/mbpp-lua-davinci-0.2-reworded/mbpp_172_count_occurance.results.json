{
  "name": "mbpp_172_count_occurance",
  "language": "lua",
  "prompt": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for w in s:gmatch(\"%S+\") do\n        if w == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmply_lv7th.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmply_lv7th.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in s:gmatch(\"%w+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpffgf6f0t.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpffgf6f0t.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor w in s:gmatch(\"std\") do\n\t\tcount = count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    local i = 1\n    while true do\n        local j = string.find(s, 'std', i)\n        if j == nil then\n            break\n        end\n        count = count + 1\n        i = j + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i in string.gmatch(s, \"std\") do\n\t\tcount = count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor w in s:gmatch(\"%a+\") do\n\t\tif w == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkz9oi36h.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpkz9oi36h.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    local i = 1\n    while i <= #s do\n        local j = string.find(s, 'std', i)\n        if j then\n            count = count + 1\n            i = j + 1\n        else\n            break\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for _ in s:gmatch(\"std\") do\n    count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i in string.gmatch(s, \"std\") do\n\t\tcount = count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor w in s:gmatch(\"%w+\") do\n\t\tif w == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpemlo94av.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpemlo94av.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i+2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in s:gmatch(\"%w+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpffgf6f0t.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpffgf6f0t.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for word in s:gmatch(\"%w+\") do\n    if word == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo768q2px.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpo768q2px.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch('std') do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch('std') do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for w in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch('std') do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for _ in s:gmatch('std') do\n    count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for w in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if string.sub(s, i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in string.gmatch(s, \"%a+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg580mh_k.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpg580mh_k.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i + 2) == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if string.sub(s, i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in s:gmatch(\"%S+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8cus5rdw.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp8cus5rdw.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for w in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for _ in s:gmatch(\"std\") do\n    count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in s:gmatch(\"%a+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw8j2liqn.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpw8j2liqn.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for w in s:gmatch(\"%w+\") do\n    if w == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyngyavfx.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpyngyavfx.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nprint(count_occurance(\"stdstdstdstd\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "4\n.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for w in s:gmatch(\"%w+\") do\n        if w == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch('std') do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in s:gmatch(\"%w+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpffgf6f0t.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpffgf6f0t.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local c = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  local i = 1\n  while i <= #s do\n    local j = string.find(s, 'std', i)\n    if j then\n      count = count + 1\n      i = j + 1\n    else\n      break\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor word in s:gmatch(\"%w+\") do\n\t\tif word == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgb_aa8ab.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpgb_aa8ab.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor w in string.gmatch(s, \"%a+\") do\n\t\tif w == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp17poaugd.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp17poaugd.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i + 2) == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor _ in s:gmatch(\"std\") do\n\t\tcount = count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for _ in s:gmatch('std') do\n    count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor w in string.gmatch(s, \"%a+\") do\n\t\tif w == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp17poaugd.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp17poaugd.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in string.gmatch(s, \"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i + 2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i = 1, #s do\n\t\tif s:sub(i, i+2) == 'std' then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for w in s:gmatch(\"%w+\") do\n        if w == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if string.sub(s, i, i+2) == \"std\" then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch(\"std\") do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor _ in s:gmatch(\"std\") do\n\t\tcount = count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch('std') do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i+2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor word in string.gmatch(s, \"%a+\") do\n\t\tif word == \"std\" then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6gn0ld2.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpw6gn0ld2.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for word in s:gmatch(\"%S+\") do\n        if word == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8cus5rdw.lua:15: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp8cus5rdw.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == \"std\" then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for _ in s:gmatch('std') do\n        count = count + 1\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i in s:gmatch(\"std\") do\n    count = count + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for i = 1, #s do\n    if s:sub(i, i + 2) == 'std' then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n  local count = 0\n  for w in s:gmatch('%w+') do\n    if w == 'std' then count = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123570,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfk8w1usi.lua:13: expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpfk8w1usi.lua:13: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i, i + 2) == 'std' then\n            count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027834,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function to count the number of occurence of the string 'std' in a given string.\nlocal function count_occurance(s)\n\tlocal count = 0\n\tfor i in string.gmatch(s, \"std\") do\n\t\tcount = count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_occurance\n    lu.assertEquals(candidate('letstdlenstdporstd'), 3)\n    lu.assertEquals(candidate('truststdsolensporsd'), 1)\n    lu.assertEquals(candidate('makestdsostdworthit'), 2)\n    lu.assertEquals(candidate('stds'), 1)\n    lu.assertEquals(candidate(''), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027835,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
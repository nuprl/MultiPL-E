{
  "name": "mbpp_626_triangle_area",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\nlocal function triangle_area(r)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(-1), None)\n    lu.assertEquals(candidate(0), 0)\n    lu.assertEquals(candidate(2), 4)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    return r * r * math.sqrt(3) / 4\nend",
    "    local h = r * math.sqrt(3) / 2\n    return h * r / 2\nend",
    "    local s = r * 2\n    local h = math.sqrt(s * (s - r) * (s - r) * (s - r))\n    return h * r / 2\nend",
    "    local h = r * math.sqrt(3) / 2\n    return h * r / 2\nend",
    "  local a = math.sqrt(r^2 - (r/2)^2)\n  return (r/2) * a\nend",
    "\tlocal a = 2 * r\n\tlocal b = 2 * r\n\tlocal c = math.sqrt(a^2 + b^2)\n\tlocal s = (a + b + c) / 2\n\treturn math.sqrt(s * (s - a) * (s - b) * (s - c))\nend",
    "    local a = math.pi * r * r / 2\n    local h = math.sqrt(r * r - (r / 2) * (r / 2))\n    return a * h / 2\nend",
    "   return r*r*math.sqrt(3)/4\nend",
    "    local h = r * math.sqrt(3) / 2\n    return h * r / 2\nend",
    "  local h = r * math.sqrt(3) / 2\n  return h * r / 2\nend",
    "    local h = r * math.sqrt(2)\n    return 0.5 * h * r\nend",
    "    return r * r * math.sqrt(3) / 4\nend",
    "  local h = math.sqrt(r^2 - (r/2)^2)\n  return (r/2) * h\nend",
    "  return (r * r * math.sqrt(3)) / 4\nend",
    "\treturn r * r * math.sqrt(3) / 4\nend",
    "\tlocal h = r * math.sqrt(3) / 2\n\treturn h * r / 2\nend",
    "    local a = math.sqrt(r^2 - (r/2)^2)\n    return a^2 * math.sqrt(3) / 4\nend",
    "  local h = r * math.sqrt(3) / 2\n  return h * r / 2\nend",
    "    return r * r * math.sqrt(3) / 4\nend",
    "   return r * r * math.sqrt(3) / 4\nend"
  ]
}
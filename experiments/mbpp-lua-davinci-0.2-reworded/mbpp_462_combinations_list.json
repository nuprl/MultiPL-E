{
  "name": "mbpp_462_combinations_list",
  "language": "lua",
  "prompt": "-- Write a function to find all possible combinations of the elements of a given table.\nlocal function combinations_list(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_462_combinations_list.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = combinations_list\n    lu.assertEquals(candidate({'orange', 'red', 'green', 'blue'}), {{}, {'orange'}, {'red'}, {'red', 'orange'}, {'green'}, {'green', 'orange'}, {'green', 'red'}, {'green', 'red', 'orange'}, {'blue'}, {'blue', 'orange'}, {'blue', 'red'}, {'blue', 'red', 'orange'}, {'blue', 'green'}, {'blue', 'green', 'orange'}, {'blue', 'green', 'red'}, {'blue', 'green', 'red', 'orange'}})\n    lu.assertEquals(candidate({'red', 'green', 'blue', 'white', 'black', 'orange'}), {{}, {'red'}, {'green'}, {'green', 'red'}, {'blue'}, {'blue', 'red'}, {'blue', 'green'}, {'blue', 'green', 'red'}, {'white'}, {'white', 'red'}, {'white', 'green'}, {'white', 'green', 'red'}, {'white', 'blue'}, {'white', 'blue', 'red'}, {'white', 'blue', 'green'}, {'white', 'blue', 'green', 'red'}, {'black'}, {'black', 'red'}, {'black', 'green'}, {'black', 'green', 'red'}, {'black', 'blue'}, {'black', 'blue', 'red'}, {'black', 'blue', 'green'}, {'black', 'blue', 'green', 'red'}, {'black', 'white'}, {'black', 'white', 'red'}, {'black', 'white', 'green'}, {'black', 'white', 'green', 'red'}, {'black', 'white', 'blue'}, {'black', 'white', 'blue', 'red'}, {'black', 'white', 'blue', 'green'}, {'black', 'white', 'blue', 'green', 'red'}, {'orange'}, {'orange', 'red'}, {'orange', 'green'}, {'orange', 'green', 'red'}, {'orange', 'blue'}, {'orange', 'blue', 'red'}, {'orange', 'blue', 'green'}, {'orange', 'blue', 'green', 'red'}, {'orange', 'white'}, {'orange', 'white', 'red'}, {'orange', 'white', 'green'}, {'orange', 'white', 'green', 'red'}, {'orange', 'white', 'blue'}, {'orange', 'white', 'blue', 'red'}, {'orange', 'white', 'blue', 'green'}, {'orange', 'white', 'blue', 'green', 'red'}, {'orange', 'black'}, {'orange', 'black', 'red'}, {'orange', 'black', 'green'}, {'orange', 'black', 'green', 'red'}, {'orange', 'black', 'blue'}, {'orange', 'black', 'blue', 'red'}, {'orange', 'black', 'blue', 'green'}, {'orange', 'black', 'blue', 'green', 'red'}, {'orange', 'black', 'white'}, {'orange', 'black', 'white', 'red'}, {'orange', 'black', 'white', 'green'}, {'orange', 'black', 'white', 'green', 'red'}, {'orange', 'black', 'white', 'blue'}, {'orange', 'black', 'white', 'blue', 'red'}, {'orange', 'black', 'white', 'blue', 'green'}, {'orange', 'black', 'white', 'blue', 'green', 'red'}})\n    lu.assertEquals(candidate({'red', 'green', 'black', 'orange'}), {{}, {'red'}, {'green'}, {'green', 'red'}, {'black'}, {'black', 'red'}, {'black', 'green'}, {'black', 'green', 'red'}, {'orange'}, {'orange', 'red'}, {'orange', 'green'}, {'orange', 'green', 'red'}, {'orange', 'black'}, {'orange', 'black', 'red'}, {'orange', 'black', 'green'}, {'orange', 'black', 'green', 'red'}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local list2 = {}\n  for i = 1, #list1 do\n    for j = 1, #list1 do\n      if i ~= j then\n        table.insert(list2, {list1[i], list1[j]})\n      end\n    end\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            table.insert(list2, {list1[i], list1[j]})\n        end\n    end\n    return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      list2[#list2 + 1] = {list1[i], list1[j]}\n    end\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i=1, #list1 do\n        for j=1, #list1 do\n            if i ~= j then\n                table.insert(list2, {list1[i], list1[j]})\n            end\n        end\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal list3 = {}\n\tlocal list4 = {}\n\tlocal list5 = {}\n\tlocal list6 = {}\n\tlocal list7 = {}\n\tlocal list8 = {}\n\tlocal list9 = {}\n\tlocal list10 = {}\n\tlocal list11 = {}\n\tlocal list12 = {}\n\tlocal list13 = {}\n\tlocal list14 = {}\n\tlocal list15 = {}\n\tlocal list16 = {}\n\tlocal list17 = {}\n\tlocal list18 = {}\n\tlocal list19 = {}\n\tlocal list20 = {}\n\tlocal list21 = {}\n\tlocal list22 = {}\n\tlocal list23 = {}\n\tlocal list24 = {}\n\tlocal list25 = {}\n\tlocal list26 = {}\n\tlocal list27 = {}\n\tlocal list28 = {}\n\tlocal list29 = {}\n\tlocal list30 = {}\n\tlocal list31 = {}\n\tlocal list32 = {}\n\tlocal list33 = {}\n\tlocal list34 = {}\n\tlocal list35 = {}\n\tlocal list36 = {}\n\tlocal list37 = {}\n\tlocal list38 = {}\n\tlocal list39 = {}\n\tlocal list40 = {}\n\tlocal list41 = {}\n\tlocal list42 = {}\n\tlocal list43 = {}\n\tlocal list44 = {}\n\tlocal list45 = {}\n\tlocal list46 = {}\n\tlocal list47 = {}\n\tlocal list48 = {}\n\tlocal list49 = {}\n\tlocal list50 = {}\n\tlocal list51 = {}\n\tlocal list52 = {}\n\tlocal list53 = {}\n\tlocal list54 = {}\n\tlocal list55 = {}\n\tlocal list56 = {}\n\tlocal list57 = {}\n\tlocal list58 = {}\n\tlocal list59 = {}\n\tlocal list60 = {}\n\tlocal list61 = {}\n\tlocal list62 = {}\n\tlocal list63 = {}\n\tlocal list64 = {}\n\tlocal list65 = {}\n\tlocal list66 = {}\n\tlocal list67 = {}\n\tlocal list68 = {}\n\tlocal list69 = {}\n\tlocal list70 = {}\n\tlocal list71 = {}\n\tlocal list72 = {}\n\tlocal list73 = {}\n\tlocal list74 = {}\n",
    "  local list2 = {}\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      list2[#list2 + 1] = {list1[i], list1[j]}\n    end\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            list2[#list2 + 1] = {list1[i], list1[j]}\n        end\n    end\n    return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            list2[#list2 + 1] = {list1[i], list1[j]}\n        end\n    end\n    return list2\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      table.insert(list2, {list1[i], list1[j]})\n    end\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            list2[#list2 + 1] = {list1[i], list1[j]}\n        end\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tfor i = 1, #list1 do\n\t\tfor j = i + 1, #list1 do\n\t\t\tlist2[#list2 + 1] = {list1[i], list1[j]}\n\t\tend\n\tend\n\treturn list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = 1, #list1 do\n            if i ~= j then\n                list2[#list2 + 1] = {list1[i], list1[j]}\n            end\n        end\n    end\n    return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            table.insert(list2, {list1[i], list1[j]})\n        end\n    end\n    return list2\nend",
    "    local result = {}\n    local n = #list1\n    for i=1,n do\n        local a = list1[i]\n        for j=i+1,n do\n            local b = list1[j]\n            result[#result+1] = {a,b}\n        end\n    end\n    return result\nend",
    "  local list2 = {}\n  for i=1,#list1 do\n    for j=1,#list1 do\n      if i ~= j then\n        local list3 = {}\n        for k=1,#list1 do\n          if k ~= i and k ~= j then\n            table.insert(list3, list1[k])\n          end\n        end\n        table.insert(list2, {list1[i], list1[j], table.unpack(list3)})\n      end\n    end\n  end\n  return list2\nend",
    "\tlocal result = {}\n\tfor i = 1, #list1 do\n\t\tfor j = i + 1, #list1 do\n\t\t\ttable.insert(result, {list1[i], list1[j]})\n\t\tend\n\tend\n\treturn result\nend",
    "  local list2 = {}\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      list2[#list2 + 1] = {list1[i], list1[j]}\n    end\n  end\n  return list2\nend",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            table.insert(list2, {list1[i], list1[j]})\n        end\n    end\n    return list2\nend",
    "\tlocal list2 = {}\n\tlocal list3 = {}\n\tlocal list4 = {}\n\tlocal list5 = {}\n\tlocal list6 = {}\n\tlocal list7 = {}\n\tlocal list8 = {}\n\tlocal list9 = {}\n\tlocal list10 = {}\n\tlocal list11 = {}\n\tlocal list12 = {}\n\tlocal list13 = {}\n\tlocal list14 = {}\n\tlocal list15 = {}\n\tlocal list16 = {}\n\tlocal list17 = {}\n\tlocal list18 = {}\n\tlocal list19 = {}\n\tlocal list20 = {}\n\tlocal list21 = {}\n\tlocal list22 = {}\n\tlocal list23 = {}\n\tlocal list24 = {}\n\tlocal list25 = {}\n\tlocal list26 = {}\n\tlocal list27 = {}\n\tlocal list28 = {}\n\tlocal list29 = {}\n\tlocal list30 = {}\n\tlocal list31 = {}\n\tlocal list32 = {}\n\tlocal list33 = {}\n\tlocal list34 = {}\n\tlocal list35 = {}\n\tlocal list36 = {}\n\tlocal list37 = {}\n\tlocal list38 = {}\n\tlocal list39 = {}\n\tlocal list40 = {}\n\tlocal list41 = {}\n\tlocal list42 = {}\n\tlocal list43 = {}\n\tlocal list44 = {}\n\tlocal list45 = {}\n\tlocal list46 = {}\n\tlocal list47 = {}\n\tlocal list48 = {}\n\tlocal list49 = {}\n\tlocal list50 = {}\n\tlocal list51 = {}\n\tlocal list52 = {}\n\tlocal list53 = {}\n\tlocal list54 = {}\n\tlocal list55 = {}\n\tlocal list56 = {}\n\tlocal list57 = {}\n\tlocal list58 = {}\n\tlocal list59 = {}\n\tlocal list60 = {}\n\tlocal list61 = {}\n\tlocal list62 = {}\n\tlocal list63 = {}\n\tlocal list64 = {}\n\tlocal list65 = {}\n\tlocal list66 = {}\n\tlocal list67 = {}\n\tlocal list68 = {}\n\tlocal list69 = {}\n\tlocal list70 = {}\n\tlocal list71 = {}\n\tlocal list72 = {}\n\tlocal list73 = {}\n\tlocal list74 = {}\n",
    "    local list2 = {}\n    for i = 1, #list1 do\n        for j = 1, #list1 do\n            if i ~= j then\n                table.insert(list2, {list1[i], list1[j]})\n            end\n        end\n    end\n    return list2\nend"
  ]
}
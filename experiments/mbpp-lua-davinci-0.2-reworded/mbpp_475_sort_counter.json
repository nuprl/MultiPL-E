{
  "name": "mbpp_475_sort_counter",
  "language": "lua",
  "prompt": "-- Write a function to sort a table by value.\nlocal function sort_counter(dict1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_counter\n    lu.assertEquals(candidate({['Math'] = 81, ['Physics'] = 83, ['Chemistry'] = 87}), {{'Chemistry', 87}, {'Physics', 83}, {'Math', 81}})\n    lu.assertEquals(candidate({['Math'] = 400, ['Physics'] = 300, ['Chemistry'] = 250}), {{'Math', 400}, {'Physics', 300}, {'Chemistry', 250}})\n    lu.assertEquals(candidate({['Math'] = 900, ['Physics'] = 1000, ['Chemistry'] = 1250}), {{'Chemistry', 1250}, {'Physics', 1000}, {'Math', 900}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    local dict3 = {}\n    for _, k in ipairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2+1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local result = {}\n    for _, k in ipairs(keys) do\n        table.insert(result, {dict2[k], k})\n    end\n    return result\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local keys = {}\n  for k, _ in pairs(dict2) do\n    table.insert(keys, k)\n  end\n  table.sort(keys)\n  local dict3 = {}\n  for _, k in ipairs(keys) do\n    dict3[dict2[k]] = k\n  end\n  return dict3\nend",
    "\tlocal dict2 = {}\n\tfor k, v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\tlocal sorted = {}\n\tfor k, v in pairs(dict2) do\n\t\ttable.insert(sorted, {k, v})\n\tend\n\ttable.sort(sorted, function(a, b) return a[1] > b[1] end)\n\treturn sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    return dict2, keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local new_dict = {}\n    for i, k in ipairs(keys) do\n        new_dict[dict2[k]] = k\n    end\n    return new_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local list = {}\n    for k, v in pairs(dict2) do\n        table.insert(list, {k, v})\n    end\n    table.sort(list, function(a, b) return a[1] > b[1] end)\n    return list\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {v, k})\n    end\n    table.sort(dict3, function(a, b) return a[2] > b[2] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    return dict2, sorted_keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2 + 1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local sorted = {}\n    for k, v in pairs(dict1) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local sorted_dict = {}\n    for k, v in pairs(dict1) do\n        table.insert(sorted_dict, {k, v})\n    end\n    table.sort(sorted_dict, function(a, b) return a[2] > b[2] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local sorted = {}\n    for _, k in ipairs(keys) do\n        table.insert(sorted, {dict2[k], k})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    return dict2, keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for i, k in ipairs(sorted_keys) do\n        sorted_dict[dict2[k]] = k\n    end\n    return sorted_dict\nend",
    "\tlocal dict2 = {}\n\tfor k,v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\treturn dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        table.insert(dict2, {k, v})\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k,v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i,v in ipairs(keys) do\n        dict3[dict2[v]] = v\n    end\n    return dict3\nend",
    "    local sorted_dict = {}\n    for key, value in pairs(dict1) do\n        table.insert(sorted_dict, {key, value})\n    end\n    table.sort(sorted_dict, function(a, b) return a[2] > b[2] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys, function(a, b) return a > b end)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local dict3 = {}\n  for k, v in pairs(dict2) do\n    table.insert(dict3, {k, v})\n  end\n  table.sort(dict3, function(a, b) return a[1] > b[1] end)\n  return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for _, k in ipairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local sorted = {}\n  for k, v in pairs(dict2) do\n    table.insert(sorted, {k, v})\n  end\n  table.sort(sorted, function(a, b) return a[1] > b[1] end)\n  return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys, function(a, b) return a > b end)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2+1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys, function(a, b) return a > b end)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local sorted_dict = {}\n    for key, value in pairs(dict1) do\n        table.insert(sorted_dict, {key, value})\n    end\n    table.sort(sorted_dict, function(a, b) return a[2] > b[2] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    local dict3 = {}\n    for i, v in ipairs(keys) do\n        dict3[dict2[v]] = v\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for i, v in ipairs(sorted_keys) do\n        sorted_dict[dict2[v]] = v\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for _, k in ipairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "\tlocal dict2 = {}\n\tfor key, value in pairs(dict1) do\n\t\tdict2[value] = key\n\tend\n\tlocal sorted = {}\n\tfor key, value in pairs(dict2) do\n\t\ttable.insert(sorted, value)\n\tend\n\ttable.sort(sorted)\n\treturn sorted\nend",
    "    local sorted_dict = {}\n    for k, v in pairs(dict1) do\n        table.insert(sorted_dict, {k, v})\n    end\n    table.sort(sorted_dict, function(a, b) return a[2] > b[2] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for _, k in ipairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k,v in pairs(dict2) do\n        table.insert(dict3, {k,v})\n    end\n    table.sort(dict3, function(a,b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, v)\n    end\n    table.sort(sorted)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "  local dict2 = {}\n  for k,v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local sorted = {}\n  for k,v in pairs(dict2) do\n    table.insert(sorted, {k,v})\n  end\n  table.sort(sorted, function(a,b) return a[1] > b[1] end)\n  return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    return dict2, keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "\tlocal dict2 = {}\n\tfor k, v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\treturn dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict = {}\n    for k, v in pairs(dict1) do\n        dict[#dict + 1] = {k, v}\n    end\n    table.sort(dict, function(a, b) return a[2] > b[2] end)\n    return dict\nend",
    "   local dict2 = {}\n   for key, value in pairs(dict1) do\n      dict2[value] = key\n   end\n   local dict3 = {}\n   for key, value in pairs(dict2) do\n      table.insert(dict3, {key, value})\n   end\n   table.sort(dict3, function(a, b) return a[1] > b[1] end)\n   return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for i = 1, #dict1 do\n        local max = 0\n        local max_key = nil\n        for k, v in pairs(dict2) do\n            if k > max then\n                max = k\n                max_key = v\n            end\n        end\n        dict3[i] = max_key\n        dict2[max] = nil\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i, v in ipairs(keys) do\n        dict3[dict2[v]] = v\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i, v in ipairs(keys) do\n        dict3[dict2[v]] = v\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for key, value in pairs(dict1) do\n        dict2[value] = key\n    end\n    local sorted = {}\n    for key, value in pairs(dict2) do\n        table.insert(sorted, {value, key})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local sorted = {}\n    for _, k in ipairs(keys) do\n        table.insert(sorted, {dict2[k], k})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k,v in pairs(dict2) do\n        table.insert(dict3, {k,v})\n    end\n    table.sort(dict3, function(a,b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, v)\n    end\n    table.sort(sorted_keys)\n    return sorted_keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i, v in ipairs(keys) do\n        dict3[dict2[v]] = v\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2+1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k,v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a,b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        table.insert(dict2, {k, v})\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local sorted = {}\n  for k, v in pairs(dict2) do\n    table.insert(sorted, {v, k})\n  end\n  table.sort(sorted, function(a, b) return a[2] > b[2] end)\n  return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        keys[#keys + 1] = k\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i = 1, #keys do\n        dict3[dict2[keys[i]]] = keys[i]\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    return dict2, keys\nend",
    "\tlocal sorted_dict = {}\n\tfor k,v in pairs(dict1) do\n\t\ttable.insert(sorted_dict, {k,v})\n\tend\n\ttable.sort(sorted_dict, function(a,b) return a[2] > b[2] end)\n\treturn sorted_dict\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local dict3 = {}\n  for k, v in pairs(dict2) do\n    table.insert(dict3, {k, v})\n  end\n  table.sort(dict3, function(a, b) return a[1] > b[1] end)\n  return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for key, value in pairs(dict1) do\n        dict2[value] = key\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, v)\n    end\n    table.sort(sorted_keys, function(a, b) return a > b end)\n    return sorted_keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i, k in ipairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "    local sorted_dict = {}\n    for k, v in pairs(dict1) do\n        table.insert(sorted_dict, {k, v})\n    end\n    table.sort(sorted_dict, function(a, b) return a[2] > b[2] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        sorted[#sorted+1] = {k, v}\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i = 1, #keys do\n        dict3[dict2[keys[i]]] = keys[i]\n    end\n    return dict3\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local sorted = {}\n  for k, v in pairs(dict2) do\n    table.insert(sorted, {v, k})\n  end\n  table.sort(sorted, function(a, b) return a[2] > b[2] end)\n  return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        keys[#keys + 1] = k\n    end\n    table.sort(keys)\n    local i = 0\n    return function()\n        i = i + 1\n        if i <= #keys then\n            return dict2[keys[i]], keys[i]\n        end\n    end\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    local dict3 = {}\n    for _, v in ipairs(keys) do\n        table.insert(dict3, {dict2[v], v})\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        sorted[#sorted + 1] = {k, v}\n    end\n    return sorted\nend",
    "    local sorted_dict = {}\n    for k, v in pairs(dict1) do\n        table.insert(sorted_dict, {k, v})\n    end\n    table.sort(sorted_dict, function(a, b) return a[2] > b[2] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[#dict2 + 1] = {k, v}\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "\tlocal dict2 = {}\n\tfor k, v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\tlocal dict3 = {}\n\tfor k, v in pairs(dict2) do\n\t\ttable.insert(dict3, {k, v})\n\tend\n\ttable.sort(dict3, function(a, b) return a[1] > b[1] end)\n\treturn dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        table.insert(dict2, {k, v})\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        table.insert(dict2, {k, v})\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for i, v in ipairs(keys) do\n        dict3[dict2[v]] = v\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local i = 1\n    local sorted = {}\n    for _, v in ipairs(keys) do\n        sorted[i] = dict2[v]\n        i = i + 1\n    end\n    return sorted\nend",
    "\tlocal dict2 = {}\n\tfor k, v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\tlocal sorted = {}\n\tfor k, v in pairs(dict2) do\n\t\ttable.insert(sorted, v)\n\tend\n\ttable.sort(sorted)\n\treturn sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    local dict3 = {}\n    for _, k in pairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k,v in pairs(dict2) do\n        table.insert(dict3, {k,v})\n    end\n    table.sort(dict3, function(a,b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "\tlocal dict2 = {}\n\tfor k, v in pairs(dict1) do\n\t\tdict2[v] = k\n\tend\n\tlocal dict3 = {}\n\tfor k, v in pairs(dict2) do\n\t\ttable.insert(dict3, {k, v})\n\tend\n\ttable.sort(dict3, function(a, b) return a[1] > b[1] end)\n\treturn dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local ret = {}\n    for _, k in ipairs(keys) do\n        table.insert(ret, {dict2[k], k})\n    end\n    return ret\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, v)\n    end\n    table.sort(sorted_keys, function(a, b) return dict1[a] > dict1[b] end)\n    return sorted_keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for _, k in ipairs(keys) do\n        dict3[dict2[k]] = k\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_dict = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_dict, {k, v})\n    end\n    table.sort(sorted_dict, function(a, b) return a[1] > b[1] end)\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for key, value in pairs(dict1) do\n        dict2[value] = key\n    end\n    local dict3 = {}\n    for key, value in pairs(dict2) do\n        table.insert(dict3, {key, value})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local sorted_keys = {}\n    for key in pairs(dict1) do\n        table.insert(sorted_keys, key)\n    end\n    table.sort(sorted_keys, function(a, b) return dict1[a] > dict1[b] end)\n    return sorted_keys\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        table.insert(dict2, {k, v})\n    end\n    table.sort(dict2, function(a, b) return a[2] > b[2] end)\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys)\n    local dict3 = {}\n    for _, k in ipairs(keys) do\n        table.insert(dict3, {dict2[k], k})\n    end\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for key, value in pairs(dict1) do\n        dict2[value] = key\n    end\n    local keys = {}\n    for key, value in pairs(dict2) do\n        table.insert(keys, key)\n    end\n    table.sort(keys)\n    local sorted = {}\n    for _, key in ipairs(keys) do\n        table.insert(sorted, {dict2[key], key})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, _ in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {v, k})\n    end\n    table.sort(sorted, function(a, b) return a[2] > b[2] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k,v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k,v in pairs(dict2) do\n        table.insert(dict3, {k,v})\n    end\n    table.sort(dict3, function(a,b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for i, v in ipairs(sorted_keys) do\n        sorted_dict[dict2[v]] = v\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "  local dict2 = {}\n  for k, v in pairs(dict1) do\n    dict2[v] = k\n  end\n  local sorted = {}\n  for k, v in pairs(dict2) do\n    table.insert(sorted, {k, v})\n  end\n  table.sort(sorted, function(a, b) return a[1] > b[1] end)\n  return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for i, v in ipairs(sorted_keys) do\n        sorted_dict[dict2[v]] = v\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairsByKeys(dict2) do\n        table.insert(sorted, {k, v})\n    end\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict2) do\n        sorted[#sorted + 1] = {k, v}\n    end\n    table.sort(sorted, function(a, b) return a[1] > b[1] end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local dict3 = {}\n    for k, v in pairs(dict2) do\n        table.insert(dict3, {k, v})\n    end\n    table.sort(dict3, function(a, b) return a[1] > b[1] end)\n    return dict3\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local keys = {}\n    for k, v in pairs(dict2) do\n        table.insert(keys, k)\n    end\n    table.sort(keys, function(a, b) return a > b end)\n    return dict2, keys\nend",
    "    local dict = {}\n    for k, v in pairs(dict1) do\n        dict[v] = k\n    end\n    local sorted = {}\n    for k, v in pairs(dict) do\n        table.insert(sorted, {k, v})\n    end\n    table.sort(sorted, function(a, b)\n        return a[1] > b[1]\n    end)\n    return sorted\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    local sorted_keys = {}\n    for k in pairs(dict2) do\n        table.insert(sorted_keys, k)\n    end\n    table.sort(sorted_keys)\n    local sorted_dict = {}\n    for _, k in ipairs(sorted_keys) do\n        table.insert(sorted_dict, {dict2[k], k})\n    end\n    return sorted_dict\nend",
    "    local dict2 = {}\n    for k, v in pairs(dict1) do\n        dict2[v] = k\n    end\n    return dict2\nend"
  ]
}
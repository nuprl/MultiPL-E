{
  "name": "mbpp_478_remove_lowercase",
  "language": "lua",
  "prompt": "-- Write a function to remove lowercase substrings from a given string.\nlocal function remove_lowercase(str1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_478_remove_lowercase.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_lowercase\n    lu.assertEquals(candidate('PYTHon'), 'PYTH')\n    lu.assertEquals(candidate('FInD'), 'FID')\n    lu.assertEquals(candidate('STRinG'), 'STRG')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return string.gsub(str1, \"%l\", \"\")\nend",
    "\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tif string.find(string.lower(str1), string.sub(str1, i, i)) then\n\t\t\tstr2 = str2 .. string.sub(str1, i, i)\n\t\tend\n\tend\n\treturn str2\nend",
    "  return str1:gsub(\"%l\", \"\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend",
    "    return str1:gsub(\"%l\", \"\")\nend",
    "  return str1:gsub(\"%l\", \"\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if string.find(string.lower(str1), string.sub(str1, i, i)) == nil then\n            str2 = str2 .. string.sub(str1, i, i)\n        end\n    end\n    return str2\nend",
    "  return string.gsub(str1, \"%l+\", \"\")\nend",
    "\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tif str1:sub(i,i):match(\"%u\") then\n\t\t\tstr2 = str2 .. str1:sub(i,i)\n\t\tend\n\tend\n\treturn str2\nend",
    "\tlocal str2 = \"\"\n\tfor i = 1, #str1 do\n\t\tlocal c = str1:sub(i, i)\n\t\tif not c:match(\"%l\") then\n\t\t\tstr2 = str2 .. c\n\t\tend\n\tend\n\treturn str2\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if string.match(str1:sub(i, i), \"%u\") then\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend",
    "    local str2 = string.gsub(str1, \"[a-z]\", \"\")\n    return str2\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if string.match(str1:sub(i, i), \"%u\") then\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend",
    "  local str2 = \"\"\n  for i = 1, #str1 do\n    if string.match(str1:sub(i, i), \"%u\") then\n      str2 = str2 .. str1:sub(i, i)\n    end\n  end\n  return str2\nend",
    "    return str1:gsub(\"%l+\", \"\")\nend",
    "  local str2 = \"\"\n  for i = 1, #str1 do\n    if string.match(str1:sub(i, i), \"%u\") then\n      str2 = str2 .. str1:sub(i, i)\n    end\n  end\n  return str2\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if string.match(str1:sub(i, i), \"%u\") then\n            str2 = str2 .. str1:sub(i, i)\n        end\n    end\n    return str2\nend",
    "    return str1:gsub(\"%l+\", \"\")\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        local c = str1:sub(i, i)\n        if c:match(\"%u\") then\n            str2 = str2 .. c\n        end\n    end\n    return str2\nend",
    "    local str2 = \"\"\n    for i = 1, #str1 do\n        if string.find(string.lower(str1), string.lower(str1[i]), 1, true) then\n            str2 = str2 .. str1[i]\n        end\n    end\n    return str2\nend"
  ]
}
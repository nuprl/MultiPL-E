{
  "name": "mbpp_292_find",
  "language": "lua",
  "prompt": "-- Write a luathon function to find quotient of two numbers (rounded down to the nearest integer).\nlocal function find(n, m)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find\n    lu.assertEquals(candidate(10, 3), 3)\n    lu.assertEquals(candidate(4, 2), 2)\n    lu.assertEquals(candidate(20, 5), 4)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\treturn math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  local q = math.floor(n / m)\n  return q\nend",
    "    return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "\treturn math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    local q = math.floor(n / m)\n    return q\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "\treturn math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "\treturn math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "\treturn math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n/m)\nend",
    "\treturn math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "\treturn math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n/m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "  return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend",
    "  return math.floor(n/m)\nend",
    "    return math.floor(n / m)\nend",
    "    return math.floor(n / m)\nend"
  ]
}
{
  "name": "mbpp_593_removezero_ip",
  "language": "lua",
  "prompt": "-- Write a function to remove leading zeroes from an ip address.\nlocal function removezero_ip(ip)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_593_removezero_ip.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = removezero_ip\n    lu.assertEquals(candidate('216.08.094.196'), '216.8.94.196')\n    lu.assertEquals(candidate('12.01.024'), '12.1.24')\n    lu.assertEquals(candidate('216.08.094.0196'), '216.8.94.196')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "    local ret = {}\n    for octet in ip:gmatch(\"%d+\") do\n        table.insert(ret, tonumber(octet))\n    end\n    return table.concat(ret, \".\")\nend",
    "  local ret = {}\n  for octet in ip:gmatch(\"%d+\") do\n    table.insert(ret, tonumber(octet))\n  end\n  return table.concat(ret, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor i in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(t, i)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1), tonumber(o2), tonumber(o3), tonumber(o4))\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal octets = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(octets, octet)\n\tend\n\treturn table.concat(octets, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal a,b,c,d = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\ta = tonumber(a)\n\tb = tonumber(b)\n\tc = tonumber(c)\n\td = tonumber(d)\n\treturn string.format(\"%d.%d.%d.%d\", a, b, c, d)\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local t = {}\n  for i in string.gmatch(ip, \"%d+\") do\n    table.insert(t, i)\n  end\n  return table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\",tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0+(%d)\", \"%1\")\n\tif ret == ip then\n\t\treturn ip\n\telse\n\t\treturn removezero_ip(ret)\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "    local retval = ip\n    if ip:sub(1,1) == \"0\" then\n        retval = ip:sub(2)\n    end\n    return retval\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\",tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n\treturn (tonumber(o1) or 0)..\".\"..(tonumber(o2) or 0)..\".\"..(tonumber(o3) or 0)..\".\"..(tonumber(o4) or 0)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\",tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "    if ip:sub(1,1) == \"0\" then\n        return ip:sub(2)\n    else\n        return ip\n    end\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "  local o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n  o1 = tonumber(o1)\n  o2 = tonumber(o2)\n  o3 = tonumber(o3)\n  o4 = tonumber(o4)\n  return string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = \"\"\n\tlocal zero = true\n\tfor i = 1, #ip do\n\t\tlocal c = ip:sub(i, i)\n\t\tif c == \".\" then\n\t\t\tret = ret .. c\n\t\t\tzero = true\n\t\telseif c == \"0\" and zero then\n\t\t\t-- do nothing\n\t\telse\n\t\t\tret = ret .. c\n\t\t\tzero = false\n\t\tend\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local o1,o2,o3,o4 = ip:match(\"(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)\")\n  return (tonumber(o1) or 0)..\".\"..(tonumber(o2) or 0)..\".\"..(tonumber(o3) or 0)..\".\"..(tonumber(o4) or 0)\nend",
    "    local ret = string.gsub(ip, \"^0*\", \"\")\n    if ret == \"\" then\n        ret = 0\n    end\n    return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_parts = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, octet)\n\tend\n\treturn table.concat(ip_parts, \".\")\nend",
    "  local ret = ip:gsub(\":0+\", \":\")\n  ret = ret:gsub(\"^0+\", \"\")\n  return ret\nend",
    "  local t = {}\n  for octet in ip:gmatch(\"%d+\") do\n    table.insert(t, octet)\n  end\n  return table.concat(t, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_parts = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, tonumber(octet))\n\tend\n\treturn table.concat(ip_parts, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0+(%d)\", \"%1\")\n\tif ret == ip then\n\t\treturn ip\n\telse\n\t\treturn removezero_ip(ret)\n\tend\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\nend",
    "\tlocal t = {}\n\tfor w in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(t, w)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal retval = ip\n\tlocal first, last = string.find(ip, \"^0*\")\n\tif first then\n\t\tretval = string.sub(ip, last + 1)\n\tend\n\treturn retval\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ip_list = {}\n\tfor i in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ip_list, i)\n\tend\n\tlocal ip_str = \"\"\n\tfor i = 1, #ip_list do\n\t\tif i == #ip_list then\n\t\t\tip_str = ip_str .. ip_list[i]\n\t\telse\n\t\t\tip_str = ip_str .. ip_list[i] .. \".\"\n\t\tend\n\tend\n\treturn ip_str\nend",
    "\tlocal ret = ip:gsub(\"^0+(%d)\", \"%1\")\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\"):gsub(\"%.0*\", \".\")\n\treturn ret\nend",
    "\tlocal ret = \"\"\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\tret = ret .. tonumber(octet) .. \".\"\n\tend\n\treturn ret:sub(1, -2)\nend",
    "\tlocal newip = {}\n\tlocal i = 1\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\tif octet ~= \"0\" then\n\t\t\tnewip[i] = octet\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn table.concat(newip, \".\")\nend",
    "\tlocal t = {}\n\tfor w in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(w))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_table = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ip_table, octet)\n\tend\n\tlocal ip_nozero = table.concat(ip_table, \".\")\n\treturn ip_nozero\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = {}\n  for octet in ip:gmatch(\"%d+\") do\n    table.insert(ret, octet)\n  end\n  return table.concat(ret, \".\")\nend",
    "\tlocal parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(parts, tonumber(part))\n\tend\n\treturn table.concat(parts, \".\")\nend",
    "\tlocal result = ip:gsub(\"^0*\", \"\"):gsub(\"%.0*\", \".\")\n\tif result:sub(1, 1) == \".\" then\n\t\tresult = result:sub(2)\n\tend\n\treturn result\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = {}\n    for octet in ip:gmatch(\"%d+\") do\n        table.insert(ret, octet)\n    end\n    return table.concat(ret, \".\")\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret:len() == 0 then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = ip\n\tlocal pos = string.find(ip, \"0\")\n\tif pos == 1 then\n\t\tret = string.sub(ip, 2)\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0+(%d)\", \"%1\")\n\tif ret == ip then\n\t\treturn ip:gsub(\"^0+(%x)\", \"%1\")\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = string.gsub(ip, \"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, octet)\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "    local ret = {}\n    local n = 0\n    for v in string.gmatch(ip, \"%d+\") do\n        n = n + 1\n        ret[n] = tonumber(v)\n    end\n    if n ~= 4 then\n        return nil\n    end\n    return string.format(\"%d.%d.%d.%d\", ret[1], ret[2], ret[3], ret[4])\nend",
    "\tlocal ret = {}\n\tfor octet in string.gmatch(ip, \"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\tlocal ip_parts_new = {}\n\tfor i, part in ipairs(ip_parts) do\n\t\tif part ~= \"0\" then\n\t\t\ttable.insert(ip_parts_new, part)\n\t\tend\n\tend\n\treturn table.concat(ip_parts_new, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ip_parts = {}\n\tfor part in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_parts, part)\n\tend\n\tlocal ip_parts_new = {}\n\tfor i, part in ipairs(ip_parts) do\n\t\tif part ~= \"0\" then\n\t\t\ttable.insert(ip_parts_new, part)\n\t\tend\n\tend\n\treturn table.concat(ip_parts_new, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1), tonumber(o2), tonumber(o3), tonumber(o4))\nend",
    "\tlocal ret = ip\n\tlocal num = tonumber(ip)\n\tif num then\n\t\tret = num\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal a, b, c, d = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", a, b, c, d)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\");\n\tif ret == \"\" then\n\t\tret = \"0\";\n\tend\n\treturn ret;\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal ip_table = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ip_table, octet)\n\tend\n\tlocal ip_string = \"\"\n\tfor i,v in ipairs(ip_table) do\n\t\tip_string = ip_string .. tonumber(v)\n\t\tif i < #ip_table then\n\t\t\tip_string = ip_string .. \".\"\n\t\tend\n\tend\n\treturn ip_string\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\treturn string.format(\"%d.%d.%d.%d\", tonumber(o1), tonumber(o2), tonumber(o3), tonumber(o4))\nend",
    "\tlocal o1,o2,o3,o4 = ip:match(\"^(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)%.(%d%d?%d?)$\")\n\to1 = tonumber(o1)\n\to2 = tonumber(o2)\n\to3 = tonumber(o3)\n\to4 = tonumber(o4)\n\treturn string.format(\"%d.%d.%d.%d\", o1, o2, o3, o4)\nend",
    "\tlocal ret = \"\"\n\tlocal zero = false\n\tfor i = 1, #ip do\n\t\tif ip:sub(i, i) == \".\" then\n\t\t\tret = ret .. \".\"\n\t\t\tzero = false\n\t\telseif ip:sub(i, i) == \"0\" and not zero then\n\t\t\tzero = true\n\t\telse\n\t\t\tret = ret .. ip:sub(i, i)\n\t\t\tzero = false\n\t\tend\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor w in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, w)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal i, j, s, e = 1, 1, 1, 1\n\tlocal ret = {}\n\tlocal len = #ip\n\twhile i <= len do\n\t\tj = i\n\t\twhile j <= len and ip[j] ~= \".\" do\n\t\t\tj = j + 1\n\t\tend\n\t\ts, e = i, j - 1\n\t\twhile s <= e and ip[s] == \"0\" do\n\t\t\ts = s + 1\n\t\tend\n\t\tif s <= e then\n\t\t\ttable.insert(ret, string.sub(ip, s, e))\n\t\telse\n\t\t\ttable.insert(ret, \"0\")\n\t\tend\n\t\ti = j + 1\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal retval = ip\n\tlocal first, last = string.find(ip, '0*')\n\tif first then\n\t\tretval = string.sub(ip, last + 1)\n\tend\n\treturn retval\nend",
    "\tlocal ip_parts = {ip:match(\"^(%d+)%.(%d+)%.(%d+)%.(%d+)$\")}\n\tlocal ip_parts_new = {}\n\tfor i,v in ipairs(ip_parts) do\n\t\ttable.insert(ip_parts_new, tonumber(v))\n\tend\n\treturn table.concat(ip_parts_new, \".\")\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, tonumber(octet))\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = {}\n\tlocal count = 0\n\tfor i,v in ipairs(ip) do\n\t\tif v == 0 then\n\t\t\tcount = count + 1\n\t\telse\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = count + 1, #ip do\n\t\ttable.insert(ret, ip[i])\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local t = {}\n  for i in string.gmatch(ip, \"%d+\") do\n    table.insert(t, i)\n  end\n  local ip = table.concat(t, \".\")\n  return ip\nend",
    "\tlocal t = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(t, octet)\n\tend\n\treturn table.concat(t, \".\")\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\treturn \"0\"\n\telse\n\t\treturn ret\n\tend\nend",
    "    local ret = {}\n    local dot = false\n    for i = 1, #ip do\n        local c = ip:sub(i, i)\n        if c == '.' then\n            dot = true\n            table.insert(ret, c)\n        elseif dot and c == '0' then\n            -- do nothing\n        else\n            dot = false\n            table.insert(ret, c)\n        end\n    end\n    return table.concat(ret)\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "  local ret = ip:gsub(\"^0*\", \"\")\n  if ret == \"\" then\n    ret = \"0\"\n  end\n  return ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend",
    "\tlocal ipv4 = ip:match(\"^%d+%.%d+%.%d+%.%d+$\")\n\tif ipv4 then\n\t\tlocal o1,o2,o3,o4 = ip:match(\"(%d+)%.(%d+)%.(%d+)%.(%d+)\")\n\t\treturn (\"%d.%d.%d.%d\"):format(tonumber(o1),tonumber(o2),tonumber(o3),tonumber(o4))\n\telse\n\t\tlocal o1,o2,o3,o4,o5,o6,o7,o8 = ip:match(\"(%x%x):(%x%x):(%x%x):(%x%x):(%x%x):(%x%x):(%x%x):(%x%x)\")\n\t\treturn (\"%s:%s:%s:%s:%s:%s:%s:%s\"):format(o1,o2,o3,o4,o5,o6,o7,o8)\n\tend\nend",
    "    local ret = ip:gsub(\"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "    local ret = string.gsub(ip, \"^0*\", \"\")\n    if ret == \"\" then\n        ret = \"0\"\n    end\n    return ret\nend",
    "\tlocal ret = ip\n\tif ip then\n\t\tret = ip:gsub(\"^0*\", \"\")\n\t\tif ret == \"\" then\n\t\t\tret = \"0\"\n\t\tend\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = ip:gsub(\"^0*\", \"\")\n\tif ret == \"\" then\n\t\tret = \"0\"\n\tend\n\treturn ret\nend",
    "\tlocal ret = {}\n\tfor octet in ip:gmatch(\"%d+\") do\n\t\ttable.insert(ret, tonumber(octet))\n\tend\n\treturn table.concat(ret, \".\")\nend"
  ]
}
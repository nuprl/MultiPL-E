{
  "name": "mbpp_782_odd_length_sum",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the sum of all odd length subtables. https://www.geeksforgeeks.org/sum-of-all-odd-length-subtables/\nlocal function odd_length_sum(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_782_odd_length_sum.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = odd_length_sum\n    lu.assertEquals(candidate({1, 2, 4}), 14)\n    lu.assertEquals(candidate({1, 2, 1, 2}), 15)\n    lu.assertEquals(candidate({1, 7}), 8)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      if (j - i + 1) % 2 == 1 then\n        for k = i, j do\n          sum = sum + arr[k]\n        end\n      end\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local len = j - i + 1\n            if len % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local len = j - i + 1\n      if len % 2 == 1 then\n        for k = i, j do\n          sum = sum + arr[k]\n        end\n      end\n    end\n  end\n  return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local sub_arr = {}\n      for k = i, j do\n        table.insert(sub_arr, arr[k])\n      end\n      if #sub_arr % 2 == 1 then\n        sum = sum + table.reduce(sub_arr, function(a, b) return a + b end)\n      end\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local len = j - i + 1\n            if len % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  local n = #arr\n  for i = 1, n do\n    for j = i, n do\n      local len = j - i + 1\n      if len % 2 == 1 then\n        for k = i, j do\n          sum = sum + arr[k]\n        end\n      end\n    end\n  end\n  return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local len = j - i + 1\n      if len % 2 ~= 0 then\n        for k = i, j do\n          sum = sum + arr[k]\n        end\n      end\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            if (j - i + 1) % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            if (j - i + 1) % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "\tlocal sum = 0\n\tfor i = 1, #arr do\n\t\tfor j = i, #arr do\n\t\t\tif (j - i + 1) % 2 == 1 then\n\t\t\t\tfor k = i, j do\n\t\t\t\t\tsum = sum + arr[k]\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local len = j - i + 1\n            if len % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local len = j - i + 1\n            if len % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local sub_arr = {}\n      for k = i, j do\n        sub_arr[#sub_arr + 1] = arr[k]\n      end\n      if #sub_arr % 2 ~= 0 then\n        sum = sum + table.reduce(sub_arr, function(a, b) return a + b end)\n      end\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local sub_table = {}\n            for k = i, j do\n                table.insert(sub_table, arr[k])\n            end\n            if #sub_table % 2 ~= 0 then\n                sum = sum + table.sum(sub_table)\n            end\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local len = j - i + 1\n            if len % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local len = j - i + 1\n      if len % 2 == 1 then\n        for k = i, j do\n          sum = sum + arr[k]\n        end\n      end\n    end\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local sub_arr = {}\n            for k = i, j do\n                sub_arr[#sub_arr + 1] = arr[k]\n            end\n            if #sub_arr % 2 == 1 then\n                for _, v in ipairs(sub_arr) do\n                    sum = sum + v\n                end\n            end\n        end\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, #arr do\n        for j = i, #arr do\n            local len = j - i + 1\n            if len % 2 == 1 then\n                for k = i, j do\n                    sum = sum + arr[k]\n                end\n            end\n        end\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local len = j - i + 1\n      if len % 2 == 1 then\n        for k = i, j do\n          sum = sum + arr[k]\n        end\n      end\n    end\n  end\n  return sum\nend",
    "  local sum = 0\n  for i = 1, #arr do\n    for j = i, #arr do\n      local sub_arr = {}\n      for k = i, j do\n        table.insert(sub_arr, arr[k])\n      end\n      if #sub_arr % 2 ~= 0 then\n        sum = sum + table.sum(sub_arr)\n      end\n    end\n  end\n  return sum\nend"
  ]
}
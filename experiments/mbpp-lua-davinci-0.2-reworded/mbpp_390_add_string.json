{
  "name": "mbpp_390_add_string",
  "language": "lua",
  "prompt": "-- Write a function to apply a given format string to all of the elements in a table.\nlocal function add_string(list_, string)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_390_add_string.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add_string\n    lu.assertEquals(candidate({1, 2, 3, 4}, 'temp{0}'), {'temp1', 'temp2', 'temp3', 'temp4'})\n    lu.assertEquals(candidate({'a', 'b', 'c', 'd'}, 'python{0}'), {'pythona', 'pythonb', 'pythonc', 'pythond'})\n    lu.assertEquals(candidate({5, 6, 7, 8}, 'string{0}'), {'string5', 'string6', 'string7', 'string8'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\nend",
    "  local new_list = {}\n  for _, v in ipairs(list_) do\n    table.insert(new_list, string:format(v))\n  end\n  return new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "  local new_list = {}\n  for i, v in ipairs(list_) do\n    new_list[i] = string:format(v)\n  end\n  return new_list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  local list = list_\n  if type(list_) == 'string' then\n    list = {list_}\n  end\n  for i, v in ipairs(list) do\n    list[i] = string.format(string, v)\n  end\n  return list\nend",
    "    for i,v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "\tlocal new_list = {}\n\tfor i, v in ipairs(list_) do\n\t\tnew_list[i] = string:format(v)\n\tend\n\treturn new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  local new_list = {}\n  for _, v in ipairs(list_) do\n    table.insert(new_list, string:format(v))\n  end\n  return new_list\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\n\treturn list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tlocal list = list_\n\tif type(list) ~= \"table\" then\n\t\tlist = {list}\n\tend\n\tfor i, v in ipairs(list) do\n\t\tlist[i] = string.format(string, v)\n\tend\n\treturn list\nend",
    "    local list = {}\n    for _, v in ipairs(list_) do\n        table.insert(list, string:format(v))\n    end\n    return list\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\nend",
    "  local list = list_\n  local i = 1\n  while list[i] do\n    list[i] = string.format(string, list[i])\n    i = i + 1\n  end\n  return list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    local new_list = {}\n    for i, v in ipairs(list_) do\n        new_list[i] = string:format(v)\n    end\n    return new_list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "   for i, v in ipairs(list_) do\n      list_[i] = string.format(string, v)\n   end\n   return list_\nend",
    "\tlocal list = list_\n\tif type(list_) == \"string\" then\n\t\tlist = {list_}\n\tend\n\tfor i,v in ipairs(list) do\n\t\tlist[i] = string.format(string, v)\n\tend\n\treturn list\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "\tlocal list = list_\n\tif type(list_) == \"string\" then\n\t\tlist = { list_ }\n\tend\n\tfor i, v in ipairs(list) do\n\t\tlist[i] = string.format(string, v)\n\tend\n\treturn list\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "   for i = 1, #list_ do\n      list_[i] = string.format(string, list_[i])\n   end\n   return list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    local new_list = {}\n    for _, v in ipairs(list_) do\n        table.insert(new_list, string:format(v))\n    end\n    return new_list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i,v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "\tlist_[#list_ + 1] = string\n\treturn list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tlocal list = {}\n\tfor i, v in ipairs(list_) do\n\t\tlist[i] = string:format(v)\n\tend\n\treturn list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    local new_list = {}\n    for _, v in ipairs(list_) do\n        table.insert(new_list, string:format(v))\n    end\n    return new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i,v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i,v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string .. v\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "   for i, v in ipairs(list_) do\n      list_[i] = string.format(string, v)\n   end\n   return list_\nend",
    "\tif type(list_) ~= \"table\" then\n\t\treturn\n\tend\n\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "   for i, v in ipairs(list_) do\n      list_[i] = string.format(string, v)\n   end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tlocal list = list_\n\tif type(list_) == \"string\" then\n\t\tlist = {list_}\n\tend\n\tfor i, v in ipairs(list) do\n\t\tlist[i] = string.format(string, v)\n\tend\n\treturn list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string .. v\n    end\n    return list_\nend",
    "\tlocal list = list_\n\tif type(list) == 'string' then\n\t\tlist = {list}\n\tend\n\tfor i, v in ipairs(list) do\n\t\tlist[i] = string:format(v)\n\tend\n\treturn list\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\n\treturn list_\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "\tlocal list = list_\n\tif type(list) ~= \"table\" then\n\t\tlist = {list}\n\tend\n\tfor i, v in ipairs(list) do\n\t\tlist[i] = string.format(string, v)\n\tend\n\treturn list\nend",
    "\tlocal list = list_\n\tlocal i = 1\n\twhile list[i] do\n\t\tlist[i] = string.format(string, list[i])\n\t\ti = i + 1\n\tend\n\treturn list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  local list = list_\n  for i = 1, #list do\n    list[i] = string.format(string, list[i])\n  end\n  return list\nend",
    "\tlocal new_list = {}\n\tfor i, v in ipairs(list_) do\n\t\tnew_list[i] = string .. v\n\tend\n\treturn new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "\tlocal list = {}\n\tfor i,v in ipairs(list_) do\n\t\tlist[i] = string:format(v)\n\tend\n\treturn list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i,v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "\tlocal list = list_\n\tfor i, v in ipairs(list) do\n\t\tlist[i] = string.format(string, v)\n\tend\n\treturn list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  local new_list = {}\n  for _, v in ipairs(list_) do\n    table.insert(new_list, string:format(v))\n  end\n  return new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "\tlocal new_list = {}\n\tfor _, v in pairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string .. v\n    end\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\nend",
    "\tlocal new_list = {}\n\tfor _, v in ipairs(list_) do\n\t\ttable.insert(new_list, string:format(v))\n\tend\n\treturn new_list\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  local list = list_\n  for i = 1, #list do\n    list[i] = string.format(string, list[i])\n  end\n  return list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "\tfor i, v in ipairs(list_) do\n\t\tlist_[i] = string.format(string, v)\n\tend\n\treturn list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tlocal list = list_\n\tfor i = 1, #list do\n\t\tlist[i] = string.format(string, list[i])\n\tend\n\treturn list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    local new_list = {}\n    for _, v in ipairs(list_) do\n        table.insert(new_list, string:format(v))\n    end\n    return new_list\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\nend",
    "\tlocal new_list = {}\n\tfor i, v in ipairs(list_) do\n\t\tnew_list[i] = string .. v\n\tend\n\treturn new_list\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\n  return list_\nend",
    "\tlocal new_list = {}\n\tfor i, v in ipairs(list_) do\n\t\tnew_list[i] = string:format(v)\n\tend\n\treturn new_list\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\n\treturn list_\nend",
    "    if type(list_) ~= \"table\" then\n        return\n    end\n    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "\tfor i = 1, #list_ do\n\t\tlist_[i] = string.format(string, list_[i])\n\tend\n\treturn list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\nend",
    "  for i = 1, #list_ do\n    list_[i] = string.format(string, list_[i])\n  end\n  return list_\nend",
    "   for i = 1, #list_ do\n      list_[i] = string.format(string, list_[i])\n   end\n   return list_\nend",
    "    for i, v in ipairs(list_) do\n        list_[i] = string.format(string, v)\n    end\n    return list_\nend",
    "  for i, v in ipairs(list_) do\n    list_[i] = string.format(string, v)\n  end\nend",
    "    for i = 1, #list_ do\n        list_[i] = string.format(string, list_[i])\n    end\n    return list_\nend"
  ]
}
{
  "name": "mbpp_245_max_sum",
  "language": "lua",
  "prompt": "-- Write a function that takes a table and finds the maximum sum of a bitonic subsequence for the given table, where a sequence is bitonic if it is first increasing and then decreasing.\nlocal function max_sum(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_sum\n    lu.assertEquals(candidate({1, 15, 51, 45, 33, 100, 12, 18, 9}), 194)\n    lu.assertEquals(candidate({80, 60, 30, 40, 20, 10}), 210)\n    lu.assertEquals(candidate({2, 3, 14, 16, 21, 23, 29, 30}), 138)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i - 1] + max_sum_right[i + 1])\n  end\n  return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, n do\n        if sum < 0 then\n            sum = arr[i]\n        else\n            sum = sum + arr[i]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    if sum < 0 then\n      sum = 0\n    end\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    if sum < 0 then\n      sum = 0\n    end\n  end\n  for i = 1, #arr do\n    if max_sum_left[i] + max_sum_right[i] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "    local max_sum = 0\n    local sum = 0\n    local i = 1\n    while i <= #arr do\n        sum = sum + arr[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n        i = i + 1\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local i = 1\n  local j = 1\n  while i <= #arr do\n    while j <= #arr and arr[j] > arr[j+1] do\n      sum = sum + arr[j]\n      j = j + 1\n    end\n    sum = sum + arr[j]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    sum = 0\n    i = j + 1\n    j = i\n  end\n  return max_sum\nend",
    "    local n = #arr\n    local max_sum = 0\n    local max_sum_arr = {}\n    for i = 1, n do\n        max_sum_arr[i] = arr[i]\n    end\n    for i = 2, n do\n        for j = 1, i - 1 do\n            if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            end\n        end\n    end\n    for i = 1, n do\n        if max_sum < max_sum_arr[i] then\n            max_sum = max_sum_arr[i]\n        end\n    end\n    return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tlocal sum = 0\n\tfor i = 1, #arr do\n\t\tsum = sum + arr[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\t\tmax_sum_left[i] = max_sum\n\tend\n\tsum = 0\n\tfor i = #arr, 1, -1 do\n\t\tsum = sum + arr[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\t\tmax_sum_right[i] = max_sum\n\tend\n\tfor i = 1, #arr - 1 do\n\t\tif max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n\t\t\tmax_sum = max_sum_left[i] + max_sum_right[i + 1]\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, n do\n        sum = math.max(arr[i], sum + arr[i])\n        max_sum = math.max(max_sum, sum)\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local len = #arr\n  local sum = {}\n  for i = 1, len do\n    sum[i] = {}\n    for j = 1, len do\n      sum[i][j] = 0\n    end\n  end",
    "  local max_sum = 0\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  sum = 0\n  max_sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, #arr - 1 do\n    if max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i + 1]\n    end\n  end\n  return max_sum\nend",
    "  local max = 0\n  local n = #arr\n  local l = {}\n  local r = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(max_sum_left[i-1] + arr[i], arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i+1] + arr[i], arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  for i = 1, #arr do\n    local sum = 0\n    for j = i, #arr do\n      sum = sum + arr[j]\n      max_sum = math.max(max_sum, sum)\n    end\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tlocal max_sum_left_i = 0\n\tlocal max_sum_right_i = 0\n\tlocal max_sum_left_j = 0\n\tlocal max_sum_right_j = 0\n\tlocal sum = 0\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal l = 1\n\tlocal m = 1\n\tlocal n = 1\n\tlocal o = 1\n\tlocal p = 1\n\tlocal q = 1\n\tlocal r = 1\n\tlocal s = 1\n\tlocal t = 1\n\tlocal u = 1\n\tlocal v = 1\n\tlocal w = 1\n\tlocal x = 1\n\tlocal y = 1\n\tlocal z = 1\n\tlocal aa = 1\n\tlocal ab = 1\n\tlocal ac = 1\n\tlocal ad = 1\n\tlocal ae = 1\n\tlocal af = 1\n\tlocal ag = 1\n\tlocal ah = 1\n\tlocal ai = 1\n\tlocal aj = 1\n\tlocal ak = 1\n\tlocal al = 1\n\tlocal am = 1\n\tlocal an = 1\n\tlocal ao = 1\n\tlocal ap = 1\n\tlocal aq = 1\n\tlocal ar = 1\n\tlocal as = 1\n\tlocal at = 1\n\tlocal au = 1\n\tlocal av = 1\n\tlocal aw = 1\n\tlocal ax = 1\n\tlocal ay = 1\n\tlocal az = 1\n\tlocal ba = 1\n\tlocal bb = 1\n\tlocal bc = 1\n\tlocal bd = 1\n\tlocal be = 1\n\tlocal bf = 1\n\tlocal bg = 1\n\tlocal bh = 1\n\tlocal bi = 1\n\tlocal bj = 1\n\tlocal bk = 1\n\tlocal bl = 1\n\tlocal bm = 1\n\tlocal bn = 1\n\tlocal bo = 1\n\tlocal bp = 1\n\tlocal bq = 1\n\tlocal br = 1\n\tlocal bs = 1\n\tlocal bt = 1\n\tlocal bu = 1\n\tlocal bv = 1\n\tlocal bw = 1\n\tlocal bx = 1",
    "    local max = 0\n    local sum = 0\n    local max_sum = 0\n    for i = 1, #arr do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, n do\n        if arr[i] > arr[i - 1] then\n            sum = sum + arr[i]\n        else\n            max_sum = math.max(max_sum, sum)\n            sum = arr[i]\n        end\n    end\n    max_sum = math.max(max_sum, sum)\n    return max_sum\nend",
    "  local max_sum_arr = {}\n  local max_sum = 0\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n    if max_sum < max_sum_arr[i] then\n      max_sum = max_sum_arr[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum_arr = {}\n  local max_sum = 0\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n    for j = 1, i - 1 do\n      if arr[j] < arr[i] and max_sum_arr[j] + arr[i] > max_sum_arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n    if max_sum_arr[i] > max_sum then\n      max_sum = max_sum_arr[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_before = arr[1]\n  local max_sum_ending_here_after = arr[1]\n  local max_sum_ending_here_before_index = 1\n  local max_sum_ending_here_after_index = 1\n  local max_sum_ending_here_index = 1\n  local max_sum_ending_here_before_index_before = 1\n  local max_sum_ending_here_after_index_after = 1\n  local max_sum_ending_here_index_before = 1\n  local max_sum_ending_here_index_after = 1\n  local max_sum_ending_here_before_index_before_before = 1\n  local max_sum_ending_here_after_index_after_after = 1\n  local max_sum_ending_here_index_before_before = 1\n  local max_sum_ending_here_index_after_after = 1\n  local max_sum_ending_here_before_index_before_before_before = 1\n  local max_sum_ending_here_after_index_after_after_after = 1\n  local max_sum_ending_here_index_before_before_before = 1\n  local max_sum_ending_here_index_after_after_after = 1\n  local max_sum_ending_here_before_index_before_before_before_before = 1\n  local max_sum_ending_here_after_index_after_after_after_after = 1\n  local max_sum_ending_here_index_before_before_before_before = 1\n  local max_sum_ending_here_index_after_after_after_after = 1\n  local max_sum_ending_here_before_index_before_before_before_before_before = 1\n  local max_sum_ending_here_after_index_after_after_after_after_after = 1\n  local max_sum_ending_here_index_before_before_before_before_before = 1\n  local max_sum_ending_here",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_reverse = arr[n]\n  local max_sum_reverse = arr[n]",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_ending_here = 0\n    for i = 1, #arr do\n        max_sum_ending_here = max_sum_ending_here + arr[i]\n        if max_sum_ending_here < 0 then\n            max_sum_ending_here = 0\n        end\n        if max_sum < max_sum_ending_here then\n            max_sum = max_sum_ending_here\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    if sum < 0 then\n      sum = 0\n    end\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    if sum < 0 then\n      sum = 0\n    end\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_end = arr[1]\n  local max_sum_start = arr[1]\n  local max_sum_start_index = 1\n  local max_sum_end_index = 1\n  for i = 2, #arr do\n    if arr[i] > max_sum_end + arr[i] then\n      max_sum_end = arr[i]\n      max_sum_end_index = i\n    else\n      max_sum_end = max_sum_end + arr[i]\n    end\n    if max_sum_end > max_sum then\n      max_sum = max_sum_end\n      max_sum_start = max_sum_end\n      max_sum_start_index = max_sum_end_index\n    end\n    if arr[i] > max_sum_start + arr[i] then\n      max_sum_start = arr[i]\n      max_sum_start_index = i\n    else\n      max_sum_start = max_sum_start + arr[i]\n    end\n    if max_sum_start > max_sum then\n      max_sum = max_sum_start\n      max_sum_end = max_sum_start\n      max_sum_end_index = max_sum_start_index\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_ending_here = 0\n  local max_sum_ending_here_reversed = 0\n  local max_sum_ending_here_reversed_reversed = 0\n  local max_sum_ending_here_reversed_reversed_reversed = 0\n  for i = 1, #arr do\n    max_sum_ending_here = max_sum_ending_here + arr[i]\n    if max_sum_ending_here < 0 then\n      max_sum_ending_here = 0\n    end\n    if max_sum_ending_here > max_sum then\n      max_sum = max_sum_ending_here\n    end\n  end\n  for i = #arr, 1, -1 do\n    max_sum_ending_here_reversed = max_sum_ending_here_reversed + arr[i]\n    if max_sum_ending_here_reversed < 0 then\n      max_sum_ending_here_reversed = 0\n    end\n    if max_sum_ending_here_reversed > max_sum then\n      max_sum = max_sum_ending_here_reversed\n    end\n  end\n  for i = 1, #arr - 1 do\n    max_sum_ending_here_reversed_reversed = max_sum_ending_here_reversed_reversed + arr[i]\n    if max_sum_ending_here_reversed_reversed < 0 then\n      max_sum_ending_here_reversed_reversed = 0\n    end\n    if max_sum_ending_here_reversed_reversed > max_sum then\n      max_sum = max_sum_ending_here_reversed_reversed\n    end\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_ending_here_reversed_reversed_reversed = max_sum_ending_here_reversed_reversed_reversed + arr[i]\n    if max_sum_ending_here_reversed_",
    "  local max_sum = 0\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    elseif sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(max_sum_left[i - 1] + arr[i], arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i + 1] + arr[i], arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left_i = 1\n  local max_sum_right_i = 1",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tfor i = 1, #arr do\n\t\tmax_sum_left[i] = 0\n\t\tmax_sum_right[i] = 0\n\tend\n\tfor i = 1, #arr do\n\t\tsum = 0\n\t\tfor j = 1, i do\n\t\t\tif arr[j] < arr[i] then\n\t\t\t\tsum = sum + arr[j]\n\t\t\tend\n\t\tend\n\t\tmax_sum_left[i] = sum\n\tend\n\tfor i = #arr, 1, -1 do\n\t\tsum = 0\n\t\tfor j = #arr, i, -1 do\n\t\t\tif arr[j] < arr[i] then\n\t\t\t\tsum = sum + arr[j]\n\t\t\tend\n\t\tend\n\t\tmax_sum_right[i] = sum\n\tend\n\tfor i = 1, #arr do\n\t\tif max_sum_left[i] + max_sum_right[i] > max_sum then\n\t\t\tmax_sum = max_sum_left[i] + max_sum_right[i]\n\t\tend\n\tend\n\treturn max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tlocal max_sum_left_i = 0\n\tlocal max_sum_right_i = 0\n\tlocal max_sum_left_j = 0\n\tlocal max_sum_right_j = 0\n\tlocal max_sum_left_sum = 0\n\tlocal max_sum_right_sum = 0\n\tlocal max_sum_left_sum_i = 0\n\tlocal max_sum_right_sum_i = 0\n\tlocal max_sum_left_sum_j = 0\n\tlocal max_sum_right_sum_j = 0\n\tlocal max_sum_left_sum_sum = 0\n\tlocal max_sum_right_sum_sum = 0\n\tlocal max_sum_left_sum_sum_i = 0\n\tlocal max_sum_right_sum_sum_i = 0\n\tlocal max_sum_left_sum_sum_j = 0\n\tlocal max_sum_right_sum_sum_j = 0\n\tlocal max_sum_left_sum_sum_sum = 0\n\tlocal max_sum_right_sum_sum_sum = 0\n\tlocal max_sum_left_sum_sum_sum_i = 0\n\tlocal max_sum_right_sum_sum_sum_i = 0\n\tlocal max_sum_left_sum_sum_sum_j = 0\n\tlocal max_sum_right_sum_sum_sum_j = 0\n\tlocal max_sum_left_sum_sum_sum_sum = 0\n\tlocal max_sum_right_sum_sum_sum_sum = 0\n\tlocal max_sum_left_sum_sum_sum_sum_i = 0\n\tlocal max_sum_right_sum_sum_sum_sum_i = 0\n\tlocal max_sum_left_sum_sum_sum_sum_j = 0\n\tlocal max_sum_right_sum_sum_sum_sum_j = 0\n\tlocal max_sum_left_sum_sum_sum_sum_sum = 0\n\tlocal max_sum_right_sum_sum_sum_sum_sum = 0\n\tlocal max",
    "\tlocal n = #arr\n\tlocal max_sum_arr = {}\n\tlocal max_sum_arr_rev = {}\n\tmax_sum_arr[1] = arr[1]\n\tmax_sum_arr_rev[1] = arr[n]\n\tfor i = 2, n do\n\t\tmax_sum_arr[i] = arr[i]\n\t\tmax_sum_arr_rev[i] = arr[n - i + 1]\n\t\tfor j = 1, i - 1 do\n\t\t\tif arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n\t\t\t\tmax_sum_arr[i] = max_sum_arr[j] + arr[i]\n\t\t\tend\n\t\t\tif arr[n - i + 1] > arr[n - j + 1] and max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[n - i + 1] then\n\t\t\t\tmax_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[n - i + 1]\n\t\t\tend\n\t\tend\n\tend\n\tlocal max = max_sum_arr[1] + max_sum_arr_rev[1] - arr[1]\n\tfor i = 2, n do\n\t\tif max < max_sum_arr[i] + max_sum_arr_rev[i] - arr[i] then\n\t\t\tmax = max_sum_arr[i] + max_sum_arr_rev[i] - arr[i]\n\t\tend\n\tend\n\treturn max\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  sum = 0\n  max_sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, #arr - 1 do\n    if max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i + 1]\n    end\n  end\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local n = #arr\n  local max_sum = arr[1]\n  local sum = arr[1]\n  for i = 2, n do\n    if arr[i] > arr[i - 1] then\n      sum = sum + arr[i]\n    else\n      max_sum = math.max(max_sum, sum)\n      sum = arr[i]\n    end\n  end\n  max_sum = math.max(max_sum, sum)\n  sum = arr[n]\n  for i = n - 1, 1, -1 do\n    if arr[i] > arr[i + 1] then\n      sum = sum + arr[i]\n    else\n      max_sum = math.max(max_sum, sum)\n      sum = arr[i]\n    end\n  end\n  max_sum = math.max(max_sum, sum)\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum_arr = {}\n  local max_sum_arr_rev = {}\n  local max_sum = 0\n  for i = 1, n do\n    max_sum_arr[i] = arr[i]\n    max_sum_arr_rev[i] = arr[i]\n  end\n  for i = 2, n do\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n  end\n  for i = n - 1, 1, -1 do\n    for j = n, i + 1, -1 do\n      if arr[i] > arr[j] and max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] then\n        max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n      end\n    end\n  end\n  for i = 1, n do\n    if max_sum < max_sum_arr[i] + max_sum_arr_rev[i] - arr[i] then\n      max_sum = max_sum_arr[i] + max_sum_arr_rev[i] - arr[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_backwards = arr[1]\n  local max_sum_so_far = arr[1]\n  local max_sum_so_far_backwards = arr[1]",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_backward = arr[#arr]\n  local max_sum_backward = arr[#arr]\n  for i = 2, #arr do\n    max_sum_ending_here = math.max(arr[i], max_sum_ending_here + arr[i])\n    max_sum = math.max(max_sum, max_sum_ending_here)\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_ending_here_backward = math.max(arr[i], max_sum_ending_here_backward + arr[i])\n    max_sum_backward = math.max(max_sum_backward, max_sum_ending_here_backward)\n  end\n  return math.max(max_sum, max_sum_backward)\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  max_sum = 0\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, #arr - 1 do\n    if max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i + 1]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(arr[i], max_sum_left[i-1] + arr[i])\n  end\n  for i = #arr-1, 1, -1 do\n    max_sum_right[i] = math.max(arr[i], max_sum_right[i+1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    max_sum_left[i] = sum\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    max_sum_right[i] = sum\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = arr[1]\n  local n = #arr\n  local max_sum_ending_here = arr[1]\n  local max_sum_starting_here = arr[n]\n  local max_sum_ending_here_arr = {arr[1]}\n  local max_sum_starting_here_arr = {arr[n]}\n  for i = 2, n do\n    max_sum_ending_here = math.max(arr[i], max_sum_ending_here + arr[i])\n    max_sum_ending_here_arr[i] = max_sum_ending_here\n    max_sum = math.max(max_sum, max_sum_ending_here)\n  end\n  for i = n - 1, 1, -1 do\n    max_sum_starting_here = math.max(arr[i], max_sum_starting_here + arr[i])\n    max_sum_starting_here_arr[i] = max_sum_starting_here\n    max_sum = math.max(max_sum, max_sum_starting_here)\n  end\n  for i = 1, n - 2 do\n    max_sum = math.max(max_sum, max_sum_ending_here_arr[i] + max_sum_starting_here_arr[i + 2])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    elseif sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tlocal max_sum_arr = {}\n\tlocal sum_arr = {}\n\tfor i = 1, #arr do\n\t\tsum_arr[i] = arr[i]\n\t\tmax_sum_arr[i] = arr[i]\n\t\tfor j = 1, i - 1 do\n\t\t\tif arr[i] > arr[j] then\n\t\t\t\tsum_arr[i] = sum_arr[i] + sum_arr[j]\n\t\t\t\tmax_sum_arr[i] = sum_arr[i]\n\t\t\tend\n\t\tend\n\t\tif sum_arr[i] > max_sum then\n\t\t\tmax_sum = sum_arr[i]\n\t\tend\n\tend\n\tfor i = #arr, 1, -1 do\n\t\tsum_arr[i] = arr[i]\n\t\tfor j = #arr, i + 1, -1 do\n\t\t\tif arr[i] > arr[j] then\n\t\t\t\tsum_arr[i] = sum_arr[i] + sum_arr[j]\n\t\t\t\tif sum_arr[i] > max_sum_arr[i] then\n\t\t\t\t\tmax_sum_arr[i] = sum_arr[i]\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif max_sum_arr[i] > max_sum then\n\t\t\tmax_sum = max_sum_arr[i]\n\t\tend\n\tend\n\treturn max_sum\nend",
    "  local max_sum_arr = {}\n  local max_sum = 0\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n  end\n  for i = 1, #arr do\n    for j = 1, i - 1 do\n      if arr[j] < arr[i] then\n        max_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n      end\n    end\n    max_sum = math.max(max_sum, max_sum_arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  for i = 1, #arr do\n    max_sum_left[i] = arr[i]\n    max_sum_right[i] = arr[i]\n  end\n  for i = 2, #arr do\n    for j = 1, i - 1 do\n      if arr[j] < arr[i] then\n        max_sum_left[i] = math.max(max_sum_left[i], max_sum_left[j] + arr[i])\n      end\n    end\n  end\n  for i = #arr - 1, 1, -1 do\n    for j = #arr, i + 1, -1 do\n      if arr[j] < arr[i] then\n        max_sum_right[i] = math.max(max_sum_right[i], max_sum_right[j] + arr[i])\n      end\n    end\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local n = #arr\n  local max_sum_left = {}\n  local max_sum_right = {}\n  for i = 1, n do\n    max_sum_left[i] = 0\n    max_sum_right[i] = 0\n  end\n  max_sum_left[1] = arr[1]\n  max_sum_right[n] = arr[n]\n  for i = 2, n do\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] then\n        max_sum_left[i] = math.max(max_sum_left[i], max_sum_left[j])\n      end\n    end\n    max_sum_left[i] = max_sum_left[i] + arr[i]\n  end\n  for i = n - 1, 1, -1 do\n    for j = n, i + 1, -1 do\n      if arr[i] > arr[j] then\n        max_sum_right[i] = math.max(max_sum_right[i], max_sum_right[j])\n      end\n    end\n    max_sum_right[i] = max_sum_right[i] + arr[i]\n  end\n  for i = 1, n do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local n = #arr\n  local sum = {}\n  for i = 1, n do\n    sum[i] = {}\n    for j = 1, n do\n      sum[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    sum[i][i] = arr[i]\n  end\n  for i = 1, n do\n    for j = i + 1, n do\n      sum[i][j] = sum[i][j - 1] + arr[j]\n    end\n  end\n  for i = 1, n do\n    for j = i, n do\n      local max = 0\n      for k = i, j do\n        if sum[i][k] > max then\n          max = sum[i][k]\n        end\n      end\n      if max > max_sum then\n        max_sum = max\n      end\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = arr[1]\n    local max_sum_left = arr[1]\n    local max_sum_right = arr[1]\n    local max_sum_left_arr = {arr[1]}\n    local max_sum_right_arr = {arr[1]}",
    "  local max_sum = 0\n  local len = #arr\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, len do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    if sum < 0 then\n      sum = 0\n    end\n  end\n  sum = 0\n  for i = len, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    if sum < 0 then\n      sum = 0\n    end\n  end\n  for i = 1, len do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "    local n = #arr\n    local max_sum = 0\n    local max_sum_arr = {}\n    for i = 1, n do\n        max_sum_arr[i] = arr[i]\n    end\n    for i = 2, n do\n        for j = 1, i - 1 do\n            if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            end\n        end\n    end\n    for i = 1, n do\n        if max_sum < max_sum_arr[i] then\n            max_sum = max_sum_arr[i]\n        end\n    end\n    return max_sum\nend",
    "  local max = 0\n  local n = #arr\n  local l = {}\n  local r = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]",
    "    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, #arr do\n        if arr[i] > arr[i - 1] then\n            sum = sum + arr[i]\n        else\n            max_sum = math.max(max_sum, sum)\n            sum = arr[i]\n        end\n    end\n    return math.max(max_sum, sum)\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_ending_here = arr[1]\n    local max_sum_ending_here_backwards = arr[n]\n    local max_sum_backwards = arr[n]",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local i = 1\n  local j = #arr\n  while i <= #arr do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n    i = i + 1\n  end\n  sum = 0\n  while j >= 1 do\n    sum = sum + arr[j]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[j] = max_sum\n    j = j - 1\n  end\n  for i = 1, #arr do\n    if max_sum_left[i] + max_sum_right[i] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i]\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_rev = {arr[1]}\n  local max_sum_arr_rev_rev = {arr[1]}\n  for i = 2, n do\n    local max_sum_arr_i = arr[i]\n    local max_sum_arr_rev_i = arr[i]\n    local max_sum_arr_rev_rev_i = arr[i]\n    for j = 1, i - 1 do\n      if arr[j] < arr[i] then\n        max_sum_arr_i = math.max(max_sum_arr_i, arr[i] + max_sum_arr[j])\n      end\n      if arr[j] > arr[i] then\n        max_sum_arr_rev_i = math.max(max_sum_arr_rev_i, arr[i] + max_sum_arr_rev[j])\n      end\n      if arr[j] < arr[i] then\n        max_sum_arr_rev_rev_i = math.max(max_sum_arr_rev_rev_i, arr[i] + max_sum_arr_rev_rev[j])\n      end\n    end\n    max_sum = math.max(max_sum, max_sum_arr_i, max_sum_arr_rev_i, max_sum_arr_rev_rev_i)\n    max_sum_arr[i] = max_sum_arr_i\n    max_sum_arr_rev[i] = max_sum_arr_rev_i\n    max_sum_arr_rev_rev[i] = max_sum_arr_rev_rev_i\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_index = 1\n  local max_sum_arr_index_end = 1\n  local max_sum_arr_index_start = 1\n  local max_sum_arr_index_start_end = 1\n  local max_sum_arr_index_start_start = 1\n  local max_sum_arr_index_start_start_end = 1\n  local max_sum_arr_index_start_start_start = 1\n  local max_sum_arr_index_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start = 1\n  local max_sum_arr_index_start_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start_start = 1\n  local max_sum_arr_index_start_start_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start_start_start = 1\n  local max_sum_arr_index_start_start_start_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start_start = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start_start_start = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start_start_start_end = 1\n  local max_sum_arr_index_start_start_start_start_start_start_start_start_start_start = 1\n  local max_sum_arr",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_left = arr[1]\n  local max_sum_right = arr[n]\n  local sum_left = arr[1]\n  local sum_right = arr[n]\n  local max_sum_left_arr = {arr[1]}\n  local max_sum_right_arr = {arr[n]}",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}\n    local max_sum_left_tmp = 0\n    local max_sum_right_tmp = 0",
    "  local max_sum_inc = {}\n  local max_sum_dec = {}\n  local max_sum = 0\n  local n = #arr\n  max_sum_inc[1] = arr[1]\n  max_sum_dec[n] = arr[n]\n  for i = 2, n do\n    max_sum_inc[i] = math.max(arr[i], max_sum_inc[i - 1] + arr[i])\n  end\n  for i = n - 1, 1, -1 do\n    max_sum_dec[i] = math.max(arr[i], max_sum_dec[i + 1] + arr[i])\n  end\n  for i = 1, n do\n    max_sum = math.max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}\n    local sum = 0\n    for i = 1, #arr do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        max_sum_left[i] = sum\n    end\n    sum = 0\n    for i = #arr, 1, -1 do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        max_sum_right[i] = sum\n    end\n    for i = 1, #arr do\n        max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "    local max_sum = 0\n    local max_sum_ending_here = 0\n    local max_sum_ending_here_reverse = 0\n    local max_sum_ending_here_reverse_index = 0\n    local max_sum_ending_here_index = 0\n    local max_sum_ending_here_reverse_index_reverse = 0\n    local max_sum_ending_here_index_reverse = 0\n    for i = 1, #arr do\n        max_sum_ending_here = max_sum_ending_here + arr[i]\n        if max_sum_ending_here < 0 then\n            max_sum_ending_here = 0\n            max_sum_ending_here_index = i\n        end\n        if max_sum_ending_here > max_sum then\n            max_sum = max_sum_ending_here\n            max_sum_ending_here_index_reverse = max_sum_ending_here_index\n            max_sum_ending_here_reverse_index_reverse = i\n        end\n    end\n    for i = #arr, 1, -1 do\n        max_sum_ending_here_reverse = max_sum_ending_here_reverse + arr[i]\n        if max_sum_ending_here_reverse < 0 then\n            max_sum_ending_here_reverse = 0\n            max_sum_ending_here_reverse_index = i\n        end\n        if max_sum_ending_here_reverse > max_sum then\n            max_sum = max_sum_ending_here_reverse\n            max_sum_ending_here_reverse_index_reverse = max_sum_ending_here_reverse_index\n            max_sum_ending_here_index_reverse = i\n        end\n    end\n    if max_sum_ending_here_index_reverse == max_sum_ending_here_reverse_index_reverse then\n        return max_sum, {max_sum_ending_here_index_reverse, max_sum_ending_here_reverse_index_reverse}\n    else\n        return max_sum, {max_sum_ending_here_index_reverse, max_sum_ending_here_reverse_index_reverse}\n    end",
    "  local n = #arr\n  local max_sum_inc = {}\n  local max_sum_dec = {}\n  local max_sum = 0",
    "  local max_sum = 0\n  local max_sum_ending_at = {}\n  local max_sum_starting_at = {}\n  local max_sum_ending_at_reversed = {}\n  local max_sum_starting_at_reversed = {}\n  local max_sum_ending_at_reversed_reversed = {}\n  local max_sum_starting_at_reversed_reversed = {}",
    "  local max_sum = arr[1]\n  local max_sum_so_far = arr[1]\n  for i = 2, #arr do\n    max_sum_so_far = math.max(arr[i], max_sum_so_far + arr[i])\n    max_sum = math.max(max_sum, max_sum_so_far)\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_ending_here = 0\n    local max_sum_ending_here_reverse = 0\n    local n = #arr\n    for i = 1, n do\n        max_sum_ending_here = max_sum_ending_here + arr[i]\n        if max_sum_ending_here < 0 then\n            max_sum_ending_here = 0\n        end\n        if max_sum < max_sum_ending_here then\n            max_sum = max_sum_ending_here\n        end\n    end\n    for i = n, 1, -1 do\n        max_sum_ending_here_reverse = max_sum_ending_here_reverse + arr[i]\n        if max_sum_ending_here_reverse < 0 then\n            max_sum_ending_here_reverse = 0\n        end\n        if max_sum < max_sum_ending_here_reverse then\n            max_sum = max_sum_ending_here_reverse\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tfor i = 1, #arr do\n\t\tsum = sum + arr[i]\n\t\tif sum < 0 then\n\t\t\tsum = 0\n\t\telseif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(arr[i], max_sum_left[i-1] + arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(arr[i], max_sum_right[i+1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_ending_here = arr[1]\n  local max_ending_here_reverse = arr[n]\n  local max_sum_reverse = arr[n]\n  for i = 2, n do\n    max_ending_here = math.max(max_ending_here + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_ending_here)\n    max_ending_here_reverse = math.max(max_ending_here_reverse + arr[n - i + 1], arr[n - i + 1])\n    max_sum_reverse = math.max(max_sum_reverse, max_ending_here_reverse)\n  end\n  return math.max(max_sum, max_sum_reverse)\nend",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}\n    local n = #arr\n    for i = 1, n do\n        max_sum_left[i] = 0\n        max_sum_right[i] = 0\n    end\n    max_sum_left[1] = arr[1]\n    for i = 2, n do\n        max_sum_left[i] = math.max(arr[i], max_sum_left[i - 1] + arr[i])\n    end\n    max_sum_right[n] = arr[n]\n    for i = n - 1, 1, -1 do\n        max_sum_right[i] = math.max(arr[i], max_sum_right[i + 1] + arr[i])\n    end\n    for i = 1, n do\n        max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_arr = {}\n  local max_sum_arr_rev = {}\n  local max_sum_arr_rev_rev = {}\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n    max_sum_arr_rev[i] = arr[i]\n    max_sum_arr_rev_rev[i] = arr[i]\n  end\n  for i = 2, #arr do\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n  end\n  for i = #arr - 1, 1, -1 do\n    for j = #arr, i + 1, -1 do\n      if arr[i] > arr[j] and max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] then\n        max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n      end\n    end\n  end\n  for i = 1, #arr do\n    max_sum_arr_rev_rev[i] = max_sum_arr_rev[#arr - i + 1]\n  end\n  for i = 1, #arr do\n    if max_sum < max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i] then\n      max_sum = max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local n = #arr\n  for i = 1, n do\n    sum = 0\n    for j = i, n do\n      sum = sum + arr[j]\n      if sum > max_sum then\n        max_sum = sum\n      end\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_arr = {}\n  local max_sum_arr_rev = {}\n  local max_sum_arr_rev_rev = {}\n  local max_sum_arr_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = {}\n  local max_sum_arr_rev_rev_rev_rev_rev",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_arr = {arr[1]}\n    local max_sum_arr_rev = {arr[1]}\n    for i = 2, n do\n        max_sum_arr[i] = math.max(max_sum_arr[i - 1] + arr[i], arr[i])\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    for i = n - 1, 1, -1 do\n        max_sum_arr_rev[i] = math.max(max_sum_arr_rev[i + 1] + arr[i], arr[i])\n        max_sum = math.max(max_sum, max_sum_arr_rev[i])\n    end\n    for i = 1, n - 2 do\n        max_sum = math.max(max_sum, max_sum_arr[i] + max_sum_arr_rev[i + 2])\n    end\n    return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_arr = {arr[1]}\n    local max_sum_arr_rev = {arr[1]}\n    for i = 2, n do\n        max_sum_arr[i] = math.max(arr[i], max_sum_arr[i - 1] + arr[i])\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    for i = n - 1, 1, -1 do\n        max_sum_arr_rev[i] = math.max(arr[i], max_sum_arr_rev[i + 1] + arr[i])\n        max_sum = math.max(max_sum, max_sum_arr_rev[i])\n    end\n    for i = 2, n - 1 do\n        max_sum = math.max(max_sum, max_sum_arr[i - 1] + max_sum_arr_rev[i + 1])\n    end\n    return max_sum\nend",
    "  local n = #arr\n  local max_sum_arr = {}\n  for i = 1, n do\n    max_sum_arr[i] = arr[i]\n  end\n  for i = 2, n do\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n  end\n  local max = max_sum_arr[1]\n  for i = 2, n do\n    if max < max_sum_arr[i] then\n      max = max_sum_arr[i]\n    end\n  end\n  return max\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(max_sum_left[i - 1] + arr[i], arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i + 1] + arr[i], arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_end = arr[1]\n  for i = 2, n do\n    max_sum_end = math.max(max_sum_end + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_end)\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_arr = {}\n  for i = 1, #arr do\n    local sum = 0\n    local sum_arr = {}\n    for j = i, #arr do\n      sum = sum + arr[j]\n      table.insert(sum_arr, arr[j])\n      if sum > max_sum then\n        max_sum = sum\n        max_sum_arr = sum_arr\n      end\n    end\n  end\n  return max_sum, max_sum_arr\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_ending_here = 0\n  local max_sum_ending_here_reverse = 0",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_left = arr[1]\n  local max_sum_ending_here_right = arr[1]\n  local max_sum_ending_here_left_index = 1\n  local max_sum_ending_here_right_index = 1\n  local max_sum_ending_here_index = 1\n  for i = 2, #arr do\n    if arr[i] > max_sum_ending_here_left then\n      max_sum_ending_here_left = arr[i]\n      max_sum_ending_here_left_index = i\n    end\n    if arr[i] > max_sum_ending_here_right then\n      max_sum_ending_here_right = arr[i]\n      max_sum_ending_here_right_index = i\n    end\n    if arr[i] > max_sum_ending_here then\n      max_sum_ending_here = arr[i]\n      max_sum_ending_here_index = i\n    end\n    if arr[i] < max_sum_ending_here then\n      if max_sum_ending_here_index < max_sum_ending_here_left_index then\n        max_sum_ending_here_left = max_sum_ending_here\n        max_sum_ending_here_left_index = max_sum_ending_here_index\n      end\n      if max_sum_ending_here_index > max_sum_ending_here_right_index then\n        max_sum_ending_here_right = max_sum_ending_here\n        max_sum_ending_here_right_index = max_sum_ending_here_index\n      end\n      max_sum_ending_here = arr[i]\n      max_sum_ending_here_index = i\n    end\n    if max_sum_ending_here_left + max_sum_ending_here_right > max_sum then\n      max_sum = max_sum_ending_here_left + max_sum_ending_here_right\n    end\n  end\n ",
    "  local max_sum = 0\n  local max_sum_arr = {}\n  local max_sum_arr_rev = {}\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n    max_sum_arr_rev[i] = arr[i]\n  end\n  for i = 2, #arr do\n    for j = 1, i - 1 do\n      if arr[j] < arr[i] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n  end\n  for i = #arr - 1, 1, -1 do\n    for j = #arr, i + 1, -1 do\n      if arr[j] < arr[i] and max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] then\n        max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n      end\n    end\n  end\n  for i = 1, #arr do\n    if max_sum < max_sum_arr[i] + max_sum_arr_rev[i] - arr[i] then\n      max_sum = max_sum_arr[i] + max_sum_arr_rev[i] - arr[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local len = #arr\n  local max_sum_left = {}\n  local max_sum_right = {}\n  max_sum_left[1] = arr[1]\n  max_sum_right[len] = arr[len]\n  for i = 2, len do\n    max_sum_left[i] = math.max(max_sum_left[i - 1] + arr[i], arr[i])\n  end\n  for i = len - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i + 1] + arr[i], arr[i])\n  end\n  for i = 1, len do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_ending_here = 0\n  local max_sum_ending_here_reverse = 0\n  local max_sum_ending_here_reverse_index = 0\n  local max_sum_ending_here_index = 0\n  local max_sum_ending_here_reverse_index_reverse = 0\n  local max_sum_ending_here_index_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_reverse_index_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = 0\n  local max_sum_ending_here_index_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse",
    "    local max_sum = 0\n    local sum = 0\n    for i = 1, #arr do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum_arr = {}\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n  end\n  for i = 2, #arr do\n    for j = 1, i - 1 do\n      if arr[j] < arr[i] then\n        max_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n      end\n    end\n  end\n  local max_sum = 0\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_arr[i])\n  end\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_rev = {arr[1]}\n  for i = 2, n do\n    max_sum_arr[i] = math.max(max_sum_arr[i - 1] + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_arr[i])\n  end\n  for i = n - 1, 1, -1 do\n    max_sum_arr_rev[i] = math.max(max_sum_arr_rev[i + 1] + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_arr_rev[i])\n  end\n  for i = 1, n - 2 do\n    max_sum = math.max(max_sum, max_sum_arr[i] + max_sum_arr_rev[i + 2])\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = arr[1]\n  local sum = arr[1]\n  local max_sum_left = arr[1]\n  local max_sum_right = arr[1]\n  local sum_left = arr[1]\n  local sum_right = arr[1]\n  for i = 2, #arr do\n    if arr[i] > arr[i - 1] then\n      sum_left = sum_left + arr[i]\n      if sum_left > max_sum_left then\n        max_sum_left = sum_left\n      end\n    else\n      sum_left = arr[i]\n    end\n    if arr[#arr - i + 2] > arr[#arr - i + 1] then\n      sum_right = sum_right + arr[#arr - i + 2]\n      if sum_right > max_sum_right then\n        max_sum_right = sum_right\n      end\n    else\n      sum_right = arr[#arr - i + 2]\n    end\n  end\n  return max_sum_left + max_sum_right - arr[math.floor(#arr / 2) + 1]\nend",
    "  local max_sum = 0\n  local sum = 0\n  local n = #arr\n  for i = 1, n do\n    sum = 0\n    for j = i, n do\n      sum = sum + arr[j]\n      if sum > max_sum then\n        max_sum = sum\n      end\n    end\n  end\n  return max_sum\nend",
    "    local max_sum_arr = {}\n    local max_sum = 0\n    for i = 1, #arr do\n        max_sum_arr[i] = arr[i]\n        for j = 1, i - 1 do\n            if arr[j] < arr[i] then\n                max_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n            end\n        end\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = 1, #arr do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(arr[i], max_sum_left[i - 1] + arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(arr[i], max_sum_right[i + 1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    elseif sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(0, sum)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(0, sum)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tlocal max_sum_left_temp = 0\n\tlocal max_sum_right_temp = 0\n\tfor i = 1, #arr do\n\t\tmax_sum_left_temp = max_sum_left_temp + arr[i]\n\t\tif max_sum_left_temp < 0 then\n\t\t\tmax_sum_left_temp = 0\n\t\tend\n\t\tmax_sum_left[i] = max_sum_left_temp\n\tend\n\tfor i = #arr, 1, -1 do\n\t\tmax_sum_right_temp = max_sum_right_temp + arr[i]\n\t\tif max_sum_right_temp < 0 then\n\t\t\tmax_sum_right_temp = 0\n\t\tend\n\t\tmax_sum_right[i] = max_sum_right_temp\n\tend\n\tfor i = 1, #arr do\n\t\tif max_sum < max_sum_left[i] + max_sum_right[i] then\n\t\t\tmax_sum = max_sum_left[i] + max_sum_right[i]\n\t\tend\n\tend\n\treturn max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(max_sum_left[i-1] + arr[i], arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i+1] + arr[i], arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max = arr[1]\n  local max_sum = arr[1]\n  for i = 2, #arr do\n    max = math.max(arr[i], max + arr[i])\n    max_sum = math.max(max_sum, max)\n  end\n  return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tfor i = 1, #arr do\n\t\tmax_sum_left[i] = arr[i]\n\t\tmax_sum_right[i] = arr[i]\n\tend\n\tfor i = 2, #arr do\n\t\tfor j = 1, i - 1 do\n\t\t\tif arr[i] > arr[j] and max_sum_left[i] < max_sum_left[j] + arr[i] then\n\t\t\t\tmax_sum_left[i] = max_sum_left[j] + arr[i]\n\t\t\tend\n\t\tend\n\tend\n\tfor i = #arr - 1, 1, -1 do\n\t\tfor j = #arr, i + 1, -1 do\n\t\t\tif arr[i] > arr[j] and max_sum_right[i] < max_sum_right[j] + arr[i] then\n\t\t\t\tmax_sum_right[i] = max_sum_right[j] + arr[i]\n\t\t\tend\n\t\tend\n\tend\n\tfor i = 1, #arr do\n\t\tif max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] then\n\t\t\tmax_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n\t\tend\n\tend\n\treturn max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tlocal sum = 0\n\tfor i = 1, #arr do\n\t\tsum = sum + arr[i]\n\t\tmax_sum_left[i] = sum\n\t\tif sum < 0 then\n\t\t\tsum = 0\n\t\tend\n\tend\n\tsum = 0\n\tfor i = #arr, 1, -1 do\n\t\tsum = sum + arr[i]\n\t\tmax_sum_right[i] = sum\n\t\tif sum < 0 then\n\t\t\tsum = 0\n\t\tend\n\tend\n\tfor i = 1, #arr do\n\t\tmax_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n\tend\n\treturn max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local len = #arr\n  local max_sum_arr = {}\n  for i = 1, len do\n    max_sum_arr[i] = arr[i]\n  end\n  for i = 2, len do\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n  end\n  for i = 1, len do\n    if max_sum < max_sum_arr[i] then\n      max_sum = max_sum_arr[i]\n    end\n  end\n  return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, n do\n        if arr[i] > arr[i-1] then\n            sum = sum + arr[i]\n        else\n            if sum > max_sum then\n                max_sum = sum\n            end\n            sum = arr[i]\n        end\n    end\n    if sum > max_sum then\n        max_sum = sum\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_starting_here = arr[1]\n  local max_sum_starting_here_ending_here = arr[1]",
    "  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_rev = {arr[1]}\n  local max_sum_arr_rev_rev = {arr[1]}\n  local max_sum_arr_rev_rev_rev = {arr[1]}\n  local max_sum_arr_rev_rev_rev_rev = {arr[1]}\n  local max_sum_arr_rev_rev_rev_rev_rev = {arr[1]}\n  for i = 2, #arr do\n    max_sum_arr[i] = arr[i]\n    max_sum_arr_rev[i] = arr[i]\n    max_sum_arr_rev_rev[i] = arr[i]\n    max_sum_arr_rev_rev_rev[i] = arr[i]\n    max_sum_arr_rev_rev_rev_rev[i] = arr[i]\n    max_sum_arr_rev_rev_rev_rev_rev[i] = arr[i]\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] then\n        max_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n        max_sum_arr_rev[i] = math.max(max_sum_arr_rev[i], max_sum_arr_rev[j] + arr[i])\n        max_sum_arr_rev_rev[i] = math.max(max_sum_arr_rev_rev[i], max_sum_arr_rev_rev[j] + arr[i])\n        max_sum_arr_rev_rev_rev[i] = math.max(max_sum_arr_rev_rev_rev[i], max_sum_arr_rev_rev_rev[j] + arr[i])\n        max_sum_arr_rev_rev_rev_rev[i] = math.max(max_sum_arr_rev_rev_rev_rev[i], max_sum_arr_rev_rev_rev_rev[",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(arr[i], max_sum_left[i - 1] + arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(arr[i], max_sum_right[i + 1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "    local n = #arr\n    local left = {}\n    local right = {}\n    local sum = 0",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}\n    local n = #arr\n    local i = 1\n    while i <= n do\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n        i = i + 1\n    end\n    i = 2\n    while i <= n do\n        local j = 1\n        while j < i do\n            if arr[i] > arr[j] and max_sum_left[i] < max_sum_left[j] + arr[i] then\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            end\n            j = j + 1\n        end\n        i = i + 1\n    end\n    i = n - 1\n    while i >= 1 do\n        local j = n\n        while j > i do\n            if arr[i] > arr[j] and max_sum_right[i] < max_sum_right[j] + arr[i] then\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            end\n            j = j - 1\n        end\n        i = i - 1\n    end\n    i = 1\n    while i <= n do\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] then\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        end\n        i = i + 1\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  sum = 0\n  max_sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, #arr - 1 do\n    if max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i + 1]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_rev = {arr[1]}\n  for i = 2, #arr do\n    local max_sum_arr_i = {}\n    local max_sum_arr_rev_i = {}\n    for j = 1, i-1 do\n      if arr[j] < arr[i] then\n        if max_sum_arr[j] + arr[i] > max_sum_arr_i[1] then\n          max_sum_arr_i = {max_sum_arr[j] + arr[i]}\n        end\n      end\n      if arr[j] > arr[i] then\n        if max_sum_arr_rev[j] + arr[i] > max_sum_arr_rev_i[1] then\n          max_sum_arr_rev_i = {max_sum_arr_rev[j] + arr[i]}\n        end\n      end\n    end\n    if #max_sum_arr_i == 0 then\n      max_sum_arr_i = {arr[i]}\n    end\n    if #max_sum_arr_rev_i == 0 then\n      max_sum_arr_rev_i = {arr[i]}\n    end\n    if max_sum_arr_i[1] > max_sum then\n      max_sum = max_sum_arr_i[1]\n    end\n    if max_sum_arr_rev_i[1] > max_sum then\n      max_sum = max_sum_arr_rev_i[1]\n    end\n    max_sum_arr[i] = max_sum_arr_i[1]\n    max_sum_arr_rev[i] = max_sum_arr_rev_i[1]\n  end\n  return max_sum\nend",
    "    local max_sum_arr = {}\n    local max_sum = 0\n    for i = 1, #arr do\n        max_sum_arr[i] = arr[i]\n        for j = 1, i - 1 do\n            if arr[j] < arr[i] then\n                max_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n            end\n        end\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_arr = {arr[1]}\n    local max_sum_arr_rev = {arr[1]}\n    for i = 2, n do\n        max_sum_arr[i] = math.max(arr[i], max_sum_arr[i - 1] + arr[i])\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    for i = n - 1, 1, -1 do\n        max_sum_arr_rev[i] = math.max(arr[i], max_sum_arr_rev[i + 1] + arr[i])\n        max_sum = math.max(max_sum, max_sum_arr[i - 1] + max_sum_arr_rev[i + 1])\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local sum = 0\n  local i = 1\n  while i <= #arr do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    i = i + 1\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(max_sum_left[i - 1] + arr[i], arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i + 1] + arr[i], arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_arr = {}\n  local max_sum_arr_size = 0\n  local max_sum_arr_start = 0\n  local max_sum_arr_end = 0\n  local max_sum_arr_start_index = 0\n  local max_sum_arr_end_index = 0\n  local max_sum_arr_start_index_temp = 0\n  local max_sum_arr_end_index_temp = 0\n  local max_sum_arr_temp = {}\n  local max_sum_arr_size_temp = 0\n  local max_sum_temp = 0\n  local max_sum_temp_arr = {}\n  local max_sum_temp_arr_size = 0\n  local max_sum_temp_arr_start = 0\n  local max_sum_temp_arr_end = 0\n  local max_sum_temp_arr_start_index = 0\n  local max_sum_temp_arr_end_index = 0\n  local max_sum_temp_arr_start_index_temp = 0\n  local max_sum_temp_arr_end_index_temp = 0\n  local max_sum_temp_arr_temp = {}\n  local max_sum_temp_arr_size_temp = 0\n  local max_sum_temp_temp = 0\n  local max_sum_temp_temp_arr = {}\n  local max_sum_temp_temp_arr_size = 0\n  local max_sum_temp_temp_arr_start = 0\n  local max_sum_temp_temp_arr_end = 0\n  local max_sum_temp_temp_arr_start_index = 0\n  local max_sum_temp_temp_arr_end_index = 0\n  local max_sum_temp_temp_arr_start_index_temp = 0\n  local max_sum_temp_temp_arr_end_index_temp = 0\n  local max_sum_temp_temp_arr_temp = {}\n  local max_sum_temp_temp_arr_size_temp = 0\n  local max_sum_temp_temp_temp = 0\n  local max_sum_temp_temp_temp",
    "\tlocal n = #arr\n\tlocal max_sum = arr[1]\n\tlocal max_sum_arr = {arr[1]}\n\tlocal max_sum_arr_rev = {arr[1]}\n\tlocal max_sum_arr_rev_rev = {arr[1]}\n\tfor i = 2, n do\n\t\tmax_sum_arr[i] = arr[i]\n\t\tmax_sum_arr_rev[i] = arr[i]\n\t\tmax_sum_arr_rev_rev[i] = arr[i]\n\t\tfor j = 1, i - 1 do\n\t\t\tif arr[j] < arr[i] then\n\t\t\t\tmax_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n\t\t\tend\n\t\t\tif arr[j] > arr[i] then\n\t\t\t\tmax_sum_arr_rev[i] = math.max(max_sum_arr_rev[i], max_sum_arr_rev[j] + arr[i])\n\t\t\tend\n\t\tend\n\t\tmax_sum = math.max(max_sum, max_sum_arr[i])\n\tend\n\tfor i = n - 1, 1, -1 do\n\t\tfor j = n, i + 1, -1 do\n\t\t\tif arr[j] < arr[i] then\n\t\t\t\tmax_sum_arr_rev_rev[i] = math.max(max_sum_arr_rev_rev[i], max_sum_arr_rev_rev[j] + arr[i])\n\t\t\tend\n\t\tend\n\t\tmax_sum = math.max(max_sum, max_sum_arr_rev_rev[i])\n\tend\n\tfor i = 1, n do\n\t\tfor j = 1, n do\n\t\t\tif i ~= j then\n\t\t\t\tmax_sum = math.max(max_sum, max_sum_arr[i] + max_sum_arr_rev_rev[j])\n\t\t\tend\n\t\tend\n\tend\n\treturn max",
    "  local max_sum_ending_here = {}\n  local max_sum_starting_here = {}\n  local max_sum_so_far = 0\n  local max_sum_ending_here[1] = arr[1]\n  local max_sum_starting_here[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_ending_here[i] = math.max(arr[i], max_sum_ending_here[i-1] + arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_starting_here[i] = math.max(arr[i], max_sum_starting_here[i+1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum_so_far = math.max(max_sum_so_far, max_sum_ending_here[i] + max_sum_starting_here[i] - arr[i])\n  end\n  return max_sum_so_far\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left_sum = 0\n  local max_sum_right_sum = 0\n  local max_sum_left_sum_index = 0\n  local max_sum_right_sum_index = 0\n  local max_sum_left_sum_index_index = 0\n  local max_sum_right_sum_index_index = 0\n  local max_sum_left_sum_index_index_index = 0\n  local max_sum_right_sum_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index_index_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index_index_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index_index_index_index_index_index = 0\n  local max_sum_left_sum_index_index_index_index_index_index_index_index_index_index = 0\n  local max_sum_right_sum_index_index_index_index_index_index_index_index_index_index = 0",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_starting_here = arr[1]\n  for i = 2, #arr do\n    max_sum_ending_here = math.max(arr[i], max_sum_ending_here + arr[i])\n    max_sum_starting_here = math.max(arr[i], max_sum_starting_here + arr[i])\n    max_sum = math.max(max_sum, max_sum_ending_here, max_sum_starting_here)\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local n = #arr\n  local max_sum = 0\n  local max_sum_arr = {}\n  for i = 1, n do\n    max_sum_arr[i] = arr[i]\n  end\n  for i = 2, n do\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n      end\n    end\n  end\n  for i = 1, n do\n    if max_sum < max_sum_arr[i] then\n      max_sum = max_sum_arr[i]\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}\n    for i = 1, #arr do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n        max_sum_left[i] = max_sum\n    end\n    sum = 0\n    max_sum = 0\n    for i = #arr, 1, -1 do\n        sum = sum + arr[i]\n        if sum < 0 then\n            sum = 0\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n        max_sum_right[i] = max_sum\n    end\n    max_sum = 0\n    for i = 1, #arr - 1 do\n        if max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n            max_sum = max_sum_left[i] + max_sum_right[i + 1]\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_ending_here = 0\n  local max_sum_ending_here_reverse = 0\n  local max_sum_ending_here_reverse_index = 0\n  local max_sum_ending_here_index = 0\n  local max_sum_ending_here_reverse_index = 0\n  local max_sum_ending_here_index = 0\n  for i = 1, #arr do\n    max_sum_ending_here = max_sum_ending_here + arr[i]\n    if max_sum_ending_here < 0 then\n      max_sum_ending_here = 0\n      max_sum_ending_here_index = i\n    end\n    if max_sum_ending_here > max_sum then\n      max_sum = max_sum_ending_here\n      max_sum_ending_here_index = i\n    end\n  end\n  for i = #arr, 1, -1 do\n    max_sum_ending_here_reverse = max_sum_ending_here_reverse + arr[i]\n    if max_sum_ending_here_reverse < 0 then\n      max_sum_ending_here_reverse = 0\n      max_sum_ending_here_reverse_index = i\n    end\n    if max_sum_ending_here_reverse > max_sum then\n      max_sum = max_sum_ending_here_reverse\n      max_sum_ending_here_reverse_index = i\n    end\n  end\n  if max_sum_ending_here_index > max_sum_ending_here_reverse_index then\n    return max_sum_ending_here\n  else\n    return max_sum_ending_here_reverse\n  end\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left_tmp = 0\n  local max_sum_right_tmp = 0\n  local max_sum_tmp = 0",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local n = #arr\n  for i = 1, n do\n    max_sum_left[i] = 0\n    max_sum_right[i] = 0\n  end\n  for i = 1, n do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  sum = 0\n  max_sum = 0\n  for i = n, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, n do\n    if max_sum_left[i] + max_sum_right[i] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_prev = arr[1]\n  local max_sum_ending_here_prev_prev = arr[1]\n  for i = 2, #arr do\n    max_sum_ending_here = math.max(max_sum_ending_here_prev, max_sum_ending_here_prev_prev + arr[i])\n    max_sum_ending_here_prev_prev = max_sum_ending_here_prev\n    max_sum_ending_here_prev = max_sum_ending_here\n    max_sum = math.max(max_sum, max_sum_ending_here)\n  end\n  return max_sum\nend",
    "    local max_sum_arr = {}\n    local max_sum = 0\n    for i = 1, #arr do\n        max_sum_arr[i] = arr[i]\n        for j = 1, i - 1 do\n            if arr[j] < arr[i] then\n                max_sum_arr[i] = math.max(max_sum_arr[i], max_sum_arr[j] + arr[i])\n            end\n        end\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    return max_sum\nend",
    "  local max_sum_arr = {}\n  local max_sum = 0\n  local max_sum_index = 0\n  for i = 1, #arr do\n    max_sum_arr[i] = arr[i]\n    if max_sum < max_sum_arr[i] then\n      max_sum = max_sum_arr[i]\n      max_sum_index = i\n    end\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n        max_sum_arr[i] = max_sum_arr[j] + arr[i]\n        if max_sum < max_sum_arr[i] then\n          max_sum = max_sum_arr[i]\n          max_sum_index = i\n        end\n      end\n    end\n  end\n  return max_sum, max_sum_index\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local sum = 0\n  local n = #arr\n  for i = 1, n do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, #arr do\n        if arr[i] > arr[i - 1] then\n            sum = sum + arr[i]\n        else\n            max_sum = math.max(max_sum, sum)\n            sum = arr[i]\n        end\n    end\n    max_sum = math.max(max_sum, sum)\n    return max_sum\nend",
    "    local max_sum_arr = {}\n    local max_sum = 0\n    for i = 1, #arr do\n        max_sum_arr[i] = arr[i]\n        for j = 1, i - 1 do\n            if arr[j] < arr[i] and max_sum_arr[j] + arr[i] > max_sum_arr[i] then\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            end\n        end\n        if max_sum_arr[i] > max_sum then\n            max_sum = max_sum_arr[i]\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left_i = 0\n  local max_sum_right_i = 0",
    "    local n = #arr\n    local max_sum = arr[1]\n    local sum = arr[1]\n    for i = 2, n do\n        if arr[i] > arr[i - 1] then\n            sum = sum + arr[i]\n        else\n            max_sum = math.max(max_sum, sum)\n            sum = arr[i]\n        end\n    end\n    max_sum = math.max(max_sum, sum)\n    return max_sum\nend",
    "  local max_sum = 0\n  local len = #arr\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[len] = arr[len]\n  for i = 2, len do\n    max_sum_left[i] = math.max(max_sum_left[i-1] + arr[i], arr[i])\n  end\n  for i = len - 1, 1, -1 do\n    max_sum_right[i] = math.max(max_sum_right[i+1] + arr[i], arr[i])\n  end\n  for i = 1, len do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_ending_here = 0\n  local max_sum_ending_here_reverse = 0\n  local max_sum_ending_here_reverse_temp = 0\n  local max_sum_ending_here_temp = 0\n  for i = 1, #arr do\n    max_sum_ending_here_temp = max_sum_ending_here + arr[i]\n    if max_sum_ending_here_temp > 0 then\n      max_sum_ending_here = max_sum_ending_here_temp\n    else\n      max_sum_ending_here = 0\n    end\n    if max_sum_ending_here > max_sum then\n      max_sum = max_sum_ending_here\n    end\n  end\n  for i = #arr, 1, -1 do\n    max_sum_ending_here_reverse_temp = max_sum_ending_here_reverse + arr[i]\n    if max_sum_ending_here_reverse_temp > 0 then\n      max_sum_ending_here_reverse = max_sum_ending_here_reverse_temp\n    else\n      max_sum_ending_here_reverse = 0\n    end\n    if max_sum_ending_here_reverse > max_sum then\n      max_sum = max_sum_ending_here_reverse\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_ending_here = arr[1]\n    for i = 2, n do\n        max_ending_here = math.max(arr[i], max_ending_here + arr[i])\n        max_sum = math.max(max_sum, max_ending_here)\n    end\n    return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_ending_here = arr[1]\n    local max_sum_ending_here_backwards = arr[n]\n    local max_sum_backwards = arr[n]\n    for i = 2, n do\n        max_sum_ending_here = math.max(arr[i], max_sum_ending_here + arr[i])\n        max_sum = math.max(max_sum, max_sum_ending_here)\n        max_sum_ending_here_backwards = math.max(arr[n - i + 1], max_sum_ending_here_backwards + arr[n - i + 1])\n        max_sum_backwards = math.max(max_sum_backwards, max_sum_ending_here_backwards)\n    end\n    return max_sum, max_sum_backwards\nend",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_reverse = arr[n]\n  local max_sum_reverse = arr[n]",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_rev = {arr[1]}\n  local max_sum_arr_rev_rev = {arr[1]}\n  for i = 2, n do\n    max_sum_arr[i] = math.max(max_sum_arr[i-1] + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_arr[i])\n  end\n  for i = n-1, 1, -1 do\n    max_sum_arr_rev[i] = math.max(max_sum_arr_rev[i+1] + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_arr_rev[i])\n  end\n  for i = 2, n do\n    max_sum_arr_rev_rev[i] = math.max(max_sum_arr_rev_rev[i-1] + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_arr_rev_rev[i])\n  end\n  for i = n-1, 1, -1 do\n    max_sum_arr_rev_rev[i] = math.max(max_sum_arr_rev_rev[i+1] + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_arr_rev_rev[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(0, sum)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(0, sum)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_prev = arr[1]\n  local max_sum_ending_here_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = arr[1]\n  local max_sum_ending_here_prev_prev_prev_prev_prev_",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_arr = {}\n  local sum_arr = {}\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    sum_arr[i] = sum\n  end\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    sum_arr[i] = sum\n  end\n  for i = 1, #arr do\n    if sum_arr[i] > max_sum then\n      max_sum = sum_arr[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local n = #arr\n  for i = 1, n do\n    sum = 0\n    for j = i, n do\n      sum = sum + arr[j]\n      max_sum = math.max(max_sum, sum)\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  sum = 0\n  max_sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, #arr - 1 do\n    if max_sum_left[i] + max_sum_right[i + 1] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i + 1]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(arr[i], max_sum_left[i - 1] + arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(arr[i], max_sum_right[i + 1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_starting_here = arr[1]\n  for i = 2, #arr do\n    max_sum_ending_here = math.max(arr[i], max_sum_ending_here + arr[i])\n    max_sum = math.max(max_sum, max_sum_ending_here)\n    max_sum_starting_here = math.max(arr[i], max_sum_starting_here + arr[i])\n  end\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum = arr[1]\n  local sum = arr[1]\n  local i = 2\n  while i <= n do\n    sum = math.max(arr[i], sum + arr[i])\n    max_sum = math.max(max_sum, sum)\n    i = i + 1\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left[1] = arr[1]\n  local max_sum_right[#arr] = arr[#arr]\n  for i = 2, #arr do\n    max_sum_left[i] = math.max(arr[i], max_sum_left[i - 1] + arr[i])\n  end\n  for i = #arr - 1, 1, -1 do\n    max_sum_right[i] = math.max(arr[i], max_sum_right[i + 1] + arr[i])\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}\n    local max_sum_left[1] = arr[1]\n    local max_sum_right[#arr] = arr[#arr]\n    for i = 2, #arr do\n        max_sum_left[i] = math.max(arr[i], max_sum_left[i-1] + arr[i])\n    end\n    for i = #arr-1, 1, -1 do\n        max_sum_right[i] = math.max(arr[i], max_sum_right[i+1] + arr[i])\n    end\n    for i = 1, #arr do\n        max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local max_sum_left_till_now = 0\n  local max_sum_right_till_now = 0\n  local n = #arr\n  for i = 1, n do\n    max_sum_left_till_now = max_sum_left_till_now + arr[i]\n    if max_sum_left_till_now < 0 then\n      max_sum_left_till_now = 0\n    end\n    max_sum_left[i] = max_sum_left_till_now\n  end\n  for i = n, 1, -1 do\n    max_sum_right_till_now = max_sum_right_till_now + arr[i]\n    if max_sum_right_till_now < 0 then\n      max_sum_right_till_now = 0\n    end\n    max_sum_right[i] = max_sum_right_till_now\n  end\n  for i = 1, n do\n    max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i])\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_prev = arr[1]\n  for i = 2, #arr do\n    max_sum_ending_here = math.max(max_sum_ending_here + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_ending_here)\n    max_sum_ending_here_prev = math.max(max_sum_ending_here_prev + arr[i], max_sum_ending_here)\n    max_sum = math.max(max_sum, max_sum_ending_here_prev)\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}",
    "  local len = #arr\n  local max_sum = arr[1]\n  local max_sum_so_far = arr[1]\n  for i = 2, len do\n    max_sum_so_far = math.max(max_sum_so_far + arr[i], arr[i])\n    max_sum = math.max(max_sum, max_sum_so_far)\n  end\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_before = arr[1]\n  local max_sum_ending_here_after = arr[1]\n  for i = 2, n do\n    max_sum_ending_here_before = math.max(max_sum_ending_here_before + arr[i], arr[i])\n    max_sum_ending_here_after = math.max(max_sum_ending_here_after + arr[i], arr[i])\n    max_sum_ending_here = math.max(max_sum_ending_here_before, max_sum_ending_here_after)\n    max_sum = math.max(max_sum, max_sum_ending_here)\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local i = 1\n  while i <= #arr do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n    i = i + 1\n  end\n  sum = 0\n  max_sum = 0\n  i = #arr\n  while i >= 1 do\n    sum = sum + arr[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n    i = i - 1\n  end\n  local max_sum = 0\n  i = 1\n  while i <= #arr do\n    if max_sum_left[i] + max_sum_right[i] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i]\n    end\n    i = i + 1\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    max_sum_left[i] = sum\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    max_sum_right[i] = sum\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_left = {}\n    local max_sum_right = {}",
    "  local max_sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local sum = 0\n  for i = 1, #arr do\n    sum = sum + arr[i]\n    max_sum_left[i] = sum\n    sum = math.max(sum, 0)\n  end\n  sum = 0\n  for i = #arr, 1, -1 do\n    sum = sum + arr[i]\n    max_sum_right[i] = sum\n    sum = math.max(sum, 0)\n  end\n  for i = 1, #arr do\n    max_sum = math.max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n  end\n  return max_sum\nend",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_arr = {arr[1]}\n    local max_sum_arr_rev = {arr[1]}\n    local max_sum_arr_rev_rev = {arr[1]}\n    local max_sum_arr_rev_rev_rev = {arr[1]}\n    for i = 2, n do\n        max_sum_arr[i] = math.max(arr[i], max_sum_arr[i - 1] + arr[i])\n        max_sum = math.max(max_sum, max_sum_arr[i])\n    end\n    for i = n - 1, 1, -1 do\n        max_sum_arr_rev[i] = math.max(arr[i], max_sum_arr_rev[i + 1] + arr[i])\n    end\n    for i = 2, n do\n        max_sum_arr_rev_rev[i] = math.max(max_sum_arr_rev[i], max_sum_arr[i - 1])\n    end\n    for i = n - 1, 1, -1 do\n        max_sum_arr_rev_rev_rev[i] = math.max(max_sum_arr_rev_rev[i], max_sum_arr_rev[i + 1])\n    end\n    for i = 2, n - 1 do\n        max_sum = math.max(max_sum, max_sum_arr_rev_rev_rev[i])\n    end\n    return max_sum\nend",
    "    local n = #arr\n    local max_sum_arr = {}\n    for i = 1, n do\n        max_sum_arr[i] = arr[i]\n    end\n    for i = 2, n do\n        for j = 1, i - 1 do\n            if arr[i] > arr[j] and max_sum_arr[i] < max_sum_arr[j] + arr[i] then\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            end\n        end\n    end\n    local max = max_sum_arr[1]\n    for i = 2, n do\n        if max < max_sum_arr[i] then\n            max = max_sum_arr[i]\n        end\n    end\n    return max\nend",
    "  local max_sum = 0\n  local sum = 0\n  local len = #arr\n  local i = 1\n  while i <= len do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    i = i + 1\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  local max_sum_left = {}\n  local max_sum_right = {}\n  local n = #arr\n  for i = 1, n do\n    max_sum_left[i] = 0\n    max_sum_right[i] = 0\n  end\n  for i = 1, n do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_left[i] = max_sum\n  end\n  sum = 0\n  max_sum = 0\n  for i = n, 1, -1 do\n    sum = sum + arr[i]\n    if sum < 0 then\n      sum = 0\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n    max_sum_right[i] = max_sum\n  end\n  max_sum = 0\n  for i = 1, n do\n    if max_sum_left[i] + max_sum_right[i] > max_sum then\n      max_sum = max_sum_left[i] + max_sum_right[i]\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = arr[1]\n  local max_sum_ending_here = arr[1]\n  local max_sum_ending_here_prev = arr[1]\n  local max_sum_ending_here_prev_prev = arr[1]\n  for i = 2, #arr do\n    max_sum_ending_here_prev_prev = max_sum_ending_here_prev\n    max_sum_ending_here_prev = max_sum_ending_here\n    max_sum_ending_here = math.max(arr[i], max_sum_ending_here_prev + arr[i])\n    max_sum = math.max(max_sum, max_sum_ending_here, max_sum_ending_here_prev_prev + max_sum_ending_here_prev)\n  end\n  return max_sum\nend",
    "  local n = #arr\n  local max_sum = arr[1]\n  local max_sum_arr = {arr[1]}\n  local max_sum_arr_rev = {arr[1]}\n  local max_sum_arr_rev_rev = {arr[1]}\n  local max_sum_arr_rev_rev_rev = {arr[1]}\n  for i = 2, n do\n    local max_sum_arr_rev_rev_rev_rev = max_sum_arr_rev_rev_rev\n    local max_sum_arr_rev_rev_rev = max_sum_arr_rev_rev\n    local max_sum_arr_rev_rev = max_sum_arr_rev\n    local max_sum_arr_rev = max_sum_arr\n    local max_sum_arr = max_sum_arr\n    local max_sum = max_sum\n    for j = 1, i - 1 do\n      if arr[i] > arr[j] then\n        max_sum_arr_rev_rev_rev_rev[j] = max_sum_arr_rev_rev_rev[j] + arr[i]\n        max_sum_arr_rev_rev_rev[j] = max_sum_arr_rev_rev_rev[j] + arr[i]\n        max_sum_arr_rev_rev[j] = max_sum_arr_rev_rev[j] + arr[i]\n        max_sum_arr_rev[j] = max_sum_arr_rev[j] + arr[i]\n        max_sum_arr[j] = max_sum_arr[j] + arr[i]\n        max_sum = math.max(max_sum, max_sum_arr_rev_rev_rev_rev[j])\n        max_sum = math.max(max_sum, max_sum_arr_rev_rev_rev[j])\n        max_sum = math.max(max_sum, max_sum_arr_rev_rev[j])\n        max_sum = math.max(max_sum, max_sum_arr_rev[j])\n        max_sum = math.max(max_sum, max",
    "    local n = #arr\n    local max_sum = arr[1]\n    local max_sum_ending_here = arr[1]\n    local max_sum_ending_here_reverse = arr[n]\n    local max_sum_reverse = arr[n]",
    "\tlocal max_sum = 0\n\tlocal max_sum_left = {}\n\tlocal max_sum_right = {}\n\tlocal max_sum_left_i = 0\n\tlocal max_sum_right_i = 0\n\tlocal max_sum_left_j = 0\n\tlocal max_sum_right_j = 0\n\tlocal max_sum_left_sum = 0\n\tlocal max_sum_right_sum = 0\n\tfor i = 1, #arr do\n\t\tmax_sum_left[i] = 0\n\t\tmax_sum_right[i] = 0\n\tend\n\tfor i = 1, #arr do\n\t\tmax_sum_left_sum = 0\n\t\tfor j = i, 1, -1 do\n\t\t\tif arr[j] < arr[i] then\n\t\t\t\tmax_sum_left_sum = max_sum_left_sum + arr[j]\n\t\t\t\tif max_sum_left_sum > max_sum_left[i] then\n\t\t\t\t\tmax_sum_left[i] = max_sum_left_sum\n\t\t\t\t\tmax_sum_left_i = i\n\t\t\t\t\tmax_sum_left_j = j\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tfor i = #arr, 1, -1 do\n\t\tmax_sum_right_sum = 0\n\t\tfor j = i, #arr do\n\t\t\tif arr[j] < arr[i] then\n\t\t\t\tmax_sum_right_sum = max_sum_right_sum + arr[j]\n\t\t\t\tif max_sum_right_sum > max_sum_right[i] then\n\t\t\t\t\tmax_sum_right[i] = max_sum_right_sum\n\t\t\t\t\tmax_sum_right_i = i\n\t\t\t\t\tmax_sum_right_j = j\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tfor i = 1, #arr do\n\t\tif max_sum_left[i] + max_sum_right[i] > max_sum then"
  ]
}
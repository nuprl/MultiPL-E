{
  "name": "mbpp_102_snake_to_camel",
  "language": "lua",
  "prompt": "-- Write a function to convert a snake case string to camel case string.\nlocal function snake_to_camel(word)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_102_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = snake_to_camel\n    lu.assertEquals(candidate('python_program'), 'PythonProgram')\n    lu.assertEquals(candidate('python_language'), 'PythonLanguage')\n    lu.assertEquals(candidate('programming_language'), 'ProgrammingLanguage')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"(%_%a)\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    local result = string.gsub(word, \"_%l\", string.upper)\n    return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper))\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper)\nend",
    "  local result = word:gsub(\"_%l\", string.upper)\n  return result\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = string.gsub(word, \"_%l\", string.upper)\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  local result = \"\"\n  for w in word:gmatch(\"[^_]+\") do\n    result = result .. w:sub(1,1):upper() .. w:sub(2)\n  end\n  return result\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(.)\", function(letter)\n    return letter:upper()\n  end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_(%a)\", function(letter)\n        return letter:upper()\n    end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = false\n  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c == \"_\" then\n      upper = true\n    else\n      if upper then\n        c = c:upper()\n        upper = false\n      end\n      result = result .. c\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = {}\n  for w in word:gmatch(\"[^_]+\") do\n    table.insert(result, w:sub(1,1):upper()..w:sub(2))\n  end\n  return table.concat(result)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = true\n  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c == \"_\" then\n      upper = true\n    else\n      if upper then\n        result = result .. c:upper()\n        upper = false\n      else\n        result = result .. c\n      end\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", function(w) return w:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_(%l)\", function(l) return l:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = false\n  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c == \"_\" then\n      upper = true\n    else\n      if upper then\n        c = c:upper()\n        upper = false\n      end\n      result = result .. c\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", function(w) return w:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%l)\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = word:gsub(\"_(%l)\", string.upper)\n  return result\nend",
    "    return (word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", function(s) return s:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = word:gsub(\"_%l\", string.upper)\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = word:gsub(\"_(%w)\", string.upper)\n  return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = \"\"\n  local upper = false\n  for i = 1, #word do\n    local c = word:sub(i, i)\n    if c == \"_\" then\n      upper = true\n    else\n      if upper then\n        c = c:upper()\n        upper = false\n      end\n      result = result .. c\n    end\n  end\n  return result\nend",
    "  return word:gsub(\"_(%w)\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    local result = word:gsub(\"_%l\", string.upper)\n    return result\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return (word:gsub(\"_%w\", string.upper):gsub(\"^%l\", string.upper))\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    local result = word:gsub(\"_(%w)\", function(w)\n        return w:upper()\n    end)\n    return result\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_(%w)\", function(w) return w:upper() end)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  local result = {}\n  local next_upper = false\n  for c in word:gmatch(\".\") do\n    if c == \"_\" then\n      next_upper = true\n    else\n      if next_upper then\n        table.insert(result, c:upper())\n        next_upper = false\n      else\n        table.insert(result, c)\n      end\n    end\n  end\n  return table.concat(result)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "    return word:gsub(\"_%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend",
    "  return word:gsub(\"_%l\", string.upper):gsub(\"^%l\", string.upper)\nend"
  ]
}
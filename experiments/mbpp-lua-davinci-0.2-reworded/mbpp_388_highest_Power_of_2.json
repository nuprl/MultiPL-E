{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the highest power of 2 that is less than or equal to n.\nlocal function highest_Power_of_2(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = highest_Power_of_2\n    lu.assertEquals(candidate(10), 8)\n    lu.assertEquals(candidate(19), 16)\n    lu.assertEquals(candidate(32), 32)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = 1\n    while i <= n do\n        i = i * 2\n    end\n    return i / 2\nend",
    "    local i = 1\n    while i <= n do\n        i = i * 2\n    end\n    return i / 2\nend",
    "    local power = 0\n    while n > 0 do\n        n = n / 2\n        power = power + 1\n    end\n    return 2 ^ (power - 1)\nend",
    "  local i = 1\n  while i <= n do\n    i = i * 2\n  end\n  return i / 2\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "  local k = 1\n  while k <= n do\n    k = k * 2\n  end\n  return k / 2\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "\tlocal i = 1\n\twhile i <= n do\n\t\ti = i * 2\n\tend\n\treturn i / 2\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "  local i = 1\n  while i < n do\n    i = i * 2\n  end\n  return i / 2\nend",
    "    local i = 1\n    while i <= n do\n        i = i * 2\n    end\n    return i / 2\nend",
    "    local i = 1\n    while i <= n do\n        i = i * 2\n    end\n    return i / 2\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "  local i = 1\n  while i <= n do\n    i = i * 2\n  end\n  return i / 2\nend",
    "    local power = 0\n    while n > 1 do\n        n = n / 2\n        power = power + 1\n    end\n    return 2 ^ power\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend",
    "\tlocal power = 0\n\twhile n > 1 do\n\t\tn = n / 2\n\t\tpower = power + 1\n\tend\n\treturn power\nend",
    "    local p = 1\n    while p <= n do\n        p = p * 2\n    end\n    return p / 2\nend"
  ]
}
{
  "name": "mbpp_427_change_date_format",
  "language": "lua",
  "prompt": "-- Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.\nlocal function change_date_format(dt)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_427_change_date_format.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = change_date_format\n    lu.assertEquals(candidate('2026-01-02'), '02-01-2026')\n    lu.assertEquals(candidate('2020-11-13'), '13-11-2020')\n    lu.assertEquals(candidate('2021-04-26'), '26-04-2021')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "  local y, m, d = dt:match(\"(%d%d%d%d)-(%d%d)-(%d%d)\")\n  return string.format(\"%s-%s-%s\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "    local y, m, d = string.match(dt, \"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%s-%s-%s\", d, m, y)\nend",
    "  local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n  return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "  local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n  return string.format(\"%02d-%02d-%s\", d, m, y)\nend",
    "  local y, m, d = string.match(dt, \"(%d+)-(%d+)-(%d+)\")\n  return string.format(\"%s-%s-%s\", d, m, y)\nend",
    "  local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n  return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "  local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n  return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "\tlocal y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n\treturn string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "\tlocal y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n\treturn string.format(\"%02d-%02d-%s\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "  local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n  return string.format(\"%s-%s-%s\", d, m, y)\nend",
    "    local y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "    local y, m, d = string.match(dt, \"(%d+)-(%d+)-(%d+)\")\n    return string.format(\"%02d-%02d-%04d\", d, m, y)\nend",
    "\tlocal y, m, d = dt:match(\"(%d+)-(%d+)-(%d+)\")\n\treturn string.format(\"%02d-%02d-%04d\", d, m, y)\nend"
  ]
}
{
  "name": "mbpp_472_check_Consecutive",
  "language": "lua",
  "prompt": "-- Write a luathon function to check whether the given table contains consecutive numbers or not.\nlocal function check_Consecutive(l)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_Consecutive\n    lu.assertEquals(candidate({1, 2, 3, 4, 5}), true)\n    lu.assertEquals(candidate({1, 2, 3, 5, 6}), false)\n    lu.assertEquals(candidate({1, 2, 1}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal count = 0\n\tfor i = 1, #l do\n\t\tif l[i] == l[i+1] - 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count == #l - 1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local flag = 0\n  for i = 1, #l - 1 do\n    if l[i + 1] - l[i] ~= 1 then\n      flag = 1\n      break\n    end\n  end\n  if flag == 0 then\n    print(\"Consecutive\")\n  else\n    print(\"Not Consecutive\")\n  end\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] ~= l[i + 1] - 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "  local flag = 0\n  for i = 1, #l-1 do\n    if l[i+1] - l[i] ~= 1 then\n      flag = 1\n      break\n    end\n  end\n  if flag == 0 then\n    print(\"Consecutive\")\n  else\n    print(\"Not Consecutive\")\n  end\nend",
    "  local flag = 0\n  for i = 1, #l - 1 do\n    if math.abs(l[i] - l[i + 1]) == 1 then\n      flag = 1\n    else\n      flag = 0\n      break\n    end\n  end\n  if flag == 1 then\n    print(\"Consecutive\")\n  else\n    print(\"Not Consecutive\")\n  end\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"Consecutive\")\n\telse\n\t\tprint(\"Not Consecutive\")\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = false\n\t\tend\n\tend\n\treturn flag\nend",
    "  local flag = 0\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev + 1 then\n      flag = 1\n      break\n    end\n    prev = l[i]\n  end\n  if flag == 0 then\n    print(\"Consecutive\")\n  else\n    print(\"Not Consecutive\")\n  end\nend",
    "    local n = #l\n    local count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            if l[i] == l[j] then\n                return false\n            end\n        end\n    end\n    for i = 1, n - 1 do\n        if l[i + 1] - l[i] == 1 then\n            count = count + 1\n        end\n    end\n    if count == n - 1 then\n        return true\n    else\n        return false\n    end\nend",
    "  local max = l[1]\n  local min = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n    end\n    if l[i] < min then\n      min = l[i]\n    end\n  end\n  if max - min + 1 == #l then\n    return true\n  else\n    return false\n  end\nend",
    "  local count = 0\n  for i = 1, #l do\n    if l[i] == l[i+1] - 1 then\n      count = count + 1\n    end\n  end\n  if count == #l - 1 then\n    return true\n  else\n    return false\n  end\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l-1 do\n\t\tif l[i] ~= l[i+1]-1 then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] ~= l[i + 1] - 1 then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"The given table contains consecutive numbers\")\n\telse\n\t\tprint(\"The given table does not contain consecutive numbers\")\n\tend\nend",
    "\tlocal max = math.max(unpack(l))\n\tlocal min = math.min(unpack(l))\n\tlocal count = 0\n\tfor i = min, max do\n\t\tfor j = 1, #l do\n\t\t\tif i == l[j] then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\tif count == #l then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"Consecutive\")\n\telse\n\t\tprint(\"Not Consecutive\")\n\tend\nend",
    "\tlocal flag = true\n\tfor i = 1, #l - 1 do\n\t\tif l[i] ~= l[i + 1] - 1 then\n\t\t\tflag = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn flag\nend",
    "  local flag = 0\n  local count = 0\n  for i = 1, #l do\n    if l[i] == l[i+1] - 1 then\n      count = count + 1\n    end\n  end\n  if count == #l-1 then\n    flag = 1\n  end\n  return flag\nend",
    "  local isConsecutive = true\n  for i = 1, #l - 1 do\n    if l[i] + 1 ~= l[i + 1] then\n      isConsecutive = false\n      break\n    end\n  end\n  return isConsecutive\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i] + 1 ~= l[i + 1] then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"Consecutive\")\n\telse\n\t\tprint(\"Not Consecutive\")\n\tend\nend",
    "\tlocal flag = 0\n\tfor i = 1, #l - 1 do\n\t\tif l[i + 1] - l[i] ~= 1 then\n\t\t\tflag = 1\n\t\t\tbreak\n\t\tend\n\tend\n\tif flag == 0 then\n\t\tprint(\"The table contains consecutive numbers\")\n\telse\n\t\tprint(\"The table does not contain consecutive numbers\")\n\tend\nend"
  ]
}
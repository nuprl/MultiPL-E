{
  "name": "mbpp_103_eulerian_num",
  "language": "lua",
  "prompt": "-- Write a function to find the Eulerian number a(n, m).\nlocal function eulerian_num(n, m)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = eulerian_num\n    lu.assertEquals(candidate(3, 1), 4)\n    lu.assertEquals(candidate(4, 1), 11)\n    lu.assertEquals(candidate(5, 3), 26)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "    if n == 0 then return 1 end\n    if m == 0 then return 0 end\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  if n == 0 then\n    return 1\n  elseif n < 0 or m < 0 then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  local function binomial(n, k)\n    local res = 1\n    for i = 1, k do\n      res = res * (n - i + 1) / i\n    end\n    return res\n  end\n  local res = 0\n  for k = 0, m do\n    res = res + binomial(m, k) * binomial(n + m - k - 1, m)\n  end\n  return res\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 or j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "    if n < 0 or m < 0 or n < m then\n        return 0\n    elseif n == 0 and m == 0 then\n        return 1\n    else\n        return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    end\nend",
    "    if n < m then return 0 end\n    if m == 0 then return 1 end\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\nend",
    "  if n < 0 or m < 0 then return 0 end\n  if n == 0 and m == 0 then return 1 end\n  if n == 0 or m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\tif i == 0 or j == 0 then\n\t\t\t\ta[i][j] = 1\n\t\t\telse\n\t\t\t\ta[i][j] = a[i - 1][j] + j * a[i - 1][j - 1]\n\t\t\tend\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  local result = 0\n  for k = 0, m do\n    result = result + ((-1) ^ k) * binomial(m, k) * binomial(n + m - k, n)\n  end\n  return result\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, m do\n    a[0][i] = 1\n  end\n  for i = 1, n do\n    a[i][0] = 0\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - 1) * a[i - 1][j] + a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  local function factorial(n)\n    local result = 1\n    for i = 2, n do\n      result = result * i\n    end\n    return result\n  end",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = a[i - 1][j - 1] + (i - 1) * a[i - 1][j]\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 or m == 0 then return 0 end\n  if n == 1 or m == 1 then return 1 end\n  if n == m then return 1 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 then\n                a[i][j] = 0\n            elseif j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "    if n < m then\n        return 0\n    end\n    if n == m then\n        return 1\n    end\n    return (n - m + 1) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n  end\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 and j == 0 then\n        a[i][j] = 1\n      elseif j == 0 then\n        a[i][j] = 0\n      elseif i == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == 0 then return 1 end\n    if m == 0 then return 0 end\n    return (n - m + 1) * eulerian_num_rec(n - 1, m) + m * eulerian_num_rec(n - 1, m - 1)\n  end\n  return eulerian_num_rec(n, m)\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n  end\nend",
    "  if n < 0 or m < 0 or n < m then\n    return 0\n  end\n  if n == 0 and m == 0 then\n    return 1\n  end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local function binomial(n, k)\n        local res = 1\n        for i = 1, k do\n            res = res * (n - i + 1) / i\n        end\n        return res\n    end\n    local res = 0\n    for k = 0, m do\n        res = res + binomial(m, k) * binomial(n + k, n)\n    end\n    return res\nend",
    "    local a = {}\n    a[0] = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    a[0][0] = 1\n    for i = 1, n do\n        a[i][0] = 0\n        for j = 1, m do\n            a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n        end\n    end\n    return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "    if n == 0 then\n        return 1\n    elseif m == 0 then\n        return 0\n    else\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    end\nend",
    "    local a = {}\n    for i = 1, n do\n        a[i] = {}\n        for j = 1, m do\n            if i == 1 then\n                a[i][j] = 1\n            elseif j == 1 then\n                a[i][j] = 0\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "    local function factorial(n)\n        local result = 1\n        for i = 2, n do\n            result = result * i\n        end\n        return result\n    end",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\tif i == 0 or j == 0 then\n\t\t\t\ta[i][j] = 1\n\t\t\telse\n\t\t\t\ta[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n\t\t\tend\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  if n < m then return 0 end\n  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m) + (m + 1) * eulerian_num(n - 1, m - 1)\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  elseif n == 0 and m == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "    if n < 0 or m < 0 or n < m then\n        return 0\n    end\n    if n == 0 and m == 0 then\n        return 1\n    end\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 and j == 0 then\n                a[i][j] = 1\n            elseif j == 0 then\n                a[i][j] = 0\n            elseif i == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i + 1) * a[i][j - 1] + (j + 1) * a[i - 1][j]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  end\n  if n == 0 and m == 0 then\n    return 1\n  end\n  return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 and m == 0 then return 1 end\n  if n == 0 or m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  elseif m > n then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 and j == 0 then\n        a[i][j] = 1\n      elseif j == 0 then\n        a[i][j] = 0\n      elseif i == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 then\n                a[i][j] = 1\n            elseif j == 0 then\n                a[i][j] = 0\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "    if m > n then\n        return 0\n    end\n    if m == 0 then\n        return 1\n    end\n    return (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif n == 1 then\n    return m\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  if m > n then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, n do\n        a[i][0] = 1\n    end\n    for i = 1, n do\n        for j = 1, m do\n            a[i][j] = a[i - 1][j - 1] + (i - 1) * a[i - 1][j]\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\ta[i][j] = 0\n\t\tend\n\tend\n\ta[0][0] = 1\n\tfor i = 1, n do\n\t\ta[i][0] = 0\n\t\tfor j = 1, m do\n\t\t\ta[i][j] = (i - j + 1) * a[i - 1][j - 1] + j * a[i - 1][j]\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  a[0][0] = 1\n  for i = 1, n do\n    a[i][0] = 0\n    for j = 1, m do\n      a[i][j] = (i - 1) * (a[i - 1][j - 1] + a[i - 1][j])\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif n < 0 or m < 0 then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 and j == 0 then\n        a[i][j] = 1\n      elseif i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i + 1 - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n  end\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, m do\n        a[0][i] = 1\n    end\n    for i = 1, n do\n        for j = 1, m do\n            a[i][j] = (i - 1) * a[i - 1][j] + a[i - 1][j - 1]\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    local a = {}\n    for i = 0, m do\n        a[i] = {}\n        for j = 0, n do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, m do\n        a[i][0] = 1\n    end\n    for i = 1, m do\n        for j = 1, n do\n            a[i][j] = (i - 1) * a[i - 1][j - 1] + (n - j + 1) * a[i - 1][j]\n        end\n    end\n    return a[m][n]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 or j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  end\n  if n == 0 and m == 0 then\n    return 1\n  end\n  return (n + 1) * eulerian_num(n, m - 1) +\n         (-1) ^ (n + 1) * (n + 1 - m) * eulerian_num(n - 1, m - 1)\nend",
    "  if n < 0 or m < 0 or n < m then return 0 end\n  if n == 0 and m == 0 then return 1 end\n  if n == 1 and m == 0 then return 1 end\n  if n == 1 and m == 1 then return 1 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  local function factorial(n)\n    local result = 1\n    for i = 2, n do\n      result = result * i\n    end\n    return result\n  end",
    "  local result = 1\n  for i = 1, m do\n    result = result * (n + 1 - i) / i\n  end\n  return result\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i + 1 - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, n do\n        for j = 0, m do\n            if i == 0 then\n                a[i][j] = 0\n            elseif j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    if n == 0 and m == 0 then\n        return 1\n    elseif n == 0 or m == 0 then\n        return 0\n    else\n        return (n + 1) * eulerian_num(n, m - 1) + (1 - n) * eulerian_num(n - 1, m - 1)\n    end\nend",
    "  if n < m then return 0 end\n  if m == 0 then return 1 end\n  return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\nend",
    "  if n == 0 then\n    return 1\n  elseif n < 0 or m < 0 then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  a[0][0] = 1\n  for i = 1, n do\n    a[i][0] = 0\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j - 1] + (j + 1) * a[i - 1][j]\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n + 1 - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  if n == 0 then\n    return 1\n  end\n  if m == 0 then\n    return 0\n  end\n  return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\nend",
    "  local result = 1\n  for i = 1, m do\n    result = result * (n - i + 1) / i\n  end\n  return result\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  end\n  if n == 0 and m == 0 then\n    return 1\n  end\n  return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "   -- TODO\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\ta[i][j] = 0\n\t\tend\n\tend\n\ta[0][0] = 1\n\tfor i = 1, n do\n\t\ta[i][0] = 0\n\t\tfor j = 1, m do\n\t\t\ta[i][j] = (i - j + 1) * a[i - 1][j - 1] + j * a[i - 1][j]\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  if n < 0 or m < 0 or n < m then return 0 end\n  if n == 0 and m == 0 then return 1 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) +\n         (m + 1) * eulerian_num(n - 1, m)\nend",
    "  if n == 0 and m == 0 then return 1 end\n  if n == 0 or m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  a[0][0] = 1\n  for i = 1, n do\n    a[i][0] = 0\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "    local function binomial(n, k)\n        local res = 1\n        for i = 1, k do\n            res = res * (n - i + 1) / i\n        end\n        return res\n    end\n    return binomial(n + 1, m) * binomial(n, m)\nend",
    "  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local a = {}\n    for i = 1, n do\n        a[i] = {}\n        for j = 1, m do\n            if i == 1 or j == 1 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 or j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 then\n                a[i][j] = 0\n            elseif j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 or j == 0 then\n                a[i][j] = 1\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == 0 then\n      return 1\n    elseif m == 0 then\n      return 0\n    else\n      return (n - m + 1) * eulerian_num_rec(n - 1, m - 1) +\n             m * eulerian_num_rec(n - 1, m)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "  if n < 0 or m < 0 or n < m then return 0 end\n  if n == 0 and m == 0 then return 1 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) +\n         (m + 1) * eulerian_num(n - 1, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  return binomial(n + 1, m) * factorial(m)\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == 0 and m == 0 then\n      return 1\n    elseif n == 0 or m == 0 then\n      return 0\n    else\n      return (n + 1) * eulerian_num_rec(n, m - 1) +\n             (m + 1) * eulerian_num_rec(n - 1, m)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "    if n < 0 or m < 0 or n < m then\n        return 0\n    end\n    if n == 0 and m == 0 then\n        return 1\n    end\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  local function factorial(n)\n    local result = 1\n    for i = 2, n do\n      result = result * i\n    end\n    return result\n  end",
    "   local function factorial(n)\n      local result = 1\n      for i = 2, n do\n         result = result * i\n      end\n      return result\n   end",
    "  local result = 1\n  for i = 1, m do\n    result = result * (n + 1 - i) / i\n  end\n  return result\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n  end\nend",
    "    local a = {}\n    for i = 1, n do\n        a[i] = {}\n        for j = 1, m do\n            a[i][j] = 0\n        end\n    end",
    "  local function factorial(n)\n    local result = 1\n    for i = 1, n do\n      result = result * i\n    end\n    return result\n  end",
    "    if n < 0 or m < 0 then\n        return 0\n    elseif n == 0 and m == 0 then\n        return 1\n    else\n        return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    end\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 or j == 0 then\n                a[i][j] = 1\n            elseif i == 1 then\n                a[i][j] = j + 1\n            elseif j == 1 then\n                a[i][j] = 1\n            else\n                a[i][j] = a[i][j - 1] + (i + 1) * a[i - 1][j]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "   local function factorial(n)\n      local result = 1\n      for i = 2, n do\n         result = result * i\n      end\n      return result\n   end\n   return factorial(n) / (factorial(m) * factorial(n - m))\nend",
    "  local res = 1\n  for i = 1, m do\n    res = res * (n + 1 - i) / i\n  end\n  return res\nend",
    "    if n == 0 then\n        return 1\n    elseif m == 0 then\n        return 0\n    else\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n    end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 1\n      elseif j == 0 then\n        a[i][j] = 0\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  elseif m == 1 then\n    return 1\n  elseif m > n then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 and j == 0 then\n        a[i][j] = 1\n      elseif i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = a[i - 1][0]\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j - 1] + j * a[i - 1][j]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 and m == 0 then return 1 end\n  if n == 0 or m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\nend",
    "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = {}\n\t\tfor j = 1, m do\n\t\t\tif i == 1 or j == 1 then\n\t\t\t\ta[i][j] = 1\n\t\t\telse\n\t\t\t\ta[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n\t\t\tend\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) +\n         (m + 1) * eulerian_num(n - 1, m)\nend",
    "  if n == m then\n    return 1\n  elseif m == 1 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n  end\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n  end\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, n do\n        a[i][0] = 1\n    end\n    for i = 1, n do\n        for j = 1, m do\n            a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n        end\n    end\n    return a[n][m]\nend",
    "  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  if m > n then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) +\n         m * eulerian_num(n - 1, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    if n < 0 or m < 0 or n < m then\n        return 0\n    elseif n == 0 and m == 0 then\n        return 1\n    else\n        return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    end\nend",
    "  local function factorial(n)\n    local result = 1\n    for i = 2, n do\n      result = result * i\n    end\n    return result\n  end\n  local function binomial(n, k)\n    return factorial(n) / (factorial(k) * factorial(n - k))\n  end\n  local function eulerian_num_rec(n, m)\n    if n == 0 then\n      return 1\n    elseif m == 0 then\n      return 0\n    else\n      return (n - m + 1) * eulerian_num_rec(n - 1, m) + m * eulerian_num_rec(n - 1, m - 1)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, n do\n        a[i][0] = 1\n    end\n    for i = 1, n do\n        for j = 1, m do\n            a[i][j] = (i - j) * a[i - 1][j] + a[i - 1][j - 1]\n        end\n    end\n    return a[n][m]\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == 0 then\n      return 1\n    elseif m == 0 then\n      return 0\n    else\n      return (n - m + 1) * eulerian_num_rec(n - 1, m - 1) +\n             (m + 1) * eulerian_num_rec(n - 1, m)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "    if n == 0 then\n        return 1\n    elseif m == 0 then\n        return 0\n    elseif m > n then\n        return 0\n    else\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n    end\nend",
    "   local function eulerian_num_rec(n, m)\n      if n == 0 then return 1 end\n      if m == 0 then return 0 end\n      return (n - m + 1) * eulerian_num_rec(n - 1, m) + m * eulerian_num_rec(n - 1, m - 1)\n   end\n   return eulerian_num_rec(n, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "    if n == 0 then\n        return 1\n    elseif n < m then\n        return 0\n    else\n        return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n    end\nend",
    "  local function factorial(n)\n    local result = 1\n    for i = 1, n do\n      result = result * i\n    end\n    return result\n  end",
    "    if n == 0 then\n        return 1\n    elseif m == 0 then\n        return 0\n    elseif m > n then\n        return 0\n    else\n        return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n    end\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  elseif n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "\tif n == 0 then\n\t\treturn 1\n\tend\n\tif m == 0 then\n\t\treturn 0\n\tend\n\treturn (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  if n == 0 then\n    return 1\n  elseif n < 0 or m < 0 then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  if n < 0 or m < 0 or n < m then\n    return 0\n  end\n  if n == 0 and m == 0 then\n    return 1\n  end\n  return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == 0 then\n      return 1\n    elseif m == 0 then\n      return 0\n    else\n      return (n - m + 1) * eulerian_num_rec(n - 1, m - 1) + m * eulerian_num_rec(n - 1, m)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 1\n      elseif j == 0 then\n        a[i][j] = 0\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  end\n  if n == 0 and m == 0 then\n    return 1\n  end\n  if m == 0 then\n    return 0\n  end\n  return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\nend",
    "    if n == 0 then\n        return 1\n    elseif n < 0 or m < 0 then\n        return 0\n    else\n        return (n + m - 1) * eulerian_num(n - 1, m) + (n - m) * eulerian_num(n - 1, m - 1)\n    end\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\ta[i][j] = 0\n\t\tend\n\tend\n\tfor i = 0, n do\n\t\ta[i][0] = 1\n\tend\n\tfor i = 1, n do\n\t\tfor j = 1, m do\n\t\t\ta[i][j] = a[i - 1][j - 1] + (i - 1) * a[i - 1][j]\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "    if n < 0 or m < 0 then\n        return 0\n    end\n    if n == 0 and m == 0 then\n        return 1\n    end\n    if n == 0 or m == 0 then\n        return 0\n    end\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            a[i][j] = 0\n        end\n    end\n    for i = 0, n do\n        a[i][0] = 1\n    end\n    for i = 1, n do\n        for j = 1, m do\n            a[i][j] = (i - j) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n  end\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == 0 then\n      return 1\n    elseif m == 0 then\n      return 0\n    else\n      return (n - m + 1) * eulerian_num_rec(n - 1, m - 1) + m * eulerian_num_rec(n - 1, m)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i + 1 - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local function eulerian_num_rec(n, m)\n    if n == m then\n      return 1\n    elseif m == 1 then\n      return factorial(n - 1)\n    else\n      return (n - m + 1) * eulerian_num_rec(n, m - 1)\n    end\n  end\n  return eulerian_num_rec(n, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  a[0][0] = 1\n  for i = 1, n do\n    a[i][0] = 0\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j - 1] + j * a[i - 1][j]\n    end\n  end\n  return a[n][m]\nend",
    "  local res = 0\n  for k = 0, m do\n    res = res + binomial(n + 1, k) * (k + 1)^n\n  end\n  return res\nend",
    "    local a = {}\n    for i = 0, n do\n        a[i] = {}\n        for j = 0, m do\n            if i == 0 then\n                a[i][j] = 1\n            elseif j == 0 then\n                a[i][j] = 0\n            else\n                a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n            end\n        end\n    end\n    return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i + 1 - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "\tlocal function factorial(n)\n\t\tlocal result = 1\n\t\tfor i = 2, n do\n\t\t\tresult = result * i\n\t\tend\n\t\treturn result\n\tend\n\tlocal function binomial_coefficient(n, k)\n\t\treturn factorial(n) / (factorial(k) * factorial(n - k))\n\tend\n\tlocal result = 0\n\tfor k = 0, m do\n\t\tresult = result + binomial_coefficient(n + 1, k) * factorial(m) / factorial(m - k)\n\tend\n\treturn result\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  elseif n == 0 and m == 0 then\n    return 1\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  if m > n then\n    return 0\n  end\n  if m == 0 then\n    return 1\n  end\n  return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\tif i == 0 or j == 0 then\n\t\t\t\ta[i][j] = 1\n\t\t\telse\n\t\t\t\ta[i][j] = a[i - 1][j - 1] + (i + 1) * a[i][j - 1]\n\t\t\tend\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  local res = 1\n  for i = 1, m do\n    res = res * (n - i + 1) / i\n  end\n  return res\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = a[i - 1][j - 1] + (i + 1) * a[i][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (i - j) * a[i - 1][j] + j * a[i - 1][j - 1]\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    local function factorial(n)\n        local result = 1\n        for i = 1, n do\n            result = result * i\n        end\n        return result\n    end",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = a[i - 1][j - 1] + (i - 1) * a[i - 1][j]\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif n < m then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n - 1, m) - (n - m) * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if m == 0 then\n    return 1\n  elseif m == 1 then\n    return n\n  elseif m == n then\n    return 1\n  elseif m > n then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n  end\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  end\n  if n == 0 then\n    return 1\n  end\n  if m == 0 then\n    return 0\n  end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) +\n         (m + 1) * eulerian_num(n - 1, m)\nend",
    "  if m == 0 then\n    return 1\n  elseif m == 1 then\n    return n\n  elseif m > n then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\n  end\nend",
    "    if n == 0 then\n        return 1\n    end\n    if m == 0 then\n        return 0\n    end\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  if n < m then return 0 end\n  if n == m then return 1 end\n  if m == 0 then return 1 end\n  return (n - m + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n, m + 1)\nend",
    "    local function factorial(n)\n        local result = 1\n        for i = 2, n do\n            result = result * i\n        end\n        return result\n    end",
    "  if n < 0 or m < 0 then\n    return 0\n  elseif n == 0 and m == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n + 1) * eulerian_num(n, m - 1) + (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  elseif n == 0 and m == 0 then\n    return 1\n  else\n    return (n + 1) * eulerian_num(n, m - 1) +\n      (m + 1) * eulerian_num(n - 1, m)\n  end\nend",
    "   if n == 0 then return 1 end\n   if m == 0 then return 0 end\n   return (n - m + 1) * eulerian_num(n - 1, m - 1) + (m + 1) * eulerian_num(n - 1, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n < m then\n    return 0\n  elseif n == m then\n    return 1\n  else\n    return (n - m) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  if n == 0 then return 1 end\n  if m == 0 then return 0 end\n  return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) +\n           m * eulerian_num(n - 1, m)\n  end\nend",
    "    local function eulerian_num_rec(n, m)\n        if n == 0 then\n            return 1\n        elseif m == 0 then\n            return 0\n        else\n            return (n - m + 1) * eulerian_num_rec(n - 1, m - 1) + m * eulerian_num_rec(n - 1, m)\n        end\n    end\n    return eulerian_num_rec(n, m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 or j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "\tlocal a = {}\n\tfor i = 0, n do\n\t\ta[i] = {}\n\t\tfor j = 0, m do\n\t\t\tif i == 0 then\n\t\t\t\ta[i][j] = 0\n\t\t\telseif j == 0 then\n\t\t\t\ta[i][j] = 1\n\t\t\telse\n\t\t\t\ta[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n\t\t\tend\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "    local function factorial(n)\n        if n == 0 then return 1 end\n        local result = 1\n        for i = 2, n do\n            result = result * i\n        end\n        return result\n    end\n    return factorial(n) / factorial(n - m) / factorial(m)\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 1\n      elseif j == 0 then\n        a[i][j] = 0\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = (a[i - 1][j - 1] + (i - j) * a[i - 1][j])\n    end\n  end\n  return a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 0\n      elseif j == 0 then\n        a[i][j] = 1\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + j * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "    if m > n then return 0 end\n    if m == 0 then return 1 end\n    return (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 1)\nend",
    "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = {}\n\t\tfor j = 1, m do\n\t\t\ta[i][j] = 0\n\t\tend\n\tend\n\tfor i = 1, n do\n\t\ta[i][1] = 1\n\tend\n\tfor i = 1, m do\n\t\ta[1][i] = 0\n\tend\n\tfor i = 2, n do\n\t\tfor j = 2, m do\n\t\t\ta[i][j] = (i - j + 1) * a[i - 1][j - 1] + (j + 1) * a[i - 1][j]\n\t\tend\n\tend\n\treturn a[n][m]\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    for j = 0, m do\n      if i == 0 then\n        a[i][j] = 1\n      elseif j == 0 then\n        a[i][j] = 0\n      else\n        a[i][j] = (i - j + 1) * a[i - 1][j] + (j + 1) * a[i - 1][j - 1]\n      end\n    end\n  end\n  return a[n][m]\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m - 1) + m * eulerian_num(n - 1, m)\n  end\nend",
    "  local function factorial(n)\n    local result = 1\n    for i = 2, n do\n      result = result * i\n    end\n    return result\n  end\n  local function binomial_coefficient(n, m)\n    return factorial(n) / (factorial(m) * factorial(n - m))\n  end\n  local result = 0\n  for i = 0, m do\n    result = result + binomial_coefficient(m, i) * factorial(m - i) * (n ^ i)\n  end\n  return result\nend",
    "  local a = {}\n  for i = 0, n do\n    a[i] = {}\n    for j = 0, m do\n      a[i][j] = 0\n    end\n  end\n  for i = 0, n do\n    a[i][0] = 1\n  end\n  for i = 1, n do\n    for j = 1, m do\n      a[i][j] = a[i-1][j-1] + (i-j+1)*a[i-1][j]\n    end\n  end\n  return a[n][m]\nend",
    "  if n < 0 or m < 0 then\n    return 0\n  elseif n == 0 and m == 0 then\n    return 1\n  else\n    return (n + 1) * eulerian_num(n, m - 1) +\n      (-1) ^ (n + 1) * (n + 1) * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  if n == 0 then\n    return 1\n  elseif m == 0 then\n    return 0\n  else\n    return (n - m + 1) * eulerian_num(n - 1, m) + m * eulerian_num(n - 1, m - 1)\n  end\nend",
    "  if m < 0 or m > n then return 0 end\n  if m == 0 then return 1 end\n  if m == 1 then return n end\n  return (n - m + 1) * eulerian_num(n, m - 1) + m * eulerian_num(n, m - 2)\nend"
  ]
}
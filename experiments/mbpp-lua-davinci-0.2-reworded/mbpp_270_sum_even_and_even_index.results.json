{
  "name": "mbpp_270_sum_even_and_even_index",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_270_sum_even_and_even_index.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n\tlocal sum = 0\n\tfor i, v in ipairs(arr) do\n\t\tif i % 2 == 0 and v % 2 == 0 then\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg8rgeply.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpg8rgeply.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i,v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp34ymp971.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp34ymp971.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and i % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3snld5og.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp3snld5og.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i = 1, #arr do\n        if i % 2 == 0 and arr[i] % 2 == 0 then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpozf7vcem.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpozf7vcem.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i = 1, #arr do\n    if i % 2 == 0 and arr[i] % 2 == 0 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel0shhiz.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpel0shhiz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i = 1, #arr do\n        if i % 2 == 0 and arr[i] % 2 == 0 then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpozf7vcem.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpozf7vcem.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n\tlocal sum = 0\n\tfor i, v in ipairs(arr) do\n\t\tif i % 2 == 0 and v % 2 == 0 then\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg8rgeply.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpg8rgeply.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i,v in ipairs(arr) do\n    if v % 2 == 0 and i % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf5nlfvc2.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpf5nlfvc2.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i = 1, #arr do\n    if i % 2 == 0 and arr[i] % 2 == 0 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel0shhiz.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpel0shhiz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i = 1, #arr do\n    if i % 2 == 0 and arr[i] % 2 == 0 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel0shhiz.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpel0shhiz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i,v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp34ymp971.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp34ymp971.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i = 1, #arr do\n        if i % 2 == 0 and arr[i] % 2 == 0 then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpozf7vcem.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpozf7vcem.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i = 1, #arr do\n    if i % 2 == 0 and arr[i] % 2 == 0 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel0shhiz.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpel0shhiz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i = 1, #arr do\n        if arr[i] % 2 == 0 and i % 2 == 0 then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0diu569j.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp0diu569j.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i,v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp34ymp971.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp34ymp971.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and i % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3snld5og.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp3snld5og.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if (i % 2 == 0) and (v % 2 == 0) then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5acvb74u.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp5acvb74u.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n\tlocal sum = 0\n\tfor i, v in ipairs(arr) do\n\t\tif i % 2 == 0 and v % 2 == 0 then\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg8rgeply.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpg8rgeply.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i = 1, #arr do\n    if i % 2 == 0 and arr[i] % 2 == 0 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel0shhiz.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpel0shhiz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i = 1, #arr do\n        if i % 2 == 0 and arr[i] % 2 == 0 then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpozf7vcem.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpozf7vcem.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i = 1, #arr do\n    if i % 2 == 0 and arr[i] % 2 == 0 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpel0shhiz.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpel0shhiz.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if (i % 2 == 0) and (v % 2 == 0) then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122394,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5acvb74u.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmp5acvb74u.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n    local sum = 0\n    for i, v in ipairs(arr) do\n        if i % 2 == 0 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzz1rtakk.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzz1rtakk.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a luathon function to find the sum of even numbers at even positions of a table.\nlocal function sum_even_and_even_index(arr)\n  local sum = 0\n  for i, v in ipairs(arr) do\n    if i % 2 == 0 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_even_and_even_index\n    lu.assertEquals(candidate({5, 6, 12, 1, 18, 8}), 30)\n    lu.assertEquals(candidate({3, 20, 17, 9, 2, 10, 18, 13, 6, 18}), 26)\n    lu.assertEquals(candidate({5, 6, 12, 1}), 12)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027734,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzlcq31bm.lua:15: expected: 30, actual: 14\nstack traceback:\n\t/tmp/tmpzlcq31bm.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
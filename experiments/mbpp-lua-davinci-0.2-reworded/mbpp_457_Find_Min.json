{
  "name": "mbpp_457_Find_Min",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the subtable having minimum length.\nlocal function Find_Min(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Find_Min\n    lu.assertEquals(candidate({{1}, {1, 2}, {1, 2, 3}}), {1})\n    lu.assertEquals(candidate({{1, 1}, {1, 1, 1}, {1, 2, 7, 8}}), {1, 1})\n    lu.assertEquals(candidate({{'x'}, {'x', 'y'}, {'x', 'y', 'z'}}), {'x'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local min_len = math.huge\n    local min_subtable = nil\n    for _, subtable in ipairs(lst) do\n        if #subtable < min_len then\n            min_len = #subtable\n            min_subtable = subtable\n        end\n    end\n    return min_subtable\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn lst[min_idx]\nend",
    "  local min = math.huge\n  local min_table = nil\n  for _,v in pairs(lst) do\n    if type(v) == \"table\" and #v < min then\n      min = #v\n      min_table = v\n    end\n  end\n  return min_table\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for i, tbl in ipairs(lst) do\n        if #tbl < min_len then\n            min_len = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_i = 0\n\tfor i = 1, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_i = i\n\t\tend\n\tend\n\treturn min_i\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn min_idx\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min_len then\n         min_len = #tbl\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend"
  ]
}
{
  "name": "mbpp_457_Find_Min",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the subtable having minimum length.\nlocal function Find_Min(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Find_Min\n    lu.assertEquals(candidate({{1}, {1, 2}, {1, 2, 3}}), {1})\n    lu.assertEquals(candidate({{1, 1}, {1, 1, 1}, {1, 2, 7, 8}}), {1, 1})\n    lu.assertEquals(candidate({{'x'}, {'x', 'y'}, {'x', 'y', 'z'}}), {'x'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local min_len = math.huge\n    local min_subtable = nil\n    for _, subtable in ipairs(lst) do\n        if #subtable < min_len then\n            min_len = #subtable\n            min_subtable = subtable\n        end\n    end\n    return min_subtable\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn lst[min_idx]\nend",
    "  local min = math.huge\n  local min_table = nil\n  for _,v in pairs(lst) do\n    if type(v) == \"table\" and #v < min then\n      min = #v\n      min_table = v\n    end\n  end\n  return min_table\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for i, tbl in ipairs(lst) do\n        if #tbl < min_len then\n            min_len = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_i = 0\n\tfor i = 1, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_i = i\n\t\tend\n\tend\n\treturn min_i\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn min_idx\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min_len then\n         min_len = #tbl\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      local len = #tbl\n      if len < min_len then\n         min_len = len\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min_len then\n            min_len = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, v in ipairs(lst) do\n    if #v < min then\n      min = #v\n      min_tbl = v\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _,tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_index = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn min_index\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min = lst[1]\n   for i = 2, #lst do\n      if #lst[i] < #min then min = lst[i] end\n   end\n   return min\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min = lst[1]\n    for _, v in ipairs(lst) do\n        if #v < #min then\n            min = v\n        end\n    end\n    return min\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min then\n            min = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_index = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn lst[min_index]\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "   local min = #lst[1]\n   local min_tbl = lst[1]\n   for i = 2, #lst do\n      if #lst[i] < min then\n         min = #lst[i]\n         min_tbl = lst[i]\n      end\n   end\n   return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "    local min_len = math.huge\n    local min_subtable = nil\n    for _, subtable in ipairs(lst) do\n        local len = #subtable\n        if len < min_len then\n            min_len = len\n            min_subtable = subtable\n        end\n    end\n    return min_subtable\nend",
    "    local min = math.huge\n    local min_table = nil\n    for i, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = #v\n            if len < min then\n                min = len\n                min_table = v\n            end\n        end\n    end\n    return min_table\nend",
    "  local min_len = math.huge\n  local min_idx = 0\n  for i, v in ipairs(lst) do\n    if type(v) == \"table\" then\n      local len = #v\n      if len < min_len then\n        min_len = len\n        min_idx = i\n      end\n    end\n  end\n  return lst[min_idx]\nend",
    "    local min = math.huge\n    local min_subtable\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = #v\n            if len < min then\n                min = len\n                min_subtable = v\n            end\n        end\n    end\n    return min_subtable\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min_len then\n      min_len = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = lst[1]\n  for _,v in ipairs(lst) do\n    if #v < #min then\n      min = v\n    end\n  end\n  return min\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = lst[1]\n  local min_len = #min\n  for i = 2, #lst do\n    local len = #lst[i]\n    if len < min_len then\n      min = lst[i]\n      min_len = len\n    end\n  end\n  return min\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      local len = #tbl\n      if len < min_len then\n         min_len = len\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for i = 1, #lst do\n    local tbl = lst[i]\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_index = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_index = i\n\t\tend\n\tend\n\treturn lst[min_index]\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "  local min_len = math.huge\n  local min_subtable = nil\n  for _, subtable in ipairs(lst) do\n    local len = #subtable\n    if len < min_len then\n      min_len = len\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min_len then\n      min_len = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min = math.huge\n   local min_tbl = nil\n   for _,tbl in ipairs(lst) do\n      if #tbl < min then\n         min = #tbl\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "  local min = #lst[1]\n  local min_tbl = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < min then\n      min = #lst[i]\n      min_tbl = lst[i]\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min then\n         min = #tbl\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal result = nil\n\tfor k,v in pairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tresult = v\n\t\t\tend\n\t\tend\n\tend\n\treturn result\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #lst[min] then\n\t\t\tmin = i\n\t\tend\n\tend\n\treturn lst[min]\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min then\n            min = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "   local min = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min then\n         min = #tbl\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn lst[min_idx]\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, v in ipairs(lst) do\n    if #v < min then\n      min = #v\n      min_tbl = v\n    end\n  end\n  return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min_len then\n            min_len = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min_len then\n            min_len = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _,tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for i, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min then\n            min = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, v in ipairs(lst) do\n\t\tif #v < min then\n\t\t\tmin = #v\n\t\t\tmin_tbl = v\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  local min_table\n  for _, v in pairs(lst) do\n    if type(v) == \"table\" then\n      local len = #v\n      if len < min then\n        min = len\n        min_table = v\n      end\n    end\n  end\n  return min_table\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "   local min = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      local len = #tbl\n      if len < min then\n         min = len\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "   local min = math.huge\n   local min_idx = nil\n   for i, v in ipairs(lst) do\n      if #v < min then\n         min = #v\n         min_idx = i\n      end\n   end\n   return min_idx\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_table\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" and #v < min then\n\t\t\tmin = #v\n\t\t\tmin_table = v\n\t\tend\n\tend\n\treturn min_table\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min_len then\n\t min_len = #tbl\n\t min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min_len then\n      min_len = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_subtable = nil\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_subtable = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_subtable\nend",
    "  local min = math.huge\n  local min_table\n  for _, v in pairs(lst) do\n    if #v < min then\n      min = #v\n      min_table = v\n    end\n  end\n  return min_table\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn min_idx\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "\tlocal min = math.huge\n\tlocal min_subtable\n\tfor _,subtable in ipairs(lst) do\n\t\tlocal len = #subtable\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_subtable = subtable\n\t\tend\n\tend\n\treturn min_subtable\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _,tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min_len = math.huge\n  local min_subtable = nil\n  for _, subtable in pairs(lst) do\n    local len = #subtable\n    if len < min_len then\n      min_len = len\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _,tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local sub = nil\n  for _, v in ipairs(lst) do\n    if #v < min then\n      min = #v\n      sub = v\n    end\n  end\n  return sub\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min_len = math.huge\n    local min_subtable = nil\n    for _, subtable in ipairs(lst) do\n        local len = #subtable\n        if len < min_len then\n            min_len = len\n            min_subtable = subtable\n        end\n    end\n    return min_subtable\nend",
    "   local min = math.huge\n   local ans = nil\n   for k,v in pairs(lst) do\n      if type(v) == \"table\" and #v < min then\n         min = #v\n         ans = v\n      end\n   end\n   return ans\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for i = 1, #lst do\n    local tbl = lst[i]\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "   local min = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min then\n         min = #tbl\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = {}\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_table = nil\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\t\tmin_table = v\n\t\t\tend\n\t\tend\n\tend\n\treturn min_table\nend",
    "  local min = math.huge\n  local min_subtable = nil\n  for _, subtable in ipairs(lst) do\n    local len = #subtable\n    if len < min then\n      min = len\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min_len = math.huge\n  local min_subtable\n  for _, subtable in ipairs(lst) do\n    local len = #subtable\n    if len < min_len then\n      min_len = len\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "    local min = math.huge\n    local min_idx = nil\n    for i, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_idx = i\n        end\n    end\n    return min_idx\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min = math.huge\n    local min_t = nil\n    for _, t in ipairs(lst) do\n        if #t < min then\n            min = #t\n            min_t = t\n        end\n    end\n    return min_t\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min_len = math.huge\n  local min_subtable\n  for _, subtable in ipairs(lst) do\n    if #subtable < min_len then\n      min_len = #subtable\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "   local min = lst[1]\n   for _,v in ipairs(lst) do\n      if #v < #min then\n         min = v\n      end\n   end\n   return min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    local min_index = 0\n    for i, v in ipairs(lst) do\n        if type(v) == 'table' and #v < min then\n            min = #v\n            min_index = i\n        end\n    end\n    return lst[min_index]\nend",
    "   local min = math.huge\n   local min_table = nil\n   for i, v in ipairs(lst) do\n      if type(v) == \"table\" and #v < min then\n         min = #v\n         min_table = v\n      end\n   end\n   return min_table\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local minlen = math.huge\n  local minsub = nil\n  for i, sub in ipairs(lst) do\n    local len = #sub\n    if len < minlen then\n      minlen = len\n      minsub = sub\n    end\n  end\n  return minsub\nend",
    "\tlocal min = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #lst[min] then\n\t\t\tmin = i\n\t\tend\n\tend\n\treturn lst[min]\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, v in ipairs(lst) do\n    if #v < min then\n      min = #v\n      min_tbl = v\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      if #tbl < min_len then\n\t min_len = #tbl\n\t min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "   local min_len = math.huge\n   local min_tbl = nil\n   for _, tbl in ipairs(lst) do\n      local len = #tbl\n      if len < min_len then\n         min_len = len\n         min_tbl = tbl\n      end\n   end\n   return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = math.huge\n  local min_subtable = nil\n  for _, subtable in ipairs(lst) do\n    if #subtable < min then\n      min = #subtable\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "    local min = math.huge\n    local min_subtable\n    for _, subtable in ipairs(lst) do\n        if #subtable < min then\n            min = #subtable\n            min_subtable = subtable\n        end\n    end\n    return min_subtable\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_subtable\n  for _,subtable in ipairs(lst) do\n    local len = #subtable\n    if len < min then\n      min = len\n      min_subtable = subtable\n    end\n  end\n  return min_subtable\nend",
    "  local min = lst[1]\n  for i = 2, #lst do\n    if #lst[i] < #min then\n      min = lst[i]\n    end\n  end\n  return min\nend",
    "    local min_len = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "\tlocal min = lst[1]\n\tfor i = 2, #lst do\n\t\tif #lst[i] < #min then\n\t\t\tmin = lst[i]\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min = #lst[1]\n\tlocal min_idx = 1\n\tfor i = 2, #lst do\n\t\tif #lst[i] < min then\n\t\t\tmin = #lst[i]\n\t\t\tmin_idx = i\n\t\tend\n\tend\n\treturn min_idx\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "\tlocal min = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend",
    "  local min = math.huge\n  local min_idx = nil\n  for k, v in pairs(lst) do\n    if type(v) == \"table\" and #v < min then\n      min = #v\n      min_idx = k\n    end\n  end\n  return min_idx\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, tbl in ipairs(lst) do\n        if #tbl < min then\n            min = #tbl\n            min_tbl = tbl\n        end\n    end\n    return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_subtable = nil\n\tfor _, subtable in ipairs(lst) do\n\t\tlocal len = #subtable\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_subtable = subtable\n\t\tend\n\tend\n\treturn min_subtable\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min = lst[1]\n    for i = 2, #lst do\n        if #lst[i] < #min then\n            min = lst[i]\n        end\n    end\n    return min\nend",
    "\tlocal min = math.huge\n\tlocal min_subtable\n\tfor _, subtable in ipairs(lst) do\n\t\tlocal len = #subtable\n\t\tif len < min then\n\t\t\tmin = len\n\t\t\tmin_subtable = subtable\n\t\tend\n\tend\n\treturn min_subtable\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "    local min = math.huge\n    local min_tbl = nil\n    for _, v in ipairs(lst) do\n        if #v < min then\n            min = #v\n            min_tbl = v\n        end\n    end\n    return min_tbl\nend",
    "  local min_len = math.huge\n  local min_tbl = nil\n  for i = 1, #lst do\n    local tbl = lst[i]\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "  local min = math.huge\n  local min_tbl = nil\n  for _, tbl in ipairs(lst) do\n    if #tbl < min then\n      min = #tbl\n      min_tbl = tbl\n    end\n  end\n  return min_tbl\nend",
    "\tlocal min_len = math.huge\n\tlocal min_tbl = nil\n\tfor _, tbl in ipairs(lst) do\n\t\tlocal len = #tbl\n\t\tif len < min_len then\n\t\t\tmin_len = len\n\t\t\tmin_tbl = tbl\n\t\tend\n\tend\n\treturn min_tbl\nend"
  ]
}
{
  "name": "mbpp_625_swap_List",
  "language": "lua",
  "prompt": "-- Write a luathon function to interchange the first and last element in a given table.\nlocal function swap_List(newList)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_625_swap_List.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = swap_List\n    lu.assertEquals(candidate({1, 2, 3}), {3, 2, 1})\n    lu.assertEquals(candidate({1, 2, 3, 4, 4}), {4, 2, 3, 4, 1})\n    lu.assertEquals(candidate({4, 5, 6}), {6, 5, 4})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal first = newList[1]\n\tlocal last = newList[#newList]\n\tnewList[1] = last\n\tnewList[#newList] = first\n\treturn newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "  local temp = newList[1]\n  newList[1] = newList[#newList]\n  newList[#newList] = temp\n  return newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "    local temp = newList[1]\n    newList[1] = newList[#newList]\n    newList[#newList] = temp\n    return newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "    local temp = newList[1]\n    newList[1] = newList[#newList]\n    newList[#newList] = temp\n    return newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\nend",
    "    local temp = newList[1]\n    newList[1] = newList[#newList]\n    newList[#newList] = temp\n    return newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "    local temp = newList[1]\n    newList[1] = newList[#newList]\n    newList[#newList] = temp\n    return newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend",
    "  local temp = newList[1]\n  newList[1] = newList[#newList]\n  newList[#newList] = temp\n  return newList\nend",
    "    local temp = newList[1]\n    newList[1] = newList[#newList]\n    newList[#newList] = temp\n    return newList\nend",
    "\tlocal temp = newList[1]\n\tnewList[1] = newList[#newList]\n\tnewList[#newList] = temp\n\treturn newList\nend"
  ]
}
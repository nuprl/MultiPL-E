{
  "name": "mbpp_129_magic_square_test",
  "language": "lua",
  "prompt": "-- Write a function to calculate whether the matrix is a magic square.\nlocal function magic_square_test(my_matrix)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_129_magic_square_test.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = magic_square_test\n    lu.assertEquals(candidate({{7, 12, 1, 14}, {2, 13, 8, 11}, {16, 3, 10, 5}, {9, 6, 15, 4}}), true)\n    lu.assertEquals(candidate({{2, 7, 6}, {9, 5, 1}, {4, 3, 8}}), true)\n    lu.assertEquals(candidate({{2, 7, 6}, {9, 5, 1}, {4, 3, 7}}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix[i] do\n            sum = sum + my_matrix[i][j]\n        end\n    end\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix[i] do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if row_sum ~= sum then\n            magic_square = false\n            break\n        end\n        row_sum = 0\n    end\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix[i] do\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if col_sum ~= sum then\n            magic_square = false\n            break\n        end\n        col_sum = 0\n    end\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic_square = false\n    end\n    for i = 1, #my_matrix do\n        diag_sum2 = diag_sum2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    if diag_sum2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum_rows = 0\n    local sum_cols = 0\n    local sum_diag = 0\n    local sum_anti_diag = 0\n    local sum_all = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum_rows = sum_rows + my_matrix[i][1]\n        sum_cols = sum_cols + my_matrix[1][i]\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_anti_diag = sum_anti_diag + my_matrix[i][n - i + 1]\n    end\n    sum_all = sum_rows * n\n    for i = 1, n do\n        for j = 1, n do\n            if sum_rows ~= sum_all or sum_cols ~= sum_all or sum_diag ~= sum_all or sum_anti_diag ~= sum_all then\n                return false\n            end\n        end\n    end\n    return true\nend",
    "  local sum = 0\n  local magic = true\n  local previous_sum = 0\n  for i = 1, #my_matrix do\n    sum = 0\n    for j = 1, #my_matrix[i] do\n      sum = sum + my_matrix[i][j]\n    end\n    if i == 1 then\n      previous_sum = sum\n    else\n      if sum ~= previous_sum then\n        magic = false\n      end\n    end\n  end\n  return magic\nend",
    "  local sum_diag_1 = 0\n  local sum_diag_2 = 0\n  local sum_row = 0\n  local sum_col = 0\n  local sum_row_prev = 0\n  local sum_col_prev = 0\n  local sum_diag_1_prev = 0\n  local sum_diag_2_prev = 0\n  local is_magic_square = true\n  local n = #my_matrix\n  for i = 1, n do\n    sum_row = 0\n    sum_col = 0\n    for j = 1, n do\n      sum_row = sum_row + my_matrix[i][j]\n      sum_col = sum_col + my_matrix[j][i]\n    end\n    if i == 1 then\n      sum_row_prev = sum_row\n      sum_col_prev = sum_col\n    else\n      if sum_row ~= sum_row_prev or sum_col ~= sum_col_prev then\n        is_magic_square = false\n        break\n      end\n    end\n    sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n    sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n  end\n  if sum_diag_1 ~= sum_diag_1_prev or sum_diag_2 ~= sum_diag_2_prev then\n    is_magic_square = false\n  end\n  return is_magic_square\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local reverse_diagonal_sum = 0\n    local row_index = 1\n    local column_index = 1\n    local diagonal_index = 1\n    local reverse_diagonal_index = 1\n    local row_length = #my_matrix\n    local column_length = #my_matrix[1]",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, n do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    for i = 1, n do\n        sum_diag1 = sum_diag1 + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum_diag1 ~= sum or sum_diag2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local n = #my_matrix\n    for i = 1, n do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = row_sum\n        elseif sum ~= row_sum then\n            return false\n        end\n        if sum ~= col_sum then\n            return false\n        end\n        diag_sum = diag_sum + my_matrix[i][i]\n        diag_sum2 = diag_sum2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= diag_sum or sum ~= diag_sum2 then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    return false\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local magic_square = true\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    local diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic_square = false\n    end\n    diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][#my_matrix - i + 1]\n    end\n    if diag_sum ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            return false\n        end\n    end\n    local diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        return false\n    end\n    diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][#my_matrix - i + 1]\n    end\n    if diag_sum ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    local sum = 0\n    local sum2 = 0\n    local sum3 = 0\n    local sum4 = 0\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix[1] do\n            sum = sum + my_matrix[i][j]\n            sum2 = sum2 + my_matrix[j][i]\n            sum3 = sum3 + my_matrix[i][i]\n            sum4 = sum4 + my_matrix[i][#my_matrix[1] - i + 1]\n        end\n        if sum ~= sum2 or sum ~= sum3 or sum ~= sum4 then\n            return false\n        end\n        sum = 0\n        sum2 = 0\n        sum3 = 0\n        sum4 = 0\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    return true\nend",
    "    --[[\n    A magic square is a square matrix of numbers where the sum of the\n    numbers in each row, column and diagonal is the same.\n    ]]--\n    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = sum_row\n        elseif sum ~= sum_row or sum ~= sum_col then\n            magic_square = false\n            break\n        end\n    end\n    if magic_square then\n        for i = 1, #my_matrix do\n            sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n            sum_diag_2 = sum_diag_2 + my_matrix[i][#my_matrix - i + 1]\n        end\n        if sum ~= sum_diag_1 or sum ~= sum_diag_2 then\n            magic_square = false\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    local m = #my_matrix[1]\n    local is_magic = true\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, n do\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        for j = 1, m do\n            sum_row = sum_row + my_matrix[i][j]\n        end\n        if sum_row ~= sum then\n            is_magic = false\n            break\n        end\n    end\n    for i = 1, m do\n        sum_col = 0\n        for j = 1, n do\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_col ~= sum then\n            is_magic = false\n            break\n        end\n    end\n    if sum_diag_1 ~= sum or sum_diag_2 ~= sum then\n        is_magic = false\n    end\n    return is_magic\nend",
    "    local sum = 0\n    local magic_square = true\n    local i = 1\n    while i <= #my_matrix do\n        sum = sum + my_matrix[i][1]\n        i = i + 1\n    end\n    i = 1\n    while i <= #my_matrix do\n        local j = 1\n        local temp_sum = 0\n        while j <= #my_matrix do\n            temp_sum = temp_sum + my_matrix[i][j]\n            j = j + 1\n        end\n        if temp_sum ~= sum then\n            magic_square = false\n        end\n        i = i + 1\n    end\n    i = 1\n    while i <= #my_matrix do\n        local j = 1\n        local temp_sum = 0\n        while j <= #my_matrix do\n            temp_sum = temp_sum + my_matrix[j][i]\n            j = j + 1\n        end\n        if temp_sum ~= sum then\n            magic_square = false\n        end\n        i = i + 1\n    end\n    local j = 1\n    local temp_sum = 0\n    while j <= #my_matrix do\n        temp_sum = temp_sum + my_matrix[j][j]\n        j = j + 1\n    end\n    if temp_sum ~= sum then\n        magic_square = false\n    end\n    j = 1\n    temp_sum = 0\n    while j <= #my_matrix do\n        temp_sum = temp_sum + my_matrix[j][#my_matrix - j + 1]\n        j = j + 1\n    end\n    if temp_sum ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "\t-- check if the matrix is a square matrix\n\tif not is_square_matrix(my_matrix) then\n\t\treturn false\n\tend\n\t-- check if the matrix is a magic square\n\tlocal n = #my_matrix\n\tlocal magic_number = n * (n^2 + 1) / 2\n\tlocal row_sum = 0\n\tlocal col_sum = 0\n\tlocal diag_sum = 0\n\tlocal anti_diag_sum = 0\n\tfor i = 1, n do\n\t\trow_sum = 0\n\t\tcol_sum = 0\n\t\tfor j = 1, n do\n\t\t\trow_sum = row_sum + my_matrix[i][j]\n\t\t\tcol_sum = col_sum + my_matrix[j][i]\n\t\tend\n\t\tif row_sum ~= magic_number or col_sum ~= magic_number then\n\t\t\treturn false\n\t\tend\n\t\tdiag_sum = diag_sum + my_matrix[i][i]\n\t\tanti_diag_sum = anti_diag_sum + my_matrix[i][n - i + 1]\n\tend\n\tif diag_sum ~= magic_number or anti_diag_sum ~= magic_number then\n\t\treturn false\n\tend\n\treturn true\nend",
    "    -- TODO: Write this function.\n    -- Hint: Use the sum_of_row function you wrote above.\n    local sum = sum_of_row(my_matrix, 1)\n    for i = 1, #my_matrix do\n        if sum_of_row(my_matrix, i) ~= sum then\n            return false\n        end\n    end\n    for i = 1, #my_matrix do\n        if sum_of_column(my_matrix, i) ~= sum then\n            return false\n        end\n    end\n    if sum_of_diagonal(my_matrix, 1) ~= sum then\n        return false\n    end\n    if sum_of_diagonal(my_matrix, 2) ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the sum_of_row function you wrote above.\n    local sum = sum_of_row(my_matrix, 1)\n    for i = 1, #my_matrix do\n        if sum ~= sum_of_row(my_matrix, i) then\n            return false\n        end\n    end\n    for i = 1, #my_matrix do\n        if sum ~= sum_of_column(my_matrix, i) then\n            return false\n        end\n    end\n    if sum ~= sum_of_diagonal(my_matrix, 1) then\n        return false\n    end\n    if sum ~= sum_of_diagonal(my_matrix, 2) then\n        return false\n    end\n    return true\nend",
    "\tlocal sum = 0\n\tlocal magic_number = 0\n\tlocal row_sum = 0\n\tlocal col_sum = 0\n\tlocal diag_sum = 0\n\tlocal diag_sum2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag_count2 = 0\n\tlocal row_count = 0",
    "    -- TODO: Implement this function.\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    -- Check that the matrix is square.\n    if #my_matrix ~= #my_matrix[1] then\n        return false\n    end\n    -- Check that the matrix is of odd size.\n    if #my_matrix % 2 == 0 then\n        return false\n    end\n    -- Check that the matrix contains only the numbers 1 to n^2.\n    local n = #my_matrix\n    local numbers = {}\n    for i = 1, n do\n        for j = 1, n do\n            local number = my_matrix[i][j]\n            if number < 1 or number > n*n then\n                return false\n            end\n            if numbers[number] then\n                return false\n            end\n            numbers[number] = true\n        end\n    end\n    -- Check that the sum of the rows is the same.\n    local sum = 0\n    for i = 1, n do\n        local row_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if i == 1 then\n            sum = row_sum\n        elseif sum ~= row_sum then\n            return false\n        end\n    end\n    -- Check that the sum of the columns is the same.\n    for j = 1, n do\n        local column_sum = 0\n        for i = 1, n do\n            column_sum = column_sum + my_matrix[i][j]\n        end\n        if sum ~= column_sum then\n            return false\n        end\n    end\n    -- Check that the sum of the diagonals is the same.\n    local diagonal_sum = 0\n    for i = 1, n do\n        diagonal_sum = diagonal_sum + my_matrix[i][i]\n    end\n    if sum ~= diagonal_sum then\n        return false\n    end\n    local other_diagonal_sum = 0\n    for i = 1, n do\n        other_diagonal_sum = other_diagonal_sum + my_matrix[i][n+1-i]\n    end\n    if sum ~= other_diagonal_sum then\n        return false\n    end\n",
    "    -- Check that the matrix is square.\n    if #my_matrix ~= #my_matrix[1] then\n        return false\n    end",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local row_count = #my_matrix\n    local col_count = #my_matrix[1]\n    for i = 1, row_count do\n        for j = 1, col_count do\n            sum = sum + my_matrix[i][j]\n        end\n    end\n    for i = 1, row_count do\n        for j = 1, col_count do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if row_sum ~= sum then\n            magic_square = false\n            break\n        end\n        row_sum = 0\n    end\n    for i = 1, col_count do\n        for j = 1, row_count do\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if col_sum ~= sum then\n            magic_square = false\n            break\n        end\n        col_sum = 0\n    end\n    for i = 1, row_count do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic_square = false\n    end\n    for i = 1, row_count do\n        diag_sum2 = diag_sum2 + my_matrix[i][row_count - i + 1]\n    end\n    if diag_sum2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_test = 0\n    local row_test = 0\n    local col_test = 0\n    local diag_test = 0\n    local diag_test2 = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local row_count = 0\n    local col_count = 0\n    local diag_count = 0\n    local diag_count2 = 0\n    local row_length = 0\n    local col_length = 0\n    local diag_length = 0\n    local diag_length2 = 0\n    local row_length_test = 0\n    local col_length_test = 0\n    local diag_length_test = 0\n    local diag_length_test2 = 0\n    local row_length_test2 = 0\n    local col_length_test2 = 0\n    local diag_length_test3 = 0\n    local diag_length_test4 = 0\n    local row_length_test3 = 0\n    local col_length_test3 = 0\n    local diag_length_test5 = 0\n    local diag_length_test6 = 0\n    local row_length_test4 = 0\n    local col_length_test4 = 0\n    local diag_length_test7 = 0\n    local diag_length_test8 = 0\n    local row_length_test5 = 0\n    local col_length_test5 = 0\n    local diag_length_test9 = 0\n    local diag_length_test10 = 0\n    local row_length_test6 = 0\n    local col_length_test6 = 0\n    local diag_length_test11 = 0\n    local diag_length_test12 = 0\n    local row_length_test7 = 0\n    local col_length_test7 = 0\n    local diag_length_test13 = 0\n    local diag_length_test14 = 0\n    local row_length_test8 = 0\n    local col_length_test8 = 0\n    local diag_length_test15 = 0\n    local diag",
    "  local n = #my_matrix\n  local sum = 0\n  local diagonal_sum = 0\n  local anti_diagonal_sum = 0\n  local row_sum = {}\n  local column_sum = {}\n  for i = 1, n do\n    row_sum[i] = 0\n    column_sum[i] = 0\n  end\n  for i = 1, n do\n    for j = 1, n do\n      row_sum[i] = row_sum[i] + my_matrix[i][j]\n      column_sum[j] = column_sum[j] + my_matrix[i][j]\n      if i == j then\n        diagonal_sum = diagonal_sum + my_matrix[i][j]\n      end\n      if i + j == n + 1 then\n        anti_diagonal_sum = anti_diagonal_sum + my_matrix[i][j]\n      end\n    end\n  end\n  if diagonal_sum ~= anti_diagonal_sum then\n    return false\n  end\n  sum = diagonal_sum\n  for i = 1, n do\n    if row_sum[i] ~= sum or column_sum[i] ~= sum then\n      return false\n    end\n  end\n  return true\nend",
    "    --[[\n    -- This function returns true if the matrix is a magic square,\n    -- and false otherwise.\n    --]]\n    local sum = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local rev_diag_sum = 0\n    local row_count = 1\n    local col_count = 1\n    local diag_count = 1\n    local rev_diag_count = 1\n    local row_check = 0\n    local col_check = 0\n    local diag_check = 0\n    local rev_diag_check = 0",
    "    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n-i+1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "  -- TODO: Implement this function.\n  return false\nend",
    "  local sum = 0\n  local sum_test = 0\n  for i = 1, #my_matrix do\n    sum = sum + my_matrix[i][i]\n  end\n  for i = 1, #my_matrix do\n    sum_test = 0\n    for j = 1, #my_matrix do\n      sum_test = sum_test + my_matrix[i][j]\n    end\n    if sum_test ~= sum then\n      return false\n    end\n  end\n  for i = 1, #my_matrix do\n    sum_test = 0\n    for j = 1, #my_matrix do\n      sum_test = sum_test + my_matrix[j][i]\n    end\n    if sum_test ~= sum then\n      return false\n    end\n  end\n  return true\nend",
    "    -- TODO: write your code here\n    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_anti_diag = 0\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n        sum_row = 0\n        sum_col = 0\n    end\n    for i = 1, #my_matrix do\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_anti_diag = sum_anti_diag + my_matrix[i][#my_matrix - i + 1]\n    end\n    if sum_diag ~= sum or sum_anti_diag ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_check = 0\n    local row_index = 1\n    local col_index = 1\n    local row_count = #my_matrix\n    local col_count = #my_matrix[1]\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum_check = 0\n    local diag_index = 1\n    local diag_index_check = 1\n    local diag_count = row_count\n    local diag_count_check = row_count\n    local diag_row_index = 1\n    local diag_col_index = col_count\n    local diag_row_index_check = row_count\n    local diag_col_index_check = 1",
    "    local sum = 0\n    local magic = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic = false\n            break\n        end\n    end\n    local diag_sum = 0\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic = false\n    end\n    diag_sum = 0\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][n - i + 1]\n    end\n    if diag_sum ~= sum then\n        magic = false\n    end\n    return magic\nend",
    "    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag2 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local magic = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, n do\n        local temp = 0\n        for j = 1, n do\n            temp = temp + my_matrix[i][j]\n        end\n        if temp ~= sum then\n            magic = false\n            break\n        end\n    end\n    for j = 1, n do\n        local temp = 0\n        for i = 1, n do\n            temp = temp + my_matrix[i][j]\n        end\n        if temp ~= sum then\n            magic = false\n            break\n        end\n    end\n    local temp = 0\n    for i = 1, n do\n        temp = temp + my_matrix[i][i]\n    end\n    if temp ~= sum then\n        magic = false\n    end\n    temp = 0\n    for i = 1, n do\n        temp = temp + my_matrix[i][n - i + 1]\n    end\n    if temp ~= sum then\n        magic = false\n    end\n    return magic\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local rev_diag_sum = 0\n    for i = 1, #my_matrix do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, #my_matrix[i] do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = row_sum\n        else\n            if row_sum ~= sum then\n                magic_square = false\n            end\n        end\n        if col_sum ~= sum then\n            magic_square = false\n        end\n        diag_sum = diag_sum + my_matrix[i][i]\n        rev_diag_sum = rev_diag_sum + my_matrix[i][#my_matrix[i] - i + 1]\n    end\n    if diag_sum ~= sum or rev_diag_sum ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test_2 = 0\n\tlocal sum_test_3 = 0\n\tlocal sum_test_4 = 0\n\tlocal sum_test_5 = 0\n\tlocal sum_test_6 = 0\n\tlocal sum_test_7 = 0\n\tlocal sum_test_8 = 0\n\tlocal sum_test_9 = 0\n\tlocal sum_test_10 = 0\n\tlocal sum_test_11 = 0\n\tlocal sum_test_12 = 0\n\tlocal sum_test_13 = 0\n\tlocal sum_test_14 = 0\n\tlocal sum_test_15 = 0\n\tlocal sum_test_16 = 0\n\tlocal sum_test_17 = 0\n\tlocal sum_test_18 = 0\n\tlocal sum_test_19 = 0\n\tlocal sum_test_20 = 0\n\tlocal sum_test_21 = 0\n\tlocal sum_test_22 = 0\n\tlocal sum_test_23 = 0\n\tlocal sum_test_24 = 0\n\tlocal sum_test_25 = 0\n\tlocal sum_test_26 = 0\n\tlocal sum_test_27 = 0\n\tlocal sum_test_28 = 0\n\tlocal sum_test_29 = 0\n\tlocal sum_test_30 = 0\n\tlocal sum_test_31 = 0\n\tlocal sum_test_32 = 0\n\tlocal sum_test_33 = 0\n\tlocal sum_test_34 = 0\n\tlocal sum_test_35 = 0\n\tlocal sum_test_36 = 0\n\tlocal sum_test_37 = 0\n\tlocal sum_test_38 = 0\n\tlocal sum_test_39 = 0\n\tlocal sum_test_40 = 0\n\tlocal sum_test_41 = 0\n\tlocal sum_test_42 = 0\n\tlocal sum_test_43 = 0\n\tlocal sum_test_44 = 0\n\tlocal sum_test_45 = 0\n\tlocal sum_test_46 = 0\n\tlocal sum_test_47 = 0\n\tlocal sum_test_48 = 0\n\tlocal sum_test_49 = 0\n\tlocal sum_test_50 = 0\n\tlocal sum_test_51",
    "    -- TODO: Implement this function.\nend",
    "    -- TODO: implement this function\n    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, #my_matrix[i] do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = sum_row\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][#my_matrix[i] - i + 1]\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test_2 = 0\n\tlocal sum_test_3 = 0\n\tlocal sum_test_4 = 0\n\tlocal sum_test_5 = 0\n\tlocal sum_test_6 = 0\n\tlocal sum_test_7 = 0\n\tlocal sum_test_8 = 0\n\tlocal sum_test_9 = 0\n\tlocal sum_test_10 = 0\n\tlocal sum_test_11 = 0\n\tlocal sum_test_12 = 0\n\tlocal sum_test_13 = 0\n\tlocal sum_test_14 = 0\n\tlocal sum_test_15 = 0\n\tlocal sum_test_16 = 0\n\tlocal sum_test_17 = 0\n\tlocal sum_test_18 = 0\n\tlocal sum_test_19 = 0\n\tlocal sum_test_20 = 0\n\tlocal sum_test_21 = 0\n\tlocal sum_test_22 = 0\n\tlocal sum_test_23 = 0\n\tlocal sum_test_24 = 0\n\tlocal sum_test_25 = 0\n\tlocal sum_test_26 = 0\n\tlocal sum_test_27 = 0\n\tlocal sum_test_28 = 0\n\tlocal sum_test_29 = 0\n\tlocal sum_test_30 = 0\n\tlocal sum_test_31 = 0\n\tlocal sum_test_32 = 0\n\tlocal sum_test_33 = 0\n\tlocal sum_test_34 = 0\n\tlocal sum_test_35 = 0\n\tlocal sum_test_36 = 0\n\tlocal sum_test_37 = 0\n\tlocal sum_test_38 = 0\n\tlocal sum_test_39 = 0\n\tlocal sum_test_40 = 0\n\tlocal sum_test_41 = 0\n\tlocal sum_test_42 = 0\n\tlocal sum_test_43 = 0\n\tlocal sum_test_44 = 0\n\tlocal sum_test_45 = 0\n\tlocal sum_test_46 = 0\n\tlocal sum_test_47 = 0\n\tlocal sum_test_48 = 0\n\tlocal sum_test_49 = 0\n\tlocal sum_test_50 = 0\n\tlocal sum_test_51",
    "    local sum = 0\n    local sum_check = 0\n    local magic_square = true\n    local i = 1\n    local j = 1\n    local n = #my_matrix\n    -- Check the sum of the first row\n    while j <= n do\n        sum = sum + my_matrix[i][j]\n        j = j + 1\n    end\n    -- Check the sum of the other rows\n    while i <= n do\n        j = 1\n        sum_check = 0\n        while j <= n do\n            sum_check = sum_check + my_matrix[i][j]\n            j = j + 1\n        end\n        if sum_check ~= sum then\n            magic_square = false\n        end\n        i = i + 1\n    end\n    -- Check the sum of the columns\n    i = 1\n    while i <= n do\n        j = 1\n        sum_check = 0\n        while j <= n do\n            sum_check = sum_check + my_matrix[j][i]\n            j = j + 1\n        end\n        if sum_check ~= sum then\n            magic_square = false\n        end\n        i = i + 1\n    end\n    -- Check the sum of the diagonals\n    i = 1\n    sum_check = 0\n    while i <= n do\n        sum_check = sum_check + my_matrix[i][i]\n        i = i + 1\n    end\n    if sum_check ~= sum then\n        magic_square = false\n    end\n    i = 1\n    sum_check = 0\n    while i <= n do\n        sum_check = sum_check + my_matrix[i][n - i + 1]\n        i = i + 1\n    end\n    if sum_check ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row_prev = 0\n    local sum_col_prev = 0\n    local sum_diag_prev = 0\n    local sum_diag2_prev = 0\n    local sum_row_curr = 0\n    local sum_col_curr = 0\n    local sum_diag_curr = 0\n    local sum_diag2_curr = 0\n    local is_magic = true\n    for i = 1, #my_matrix do\n        sum_row_curr = 0\n        sum_col_curr = 0\n        for j = 1, #my_matrix[i] do\n            sum_row_curr = sum_row_curr + my_matrix[i][j]\n            sum_col_curr = sum_col_curr + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum_row_prev = sum_row_curr\n            sum_col_prev = sum_col_curr\n        else\n            if sum_row_curr ~= sum_row_prev or sum_col_curr ~= sum_col_prev then\n                is_magic = false\n            end\n        end\n        sum_diag_curr = sum_diag_curr + my_matrix[i][i]\n        sum_diag2_curr = sum_diag2_curr + my_matrix[i][#my_matrix[i] - i + 1]\n    end\n    if sum_diag_curr ~= sum_diag2_curr then\n        is_magic = false\n    end\n    return is_magic\nend",
    "    -- Calculate the sum of the first row.\n    local sum = 0\n    for i = 1, #my_matrix[1] do\n        sum = sum + my_matrix[1][i]\n    end",
    "    -- TODO: Write your code here\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true\n    local n = #my_matrix",
    "  local sum = 0\n  local magic_square = true\n  for i = 1, #my_matrix do\n    sum = sum + my_matrix[i][1]\n  end\n  for i = 1, #my_matrix do\n    local row_sum = 0\n    local column_sum = 0\n    for j = 1, #my_matrix do\n      row_sum = row_sum + my_matrix[i][j]\n      column_sum = column_sum + my_matrix[j][i]\n    end\n    if row_sum ~= sum or column_sum ~= sum then\n      magic_square = false\n      break\n    end\n  end\n  local diagonal_sum = 0\n  for i = 1, #my_matrix do\n    diagonal_sum = diagonal_sum + my_matrix[i][i]\n  end\n  if diagonal_sum ~= sum then\n    magic_square = false\n  end\n  diagonal_sum = 0\n  for i = 1, #my_matrix do\n    diagonal_sum = diagonal_sum + my_matrix[i][#my_matrix + 1 - i]\n  end\n  if diagonal_sum ~= sum then\n    magic_square = false\n  end\n  return magic_square\nend",
    "    local sum = 0\n    local sum_test = 0\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        sum_test = 0\n        for j = 1, #my_matrix do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    for i = 1, #my_matrix do\n        sum_test = 0\n        for j = 1, #my_matrix do\n            sum_test = sum_test + my_matrix[j][i]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true",
    "  -- TODO: Implement this function.\n  local sum = 0\n  local sum_diag1 = 0\n  local sum_diag2 = 0\n  local sum_row = 0\n  local sum_col = 0\n  local n = #my_matrix\n  for i = 1, n do\n    sum = sum + my_matrix[i][i]\n  end\n  for i = 1, n do\n    sum_diag1 = sum_diag1 + my_matrix[i][n-i+1]\n  end\n  for i = 1, n do\n    sum_row = 0\n    sum_col = 0\n    for j = 1, n do\n      sum_row = sum_row + my_matrix[i][j]\n      sum_col = sum_col + my_matrix[j][i]\n    end\n    if sum_row ~= sum or sum_col ~= sum then\n      return false\n    end\n  end\n  if sum_diag1 ~= sum or sum_diag2 ~= sum then\n    return false\n  end\n  return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "  -- Check that the matrix is square.\n  local n = #my_matrix\n  if n == 0 then\n    return false\n  end\n  for i = 1, n do\n    if #my_matrix[i] ~= n then\n      return false\n    end\n  end\n  -- Check that the matrix has an odd number of rows.\n  if n % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of columns.\n  if #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n  if n % 2 == 0 or #my_matrix[1] % 2 == 0 then\n    return false\n  end\n  -- Check that the matrix has an odd number of rows and columns.\n",
    "\tlocal sum = 0\n\tlocal magic_square = true\n\tlocal row_sum = 0\n\tlocal col_sum = 0\n\tlocal diag_sum = 0\n\tlocal diag_sum2 = 0\n\tlocal row = 0\n\tlocal col = 0\n\tlocal diag = 0\n\tlocal diag2 = 0\n\tlocal row_count = 0\n\tlocal col_count = 0\n\tlocal diag_count = 0\n\tlocal diag2_count = 0\n\tlocal row_check = 0\n\tlocal col_check = 0\n\tlocal diag_check = 0\n\tlocal diag2_check = 0\n\tlocal row_check2 = 0\n\tlocal col_check2 = 0\n\tlocal diag_check2 = 0\n\tlocal diag2_check2 = 0\n\tlocal row_check3 = 0\n\tlocal col_check3 = 0\n\tlocal diag_check3 = 0\n\tlocal diag2_check3 = 0\n\tlocal row_check4 = 0\n\tlocal col_check4 = 0\n\tlocal diag_check4 = 0\n\tlocal diag2_check4 = 0\n\tlocal row_check5 = 0\n\tlocal col_check5 = 0\n\tlocal diag_check5 = 0\n\tlocal diag2_check5 = 0\n\tlocal row_check6 = 0\n\tlocal col_check6 = 0\n\tlocal diag_check6 = 0\n\tlocal diag2_check6 = 0\n\tlocal row_check7 = 0\n\tlocal col_check7 = 0\n\tlocal diag_check7 = 0\n\tlocal diag2_check7 = 0\n\tlocal row_check8 = 0\n\tlocal col_check8 = 0\n\tlocal diag_check8 = 0\n\tlocal diag2_check8 = 0\n\tlocal row_check9 = 0\n\tlocal col_check9 = 0\n\tlocal diag_check9 = 0\n\tlocal diag2_check9 = 0\n\tlocal row_check10 = 0\n\tlocal col_check10 = 0\n\tlocal diag_check10 = 0\n\tlocal diag2_check10 = 0\n\tlocal row_check11 = 0\n\tlocal col_check",
    "    local sum = 0\n    local magic_number = 0\n    local magic_square = true\n    -- sum the first row\n    for i = 1, #my_matrix[1] do\n        sum = sum + my_matrix[1][i]\n    end\n    magic_number = sum\n    -- check the rest of the rows\n    for i = 2, #my_matrix do\n        sum = 0\n        for j = 1, #my_matrix[i] do\n            sum = sum + my_matrix[i][j]\n        end\n        if sum ~= magic_number then\n            magic_square = false\n            break\n        end\n    end\n    -- check the columns\n    if magic_square then\n        for i = 1, #my_matrix[1] do\n            sum = 0\n            for j = 1, #my_matrix do\n                sum = sum + my_matrix[j][i]\n            end\n            if sum ~= magic_number then\n                magic_square = false\n                break\n            end\n        end\n    end\n    -- check the diagonals\n    if magic_square then\n        sum = 0\n        for i = 1, #my_matrix do\n            sum = sum + my_matrix[i][i]\n        end\n        if sum ~= magic_number then\n            magic_square = false\n        end\n    end\n    if magic_square then\n        sum = 0\n        for i = 1, #my_matrix do\n            sum = sum + my_matrix[i][#my_matrix - i + 1]\n        end\n        if sum ~= magic_number then\n            magic_square = false\n        end\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local rev_diag_sum = 0\n  local magic_square = true",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "  local magic_constant = 0\n  local sum = 0\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local rev_diag_sum = 0\n  local is_magic_square = true\n  local row_index = 0\n  local col_index = 0\n  local row_size = #my_matrix\n  local col_size = #my_matrix[1]",
    "  -- TODO: Implement this function\n  -- Hint: You can use the sum_of_row function here\n  local sum_of_rows = sum_of_row(my_matrix, 1)\n  local sum_of_cols = sum_of_col(my_matrix, 1)\n  local sum_of_diag = sum_of_diag(my_matrix, 1)\n  local sum_of_diag2 = sum_of_diag(my_matrix, 2)\n  if sum_of_rows == sum_of_cols and sum_of_cols == sum_of_diag and sum_of_diag == sum_of_diag2 then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = sum_row\n        elseif sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_diag1 = sum_diag1 + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag1 or sum ~= sum_diag2 then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local is_magic = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = sum_row\n        elseif sum ~= sum_row or sum ~= sum_col then\n            is_magic = false\n            break\n        end\n    end\n    if is_magic then\n        for i = 1, n do\n            sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n            sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n        end\n        if sum_diag_1 ~= sum or sum_diag_2 ~= sum then\n            is_magic = false\n        end\n    end\n    return is_magic\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    local magic = true\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = sum_row\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            magic = false\n        end\n    end\n    for i = 1, n do\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag or sum ~= sum_diag2 then\n        magic = false\n    end\n    return magic\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the sum_matrix function.\n    local sum_row = sum_matrix(my_matrix)\n    local sum_col = sum_matrix(transpose_matrix(my_matrix))\n    local sum_diag = sum_matrix(diagonal_matrix(my_matrix))\n    local sum_anti_diag = sum_matrix(anti_diagonal_matrix(my_matrix))\n    if sum_row == sum_col and sum_row == sum_diag and sum_row == sum_anti_diag then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    -- You may want to use the following functions:\n    --   * matrix.sum_row\n    --   * matrix.sum_col\n    --   * matrix.sum_diag\n    --   * matrix.transpose\n    --   * matrix.is_square\n    --   * matrix.is_symmetric\n    --   * matrix.is_equal\n    --   * matrix.is_zero\n    --   * matrix.is_identity\n    --   * matrix.is_scalar\n    --   * matrix.is_diagonal\n    --   * matrix.is_upper_triangular\n    --   * matrix.is_lower_triangular\n    --   * matrix.is_triangular\n    --   * matrix.is_orthogonal\n    --   * matrix.is_orthonormal\n    --   * matrix.is_unitary\n    --   * matrix.is_normal\n    --   * matrix.is_hermitian\n    --   * matrix.is_skew_hermitian\n    --   * matrix.is_positive_definite\n    --   * matrix.is_positive_semidefinite\n    --   * matrix.is_negative_definite\n    --   * matrix.is_negative_semidefinite\n    --   * matrix.is_invertible\n    --   * matrix.is_singular\n    --   * matrix.is_nilpotent\n    --   * matrix.is_idempotent\n    --   * matrix.is_projection\n    --   * matrix.is_permutation\n    --   * matrix.is_permutation_matrix\n    --   * matrix.is_permutation_tensor\n    --   * matrix.is_permutation_tensor_matrix\n    --   * matrix.is_permutation_tensor_matrix_product\n    --   * matrix.is_permutation_tensor_matrix_product_transpose\n    --   * matrix.is_permutation_tensor_matrix_product_symmetric\n    --   * matrix.is_permutation_tensor_matrix_product_skew_symmetric\n    --",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local n = #my_matrix\n    for i = 1, n do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = row_sum\n        elseif sum ~= row_sum then\n            magic_square = false\n        end\n        if sum ~= col_sum then\n            magic_square = false\n        end\n        diag_sum = diag_sum + my_matrix[i][i]\n        diag_sum2 = diag_sum2 + my_matrix[i][n - i + 1]\n    end\n    if diag_sum ~= sum or diag_sum2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "\tlocal sum = 0\n\tlocal sum_check = 0\n\tlocal n = #my_matrix\n\tfor i = 1, n do\n\t\tsum = sum + my_matrix[i][i]\n\tend\n\tfor i = 1, n do\n\t\tsum_check = 0\n\t\tfor j = 1, n do\n\t\t\tsum_check = sum_check + my_matrix[i][j]\n\t\tend\n\t\tif sum_check ~= sum then\n\t\t\treturn false\n\t\tend\n\tend\n\tfor i = 1, n do\n\t\tsum_check = 0\n\t\tfor j = 1, n do\n\t\t\tsum_check = sum_check + my_matrix[j][i]\n\t\tend\n\t\tif sum_check ~= sum then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    local sum = 0\n    local sum_test = 0\n    local sum_test_2 = 0\n    local sum_test_3 = 0\n    local sum_test_4 = 0\n    local sum_test_5 = 0\n    local sum_test_6 = 0\n    local sum_test_7 = 0\n    local sum_test_8 = 0\n    local sum_test_9 = 0\n    local sum_test_10 = 0\n    local sum_test_11 = 0\n    local sum_test_12 = 0\n    local sum_test_13 = 0\n    local sum_test_14 = 0\n    local sum_test_15 = 0\n    local sum_test_16 = 0\n    local sum_test_17 = 0\n    local sum_test_18 = 0\n    local sum_test_19 = 0\n    local sum_test_20 = 0\n    local sum_test_21 = 0\n    local sum_test_22 = 0\n    local sum_test_23 = 0\n    local sum_test_24 = 0\n    local sum_test_25 = 0\n    local sum_test_26 = 0\n    local sum_test_27 = 0\n    local sum_test_28 = 0\n    local sum_test_29 = 0\n    local sum_test_30 = 0\n    local sum_test_31 = 0\n    local sum_test_32 = 0\n    local sum_test_33 = 0\n    local sum_test_34 = 0\n    local sum_test_35 = 0\n    local sum_test_36 = 0\n    local sum_test_37 = 0\n    local sum_test_38 = 0\n    local sum_test_39 = 0\n    local sum_test_40 = 0\n    local sum_test_41 = 0\n    local sum_test_42 = 0\n    local sum_test_43 = 0\n    local sum_test_44 = 0\n    local sum_test_45 = 0\n    local sum_test_46 = 0\n    local sum_test_47 = 0\n    local sum_test_48 = 0\n    local sum_test_49 = 0\n    local sum_test_50 = 0\n    local sum_test_51",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local diagonal_sum_2 = 0\n    local row_index = 1\n    local column_index = 1\n    local diagonal_index = 1\n    local diagonal_index_2 = 1\n    local row_count = #my_matrix\n    local column_count = #my_matrix[1]\n    local diagonal_count = #my_matrix\n    local diagonal_count_2 = #my_matrix",
    "    local sum = 0\n    local sum_test = 0\n    local sum_test_2 = 0\n    local sum_test_3 = 0\n    local sum_test_4 = 0\n    local sum_test_5 = 0\n    local sum_test_6 = 0\n    local sum_test_7 = 0\n    local sum_test_8 = 0\n    local sum_test_9 = 0\n    local sum_test_10 = 0\n    local sum_test_11 = 0\n    local sum_test_12 = 0\n    local sum_test_13 = 0\n    local sum_test_14 = 0\n    local sum_test_15 = 0\n    local sum_test_16 = 0\n    local sum_test_17 = 0\n    local sum_test_18 = 0\n    local sum_test_19 = 0\n    local sum_test_20 = 0\n    local sum_test_21 = 0\n    local sum_test_22 = 0\n    local sum_test_23 = 0\n    local sum_test_24 = 0\n    local sum_test_25 = 0\n    local sum_test_26 = 0\n    local sum_test_27 = 0\n    local sum_test_28 = 0\n    local sum_test_29 = 0\n    local sum_test_30 = 0\n    local sum_test_31 = 0\n    local sum_test_32 = 0\n    local sum_test_33 = 0\n    local sum_test_34 = 0\n    local sum_test_35 = 0\n    local sum_test_36 = 0\n    local sum_test_37 = 0\n    local sum_test_38 = 0\n    local sum_test_39 = 0\n    local sum_test_40 = 0\n    local sum_test_41 = 0\n    local sum_test_42 = 0\n    local sum_test_43 = 0\n    local sum_test_44 = 0\n    local sum_test_45 = 0\n    local sum_test_46 = 0\n    local sum_test_47 = 0\n    local sum_test_48 = 0\n    local sum_test_49 = 0\n    local sum_test_50 = 0\n    local sum_test_51",
    "  -- TODO: Implement this function.\n  -- Hint: You can use the sum_of_row function.\n  local sum = sum_of_row(my_matrix, 1)\n  for i = 2, #my_matrix do\n    if sum ~= sum_of_row(my_matrix, i) then\n      return false\n    end\n  end\n  for i = 1, #my_matrix do\n    if sum ~= sum_of_column(my_matrix, i) then\n      return false\n    end\n  end\n  if sum ~= sum_of_diagonal(my_matrix, 1) then\n    return false\n  end\n  if sum ~= sum_of_diagonal(my_matrix, 2) then\n    return false\n  end\n  return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    --[[\n    A magic square is a square matrix of numbers in which the sum of the numbers\n    in each row, column, and diagonal is the same.\n    ]]--\n    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local n = #my_matrix\n    local m = #my_matrix[1]\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, m do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = sum_row\n        elseif sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag or sum ~= sum_diag2 then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Write your code here\n    return false\nend",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    local diag_sum = 0\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic_square = false\n    end\n    diag_sum = 0\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][n - i + 1]\n    end\n    if diag_sum ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local sum_test = 0\n  for i = 1, #my_matrix do\n    sum = sum + my_matrix[i][i]\n  end\n  for i = 1, #my_matrix do\n    sum_test = 0\n    for j = 1, #my_matrix do\n      sum_test = sum_test + my_matrix[i][j]\n    end\n    if sum_test ~= sum then\n      return false\n    end\n  end\n  for i = 1, #my_matrix do\n    sum_test = 0\n    for j = 1, #my_matrix do\n      sum_test = sum_test + my_matrix[j][i]\n    end\n    if sum_test ~= sum then\n      return false\n    end\n  end\n  return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local row_count = 1\n    local col_count = 1\n    local row_count2 = 1\n    local col_count2 = 1\n    local row_count3 = 1\n    local col_count3 = 1\n    local row_count4 = 1\n    local col_count4 = 1\n    local row_count5 = 1\n    local col_count5 = 1\n    local row_count6 = 1\n    local col_count6 = 1\n    local row_count7 = 1\n    local col_count7 = 1\n    local row_count8 = 1\n    local col_count8 = 1\n    local row_count9 = 1\n    local col_count9 = 1\n    local row_count10 = 1\n    local col_count10 = 1\n    local row_count11 = 1\n    local col_count11 = 1\n    local row_count12 = 1\n    local col_count12 = 1\n    local row_count13 = 1\n    local col_count13 = 1\n    local row_count14 = 1\n    local col_count14 = 1\n    local row_count15 = 1\n    local col_count15 = 1\n    local row_count16 = 1\n    local col_count16 = 1\n    local row_count17 = 1\n    local col_count17 = 1\n    local row_count18 = 1\n    local col_count18 = 1\n    local row_count19 = 1\n    local col_count19 = 1\n    local row_count20 = 1\n    local col_count20 = 1\n    local row_count21 = 1\n    local col_count21 = 1\n    local row_count22 = 1\n    local col_count22 = 1\n    local row_count23 = 1\n    local col_count23 = 1\n    local row_count24 = 1\n    local col_count24 = 1\n    local row_count25 = 1\n    local col_count25 = 1\n    local row_count26 = 1\n    local col_count",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n        sum_diag1 = sum_diag1 + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n + 1 - i]\n    end\n    for i = 1, n do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag1 ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_diag1 = sum_diag1 + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    if sum_diag1 ~= sum or sum_diag2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "\tlocal sum = 0\n\tlocal sum_diag_1 = 0\n\tlocal sum_diag_2 = 0\n\tlocal sum_row = 0\n\tlocal sum_col = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2 = 0\n\tlocal sum_row_3 = 0\n\tlocal sum_col_1 = 0\n\tlocal sum_col_2 = 0\n\tlocal sum_col_3 = 0\n\tlocal sum_row_1 = 0\n\tlocal sum_row_2",
    "    -- TODO: Implement this function.\n    local sum = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local sum_col = 0\n    local sum_row = 0\n    local sum_row_2 = 0\n    local sum_col_2 = 0\n    local sum_row_3 = 0\n    local sum_col_3 = 0\n    local sum_row_4 = 0\n    local sum_col_4 = 0\n    local sum_row_5 = 0\n    local sum_col_5 = 0\n    local sum_row_6 = 0\n    local sum_col_6 = 0\n    local sum_row_7 = 0\n    local sum_col_7 = 0\n    local sum_row_8 = 0\n    local sum_col_8 = 0\n    local sum_row_9 = 0\n    local sum_col_9 = 0\n    local sum_row_10 = 0\n    local sum_col_10 = 0\n    local sum_row_11 = 0\n    local sum_col_11 = 0\n    local sum_row_12 = 0\n    local sum_col_12 = 0\n    local sum_row_13 = 0\n    local sum_col_13 = 0\n    local sum_row_14 = 0\n    local sum_col_14 = 0\n    local sum_row_15 = 0\n    local sum_col_15 = 0\n    local sum_row_16 = 0\n    local sum_col_16 = 0\n    local sum_row_17 = 0\n    local sum_col_17 = 0\n    local sum_row_18 = 0\n    local sum_col_18 = 0\n    local sum_row_19 = 0\n    local sum_col_19 = 0\n    local sum_row_20 = 0\n    local sum_col_20 = 0\n    local sum_row_21 = 0\n    local sum_col_21 = 0\n    local sum_row_22 = 0\n    local sum_col_22 = 0\n    local sum_row_23 = 0\n    local sum_col_23 = 0\n    local sum_row_24 = 0\n    local sum_col_24 = 0",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic = false\n            break\n        end\n    end\n    local diag_sum = 0\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        magic = false\n    end\n    diag_sum = 0\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][n - i + 1]\n    end\n    if diag_sum ~= sum then\n        magic = false\n    end\n    return magic\nend",
    "    -- Calculate the sum of the first row\n    local sum = 0\n    for i = 1, #my_matrix[1] do\n        sum = sum + my_matrix[1][i]\n    end\n    -- Check that all rows have the same sum\n    for i = 2, #my_matrix do\n        local row_sum = 0\n        for j = 1, #my_matrix[i] do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if row_sum ~= sum then\n            return false\n        end\n    end\n    -- Check that all columns have the same sum\n    for i = 1, #my_matrix[1] do\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if col_sum ~= sum then\n            return false\n        end\n    end\n    -- Check that the diagonals have the same sum\n    local diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        return false\n    end\n    diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][#my_matrix - i + 1]\n    end\n    if diag_sum ~= sum then\n        return false\n    end\n    -- If we get here, the matrix is a magic square\n    return true\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test_2 = 0\n\tlocal sum_test_3 = 0\n\tlocal sum_test_4 = 0\n\tlocal sum_test_5 = 0\n\tlocal sum_test_6 = 0\n\tlocal sum_test_7 = 0\n\tlocal sum_test_8 = 0\n\tlocal sum_test_9 = 0\n\tlocal sum_test_10 = 0\n\tlocal sum_test_11 = 0\n\tlocal sum_test_12 = 0\n\tlocal sum_test_13 = 0\n\tlocal sum_test_14 = 0\n\tlocal sum_test_15 = 0\n\tlocal sum_test_16 = 0\n\tlocal sum_test_17 = 0\n\tlocal sum_test_18 = 0\n\tlocal sum_test_19 = 0\n\tlocal sum_test_20 = 0\n\tlocal sum_test_21 = 0\n\tlocal sum_test_22 = 0\n\tlocal sum_test_23 = 0\n\tlocal sum_test_24 = 0\n\tlocal sum_test_25 = 0\n\tlocal sum_test_26 = 0\n\tlocal sum_test_27 = 0\n\tlocal sum_test_28 = 0\n\tlocal sum_test_29 = 0\n\tlocal sum_test_30 = 0\n\tlocal sum_test_31 = 0\n\tlocal sum_test_32 = 0\n\tlocal sum_test_33 = 0\n\tlocal sum_test_34 = 0\n\tlocal sum_test_35 = 0\n\tlocal sum_test_36 = 0\n\tlocal sum_test_37 = 0\n\tlocal sum_test_38 = 0\n\tlocal sum_test_39 = 0\n\tlocal sum_test_40 = 0\n\tlocal sum_test_41 = 0\n\tlocal sum_test_42 = 0\n\tlocal sum_test_43 = 0\n\tlocal sum_test_44 = 0\n\tlocal sum_test_45 = 0\n\tlocal sum_test_46 = 0\n\tlocal sum_test_47 = 0\n\tlocal sum_test_48 = 0\n\tlocal sum_test_49 = 0\n\tlocal sum_test_50 = 0\n\tlocal sum_test_51",
    "    local sum = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local rev_diag_sum = 0\n    local size = #my_matrix\n    for i = 1, size do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, size do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = row_sum\n        elseif sum ~= row_sum or sum ~= col_sum then\n            return false\n        end\n    end\n    for i = 1, size do\n        diag_sum = diag_sum + my_matrix[i][i]\n        rev_diag_sum = rev_diag_sum + my_matrix[i][size - i + 1]\n    end\n    if sum ~= diag_sum or sum ~= rev_diag_sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You may want to use the `sum_row` function.\n    local sum_row_1 = sum_row(my_matrix, 1)\n    local sum_row_2 = sum_row(my_matrix, 2)\n    local sum_row_3 = sum_row(my_matrix, 3)\n    local sum_col_1 = sum_col(my_matrix, 1)\n    local sum_col_2 = sum_col(my_matrix, 2)\n    local sum_col_3 = sum_col(my_matrix, 3)\n    local sum_diag_1 = sum_diag(my_matrix, 1)\n    local sum_diag_2 = sum_diag(my_matrix, 2)",
    "    local n = #my_matrix\n    local magic_number = n * (n ^ 2 + 1) / 2\n    local sum_rows = 0\n    local sum_columns = 0\n    local sum_diagonal = 0\n    local sum_anti_diagonal = 0",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the sum_row function.\n    local sum = sum_row(my_matrix, 1)\n    for i = 1, #my_matrix do\n        if sum_row(my_matrix, i) ~= sum then\n            return false\n        end\n    end\n    for i = 1, #my_matrix do\n        if sum_column(my_matrix, i) ~= sum then\n            return false\n        end\n    end\n    if sum_diagonal(my_matrix, 1) ~= sum then\n        return false\n    end\n    if sum_diagonal(my_matrix, 2) ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You may want to use the `sum_rows` function.\n    local sum = sum_rows(my_matrix)\n    local sum_col = sum_cols(my_matrix)\n    local sum_diag = sum_diagonals(my_matrix)\n    if sum == sum_col and sum == sum_diag then\n        return true\n    else\n        return false\n    end\nend",
    "    -- TODO: implement this function\n    -- Hint: use the `sum_of_row` function\n    local sum = sum_of_row(my_matrix, 1)\n    for i = 1, #my_matrix do\n        if sum_of_row(my_matrix, i) ~= sum then\n            return false\n        end\n    end\n    for i = 1, #my_matrix do\n        if sum_of_column(my_matrix, i) ~= sum then\n            return false\n        end\n    end\n    if sum_of_diagonal(my_matrix, 1) ~= sum then\n        return false\n    end\n    if sum_of_diagonal(my_matrix, 2) ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    local sum = 0\n    local sum1 = 0\n    local sum2 = 0\n    local sum3 = 0\n    local sum4 = 0\n    local sum5 = 0\n    local sum6 = 0\n    local sum7 = 0\n    local sum8 = 0\n    local sum9 = 0\n    local sum10 = 0\n    local sum11 = 0\n    local sum12 = 0\n    local sum13 = 0\n    local sum14 = 0\n    local sum15 = 0\n    local sum16 = 0\n    local sum17 = 0\n    local sum18 = 0\n    local sum19 = 0\n    local sum20 = 0\n    local sum21 = 0\n    local sum22 = 0\n    local sum23 = 0\n    local sum24 = 0\n    local sum25 = 0\n    local sum26 = 0\n    local sum27 = 0\n    local sum28 = 0\n    local sum29 = 0\n    local sum30 = 0\n    local sum31 = 0\n    local sum32 = 0\n    local sum33 = 0\n    local sum34 = 0\n    local sum35 = 0\n    local sum36 = 0\n    local sum37 = 0\n    local sum38 = 0\n    local sum39 = 0\n    local sum40 = 0\n    local sum41 = 0\n    local sum42 = 0\n    local sum43 = 0\n    local sum44 = 0\n    local sum45 = 0\n    local sum46 = 0\n    local sum47 = 0\n    local sum48 = 0\n    local sum49 = 0\n    local sum50 = 0\n    local sum51 = 0\n    local sum52 = 0\n    local sum53 = 0\n    local sum54 = 0\n    local sum55 = 0\n    local sum56 = 0\n    local sum57 = 0\n    local sum58 = 0\n    local sum59 = 0\n    local sum60 = 0\n    local sum61 = 0\n    local sum62 = 0\n    local sum63 = 0\n    local sum64 = 0\n    local sum65 = 0\n    local sum66 = 0\n    local sum67 = 0\n    local sum68 = 0\n    local sum69 = 0\n    local sum70 = 0\n    local sum71 =",
    "    local rows = #my_matrix\n    local columns = #my_matrix[1]\n    local sum = 0\n    local magic_square = true\n    local i = 1\n    while i <= rows and magic_square do\n        local j = 1\n        local row_sum = 0\n        while j <= columns and magic_square do\n            row_sum = row_sum + my_matrix[i][j]\n            j = j + 1\n        end\n        if sum == 0 then\n            sum = row_sum\n        elseif sum ~= row_sum then\n            magic_square = false\n        end\n        i = i + 1\n    end\n    if magic_square then\n        i = 1\n        while i <= columns and magic_square do\n            local j = 1\n            local column_sum = 0\n            while j <= rows and magic_square do\n                column_sum = column_sum + my_matrix[j][i]\n                j = j + 1\n            end\n            if sum ~= column_sum then\n                magic_square = false\n            end\n            i = i + 1\n        end\n    end\n    if magic_square then\n        local j = 1\n        local diagonal_sum = 0\n        while j <= rows and magic_square do\n            diagonal_sum = diagonal_sum + my_matrix[j][j]\n            j = j + 1\n        end\n        if sum ~= diagonal_sum then\n            magic_square = false\n        end\n    end\n    if magic_square then\n        local j = 1\n        local diagonal_sum = 0\n        while j <= rows and magic_square do\n            diagonal_sum = diagonal_sum + my_matrix[j][rows + 1 - j]\n            j = j + 1\n        end\n        if sum ~= diagonal_sum then\n            magic_square = false\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local anti_diagonal_sum = 0\n    local row_index = 1\n    local column_index = 1",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_row_prev = 0\n    local sum_col_prev = 0\n    local sum_diag_prev = 0\n    local sum_diag2_prev = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum_row_prev = sum_row\n            sum_col_prev = sum_col\n        elseif sum_row ~= sum_row_prev or sum_col ~= sum_col_prev then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum_diag ~= sum_row_prev or sum_diag2 ~= sum_row_prev then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n-i+1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag2_sum = 0\n    local n = #my_matrix\n    for i = 1, n do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = row_sum\n        elseif sum ~= row_sum or sum ~= col_sum then\n            magic_square = false\n        end\n    end\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][i]\n        diag2_sum = diag2_sum + my_matrix[i][n - i + 1]\n    end\n    if diag_sum ~= sum or diag2_sum ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_test = 0\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        sum_test = 0\n        for j = 1, #my_matrix do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    for j = 1, #my_matrix do\n        sum_test = 0\n        for i = 1, #my_matrix do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    -- Calculate the sum of the first row.\n    local sum = 0\n    for i = 1, #my_matrix[1] do\n        sum = sum + my_matrix[1][i]\n    end\n    -- Check that all rows sum to the same value.\n    for i = 2, #my_matrix do\n        local row_sum = 0\n        for j = 1, #my_matrix[i] do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if row_sum ~= sum then\n            return false\n        end\n    end\n    -- Check that all columns sum to the same value.\n    for i = 1, #my_matrix[1] do\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if col_sum ~= sum then\n            return false\n        end\n    end\n    -- Check that the diagonals sum to the same value.\n    local diag_sum1 = 0\n    local diag_sum2 = 0\n    for i = 1, #my_matrix do\n        diag_sum1 = diag_sum1 + my_matrix[i][i]\n        diag_sum2 = diag_sum2 + my_matrix[i][#my_matrix[i] - i + 1]\n    end\n    if diag_sum1 ~= sum or diag_sum2 ~= sum then\n        return false\n    end\n    -- If we've reached this point, the matrix is a magic square.\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag2_sum = 0\n    local row_index = 1\n    local col_index = 1\n    local diag_index = 1\n    local diag2_index = 1\n    local matrix_size = #my_matrix\n    for i = 1, matrix_size do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, matrix_size do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = row_sum\n        else\n            if row_sum ~= sum or col_sum ~= sum then\n                magic_square = false\n            end\n        end\n        diag_sum = diag_sum + my_matrix[diag_index][diag_index]\n        diag2_sum = diag2_sum + my_matrix[diag2_index][matrix_size - diag2_index + 1]\n        diag_index = diag_index + 1\n        diag2_index = diag2_index + 1\n    end\n    if diag_sum ~= sum or diag2_sum ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the sum_rows function here.\n    local sum = sum_rows(my_matrix)\n    for i=1,#my_matrix do\n        if sum ~= sum_rows(my_matrix,i) then\n            return false\n        end\n    end\n    for i=1,#my_matrix do\n        if sum ~= sum_columns(my_matrix,i) then\n            return false\n        end\n    end\n    if sum ~= sum_diagonal(my_matrix,1) then\n        return false\n    end\n    if sum ~= sum_diagonal(my_matrix,2) then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_diag2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_test = 0\n    local sum_test_2 = 0\n    local sum_test_3 = 0\n    local sum_test_4 = 0\n    local sum_test_5 = 0\n    local sum_test_6 = 0\n    local sum_test_7 = 0\n    local sum_test_8 = 0\n    local sum_test_9 = 0\n    local sum_test_10 = 0\n    local sum_test_11 = 0\n    local sum_test_12 = 0\n    local sum_test_13 = 0\n    local sum_test_14 = 0\n    local sum_test_15 = 0\n    local sum_test_16 = 0\n    local sum_test_17 = 0\n    local sum_test_18 = 0\n    local sum_test_19 = 0\n    local sum_test_20 = 0\n    local sum_test_21 = 0\n    local sum_test_22 = 0\n    local sum_test_23 = 0\n    local sum_test_24 = 0\n    local sum_test_25 = 0\n    local sum_test_26 = 0\n    local sum_test_27 = 0\n    local sum_test_28 = 0\n    local sum_test_29 = 0\n    local sum_test_30 = 0\n    local sum_test_31 = 0\n    local sum_test_32 = 0\n    local sum_test_33 = 0\n    local sum_test_34 = 0\n    local sum_test_35 = 0\n    local sum_test_36 = 0\n    local sum_test_37 = 0\n    local sum_test_38 = 0\n    local sum_test_39 = 0\n    local sum_test_40 = 0\n    local sum_test_41 = 0\n    local sum_test_42 = 0\n    local sum_test_43 = 0\n    local sum_test_44 = 0\n    local sum_test_45 = 0\n    local sum_test_46 = 0\n    local sum_test_47 = 0\n    local sum_test_48 = 0\n    local sum_test_49 = 0\n    local sum_test_50 = 0\n    local sum_test_51",
    "  local sum = 0\n  local sum_diagonal = 0\n  local sum_diagonal_2 = 0\n  local sum_row = 0\n  local sum_column = 0\n  local magic_square = true\n  local n = #my_matrix\n  for i = 1, n do\n    sum = sum + my_matrix[i][i]\n    sum_diagonal_2 = sum_diagonal_2 + my_matrix[i][n - i + 1]\n  end\n  if sum ~= sum_diagonal_2 then\n    magic_square = false\n  end\n  for i = 1, n do\n    sum_row = 0\n    sum_column = 0\n    for j = 1, n do\n      sum_row = sum_row + my_matrix[i][j]\n      sum_column = sum_column + my_matrix[j][i]\n    end\n    if sum_row ~= sum or sum_column ~= sum then\n      magic_square = false\n    end\n  end\n  return magic_square\nend",
    "  -- TODO: Implement this function.\n  -- Hint: You can use the sum_of_row function.\n  local sum = sum_of_row(my_matrix, 1)\n  local n = #my_matrix\n  for i = 1, n do\n    if sum ~= sum_of_row(my_matrix, i) then\n      return false\n    end\n    if sum ~= sum_of_column(my_matrix, i) then\n      return false\n    end\n  end\n  if sum ~= sum_of_diagonal(my_matrix, \"left\") then\n    return false\n  end\n  if sum ~= sum_of_diagonal(my_matrix, \"right\") then\n    return false\n  end\n  return true\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    -- TODO: Implement this function\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_col = 0\n    local sum_row = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag1 = sum_diag1 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n        end\n    end\n    if sum_diag1 ~= sum or sum_diag2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = {}\n    local sum_col = {}\n    for i = 1, n do\n        sum_row[i] = 0\n        sum_col[i] = 0\n    end\n    for i = 1, n do\n        for j = 1, n do\n            sum_row[i] = sum_row[i] + my_matrix[i][j]\n            sum_col[j] = sum_col[j] + my_matrix[i][j]\n        end\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    sum = sum_diag_1\n    for i = 1, n do\n        if sum_row[i] ~= sum or sum_col[i] ~= sum then\n            return false\n        end\n    end\n    if sum_diag_2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_row_test = 0\n    local sum_col_test = 0\n    local sum_diag_test = 0\n    local sum_diag_test_2 = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum_row_test = sum_row\n            sum_col_test = sum_col\n        else\n            if sum_row ~= sum_row_test or sum_col ~= sum_col_test then\n                magic_square = false\n            end\n        end\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    if sum_diag_1 ~= sum_diag_test then\n        sum_diag_test = sum_diag_1\n    end\n    if sum_diag_2 ~= sum_diag_test then\n        sum_diag_test_2 = sum_diag_2\n    end\n    if sum_diag_test ~= sum_diag_test_2 then\n        magic_square = false\n    end\n    return magic_square\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test2 = 0\n\tlocal sum_test3 = 0\n\tlocal sum_test4 = 0\n\tlocal sum_test5 = 0\n\tlocal sum_test6 = 0\n\tlocal sum_test7 = 0\n\tlocal sum_test8 = 0\n\tlocal sum_test9 = 0\n\tlocal sum_test10 = 0\n\tlocal sum_test11 = 0\n\tlocal sum_test12 = 0\n\tlocal sum_test13 = 0\n\tlocal sum_test14 = 0\n\tlocal sum_test15 = 0\n\tlocal sum_test16 = 0\n\tlocal sum_test17 = 0\n\tlocal sum_test18 = 0\n\tlocal sum_test19 = 0\n\tlocal sum_test20 = 0\n\tlocal sum_test21 = 0\n\tlocal sum_test22 = 0\n\tlocal sum_test23 = 0\n\tlocal sum_test24 = 0\n\tlocal sum_test25 = 0\n\tlocal sum_test26 = 0\n\tlocal sum_test27 = 0\n\tlocal sum_test28 = 0\n\tlocal sum_test29 = 0\n\tlocal sum_test30 = 0\n\tlocal sum_test31 = 0\n\tlocal sum_test32 = 0\n\tlocal sum_test33 = 0\n\tlocal sum_test34 = 0\n\tlocal sum_test35 = 0\n\tlocal sum_test36 = 0\n\tlocal sum_test37 = 0\n\tlocal sum_test38 = 0\n\tlocal sum_test39 = 0\n\tlocal sum_test40 = 0\n\tlocal sum_test41 = 0\n\tlocal sum_test42 = 0\n\tlocal sum_test43 = 0\n\tlocal sum_test44 = 0\n\tlocal sum_test45 = 0\n\tlocal sum_test46 = 0\n\tlocal sum_test47 = 0\n\tlocal sum_test48 = 0\n\tlocal sum_test49 = 0\n\tlocal sum_test50 = 0\n\tlocal sum_test51 = 0\n\tlocal sum_test52 = 0\n\tlocal sum_test53 = 0\n\tlocal sum_test54 = 0\n\tlocal sum_test55 = 0\n\tlocal sum_test56 = 0\n\tlocal",
    "    -- TODO: implement this function\n    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_row2 = 0\n    local sum_col2 = 0\n    local sum_row3 = 0\n    local sum_col3 = 0\n    local sum_row4 = 0\n    local sum_col4 = 0\n    local sum_row5 = 0\n    local sum_col5 = 0\n    local sum_row6 = 0\n    local sum_col6 = 0\n    local sum_row7 = 0\n    local sum_col7 = 0\n    local sum_row8 = 0\n    local sum_col8 = 0\n    local sum_row9 = 0\n    local sum_col9 = 0\n    local sum_row10 = 0\n    local sum_col10 = 0\n    local sum_row11 = 0\n    local sum_col11 = 0\n    local sum_row12 = 0\n    local sum_col12 = 0\n    local sum_row13 = 0\n    local sum_col13 = 0\n    local sum_row14 = 0\n    local sum_col14 = 0\n    local sum_row15 = 0\n    local sum_col15 = 0\n    local sum_row16 = 0\n    local sum_col16 = 0\n    local sum_row17 = 0\n    local sum_col17 = 0\n    local sum_row18 = 0\n    local sum_col18 = 0\n    local sum_row19 = 0\n    local sum_col19 = 0\n    local sum_row20 = 0\n    local sum_col20 = 0\n    local sum_row21 = 0\n    local sum_col21 = 0\n    local sum_row22 = 0\n    local sum_col22 = 0\n    local sum_row23 = 0\n    local sum_col23 = 0\n    local sum_row24 = 0\n    local sum_col24 = 0\n    local sum_row25 = 0\n    local sum_col25 = 0\n    local sum_row26 = 0\n    local sum_col26 = 0\n    local sum_row27 = 0\n    local",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local sum_diag_1 = 0\n  local sum_diag_2 = 0\n  local sum_row = 0\n  local sum_col = 0\n  local n = #my_matrix\n  for i = 1, n do\n    sum = sum + my_matrix[i][i]\n    sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    sum_row = 0\n    sum_col = 0\n    for j = 1, n do\n      sum_row = sum_row + my_matrix[i][j]\n      sum_col = sum_col + my_matrix[j][i]\n    end\n    if sum_row ~= sum or sum_col ~= sum then\n      return false\n    end\n  end\n  if sum_diag_1 ~= sum then\n    return false\n  end\n  return true\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = sum_row\n        else\n            if sum_row ~= sum or sum_col ~= sum then\n                magic_square = false\n            end\n        end\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    if sum_diag ~= sum or sum_diag_2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local magic_square = true\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local diag_sum2 = 0\n  local row_index = 1\n  local col_index = 1\n  local row_index2 = 1\n  local col_index2 = 1\n  local row_index3 = 1\n  local col_index3 = 1\n  local row_index4 = 1\n  local col_index4 = 1\n  local row_index5 = 1\n  local col_index5 = 1\n  local row_index6 = 1\n  local col_index6 = 1\n  local row_index7 = 1\n  local col_index7 = 1\n  local row_index8 = 1\n  local col_index8 = 1\n  local row_index9 = 1\n  local col_index9 = 1\n  local row_index10 = 1\n  local col_index10 = 1\n  local row_index11 = 1\n  local col_index11 = 1\n  local row_index12 = 1\n  local col_index12 = 1\n  local row_index13 = 1\n  local col_index13 = 1\n  local row_index14 = 1\n  local col_index14 = 1\n  local row_index15 = 1\n  local col_index15 = 1\n  local row_index16 = 1\n  local col_index16 = 1\n  local row_index17 = 1\n  local col_index17 = 1\n  local row_index18 = 1\n  local col_index18 = 1\n  local row_index19 = 1\n  local col_index19 = 1\n  local row_index20 = 1\n  local col_index20 = 1\n  local row_index21 = 1\n  local col_index21 = 1\n  local row_index22 = 1\n  local col_index22 = 1\n  local row_index23 = 1\n  local col_index23 = 1\n  local row_index24 = 1\n  local col_index24 = 1\n  local row_index25 = 1\n  local col_index25 = 1\n  local row_index26 = 1\n  local col_index",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diagonal = 0\n    local sum_diagonal_2 = 0\n    local sum_row = 0\n    local sum_column = 0\n    local sum_column_2 = 0\n    local sum_row_2 = 0\n    local sum_column_3 = 0\n    local sum_row_3 = 0\n    local sum_column_4 = 0\n    local sum_row_4 = 0\n    local sum_column_5 = 0\n    local sum_row_5 = 0\n    local sum_column_6 = 0\n    local sum_row_6 = 0\n    local sum_column_7 = 0\n    local sum_row_7 = 0\n    local sum_column_8 = 0\n    local sum_row_8 = 0\n    local sum_column_9 = 0\n    local sum_row_9 = 0\n    local sum_column_10 = 0\n    local sum_row_10 = 0\n    local sum_column_11 = 0\n    local sum_row_11 = 0\n    local sum_column_12 = 0\n    local sum_row_12 = 0\n    local sum_column_13 = 0\n    local sum_row_13 = 0\n    local sum_column_14 = 0\n    local sum_row_14 = 0\n    local sum_column_15 = 0\n    local sum_row_15 = 0\n    local sum_column_16 = 0\n    local sum_row_16 = 0\n    local sum_column_17 = 0\n    local sum_row_17 = 0\n    local sum_column_18 = 0\n    local sum_row_18 = 0\n    local sum_column_19 = 0\n    local sum_row_19 = 0\n    local sum_column_20 = 0\n    local sum_row_20 = 0\n    local sum_column_21 = 0\n    local sum_row_21 = 0\n    local sum_column_22 = 0\n    local sum_row_22 = 0\n    local sum_column_23 = 0\n    local sum_row_23 = 0\n    local sum_column_24 = 0\n    local sum_row_24 = 0\n    local sum_column_25 = 0",
    "    -- TODO: Implement this function.\nend",
    "  local sum = 0\n  local magic_number = 0\n  local is_magic_square = true\n  local rows = #my_matrix\n  local columns = #my_matrix[1]",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, #my_matrix do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    local sum_diag = 0\n    local sum_diag_inv = 0\n    for i = 1, #my_matrix do\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag_inv = sum_diag_inv + my_matrix[i][#my_matrix - i + 1]\n    end\n    if sum_diag ~= sum or sum_diag_inv ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_row_2 = 0\n    local sum_col_2 = 0\n    local sum_row_3 = 0\n    local sum_col_3 = 0\n    local sum_row_4 = 0\n    local sum_col_4 = 0\n    local sum_row_5 = 0\n    local sum_col_5 = 0\n    local sum_row_6 = 0\n    local sum_col_6 = 0\n    local sum_row_7 = 0\n    local sum_col_7 = 0\n    local sum_row_8 = 0\n    local sum_col_8 = 0\n    local sum_row_9 = 0\n    local sum_col_9 = 0\n    local sum_row_10 = 0\n    local sum_col_10 = 0\n    local sum_row_11 = 0\n    local sum_col_11 = 0\n    local sum_row_12 = 0\n    local sum_col_12 = 0\n    local sum_row_13 = 0\n    local sum_col_13 = 0\n    local sum_row_14 = 0\n    local sum_col_14 = 0\n    local sum_row_15 = 0\n    local sum_col_15 = 0\n    local sum_row_16 = 0\n    local sum_col_16 = 0\n    local sum_row_17 = 0\n    local sum_col_17 = 0\n    local sum_row_18 = 0\n    local sum_col_18 = 0\n    local sum_row_19 = 0\n    local sum_col_19 = 0\n    local sum_row_20 = 0\n    local sum_col_20 = 0\n    local sum_row_21 = 0\n    local sum_col_21 = 0\n    local sum_row_22 = 0\n    local sum_col_22 = 0\n    local sum_row_23 = 0\n    local sum_col_23 = 0\n    local sum_row_24 = 0\n    local sum_col_24 = 0\n    local sum_row_25 = 0",
    "  local sum = 0\n  local magic_square = true\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local diag_sum2 = 0\n  local row_index = 1\n  local col_index = 1\n  local diag_index = 1\n  local diag_index2 = 1\n  local row_index2 = 1\n  local col_index2 = 1\n  local diag_index3 = 1\n  local diag_index4 = 1\n  local row_index3 = 1\n  local col_index3 = 1\n  local diag_index5 = 1\n  local diag_index6 = 1\n  local row_index4 = 1\n  local col_index4 = 1\n  local diag_index7 = 1\n  local diag_index8 = 1\n  local row_index5 = 1\n  local col_index5 = 1\n  local diag_index9 = 1\n  local diag_index10 = 1\n  local row_index6 = 1\n  local col_index6 = 1\n  local diag_index11 = 1\n  local diag_index12 = 1\n  local row_index7 = 1\n  local col_index7 = 1\n  local diag_index13 = 1\n  local diag_index14 = 1\n  local row_index8 = 1\n  local col_index8 = 1\n  local diag_index15 = 1\n  local diag_index16 = 1\n  local row_index9 = 1\n  local col_index9 = 1\n  local diag_index17 = 1\n  local diag_index18 = 1\n  local row_index10 = 1\n  local col_index10 = 1\n  local diag_index19 = 1\n  local diag_index20 = 1\n  local row_index11 = 1\n  local col_index11 = 1\n  local diag_index21 = 1\n  local diag_index22 = 1\n  local row_index12 = 1\n  local col_index12 = 1\n  local diag_index23 = 1\n  local diag_index24 = 1\n  local row_index13 = 1\n",
    "\tlocal sum = 0\n\tlocal magic = true\n\tfor i = 1, #my_matrix do\n\t\tsum = sum + my_matrix[i][i]\n\tend\n\tfor i = 1, #my_matrix do\n\t\tlocal row_sum = 0\n\t\tlocal col_sum = 0\n\t\tfor j = 1, #my_matrix do\n\t\t\trow_sum = row_sum + my_matrix[i][j]\n\t\t\tcol_sum = col_sum + my_matrix[j][i]\n\t\tend\n\t\tif row_sum ~= sum or col_sum ~= sum then\n\t\t\tmagic = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn magic\nend",
    "    local sum = 0\n    local sum_list = {}\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = 0\n        for j = 1, #my_matrix[i] do\n            sum = sum + my_matrix[i][j]\n        end\n        sum_list[i] = sum\n    end\n    for i = 1, #sum_list do\n        if sum_list[i] ~= sum_list[1] then\n            magic_square = false\n        end\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local rev_diag_sum = 0\n  local magic_square = true\n  local size = #my_matrix\n  for i = 1, size do\n    row_sum = 0\n    col_sum = 0\n    for j = 1, size do\n      row_sum = row_sum + my_matrix[i][j]\n      col_sum = col_sum + my_matrix[j][i]\n    end\n    if i == 1 then\n      sum = row_sum\n    elseif sum ~= row_sum or sum ~= col_sum then\n      magic_square = false\n    end\n    diag_sum = diag_sum + my_matrix[i][i]\n    rev_diag_sum = rev_diag_sum + my_matrix[i][size - i + 1]\n  end\n  if diag_sum ~= sum or rev_diag_sum ~= sum then\n    magic_square = false\n  end\n  return magic_square\nend",
    "    -- TODO: Implement this function.\n    -- This function should return a boolean value.\n    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_col = 0\n    local sum_row = 0\n    local sum_row_temp = 0\n    local sum_col_temp = 0\n    local sum_diag_temp = 0\n    local sum_diag2_temp = 0\n    local sum_temp = 0\n    local is_magic_square = true\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix[i] do\n            sum_temp = sum_temp + my_matrix[i][j]\n        end\n        if i == 1 then\n            sum = sum_temp\n        else\n            if sum ~= sum_temp then\n                is_magic_square = false\n            end\n        end\n        sum_temp = 0\n    end\n    for i = 1, #my_matrix do\n        for j = 1, #my_matrix[i] do\n            sum_row_temp = sum_row_temp + my_matrix[i][j]\n            sum_col_temp = sum_col_temp + my_matrix[j][i]\n            if i == j then\n                sum_diag_temp = sum_diag_temp + my_matrix[i][j]\n            end\n            if i + j == #my_matrix + 1 then\n                sum_diag2_temp = sum_diag2_temp + my_matrix[i][j]\n            end\n        end\n        if sum_row_temp ~= sum or sum_col_temp ~= sum or sum_diag_temp ~= sum or sum_diag2_temp ~= sum then\n            is_magic_square = false\n        end\n        sum_row_temp = 0\n        sum_col_temp = 0\n        sum_diag_temp = 0\n        sum_diag2_temp = 0\n    end\n    return is_magic_square\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local is_magic = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][#my_matrix - i + 1]\n    end\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            is_magic = false\n        end\n    end\n    if sum_diag_1 ~= sum or sum_diag_2 ~= sum then\n        is_magic = false\n    end\n    return is_magic\nend",
    "    local sum = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum_2 = 0\n    local is_magic = true\n    local n = #my_matrix\n    for i = 1, n do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = row_sum\n        else\n            if row_sum ~= sum or col_sum ~= sum then\n                is_magic = false\n                break\n            end\n        end\n        diag_sum = diag_sum + my_matrix[i][i]\n        diag_sum_2 = diag_sum_2 + my_matrix[i][n - i + 1]\n    end\n    if diag_sum ~= sum or diag_sum_2 ~= sum then\n        is_magic = false\n    end\n    return is_magic\nend",
    "   local sum = 0\n   local magic_number = 0\n   local row_sum = 0\n   local col_sum = 0\n   local diag_sum = 0\n   local diag_sum_2 = 0\n   local magic_square = true\n   local i = 0\n   local j = 0\n   local k = 0\n   local l = 0",
    "  local sum = 0\n  local magic_square = true\n  for i = 1, #my_matrix do\n    sum = sum + my_matrix[i][i]\n  end\n  for i = 1, #my_matrix do\n    local row_sum = 0\n    local col_sum = 0\n    for j = 1, #my_matrix do\n      row_sum = row_sum + my_matrix[i][j]\n      col_sum = col_sum + my_matrix[j][i]\n    end\n    if row_sum ~= sum or col_sum ~= sum then\n      magic_square = false\n      break\n    end\n  end\n  return magic_square\nend",
    "  -- check if the matrix is square\n  if #my_matrix ~= #my_matrix[1] then\n    return false\n  end\n  -- check if the matrix is magic\n  local n = #my_matrix\n  local sum = 0\n  for i = 1, n do\n    sum = sum + my_matrix[1][i]\n  end\n  for i = 1, n do\n    local row_sum = 0\n    local col_sum = 0\n    for j = 1, n do\n      row_sum = row_sum + my_matrix[i][j]\n      col_sum = col_sum + my_matrix[j][i]\n    end\n    if row_sum ~= sum or col_sum ~= sum then\n      return false\n    end\n  end\n  local diag_sum = 0\n  for i = 1, n do\n    diag_sum = diag_sum + my_matrix[i][i]\n  end\n  if diag_sum ~= sum then\n    return false\n  end\n  diag_sum = 0\n  for i = 1, n do\n    diag_sum = diag_sum + my_matrix[i][n - i + 1]\n  end\n  if diag_sum ~= sum then\n    return false\n  end\n  return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_col = 0\n    local sum_row = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_diag1 = sum_diag1 + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_col = 0\n        sum_row = 0\n        for j = 1, n do\n            sum_col = sum_col + my_matrix[i][j]\n            sum_row = sum_row + my_matrix[j][i]\n        end\n        if sum_col ~= sum or sum_row ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    if sum_diag1 ~= sum or sum_diag2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    -- TODO: Implement this function.\n    -- This function should return true if the matrix is a magic square, and false otherwise.\n    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_diag3 = 0\n    local sum_diag4 = 0\n    local sum_diag5 = 0\n    local sum_diag6 = 0\n    local sum_diag7 = 0\n    local sum_diag8 = 0\n    local sum_diag9 = 0\n    local sum_diag10 = 0\n    local sum_diag11 = 0\n    local sum_diag12 = 0\n    local sum_diag13 = 0\n    local sum_diag14 = 0\n    local sum_diag15 = 0\n    local sum_diag16 = 0\n    local sum_diag17 = 0\n    local sum_diag18 = 0\n    local sum_diag19 = 0\n    local sum_diag20 = 0\n    local sum_diag21 = 0\n    local sum_diag22 = 0\n    local sum_diag23 = 0\n    local sum_diag24 = 0\n    local sum_diag25 = 0\n    local sum_diag26 = 0\n    local sum_diag27 = 0\n    local sum_diag28 = 0\n    local sum_diag29 = 0\n    local sum_diag30 = 0\n    local sum_diag31 = 0\n    local sum_diag32 = 0\n    local sum_diag33 = 0\n    local sum_diag34 = 0\n    local sum_diag35 = 0\n    local sum_diag36 = 0\n    local sum_diag37 = 0\n    local sum_diag38 = 0\n    local sum_diag39 = 0\n    local sum_diag40 = 0\n    local sum_diag41 = 0\n    local sum_diag42 = 0\n    local sum_diag43 = 0\n    local sum_diag44 = 0\n    local sum_diag45 = 0\n    local sum_diag46 = 0\n",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_test = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[i][j]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_test = 0\n        for j = 1, n do\n            sum_test = sum_test + my_matrix[j][i]\n        end\n        if sum_test ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    local sum = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local size = #my_matrix\n    for i = 1, size do\n        row_sum = 0\n        col_sum = 0\n        for j = 1, size do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n            if i == j then\n                diag_sum = diag_sum + my_matrix[i][j]\n            end\n            if i + j == size + 1 then\n                diag_sum2 = diag_sum2 + my_matrix[i][j]\n            end\n        end\n        if sum == 0 then\n            sum = row_sum\n        elseif sum ~= row_sum or sum ~= col_sum then\n            return false\n        end\n    end\n    if sum ~= diag_sum or sum ~= diag_sum2 then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local row_sum = 0\n  local col_sum = 0\n  local diag_sum = 0\n  local rev_diag_sum = 0\n  local row_count = 0\n  local col_count = 0\n  local diag_count = 0\n  local rev_diag_count = 0\n  local magic_square = true\n  local magic_square_count = 0\n  local magic_square_sum = 0\n  local magic_square_row_count = 0\n  local magic_square_col_count = 0\n  local magic_square_diag_count = 0\n  local magic_square_rev_diag_count = 0\n  local magic_square_row_sum = 0\n  local magic_square_col_sum = 0\n  local magic_square_diag_sum = 0\n  local magic_square_rev_diag_sum = 0\n  local magic_square_row_sum_count = 0\n  local magic_square_col_sum_count = 0\n  local magic_square_diag_sum_count = 0\n  local magic_square_rev_diag_sum_count = 0\n  local magic_square_row_sum_count_check = 0\n  local magic_square_col_sum_count_check = 0\n  local magic_square_diag_sum_count_check = 0\n  local magic_square_rev_diag_sum_count_check = 0\n  local magic_square_row_sum_check = 0\n  local magic_square_col_sum_check = 0\n  local magic_square_diag_sum_check = 0\n  local magic_square_rev_diag_sum_check = 0\n  local magic_square_row_count_check = 0\n  local magic_square_col_count_check = 0\n  local magic_square_diag_count_check = 0\n  local magic_square_rev_diag_count_check = 0\n  local magic_square_row_check = 0\n  local magic_square_col_check = 0\n  local magic_square_diag_check = 0\n  local magic_square_rev_diag_check = 0\n ",
    "    local rows = #my_matrix\n    local cols = #my_matrix[1]\n    local sum = 0\n    local magic_square = true\n    for i = 1, rows do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, rows do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, cols do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_diagonal = 0\n    local sum_diagonal_2 = 0\n    local sum_column = 0\n    local sum_row = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_column = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_column = sum_column + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = sum_row\n        elseif sum ~= sum_row or sum ~= sum_column then\n            magic_square = false\n        end\n    end\n    for i = 1, #my_matrix do\n        sum_diagonal = sum_diagonal + my_matrix[i][i]\n        sum_diagonal_2 = sum_diagonal_2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    if sum_diagonal ~= sum or sum_diagonal_2 ~= sum then\n        magic_square = false\n    end\n    return magic_square\nend",
    "  local sum = 0\n  local sum_test = 0\n  local sum_test_2 = 0\n  local sum_test_3 = 0\n  local sum_test_4 = 0\n  local sum_test_5 = 0\n  local sum_test_6 = 0\n  local sum_test_7 = 0\n  local sum_test_8 = 0\n  local sum_test_9 = 0\n  local sum_test_10 = 0\n  local sum_test_11 = 0\n  local sum_test_12 = 0\n  local sum_test_13 = 0\n  local sum_test_14 = 0\n  local sum_test_15 = 0\n  local sum_test_16 = 0\n  local sum_test_17 = 0\n  local sum_test_18 = 0\n  local sum_test_19 = 0\n  local sum_test_20 = 0\n  local sum_test_21 = 0\n  local sum_test_22 = 0\n  local sum_test_23 = 0\n  local sum_test_24 = 0\n  local sum_test_25 = 0\n  local sum_test_26 = 0\n  local sum_test_27 = 0\n  local sum_test_28 = 0\n  local sum_test_29 = 0\n  local sum_test_30 = 0\n  local sum_test_31 = 0\n  local sum_test_32 = 0\n  local sum_test_33 = 0\n  local sum_test_34 = 0\n  local sum_test_35 = 0\n  local sum_test_36 = 0\n  local sum_test_37 = 0\n  local sum_test_38 = 0\n  local sum_test_39 = 0\n  local sum_test_40 = 0\n  local sum_test_41 = 0\n  local sum_test_42 = 0\n  local sum_test_43 = 0\n  local sum_test_44 = 0\n  local sum_test_45 = 0\n  local sum_test_46 = 0\n  local sum_test_47 = 0\n  local sum_test_48 = 0\n  local sum_test_49 = 0\n  local sum_test_50 = 0\n  local sum_test_51",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test2 = 0\n\tlocal sum_test3 = 0\n\tlocal sum_test4 = 0\n\tlocal sum_test5 = 0\n\tlocal sum_test6 = 0\n\tlocal sum_test7 = 0\n\tlocal sum_test8 = 0\n\tlocal sum_test9 = 0\n\tlocal sum_test10 = 0\n\tlocal sum_test11 = 0\n\tlocal sum_test12 = 0\n\tlocal sum_test13 = 0\n\tlocal sum_test14 = 0\n\tlocal sum_test15 = 0\n\tlocal sum_test16 = 0\n\tlocal sum_test17 = 0\n\tlocal sum_test18 = 0\n\tlocal sum_test19 = 0\n\tlocal sum_test20 = 0\n\tlocal sum_test21 = 0\n\tlocal sum_test22 = 0\n\tlocal sum_test23 = 0\n\tlocal sum_test24 = 0\n\tlocal sum_test25 = 0\n\tlocal sum_test26 = 0\n\tlocal sum_test27 = 0\n\tlocal sum_test28 = 0\n\tlocal sum_test29 = 0\n\tlocal sum_test30 = 0\n\tlocal sum_test31 = 0\n\tlocal sum_test32 = 0\n\tlocal sum_test33 = 0\n\tlocal sum_test34 = 0\n\tlocal sum_test35 = 0\n\tlocal sum_test36 = 0\n\tlocal sum_test37 = 0\n\tlocal sum_test38 = 0\n\tlocal sum_test39 = 0\n\tlocal sum_test40 = 0\n\tlocal sum_test41 = 0\n\tlocal sum_test42 = 0\n\tlocal sum_test43 = 0\n\tlocal sum_test44 = 0\n\tlocal sum_test45 = 0\n\tlocal sum_test46 = 0\n\tlocal sum_test47 = 0\n\tlocal sum_test48 = 0\n\tlocal sum_test49 = 0\n\tlocal sum_test50 = 0\n\tlocal sum_test51 = 0\n\tlocal sum_test52 = 0\n\tlocal sum_test53 = 0\n\tlocal sum_test54 = 0\n\tlocal sum_test55 = 0\n\tlocal sum_test56 = 0\n\tlocal",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag = sum_diag + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    -- TODO: implement\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_2 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, #my_matrix do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = sum_row\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            magic_square = false\n            break\n        end\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    if sum ~= sum_diag or sum ~= sum_diag2 then\n        magic_square = false\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local size = #my_matrix\n    for i = 1, size do\n        sum = sum + my_matrix[i][i]\n        sum_diag = sum_diag + my_matrix[i][size - i + 1]\n    end\n    for i = 1, size do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, size do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum then\n        return false\n    end\n    return true\nend",
    "\tlocal sum = 0\n\tlocal sum_check = 0\n\tlocal magic_square = true\n\tfor i = 1, #my_matrix do\n\t\tsum = sum + my_matrix[i][i]\n\tend\n\tfor i = 1, #my_matrix do\n\t\tsum_check = 0\n\t\tfor j = 1, #my_matrix do\n\t\t\tsum_check = sum_check + my_matrix[i][j]\n\t\tend\n\t\tif sum_check ~= sum then\n\t\t\tmagic_square = false\n\t\t\tbreak\n\t\tend\n\tend\n\tfor i = 1, #my_matrix do\n\t\tsum_check = 0\n\t\tfor j = 1, #my_matrix do\n\t\t\tsum_check = sum_check + my_matrix[j][i]\n\t\tend\n\t\tif sum_check ~= sum then\n\t\t\tmagic_square = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn magic_square\nend",
    "    -- Check that the matrix is square.\n    local n = #my_matrix\n    if n == 0 then\n        return false\n    end\n    for i = 1, n do\n        if #my_matrix[i] ~= n then\n            return false\n        end\n    end\n    -- Check that the matrix has distinct entries.\n    local entries = {}\n    for i = 1, n do\n        for j = 1, n do\n            local entry = my_matrix[i][j]\n            if entries[entry] then\n                return false\n            end\n            entries[entry] = true\n        end\n    end\n    -- Check that the matrix has the correct sum.\n    local sum = (n * (n * n + 1)) / 2\n    for i = 1, n do\n        local row_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if row_sum ~= sum then\n            return false\n        end\n    end\n    for j = 1, n do\n        local column_sum = 0\n        for i = 1, n do\n            column_sum = column_sum + my_matrix[i][j]\n        end\n        if column_sum ~= sum then\n            return false\n        end\n    end\n    local diagonal_sum = 0\n    for i = 1, n do\n        diagonal_sum = diagonal_sum + my_matrix[i][i]\n    end\n    if diagonal_sum ~= sum then\n        return false\n    end\n    diagonal_sum = 0\n    for i = 1, n do\n        diagonal_sum = diagonal_sum + my_matrix[i][n - i + 1]\n    end\n    if diagonal_sum ~= sum then\n        return false\n    end\n    return true\nend",
    "  -- check if the matrix is a square\n  if #my_matrix ~= #my_matrix[1] then\n    return false\n  end\n  -- check if the matrix is a magic square\n  local n = #my_matrix\n  local sum = 0\n  local sum_row = 0\n  local sum_col = 0\n  local sum_diag = 0\n  local sum_antidiag = 0\n  for i = 1, n do\n    sum = sum + my_matrix[i][i]\n  end\n  for i = 1, n do\n    sum_row = 0\n    sum_col = 0\n    for j = 1, n do\n      sum_row = sum_row + my_matrix[i][j]\n      sum_col = sum_col + my_matrix[j][i]\n    end\n    if sum_row ~= sum or sum_col ~= sum then\n      return false\n    end\n  end\n  for i = 1, n do\n    sum_diag = sum_diag + my_matrix[i][i]\n    sum_antidiag = sum_antidiag + my_matrix[i][n - i + 1]\n  end\n  if sum_diag ~= sum or sum_antidiag ~= sum then\n    return false\n  end\n  return true\nend",
    "    local sum = 0\n    local magic_number = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag2_sum = 0\n    local row = 0\n    local col = 0\n    local diag = 0\n    local diag2 = 0\n    local row_index = 0\n    local col_index = 0\n    local diag_index = 0\n    local diag2_index = 0\n    local row_count = 0\n    local col_count = 0\n    local diag_count = 0\n    local diag2_count = 0\n    local matrix_size = #my_matrix\n    local matrix_size_sqr = matrix_size * matrix_size\n    local matrix_size_sqr_sum = matrix_size_sqr * (matrix_size_sqr + 1) / 2\n    local matrix_size_sqr_sum_half = matrix_size_sqr_sum / 2\n    local matrix_size_sqr_sum_half_floor = math.floor(matrix_size_sqr_sum_half)\n    local matrix_size_sqr_sum_half_ceil = math.ceil(matrix_size_sqr_sum_half)\n    local matrix_size_sqr_sum_half_diff = matrix_size_sqr_sum_half_ceil - matrix_size_sqr_sum_half_floor\n    local matrix_size_sqr_sum_half_diff_floor = math.floor(matrix_size_sqr_sum_half_diff)\n    local matrix_size_sqr_sum_half_diff_ceil = math.ceil(matrix_size_sqr_sum_half_diff)\n    local matrix_size_sqr_sum_half_diff_floor_half = matrix_size_sqr_sum_half_diff_floor / 2\n    local matrix_size_sqr_sum_half_diff_ceil_half = matrix_size_sqr_sum_half_diff_ceil / 2\n    local matrix_size_sqr_sum_half_diff_floor",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test_2 = 0\n\tlocal sum_test_3 = 0\n\tlocal sum_test_4 = 0\n\tlocal sum_test_5 = 0\n\tlocal sum_test_6 = 0\n\tlocal sum_test_7 = 0\n\tlocal sum_test_8 = 0\n\tlocal sum_test_9 = 0\n\tlocal sum_test_10 = 0\n\tlocal sum_test_11 = 0\n\tlocal sum_test_12 = 0\n\tlocal sum_test_13 = 0\n\tlocal sum_test_14 = 0\n\tlocal sum_test_15 = 0\n\tlocal sum_test_16 = 0\n\tlocal sum_test_17 = 0\n\tlocal sum_test_18 = 0\n\tlocal sum_test_19 = 0\n\tlocal sum_test_20 = 0\n\tlocal sum_test_21 = 0\n\tlocal sum_test_22 = 0\n\tlocal sum_test_23 = 0\n\tlocal sum_test_24 = 0\n\tlocal sum_test_25 = 0\n\tlocal sum_test_26 = 0\n\tlocal sum_test_27 = 0\n\tlocal sum_test_28 = 0\n\tlocal sum_test_29 = 0\n\tlocal sum_test_30 = 0\n\tlocal sum_test_31 = 0\n\tlocal sum_test_32 = 0\n\tlocal sum_test_33 = 0\n\tlocal sum_test_34 = 0\n\tlocal sum_test_35 = 0\n\tlocal sum_test_36 = 0\n\tlocal sum_test_37 = 0\n\tlocal sum_test_38 = 0\n\tlocal sum_test_39 = 0\n\tlocal sum_test_40 = 0\n\tlocal sum_test_41 = 0\n\tlocal sum_test_42 = 0\n\tlocal sum_test_43 = 0\n\tlocal sum_test_44 = 0\n\tlocal sum_test_45 = 0\n\tlocal sum_test_46 = 0\n\tlocal sum_test_47 = 0\n\tlocal sum_test_48 = 0\n\tlocal sum_test_49 = 0\n\tlocal sum_test_50 = 0\n\tlocal sum_test_51",
    "    local sum = 0\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local rev_diag_sum = 0\n    local n = #my_matrix\n    for i = 1, n do\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        if sum == 0 then\n            sum = row_sum\n        elseif sum ~= row_sum then\n            return false\n        end\n        row_sum = 0\n    end\n    for i = 1, n do\n        for j = 1, n do\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if sum ~= col_sum then\n            return false\n        end\n        col_sum = 0\n    end\n    for i = 1, n do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if sum ~= diag_sum then\n        return false\n    end\n    for i = 1, n do\n        rev_diag_sum = rev_diag_sum + my_matrix[i][n - i + 1]\n    end\n    if sum ~= rev_diag_sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_col = 0\n    local sum_row = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag1 = sum_diag1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "\t-- TODO: Write this function.\n\t-- Hint: You can use the sum_of_row function you wrote above.\n\tlocal sum = sum_of_row(my_matrix, 1)\n\tfor i = 1, #my_matrix do\n\t\tif sum ~= sum_of_row(my_matrix, i) then\n\t\t\treturn false\n\t\tend\n\tend\n\tfor i = 1, #my_matrix do\n\t\tif sum ~= sum_of_column(my_matrix, i) then\n\t\t\treturn false\n\t\tend\n\tend\n\tif sum ~= sum_of_diagonal(my_matrix, 1) then\n\t\treturn false\n\tend\n\tif sum ~= sum_of_diagonal(my_matrix, 2) then\n\t\treturn false\n\tend\n\treturn true\nend",
    "    -- TODO: Implement this function.\n    return false\nend",
    "\tlocal sum = 0\n\tlocal sum_test = 0\n\tlocal sum_test_2 = 0\n\tlocal sum_test_3 = 0\n\tlocal sum_test_4 = 0\n\tlocal sum_test_5 = 0\n\tlocal sum_test_6 = 0\n\tlocal sum_test_7 = 0\n\tlocal sum_test_8 = 0\n\tlocal sum_test_9 = 0\n\tlocal sum_test_10 = 0\n\tlocal sum_test_11 = 0\n\tlocal sum_test_12 = 0\n\tlocal sum_test_13 = 0\n\tlocal sum_test_14 = 0\n\tlocal sum_test_15 = 0\n\tlocal sum_test_16 = 0\n\tlocal sum_test_17 = 0\n\tlocal sum_test_18 = 0\n\tlocal sum_test_19 = 0\n\tlocal sum_test_20 = 0\n\tlocal sum_test_21 = 0\n\tlocal sum_test_22 = 0\n\tlocal sum_test_23 = 0\n\tlocal sum_test_24 = 0\n\tlocal sum_test_25 = 0\n\tlocal sum_test_26 = 0\n\tlocal sum_test_27 = 0\n\tlocal sum_test_28 = 0\n\tlocal sum_test_29 = 0\n\tlocal sum_test_30 = 0\n\tlocal sum_test_31 = 0\n\tlocal sum_test_32 = 0\n\tlocal sum_test_33 = 0\n\tlocal sum_test_34 = 0\n\tlocal sum_test_35 = 0\n\tlocal sum_test_36 = 0\n\tlocal sum_test_37 = 0\n\tlocal sum_test_38 = 0\n\tlocal sum_test_39 = 0\n\tlocal sum_test_40 = 0\n\tlocal sum_test_41 = 0\n\tlocal sum_test_42 = 0\n\tlocal sum_test_43 = 0\n\tlocal sum_test_44 = 0\n\tlocal sum_test_45 = 0\n\tlocal sum_test_46 = 0\n\tlocal sum_test_47 = 0\n\tlocal sum_test_48 = 0\n\tlocal sum_test_49 = 0\n\tlocal sum_test_50 = 0\n\tlocal sum_test_51",
    "    -- calculate the sum of each row\n    local row_sums = {}\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        for j = 1, #my_matrix[i] do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        row_sums[i] = row_sum\n    end\n    -- calculate the sum of each column\n    local column_sums = {}\n    for i = 1, #my_matrix[1] do\n        local column_sum = 0\n        for j = 1, #my_matrix do\n            column_sum = column_sum + my_matrix[j][i]\n        end\n        column_sums[i] = column_sum\n    end\n    -- calculate the sum of the diagonals\n    local diagonal_sum_1 = 0\n    local diagonal_sum_2 = 0\n    for i = 1, #my_matrix do\n        diagonal_sum_1 = diagonal_sum_1 + my_matrix[i][i]\n        diagonal_sum_2 = diagonal_sum_2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    -- check if all the sums are equal\n    local sum = row_sums[1]\n    for i = 2, #row_sums do\n        if row_sums[i] ~= sum then\n            return false\n        end\n    end\n    for i = 1, #column_sums do\n        if column_sums[i] ~= sum then\n            return false\n        end\n    end\n    if diagonal_sum_1 ~= sum or diagonal_sum_2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if i == 1 then\n            sum = sum_row\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    if sum_diag_1 ~= sum or sum_diag_2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_number = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local diagonal_sum_2 = 0\n    local row_index = 1\n    local column_index = 1",
    "    local sum = 0\n    local magic_sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local column_sum = 0\n    local diagonal_sum = 0\n    local diagonal_sum_2 = 0\n    local row_count = 1\n    local column_count = 1\n    local diagonal_count = 1\n    local diagonal_count_2 = 1\n    local row_count_2 = 1\n    local column_count_2 = 1\n    local row_count_3 = 1\n    local column_count_3 = 1\n    local row_count_4 = 1\n    local column_count_4 = 1\n    local row_count_5 = 1\n    local column_count_5 = 1\n    local row_count_6 = 1\n    local column_count_6 = 1\n    local row_count_7 = 1\n    local column_count_7 = 1\n    local row_count_8 = 1\n    local column_count_8 = 1\n    local row_count_9 = 1\n    local column_count_9 = 1\n    local row_count_10 = 1\n    local column_count_10 = 1\n    local row_count_11 = 1\n    local column_count_11 = 1\n    local row_count_12 = 1\n    local column_count_12 = 1\n    local row_count_13 = 1\n    local column_count_13 = 1\n    local row_count_14 = 1\n    local column_count_14 = 1\n    local row_count_15 = 1\n    local column_count_15 = 1\n    local row_count_16 = 1\n    local column_count_16 = 1\n    local row_count_17 = 1\n    local column_count_17 = 1\n    local row_count_18 = 1\n    local column_count_18 = 1\n    local row_count_19 = 1\n    local column_count_19 = 1\n    local row_count_20 = 1\n    local column_count_20 = 1\n    local row_count_21 = 1\n    local column_count_21 = 1\n    local row_count_22 = 1\n    local column_count_22 = 1\n   ",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag = sum_diag + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    return true\nend",
    "    local sum = 0\n    local magic_square = true\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            magic_square = false\n            break\n        end\n    end\n    return magic_square\nend",
    "    local sum = 0\n    local magic_square = true\n    local row_sum = 0\n    local col_sum = 0\n    local diag_sum = 0\n    local diag_sum2 = 0\n    local row_count = 0\n    local col_count = 0\n    local diag_count = 0\n    local diag_count2 = 0",
    "  -- TODO: Implement this function.\n  -- Hint: You can use the sum_rows function.\n  local sum = sum_rows(my_matrix)\n  local sum_diag = 0\n  local sum_diag2 = 0\n  for i = 1, #my_matrix do\n    sum_diag = sum_diag + my_matrix[i][i]\n    sum_diag2 = sum_diag2 + my_matrix[i][#my_matrix - i + 1]\n  end\n  if sum_diag ~= sum or sum_diag2 ~= sum then\n    return false\n  end\n  for i = 1, #my_matrix do\n    local sum_col = 0\n    for j = 1, #my_matrix do\n      sum_col = sum_col + my_matrix[j][i]\n    end\n    if sum_col ~= sum then\n      return false\n    end\n  end\n  return true\nend",
    "    -- Check if the matrix is a square matrix.\n    if not is_square_matrix(my_matrix) then\n        return false\n    end",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local num_rows = #my_matrix\n    local num_cols = #my_matrix[1]\n    for i = 1, num_rows do\n        for j = 1, num_cols do\n            sum = sum + my_matrix[i][j]\n        end\n    end\n    for i = 1, num_rows do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, num_cols do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    for i = 1, num_rows do\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][num_rows - i + 1]\n    end\n    if sum_diag_1 ~= sum or sum_diag_2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_row = 0\n    local sum_col = 0\n    local sum_diag = 0\n    local sum_anti_diag = 0\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_anti_diag = sum_anti_diag + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum or sum_anti_diag ~= sum then\n        return false\n    end\n    return true\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_col = {}\n    local sum_row = {}\n    for i = 1, n do\n        sum_col[i] = 0\n        sum_row[i] = 0\n    end\n    for i = 1, n do\n        for j = 1, n do\n            sum_col[i] = sum_col[i] + my_matrix[i][j]\n            sum_row[j] = sum_row[j] + my_matrix[i][j]\n        end\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    sum = sum_diag_1\n    for i = 1, n do\n        if sum_col[i] ~= sum or sum_row[i] ~= sum then\n            return false\n        end\n    end\n    if sum_diag_2 ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag = sum_diag + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diag ~= sum then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local magic = true\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n    end\n    for i = 1, n do\n        local sum_row = 0\n        local sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            magic = false\n            break\n        end\n    end\n    return magic\nend",
    "    -- Check if the matrix is a square.\n    if not is_square(my_matrix) then\n        return false\n    end\n    -- Check if the matrix is a magic square.\n    local sum = 0\n    for i = 1, #my_matrix do\n        sum = sum + my_matrix[i][1]\n    end\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, #my_matrix do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            return false\n        end\n    end\n    local diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][i]\n    end\n    if diag_sum ~= sum then\n        return false\n    end\n    diag_sum = 0\n    for i = 1, #my_matrix do\n        diag_sum = diag_sum + my_matrix[i][#my_matrix - i + 1]\n    end\n    if diag_sum ~= sum then\n        return false\n    end\n    return true\nend",
    "    -- TODO\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag_1 = sum_diag_1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag_1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    return true\nend",
    "    local n = #my_matrix\n    local sum = 0\n    local sum_diag1 = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diag1 = sum_diag1 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag1 then\n        return false\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    -- TODO: Implement this function.\n    -- Hint: You can use the sum_of_row() function.\n    local sum_of_row_1 = sum_of_row(my_matrix, 1)\n    local sum_of_row_2 = sum_of_row(my_matrix, 2)\n    local sum_of_row_3 = sum_of_row(my_matrix, 3)\n    local sum_of_col_1 = sum_of_col(my_matrix, 1)\n    local sum_of_col_2 = sum_of_col(my_matrix, 2)\n    local sum_of_col_3 = sum_of_col(my_matrix, 3)\n    local sum_of_diag_1 = sum_of_diag(my_matrix, 1)\n    local sum_of_diag_2 = sum_of_diag(my_matrix, 2)\n    if sum_of_row_1 == sum_of_row_2 and sum_of_row_1 == sum_of_row_3 and sum_of_row_1 == sum_of_col_1 and sum_of_row_1 == sum_of_col_2 and sum_of_row_1 == sum_of_col_3 and sum_of_row_1 == sum_of_diag_1 and sum_of_row_1 == sum_of_diag_2 then\n        return true\n    else\n        return false\n    end\nend",
    "  local sum = 0\n  local magic_square = true\n  local row_sum = 0\n  local column_sum = 0\n  local diagonal_sum = 0\n  local diagonal_sum_2 = 0\n  local row_index = 0\n  local column_index = 0\n  local diagonal_index = 0\n  local diagonal_index_2 = 0\n  local matrix_size = #my_matrix\n  -- Calculate the sum of the first row and use it as a reference.\n  for i = 1, matrix_size do\n    sum = sum + my_matrix[1][i]\n  end\n  -- Check if the sum of the first row is equal to the sum of the other rows.\n  for i = 2, matrix_size do\n    for j = 1, matrix_size do\n      row_sum = row_sum + my_matrix[i][j]\n    end\n    if row_sum ~= sum then\n      magic_square = false\n    end\n    row_sum = 0\n  end\n  -- Check if the sum of the first column is equal to the sum of the other columns.\n  for i = 1, matrix_size do\n    for j = 1, matrix_size do\n      column_sum = column_sum + my_matrix[j][i]\n    end\n    if column_sum ~= sum then\n      magic_square = false\n    end\n    column_sum = 0\n  end\n  -- Check if the sum of the first diagonal is equal to the sum of the other diagonal.\n  for i = 1, matrix_size do\n    for j = 1, matrix_size do\n      if i == j then\n        diagonal_sum = diagonal_sum + my_matrix[i][j]\n      end\n    end\n  end\n  if diagonal_sum ~= sum then\n    magic_square = false\n  end\n  -- Check if the sum of the second diagonal is equal to the sum of the other diagonal.\n  for i = 1, matrix_size do\n    for j = 1, matrix_size do\n      if i + j == matrix_size + 1 then\n        diagonal_sum_2 = diagonal_sum_2 + my_matrix[i][j]\n      end\n",
    "  -- TODO: Write this function.\nend",
    "  local sum = 0\n  local magic_square = true\n  for i = 1, #my_matrix do\n    sum = sum + my_matrix[i][i]\n  end\n  for i = 1, #my_matrix do\n    local sum_row = 0\n    local sum_col = 0\n    for j = 1, #my_matrix do\n      sum_row = sum_row + my_matrix[i][j]\n      sum_col = sum_col + my_matrix[j][i]\n    end\n    if sum_row ~= sum or sum_col ~= sum then\n      magic_square = false\n      break\n    end\n  end\n  return magic_square\nend",
    "    local sum = 0\n    local sum_diagonal_1 = 0\n    local sum_diagonal_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_diagonal_1 = sum_diagonal_1 + my_matrix[i][n - i + 1]\n    end\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum_row ~= sum or sum_col ~= sum then\n            return false\n        end\n    end\n    if sum_diagonal_1 ~= sum then\n        return false\n    end\n    return true\nend",
    "  -- TODO: Implement this function.\n  local sum = 0\n  local sum_row = 0\n  local sum_column = 0\n  local sum_diagonal = 0\n  local sum_diagonal_2 = 0\n  local sum_diagonal_3 = 0\n  local sum_diagonal_4 = 0\n  local sum_diagonal_5 = 0\n  local sum_diagonal_6 = 0\n  local sum_diagonal_7 = 0\n  local sum_diagonal_8 = 0\n  local sum_diagonal_9 = 0\n  local sum_diagonal_10 = 0\n  local sum_diagonal_11 = 0\n  local sum_diagonal_12 = 0\n  local sum_diagonal_13 = 0\n  local sum_diagonal_14 = 0\n  local sum_diagonal_15 = 0\n  local sum_diagonal_16 = 0\n  local sum_diagonal_17 = 0\n  local sum_diagonal_18 = 0\n  local sum_diagonal_19 = 0\n  local sum_diagonal_20 = 0\n  local sum_diagonal_21 = 0\n  local sum_diagonal_22 = 0\n  local sum_diagonal_23 = 0\n  local sum_diagonal_24 = 0\n  local sum_diagonal_25 = 0\n  local sum_diagonal_26 = 0\n  local sum_diagonal_27 = 0\n  local sum_diagonal_28 = 0\n  local sum_diagonal_29 = 0\n  local sum_diagonal_30 = 0\n  local sum_diagonal_31 = 0\n  local sum_diagonal_32 = 0\n  local sum_diagonal_33 = 0\n  local sum_diagonal_34 = 0\n  local sum_diagonal_35 = 0\n  local sum_diagonal_36 = 0\n  local sum_diagonal_37 = 0\n  local sum_diagonal_38 = 0\n  local sum_diagonal_39 = 0\n  local sum_diagonal_40 = 0\n  local sum_diagonal_41 = 0\n  local sum_diagonal_42 = 0\n  local sum_diagonal_43 = 0\n  local sum_diagonal_44",
    "  local sum = 0\n  local sum_test = 0\n  local sum_test_2 = 0\n  local sum_test_3 = 0\n  local sum_test_4 = 0\n  local sum_test_5 = 0\n  local sum_test_6 = 0\n  local sum_test_7 = 0\n  local sum_test_8 = 0\n  local sum_test_9 = 0\n  local sum_test_10 = 0\n  local sum_test_11 = 0\n  local sum_test_12 = 0\n  local sum_test_13 = 0\n  local sum_test_14 = 0\n  local sum_test_15 = 0\n  local sum_test_16 = 0\n  local sum_test_17 = 0\n  local sum_test_18 = 0\n  local sum_test_19 = 0\n  local sum_test_20 = 0\n  local sum_test_21 = 0\n  local sum_test_22 = 0\n  local sum_test_23 = 0\n  local sum_test_24 = 0\n  local sum_test_25 = 0\n  local sum_test_26 = 0\n  local sum_test_27 = 0\n  local sum_test_28 = 0\n  local sum_test_29 = 0\n  local sum_test_30 = 0\n  local sum_test_31 = 0\n  local sum_test_32 = 0\n  local sum_test_33 = 0\n  local sum_test_34 = 0\n  local sum_test_35 = 0\n  local sum_test_36 = 0\n  local sum_test_37 = 0\n  local sum_test_38 = 0\n  local sum_test_39 = 0\n  local sum_test_40 = 0\n  local sum_test_41 = 0\n  local sum_test_42 = 0\n  local sum_test_43 = 0\n  local sum_test_44 = 0\n  local sum_test_45 = 0\n  local sum_test_46 = 0\n  local sum_test_47 = 0\n  local sum_test_48 = 0\n  local sum_test_49 = 0\n  local sum_test_50 = 0\n  local sum_test_51",
    "    local sum = 0\n    local sum_check = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum = sum + my_matrix[i][i]\n        sum_check = sum_check + my_matrix[i][n-i+1]\n    end\n    if sum ~= sum_check then\n        return false\n    end\n    for i = 1, n do\n        local row_sum = 0\n        local col_sum = 0\n        for j = 1, n do\n            row_sum = row_sum + my_matrix[i][j]\n            col_sum = col_sum + my_matrix[j][i]\n        end\n        if row_sum ~= sum or col_sum ~= sum then\n            return false\n        end\n    end\n    return true\nend",
    "    -- Check if the matrix is square.\n    if not is_square(my_matrix) then\n        return false\n    end",
    "    -- calculate the sum of each row\n    local row_sums = {}\n    for i = 1, #my_matrix do\n        local row_sum = 0\n        for j = 1, #my_matrix[i] do\n            row_sum = row_sum + my_matrix[i][j]\n        end\n        row_sums[i] = row_sum\n    end\n    -- calculate the sum of each column\n    local col_sums = {}\n    for j = 1, #my_matrix[1] do\n        local col_sum = 0\n        for i = 1, #my_matrix do\n            col_sum = col_sum + my_matrix[i][j]\n        end\n        col_sums[j] = col_sum\n    end\n    -- calculate the sum of the diagonals\n    local diag_sum_1 = 0\n    local diag_sum_2 = 0\n    for i = 1, #my_matrix do\n        diag_sum_1 = diag_sum_1 + my_matrix[i][i]\n        diag_sum_2 = diag_sum_2 + my_matrix[i][#my_matrix - i + 1]\n    end\n    -- check that all the sums are equal\n    local sum = row_sums[1]\n    for i = 1, #row_sums do\n        if row_sums[i] ~= sum then\n            return false\n        end\n    end\n    for j = 1, #col_sums do\n        if col_sums[j] ~= sum then\n            return false\n        end\n    end\n    if diag_sum_1 ~= sum or diag_sum_2 ~= sum then\n        return false\n    end\n    return true\nend",
    "  local sum = 0\n  local sum_check = 0\n  local magic_square = true",
    "    local sum = 0\n    local sum_diag = 0\n    local sum_diag2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local n = #my_matrix\n    for i = 1, n do\n        sum_row = 0\n        sum_col = 0\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n            sum_col = sum_col + my_matrix[j][i]\n        end\n        if sum == 0 then\n            sum = sum_row\n        elseif sum ~= sum_row or sum ~= sum_col then\n            return false\n        end\n    end\n    for i = 1, n do\n        sum_diag = sum_diag + my_matrix[i][i]\n        sum_diag2 = sum_diag2 + my_matrix[i][n - i + 1]\n    end\n    if sum ~= sum_diag or sum ~= sum_diag2 then\n        return false\n    end\n    return true\nend",
    "    local sum = 0\n    local sum_diag_1 = 0\n    local sum_diag_2 = 0\n    local sum_row = 0\n    local sum_col = 0\n    local magic_square = true\n    local n = #my_matrix\n    -- calculate the sum of the first row\n    for i = 1, n do\n        sum = sum + my_matrix[1][i]\n    end\n    -- calculate the sum of the first column\n    for i = 1, n do\n        sum_col = sum_col + my_matrix[i][1]\n    end\n    -- calculate the sum of the diagonal from the top left to the bottom right\n    for i = 1, n do\n        sum_diag_1 = sum_diag_1 + my_matrix[i][i]\n    end\n    -- calculate the sum of the diagonal from the top right to the bottom left\n    for i = 1, n do\n        sum_diag_2 = sum_diag_2 + my_matrix[i][n - i + 1]\n    end\n    -- check if the sum of the first row is equal to the sum of the first column\n    if sum ~= sum_col then\n        magic_square = false\n    end\n    -- check if the sum of the first row is equal to the sum of the diagonal from the top left to the bottom right\n    if sum ~= sum_diag_1 then\n        magic_square = false\n    end\n    -- check if the sum of the first row is equal to the sum of the diagonal from the top right to the bottom left\n    if sum ~= sum_diag_2 then\n        magic_square = false\n    end\n    -- check if the sum of the first row is equal to the sum of each row\n    for i = 1, n do\n        for j = 1, n do\n            sum_row = sum_row + my_matrix[i][j]\n        end\n        if sum ~= sum_row then\n            magic_square = false\n        end\n        sum_row = 0\n    end\n    -- check if the sum of the first row is equal to the sum of each column\n    for i = 1, n do\n        for",
    "    -- TODO: Implement this function.\nend"
  ]
}
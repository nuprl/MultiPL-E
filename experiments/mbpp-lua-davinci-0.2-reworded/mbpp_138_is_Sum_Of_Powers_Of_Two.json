{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "lua",
  "prompt": "-- Write a luathon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nlocal function is_Sum_Of_Powers_Of_Two(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_Sum_Of_Powers_Of_Two\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(7), false)\n    lu.assertEquals(candidate(14), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\tif sum == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 0 then return false end\n\t\twhile n % 2 == 0 do\n\t\t\tn = n / 2\n\t\tend\n\t\treturn n == 1\n\tend\n\tlocal function is_Sum_Of_Powers_Of_Two(n, i)\n\t\tif n == 0 then return true end\n\t\tif n < 0 or i < 0 then return false end\n\t\treturn is_Sum_Of_Powers_Of_Two(n - 2^i, i - 1) or is_Sum_Of_Powers_Of_Two(n, i - 1)\n\tend\n\treturn is_Sum_Of_Powers_Of_Two(n, math.floor(math.log(n, 2)))\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\tn = math.floor(n / 2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\ti = i + 1\n\t\tn = math.floor(n/2)\n\tend\n\treturn sum\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = 1, n - 1 do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "\tlocal i = 1\n\tlocal sum = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while true do\n        local p = 2 ^ i\n        if p > n then\n            break\n        end\n        if n % p == 0 then\n            sum = sum + p\n        end\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 1\n  while sum < n do\n    sum = sum + 2^i\n    if sum == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\tif sum == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            n = n - 2^i\n        end\n        i = i + 1\n    end\n    if n == 0 then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end",
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif n < 1 then\n            return false\n        else\n            return is_Even(n) and is_Power_Of_Two(n / 2)\n        end\n    end\n    if n == 0 then\n        return true\n    elseif n < 0 then\n        return false\n    else\n        return is_Sum_Of_Powers_Of_Two(n - 1) or is_Power_Of_Two(n)\n    end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend"
  ]
}
{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "lua",
  "prompt": "-- Write a luathon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\nlocal function is_Sum_Of_Powers_Of_Two(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_Sum_Of_Powers_Of_Two\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(7), false)\n    lu.assertEquals(candidate(14), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\tif sum == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 0 then return false end\n\t\twhile n % 2 == 0 do\n\t\t\tn = n / 2\n\t\tend\n\t\treturn n == 1\n\tend\n\tlocal function is_Sum_Of_Powers_Of_Two(n, i)\n\t\tif n == 0 then return true end\n\t\tif n < 0 or i < 0 then return false end\n\t\treturn is_Sum_Of_Powers_Of_Two(n - 2^i, i - 1) or is_Sum_Of_Powers_Of_Two(n, i - 1)\n\tend\n\treturn is_Sum_Of_Powers_Of_Two(n, math.floor(math.log(n, 2)))\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\tn = math.floor(n / 2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\ti = i + 1\n\t\tn = math.floor(n/2)\n\tend\n\treturn sum\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = 1, n - 1 do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "\tlocal i = 1\n\tlocal sum = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while true do\n        local p = 2 ^ i\n        if p > n then\n            break\n        end\n        if n % p == 0 then\n            sum = sum + p\n        end\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 1\n  while sum < n do\n    sum = sum + 2^i\n    if sum == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\tif sum == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            n = n - 2^i\n        end\n        i = i + 1\n    end\n    if n == 0 then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end",
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif n < 1 then\n            return false\n        else\n            return is_Even(n) and is_Power_Of_Two(n / 2)\n        end\n    end\n    if n == 0 then\n        return true\n    elseif n < 0 then\n        return false\n    else\n        return is_Sum_Of_Powers_Of_Two(n - 1) or is_Power_Of_Two(n)\n    end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        local r = n % 2\n        if r == 1 then\n            sum = sum + 2 ^ i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        local r = n % 2\n        if r == 1 then\n            sum = sum + math.pow(2, i)\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    if sum == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    local function is_Sum_Of_Powers_Of_Two(n, i)\n        if n == 0 then\n            return true\n        elseif n < 0 then\n            return false\n        elseif is_Power_Of_Two(i) then\n            return is_Sum_Of_Powers_Of_Two(n - i, i) or is_Sum_Of_Powers_Of_Two(n, i + 1)\n        else\n            return is_Sum_Of_Powers_Of_Two(n, i + 1)\n        end\n    end\n    return is_Sum_Of_Powers_Of_Two(n, 1)\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif n == 0 then\n      return false\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  local function is_Sum_Of_Powers_Of_Two(n, i)\n    if n == 0 then\n      return true\n    elseif n < 0 then\n      return false\n    elseif is_Power_Of_Two(i) then\n      return is_Sum_Of_Powers_Of_Two(n - i, i + 1) or is_Sum_Of_Powers_Of_Two(n, i + 1)\n    else\n      return is_Sum_Of_Powers_Of_Two(n, i + 1)\n    end\n  end\n  return is_Sum_Of_Powers_Of_Two(n, 1)\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        local function is_Odd(n)\n            return n % 2 ~= 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    local function is_Sum_Of_Powers_Of_Two(n, i)\n        if n == 0 then\n            return true\n        elseif n < 0 then\n            return false\n        else\n            return is_Sum_Of_Powers_Of_Two(n - i, i / 2) or is_Sum_Of_Powers_Of_Two(n, i / 2)\n        end\n    end\n    return is_Sum_Of_Powers_Of_Two(n, is_Power_Of_Two(n) and n or n - 1)\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + math.pow(2, i)\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 0 then\n      return false\n    elseif n == 1 then\n      return true\n    elseif n % 2 == 0 then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  if n == 0 then\n    return true\n  elseif n == 1 then\n    return true\n  elseif is_Power_Of_Two(n) then\n    return true\n  else\n    for i = n - 1, 1, -1 do\n      if is_Power_Of_Two(i) then\n        return is_Sum_Of_Powers_Of_Two(n - i)\n      end\n    end\n  end\n  return false\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local i = 1\n    local sum = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile (sum < n) do\n\t\tsum = sum + 2^i\n\t\tif (sum == n) then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n/2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = n - 1, 0, -1 do\n            if is_Power_Of_Two(i) then\n                return is_Sum_Of_Powers_Of_Two(n - i)\n            end\n        end\n    end\n    return false\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n/2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2 ^ i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 0 then return false end\n    while n % 2 == 0 do\n      n = n / 2\n    end\n    return n == 1\n  end\n  local function is_Sum_Of_Powers_Of_Two(n, i)\n    if n == 0 then return true end\n    if n < 0 or i < 0 then return false end\n    return is_Sum_Of_Powers_Of_Two(n - 2^i, i) or is_Sum_Of_Powers_Of_Two(n, i - 1)\n  end\n  return is_Sum_Of_Powers_Of_Two(n, math.floor(math.log(n, 2)))\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then\n      return true\n    elseif n % 2 == 0 then\n      return is_Power_Of_Two(n/2)\n    else\n      return false\n    end\n  end",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = 1, n do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 0 then\n\t\t\treturn false\n\t\tend\n\t\twhile n % 2 == 0 do\n\t\t\tn = n / 2\n\t\tend\n\t\treturn n == 1\n\tend\n\tif n == 0 then\n\t\treturn true\n\tend\n\tfor i = 1, n do\n\t\tif is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = 1, n do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while n > sum do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if n == sum then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\tif sum == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  if n == 0 then\n    return true\n  elseif is_Power_Of_Two(n) then\n    return true\n  else\n    return is_Sum_Of_Powers_Of_Two(n - 1) or is_Sum_Of_Powers_Of_Two(n - 2) or is_Sum_Of_Powers_Of_Two(n - 3) or is_Sum_Of_Powers_Of_Two(n - 4) or is_Sum_Of_Powers_Of_Two(n - 5) or is_Sum_Of_Powers_Of_Two(n - 6) or is_Sum_Of_Powers_Of_Two(n - 7) or is_Sum_Of_Powers_Of_Two(n - 8)\n  end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then\n            return false\n        end\n        while n % 2 == 0 do\n            n = n / 2\n        end\n        return n == 1\n    end\n    if n == 0 then\n        return false\n    end\n    for i = 0, n do\n        if is_Power_Of_Two(i) and is_Power_Of_Two(n - i) then\n            return true\n        end\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 0 then\n\t\t\treturn false\n\t\tend\n\t\twhile n % 2 == 0 do\n\t\t\tn = n / 2\n\t\tend\n\t\treturn n == 1\n\tend\n\tlocal function is_Sum_Of_Powers_Of_Two(n, i)\n\t\tif n == 0 then\n\t\t\treturn true\n\t\tend\n\t\tif n < 0 or i < 0 then\n\t\t\treturn false\n\t\tend\n\t\treturn is_Sum_Of_Powers_Of_Two(n - 2^i, i) or is_Sum_Of_Powers_Of_Two(n, i - 1)\n\tend\n\treturn is_Sum_Of_Powers_Of_Two(n, math.floor(math.log(n, 2)))\nend",
    "    local function is_Power_Of_Two(n)\n        while n % 2 == 0 do\n            n = n / 2\n        end\n        return n == 1\n    end",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif n % 2 == 0 then\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then\n            return false\n        elseif n == 1 then\n            return true\n        else\n            return is_Power_Of_Two(n / 2)\n        end\n    end",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif n % 2 == 0 then\n\t\t\treturn is_Power_Of_Two(n/2)\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\tif is_Power_Of_Two(n) then\n\t\treturn true\n\telseif n == 0 then\n\t\treturn false\n\telse\n\t\treturn is_Sum_Of_Powers_Of_Two(n-1) or is_Sum_Of_Powers_Of_Two(n-2)\n\tend\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif n % 2 == 1 then\n\t\t\treturn false\n\t\telse\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\tend\n\tend\n\tif n == 0 then\n\t\treturn true\n\telseif is_Power_Of_Two(n) then\n\t\treturn true\n\telse\n\t\tfor i = n - 1, 1, -1 do\n\t\t\tif is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tlocal function is_Even(n)\n\t\t\treturn n % 2 == 0\n\t\tend\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif is_Even(n) then\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\tif n == 0 then\n\t\treturn true\n\telseif is_Power_Of_Two(n) then\n\t\treturn true\n\telse\n\t\tfor i = n - 1, 0, -1 do\n\t\t\tif is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  if n == 0 then\n    return false\n  elseif is_Power_Of_Two(n) then\n    return true\n  else\n    return is_Sum_Of_Powers_Of_Two(n - 1) or is_Sum_Of_Powers_Of_Two(n - 2) or is_Sum_Of_Powers_Of_Two(n - 3) or is_Sum_Of_Powers_Of_Two(n - 4) or is_Sum_Of_Powers_Of_Two(n - 5) or is_Sum_Of_Powers_Of_Two(n - 6) or is_Sum_Of_Powers_Of_Two(n - 7) or is_Sum_Of_Powers_Of_Two(n - 8)\n  end\nend",
    "  local sum = 0\n  local i = 1\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        local function is_One(n)\n            return n == 1\n        end\n        if is_One(n) then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if is_Power_Of_Two(n) then\n        return true\n    elseif n == 0 then\n        return true\n    elseif n < 0 then\n        return false\n    else\n        return is_Sum_Of_Powers_Of_Two(n - 1) or is_Sum_Of_Powers_Of_Two(n - 2) or is_Sum_Of_Powers_Of_Two(n - 3) or is_Sum_Of_Powers_Of_Two(n - 4) or is_Sum_Of_Powers_Of_Two(n - 5) or is_Sum_Of_Powers_Of_Two(n - 6) or is_Sum_Of_Powers_Of_Two(n - 7) or is_Sum_Of_Powers_Of_Two(n - 8)\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = 1, n - 1 do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  if n == 0 then\n    return true\n  elseif is_Power_Of_Two(n) then\n    return true\n  else\n    for i = 1, n - 1 do\n      if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n        return true\n      end\n    end\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n/2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif n < 0 then\n        return false\n    else\n        return is_Sum_Of_Powers_Of_Two(n - 1) or is_Power_Of_Two(n)\n    end\nend",
    "    local sum = 0\n    local i = 1\n    while n > sum do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if n == sum then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      sum = sum + math.pow(2, i)\n    end\n    n = math.floor(n / 2)\n    i = i + 1\n  end\n  return sum\nend",
    "  local function is_Power_Of_Two(n)\n    return n > 0 and (n & (n - 1)) == 0\n  end\n  if n == 0 then\n    return false\n  end\n  while n ~= 0 do\n    if is_Power_Of_Two(n) then\n      return true\n    end\n    n = n - 1\n  end\n  return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then\n            return false\n        end\n        local i = 1\n        while i <= n do\n            if i == n then\n                return true\n            end\n            i = i * 2\n        end\n        return false\n    end\n    local function is_Sum_Of_Powers_Of_Two(n)\n        if n == 0 then\n            return true\n        end\n        if is_Power_Of_Two(n) then\n            return true\n        end\n        local i = 1\n        while i <= n do\n            if is_Power_Of_Two(i) then\n                if is_Sum_Of_Powers_Of_Two(n - i) then\n                    return true\n                end\n            end\n            i = i + 1\n        end\n        return false\n    end\n    return is_Sum_Of_Powers_Of_Two(n)\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then return false end\n        return n % 2 == 0 and is_Power_Of_Two(n / 2)\n    end\n    if n == 0 then return true end\n    if is_Power_Of_Two(n) then return true end\n    for i = 1, n - 1 do\n        if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n            return true\n        end\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      sum = sum + 2^i\n    end\n    n = math.floor(n / 2)\n    i = i + 1\n  end\n  return sum\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  local function is_Sum_Of_Powers_Of_Two_Helper(n, i)\n    if n == 0 then\n      return true\n    elseif n < 0 or i < 0 then\n      return false\n    else\n      return is_Sum_Of_Powers_Of_Two_Helper(n - 2 ^ i, i) or is_Sum_Of_Powers_Of_Two_Helper(n, i - 1)\n    end\n  end\n  if is_Power_Of_Two(n) then\n    return true\n  else\n    return is_Sum_Of_Powers_Of_Two_Helper(n, math.log(n, 2))\n  end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = n - 1, 1, -1 do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  if n == 0 then\n    return true\n  elseif is_Power_Of_Two(n) then\n    return true\n  else\n    local function is_Sum_Of_Powers_Of_Two(n, i)\n      if i == 0 then\n        return false\n      elseif is_Sum_Of_Powers_Of_Two(n - 2^i, i) then\n        return true\n      else\n        return is_Sum_Of_Powers_Of_Two(n, i - 1)\n      end\n    end\n    return is_Sum_Of_Powers_Of_Two(n, math.floor(math.log(n, 2)))\n  end\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2 ^ i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2 ^ i\n        i = i + 1\n    end\n    return sum == n\nend",
    "  local sum = 0\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      sum = sum + 2^i\n    end\n    i = i + 1\n    n = math.floor(n / 2)\n  end\n  return sum\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tlocal function is_Even(n)\n\t\t\treturn n % 2 == 0\n\t\tend\n\t\tlocal function is_Odd(n)\n\t\t\treturn n % 2 == 1\n\t\tend\n\t\tlocal function is_One(n)\n\t\t\treturn n == 1\n\t\tend\n\t\tlocal function is_Zero(n)\n\t\t\treturn n == 0\n\t\tend\n\t\tlocal function is_Power_Of_Two_Rec(n)\n\t\t\tif is_Zero(n) then\n\t\t\t\treturn true\n\t\t\telseif is_One(n) then\n\t\t\t\treturn true\n\t\t\telseif is_Even(n) then\n\t\t\t\treturn is_Power_Of_Two_Rec(n / 2)\n\t\t\telseif is_Odd(n) then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn is_Power_Of_Two_Rec(n)\n\tend\n\tlocal function is_Sum_Of_Powers_Of_Two_Rec(n)\n\t\tif is_Power_Of_Two(n) then\n\t\t\treturn true\n\t\telseif is_Zero(n) then\n\t\t\treturn true\n\t\telse\n\t\t\tlocal function is_Sum_Of_Powers_Of_Two_Rec_Iter(n, i)\n\t\t\t\tif is_Zero(n) then\n\t\t\t\t\treturn true\n\t\t\t\telseif is_Power_Of_Two(n) then\n\t\t\t\t\treturn true\n\t\t\t\telseif is_Power_Of_Two(i) then\n\t\t\t\t\treturn is_Sum_Of_Powers_Of_Two_Rec_Iter(n - i, i + 1)\n\t\t\t\telse\n\t\t\t\t\treturn is_Sum_Of_Powers_Of_Two_Rec_Iter(n, i + 1)\n\t\t\t\tend\n\t\t\tend\n\t\t\treturn is_Sum_Of_Powers_Of_Two_Rec_Iter(n, 1)\n\t",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tlocal function is_Even(n)\n\t\t\treturn n % 2 == 0\n\t\tend\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif is_Even(n) then\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend",
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2 ^ i\n\t\tend\n\t\tn = math.floor(n / 2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then\n            return false\n        end\n        while n % 2 == 0 do\n            n = n / 2\n        end\n        return n == 1\n    end",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  local function is_Sum_Of_Powers_Of_Two(n, i)\n    if n == 0 then\n      return true\n    elseif n < 0 or i < 0 then\n      return false\n    else\n      return is_Sum_Of_Powers_Of_Two(n - 2^i, i - 1) or is_Sum_Of_Powers_Of_Two(n, i - 1)\n    end\n  end\n  local function get_Max_Power_Of_Two(n)\n    local function get_Max_Power_Of_Two(n, i)\n      if n < 2^i then\n        return i - 1\n      else\n        return get_Max_Power_Of_Two(n, i + 1)\n      end\n    end\n    return get_Max_Power_Of_Two(n, 0)\n  end\n  return is_Sum_Of_Powers_Of_Two(n, get_Max_Power_Of_Two(n))\nend",
    "  local sum = 0\n  local i = 1\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  return sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        local function is_Odd(n)\n            return n % 2 ~= 0\n        end\n        if n == 1 then\n            return true\n        elseif n < 1 then\n            return false\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        elseif is_Odd(n) then\n            return false\n        end\n    end\n    local function is_Sum_Of_Powers_Of_Two(n)\n        if n == 0 then\n            return true\n        elseif n < 0 then\n            return false\n        elseif is_Power_Of_Two(n) then\n            return true\n        else\n            return is_Sum_Of_Powers_Of_Two(n - 1) or is_Sum_Of_Powers_Of_Two(n - 2) or is_Sum_Of_Powers_Of_Two(n - 3) or is_Sum_Of_Powers_Of_Two(n - 4) or is_Sum_Of_Powers_Of_Two(n - 5) or is_Sum_Of_Powers_Of_Two(n - 6) or is_Sum_Of_Powers_Of_Two(n - 7) or is_Sum_Of_Powers_Of_Two(n - 8) or is_Sum_Of_Powers_Of_Two(n - 9) or is_Sum_Of_Powers_Of_Two(n - 10) or is_Sum_Of_Powers_Of_Two(n - 11) or is_Sum_Of_Powers_Of_Two(n - 12) or is_Sum_Of_Powers_Of_Two(n - 13) or is_Sum_Of_Powers_Of_Two(n - 14) or is_Sum_Of_Powers_Of_Two(n - 15) or is_Sum_Of_Powers_Of_Two(n - 16) or is_Sum_Of_Powers_Of_Two(n - 17) or is_Sum_Of_Powers_Of",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        if n == 0 then\n            return false\n        elseif n == 1 then\n            return true\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end\n    if n == 0 then\n        return true\n    elseif is_Power_Of_Two(n) then\n        return true\n    else\n        for i = n - 1, 0, -1 do\n            if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n                return true\n            end\n        end\n        return false\n    end\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then return true end\n    if n % 2 == 1 then return false end\n    return is_Power_Of_Two(n/2)\n  end\n  if n == 0 then return true end\n  if n < 0 then return false end\n  if is_Power_Of_Two(n) then return true end\n  for i = 1, n do\n    if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n      return true\n    end\n  end\n  return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then return false end\n        while n % 2 == 0 do\n            n = n / 2\n        end\n        return n == 1\n    end",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2 ^ i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "  local sum = 0\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      sum = sum + 2 ^ i\n    end\n    i = i + 1\n    n = math.floor(n / 2)\n  end\n  return sum\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "  local sum = 0\n  local i = 0\n  while n > sum do\n    i = i + 1\n    sum = sum + 2^i\n  end\n  return n == sum\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "  local sum = 0\n  local i = 1\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    if sum == n then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  return sum == n\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "\tlocal function is_Power_Of_Two(n)\n\t\tlocal function is_Even(n)\n\t\t\treturn n % 2 == 0\n\t\tend\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif n < 1 then\n\t\t\treturn false\n\t\telse\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\tend\n\tend\n\tif n == 0 then\n\t\treturn true\n\telseif n < 0 then\n\t\treturn false\n\telse\n\t\treturn is_Sum_Of_Powers_Of_Two(n - 1) or is_Power_Of_Two(n)\n\tend\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then\n      return true\n    elseif n % 2 == 0 then\n      return is_Power_Of_Two(n/2)\n    else\n      return false\n    end\n  end",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then return true end\n    if n % 2 == 1 then return false end\n    return is_Power_Of_Two(n / 2)\n  end\n  if n == 0 then return true end\n  if is_Power_Of_Two(n) then return true end\n  for i = 1, n - 1 do\n    if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then return true end\n  end\n  return false\nend",
    "    local sum = 0\n    local i = 0\n    while (sum < n) do\n        sum = sum + math.pow(2, i)\n        i = i + 1\n    end\n    if (sum == n) then\n        return true\n    else\n        return false\n    end\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  return sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n/2)\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n/2)\n        else\n            return false\n        end\n    end",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\tif sum == n then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 0 then\n      return false\n    elseif n == 1 then\n      return true\n    else\n      return is_Power_Of_Two(n / 2)\n    end\n  end",
    "    local function is_Power_Of_Two(n)\n        local function is_Even(n)\n            return n % 2 == 0\n        end\n        local function is_Odd(n)\n            return n % 2 ~= 0\n        end\n        if n == 1 then\n            return true\n        elseif n == 0 then\n            return false\n        elseif is_Even(n) then\n            return is_Power_Of_Two(n / 2)\n        elseif is_Odd(n) then\n            return false\n        end\n    end\n    local function is_Sum_Of_Powers_Of_Two(n)\n        if n == 0 then\n            return true\n        elseif n < 0 then\n            return false\n        elseif is_Power_Of_Two(n) then\n            return true\n        else\n            return is_Sum_Of_Powers_Of_Two(n - 2^(math.floor(math.log(n, 2))))\n        end\n    end\n    return is_Sum_Of_Powers_Of_Two(n)\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + math.pow(2, i)\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum == n\nend",
    "  local function is_Power_Of_Two(n)\n    local function is_Even(n)\n      return n % 2 == 0\n    end\n    if n == 1 then\n      return true\n    elseif n == 0 then\n      return false\n    elseif is_Even(n) then\n      return is_Power_Of_Two(n / 2)\n    else\n      return false\n    end\n  end\n  if n == 0 then\n    return true\n  elseif is_Power_Of_Two(n) then\n    return true\n  else\n    for i = n - 1, 1, -1 do\n      if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n        return true\n      end\n    end\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + math.pow(2, i)\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif n % 2 == 0 then\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\tif n == 0 then\n\t\treturn true\n\telseif is_Power_Of_Two(n) then\n\t\treturn true\n\telse\n\t\tfor i = n - 1, 1, -1 do\n\t\t\tif is_Power_Of_Two(i) then\n\t\t\t\treturn is_Sum_Of_Powers_Of_Two(n - i)\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\tn = math.floor(n/2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "    local sum = 0\n    local i = 1\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\tn = math.floor(n / 2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\ti = i + 1\n\tend\n\treturn sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "  local function is_Power_Of_Two(n)\n    return n > 0 and (n & (n - 1)) == 0\n  end\n  if n == 0 then return false end\n  local sum = 0\n  for i = 0, math.floor(math.log(n, 2)) do\n    local pow = 2 ^ i\n    if is_Power_Of_Two(n - sum) then\n      return true\n    end\n    if sum + pow > n then\n      break\n    end\n    sum = sum + pow\n  end\n  return false\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then\n      return true\n    elseif n % 2 == 1 then\n      return false\n    else\n      return is_Power_Of_Two(n / 2)\n    end\n  end",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then\n            return false\n        elseif n == 1 then\n            return true\n        else\n            return is_Power_Of_Two(n / 2)\n        end\n    end",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 0 then\n            return false\n        end\n        while n % 2 == 0 do\n            n = n / 2\n        end\n        return n == 1\n    end\n    if n == 0 then\n        return true\n    end\n    for i = 1, n do\n        if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then\n            return true\n        end\n    end\n    return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "  local sum = 0\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      sum = sum + 2^i\n    end\n    n = math.floor(n / 2)\n    i = i + 1\n  end\n  return sum\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local function is_Power_Of_Two(n)\n        if n == 1 then\n            return true\n        elseif n % 2 == 0 then\n            return is_Power_Of_Two(n / 2)\n        else\n            return false\n        end\n    end",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then return true end\n    if n % 2 == 1 then return false end\n    return is_Power_Of_Two(n / 2)\n  end\n  if n == 0 then return true end\n  if is_Power_Of_Two(n) then return true end\n  for i = 1, n do\n    if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then return true end\n  end\n  return false\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2^i\n        end\n        n = math.floor(n / 2)\n        i = i + 1\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "    local function is_Power_Of_Two(n)\n        local i = 0\n        while n > 0 do\n            i = i + 1\n            if n % 2 == 1 then\n                if n == 1 then\n                    return true\n                else\n                    return false\n                end\n            end\n            n = math.floor(n / 2)\n        end\n        return false\n    end",
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    repeat\n        sum = sum + 2^i\n        i = i + 1\n    until sum > n\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "  local function is_Power_Of_Two(n)\n    if n == 1 then return true end\n    if n % 2 == 1 then return false end\n    return is_Power_Of_Two(n / 2)\n  end\n  if n == 0 then return true end\n  if is_Power_Of_Two(n) then return true end\n  for i = 1, n - 1 do\n    if is_Power_Of_Two(i) and is_Sum_Of_Powers_Of_Two(n - i) then return true end\n  end\n  return false\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    return sum == n\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend",
    "\tlocal sum = 0\n\tlocal i = 0\n\twhile sum < n do\n\t\tsum = sum + 2^i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
    "\tlocal sum = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tsum = sum + 2^i\n\t\tend\n\t\tn = math.floor(n/2)\n\t\ti = i + 1\n\tend\n\treturn sum\nend",
    "  local sum = 0\n  local i = 0\n  while sum < n do\n    sum = sum + 2^i\n    i = i + 1\n  end\n  if sum == n then\n    return true\n  else\n    return false\n  end\nend",
    "    local sum = 0\n    local i = 0\n    while sum < n do\n        sum = sum + 2^i\n        if sum == n then\n            return true\n        end\n        i = i + 1\n    end\n    return false\nend",
    "\tlocal function is_Power_Of_Two(n)\n\t\tif n == 1 then\n\t\t\treturn true\n\t\telseif n % 2 == 0 then\n\t\t\treturn is_Power_Of_Two(n / 2)\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend",
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tif math.pow(2, i) <= n then\n\t\t\tsum = sum + math.pow(2, i)\n\t\t\tif sum == n then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "    local sum = 0\n    local i = 0\n    while n > 0 do\n        if n % 2 == 1 then\n            sum = sum + 2 ^ i\n        end\n        i = i + 1\n        n = math.floor(n / 2)\n    end\n    return sum\nend",
    "    local sum = 0\n    local i = 1\n    while sum < n do\n        sum = sum + 2^i\n        i = i + 1\n    end\n    if sum == n then\n        return true\n    else\n        return false\n    end\nend"
  ]
}
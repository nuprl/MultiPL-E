{
  "name": "mbpp_641_is_nonagonal",
  "language": "lua",
  "prompt": "-- Write a function to find the nth nonagonal number.\nlocal function is_nonagonal(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_nonagonal\n    lu.assertEquals(candidate(10), 325)\n    lu.assertEquals(candidate(15), 750)\n    lu.assertEquals(candidate(18), 1089)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal n = math.sqrt(8*n + 1)\n\treturn n == math.floor(n)\nend",
    "  local n2 = math.floor((math.sqrt(8*n+1)-1)/2)\n  return n2*(n2+1)/2 == n\nend",
    "  local n1 = (math.sqrt(1 + 8 * n) - 1) / 2\n  return n1 == math.floor(n1)\nend",
    "  local nth = math.sqrt(1 + 8 * n)\n  return nth == math.floor(nth)\nend",
    "  local n = math.sqrt(8*n + 1)\n  return n == math.floor(n)\nend",
    "  local nth = (math.sqrt(1 + 8 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local n = math.sqrt(1 + 8 * n)\n    return n == math.floor(n)\nend",
    "  local nth = math.sqrt(1 + 8 * n)\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 8 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 8 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 8 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = math.floor((math.sqrt(1 + 8 * n) - 1) / 2)\n  return nth * (nth + 1) / 2 == n\nend",
    "  local nth = math.floor((math.sqrt(8 * n + 1) - 1) / 2)\n  return nth * (nth + 1) / 2 == n\nend",
    "  local n2 = 2*n\n  local sqrt_n2 = math.sqrt(n2)\n  local floor_sqrt_n2 = math.floor(sqrt_n2)\n  return sqrt_n2 == floor_sqrt_n2\nend",
    "  local nth = math.floor((math.sqrt(1 + 8 * n) - 1) / 2)\n  return nth * (nth + 1) / 2 == n\nend",
    "  local nth = math.floor((math.sqrt(1 + 8 * n) - 1) / 2)\n  return nth * (nth + 1) / 2 == n\nend",
    "  local x = (math.sqrt(1 + 8 * n) - 1) / 2\n  return x == math.floor(x)\nend",
    "  local nth = math.floor((math.sqrt(1 + 8 * n) - 1) / 2)\n  return nth * (nth + 1) / 2 == n\nend",
    "  local nth = (math.sqrt(1 + 8 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local n2 = 2*n\n  local s = math.sqrt(n2)\n  return s == math.floor(s)\nend"
  ]
}
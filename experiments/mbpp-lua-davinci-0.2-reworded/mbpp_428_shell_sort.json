{
  "name": "mbpp_428_shell_sort",
  "language": "lua",
  "prompt": "-- Write a function to sort the given table by using shell sort.\nlocal function shell_sort(my_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = shell_sort\n    lu.assertEquals(candidate({12, 23, 4, 5, 3, 2, 12, 81, 56, 95}), {2, 3, 4, 5, 12, 12, 23, 56, 81, 95})\n    lu.assertEquals(candidate({24, 22, 39, 34, 87, 73, 68}), {22, 24, 34, 39, 68, 73, 87})\n    lu.assertEquals(candidate({32, 30, 16, 96, 82, 83, 74}), {16, 30, 32, 74, 82, 83, 96})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local h = 1\n    while h < n do\n        h = 3 * h + 1\n    end\n    while h >= 1 do\n        for i = h + 1, n do\n            local key = my_list[i]\n            local j = i - h\n            while j >= 1 and my_list[j] > key do\n                my_list[j + h] = my_list[j]\n                j = j - h\n            end\n            my_list[j + h] = key\n        end\n        h = math.floor(h / 3)\n    end\n    return my_list\nend",
    "  local interval = math.floor(#my_list / 2)\n  while interval > 0 do\n    for i = interval, #my_list do\n      local value = my_list[i]\n      local j = i\n      while j >= interval and my_list[j - interval] > value do\n        my_list[j] = my_list[j - interval]\n        j = j - interval\n      end\n      my_list[j] = value\n    end\n    interval = math.floor(interval / 2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j-gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j-gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal gap = math.floor(#my_list/2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j-gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j-gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local h = 1\n    while h < #my_list do\n        h = 3 * h + 1\n    end\n    while h > 0 do\n        for i = h, #my_list do\n            local j = i\n            local tmp = my_list[i]\n            while j >= h and tmp < my_list[j - h] do\n                my_list[j] = my_list[j - h]\n                j = j - h\n            end\n            my_list[j] = tmp\n        end\n        h = math.floor(h / 3)\n    end\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len/2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local gaps = {701, 301, 132, 57, 23, 10, 4, 1}\n  local n = #my_list\n  for _, gap in ipairs(gaps) do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    -- get the length of the list\n    local len = #my_list\n    -- set the gap\n    local gap = math.floor(len/2)\n    -- loop until the gap is 0\n    while gap > 0 do\n        -- loop through the list\n        for i = gap, len do\n            -- set the temp value\n            local temp = my_list[i]\n            -- set the j value\n            local j = i\n            -- loop until the j value is less than the gap\n            while j >= gap and my_list[j - gap] > temp do\n                -- set the value\n                my_list[j] = my_list[j - gap]\n                -- decrement the j value\n                j = j - gap\n            end\n            -- set the value\n            my_list[j] = temp\n        end\n        -- set the gap\n        gap = math.floor(gap/2)\n    end\n    -- return the list\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal gap = math.floor(#my_list / 2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap / 2)\n\tend\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j-gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j-gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)",
    "    local length = #my_list\n    local gap = math.floor(length / 2)\n    while gap > 0 do\n        for i = gap, length do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal gap = math.floor(#my_list / 2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap / 2)\n\tend\n\treturn my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j-gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j-gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal gap = math.floor(#my_list / 2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap / 2)\n\tend\n\treturn my_list\nend",
    "  local n = #my_list\n  local h = 1\n  while h < n do\n    h = 3 * h + 1\n  end\n  while h > 0 do\n    for i = h, n do\n      local temp = my_list[i]\n      local j = i\n      while j > h and my_list[j - h] > temp do\n        my_list[j] = my_list[j - h]\n        j = j - h\n      end\n      my_list[j] = temp\n    end\n    h = math.floor(h / 3)\n  end\nend",
    "  local len = #my_list\n  local gap = math.floor(len/2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal interval = math.floor(#my_list / 2)\n\twhile interval > 0 do\n\t\tfor i = interval, #my_list do\n\t\t\tlocal value = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= interval and my_list[j - interval] > value do\n\t\t\t\tmy_list[j] = my_list[j - interval]\n\t\t\t\tj = j - interval\n\t\t\tend\n\t\t\tmy_list[j] = value\n\t\tend\n\t\tinterval = math.floor(interval / 2)\n\tend\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local interval = math.floor(#my_list / 2)\n    while interval > 0 do\n        for i = interval, #my_list do\n            local value = my_list[i]\n            local j = i\n            while j >= interval and my_list[j - interval] > value do\n                my_list[j] = my_list[j - interval]\n                j = j - interval\n            end\n            my_list[j] = value\n        end\n        interval = math.floor(interval / 2)\n    end\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "\tlocal gap = math.floor(#my_list/2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j-gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j-gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j > gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal len = #my_list\n\tlocal gap = math.floor(len / 2)\n\twhile gap > 0 do\n\t\tfor i = gap, len do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j > gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap / 2)\n\tend\n\treturn my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j-gap] > temp do\n        my_list[j] = my_list[j-gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local interval = math.floor(#my_list / 2)\n    while interval > 0 do\n        for i = interval, #my_list do\n            local value = my_list[i]\n            local j = i\n            while j >= interval and my_list[j - interval] > value do\n                my_list[j] = my_list[j - interval]\n                j = j - interval\n            end\n            my_list[j] = value\n        end\n        if interval == 2 then\n            interval = 1\n        else\n            interval = math.floor(interval * 5 / 11)\n        end\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal gap = math.floor(#my_list/2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local step = math.floor(#my_list / 2)\n    while step > 0 do\n        for i = step, #my_list do\n            local j = i\n            while j >= step and my_list[j - step] > my_list[j] do\n                my_list[j], my_list[j - step] = my_list[j - step], my_list[j]\n                j = j - step\n            end\n        end\n        step = math.floor(step / 2)\n    end\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "\tlocal len = #my_list\n\tlocal gap = math.floor(len/2)\n\twhile gap > 0 do\n\t\tfor i = gap, len do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j-gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j-gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len/2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "\tlocal N = #my_list\n\tlocal h = 1\n\twhile h < N/3 do\n\t\th = 3*h + 1\n\tend\n\twhile h >= 1 do\n\t\tfor i = h+1, N do\n\t\t\tfor j = i, h+1, -h do\n\t\t\t\tif my_list[j] < my_list[j-h] then\n\t\t\t\t\tmy_list[j], my_list[j-h] = my_list[j-h], my_list[j]\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\th = h/3\n\tend\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len/2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len/2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j > gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len/2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len/2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal gap = math.floor(#my_list / 2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap / 2)\n\tend\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local h = 1\n    while h < n do\n        h = 3 * h + 1\n    end\n    while h > 0 do\n        for i = h, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= h and my_list[j - h] > temp do\n                my_list[j] = my_list[j - h]\n                j = j - h\n            end\n            my_list[j] = temp\n        end\n        h = math.floor(h / 3)\n    end\n    return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n / 2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap / 2)\n\tend\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n/2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "    local gap = math.floor(#my_list / 2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n/2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap/2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        if gap == 2 then\n            gap = 1\n        else\n            gap = math.floor(gap * 5 / 11)\n        end\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal gap = math.floor(#my_list/2)\n\twhile gap > 0 do\n\t\tfor i = gap, #my_list do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local n = #my_list\n    local gap = math.floor(n / 2)\n    while gap > 0 do\n        for i = gap, n do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "    local len = #my_list\n    local gap = math.floor(len / 2)\n    while gap > 0 do\n        for i = gap, len do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j - gap] > temp do\n                my_list[j] = my_list[j - gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap / 2)\n    end\n    return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "  local gap = math.floor(#my_list / 2)\n  while gap > 0 do\n    for i = gap, #my_list do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "\tlocal n = #my_list\n\tlocal gap = math.floor(n/2)\n\twhile gap > 0 do\n\t\tfor i = gap, n do\n\t\t\tlocal temp = my_list[i]\n\t\t\tlocal j = i\n\t\t\twhile j >= gap and my_list[j - gap] > temp do\n\t\t\t\tmy_list[j] = my_list[j - gap]\n\t\t\t\tj = j - gap\n\t\t\tend\n\t\t\tmy_list[j] = temp\n\t\tend\n\t\tgap = math.floor(gap/2)\n\tend\n\treturn my_list\nend",
    "  local n = #my_list\n  local gap = math.floor(n / 2)\n  while gap > 0 do\n    for i = gap, n do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend",
    "    local gap = math.floor(#my_list/2)\n    while gap > 0 do\n        for i = gap, #my_list do\n            local temp = my_list[i]\n            local j = i\n            while j >= gap and my_list[j-gap] > temp do\n                my_list[j] = my_list[j-gap]\n                j = j - gap\n            end\n            my_list[j] = temp\n        end\n        gap = math.floor(gap/2)\n    end\n    return my_list\nend",
    "  local len = #my_list\n  local gap = math.floor(len / 2)\n  while gap > 0 do\n    for i = gap, len do\n      local temp = my_list[i]\n      local j = i\n      while j >= gap and my_list[j - gap] > temp do\n        my_list[j] = my_list[j - gap]\n        j = j - gap\n      end\n      my_list[j] = temp\n    end\n    gap = math.floor(gap / 2)\n  end\n  return my_list\nend"
  ]
}
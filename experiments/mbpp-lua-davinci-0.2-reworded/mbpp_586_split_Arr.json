{
  "name": "mbpp_586_split_Arr",
  "language": "lua",
  "prompt": "-- Write a luathon function to split a table at the nth eelment and add the first part to the end.\nlocal function split_Arr(l, n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_586_split_Arr.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = split_Arr\n    lu.assertEquals(candidate({12, 10, 5, 6, 52, 36}, 2), {5, 6, 52, 36, 12, 10})\n    lu.assertEquals(candidate({1, 2, 3, 4}, 1), {2, 3, 4, 1})\n    lu.assertEquals(candidate({0, 1, 2, 3, 4, 5, 6, 7}, 3), {3, 4, 5, 6, 7, 0, 1, 2})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal ret = {}\n\tfor i = 1, n do\n\t\tret[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\ttable.insert(ret, l[i])\n\tend\n\treturn ret\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\tl[i - n] = l[i]\n\tend\n\tfor i = 1, n do\n\t\tl[#l - n + i] = t[i]\n\tend\n\treturn l\nend",
    "  local a = {}\n  for i = 1, n do\n    a[i] = l[i]\n  end\n  for i = n + 1, #l do\n    l[i - n] = l[i]\n  end\n  for i = 1, #a do\n    l[#l + 1] = a[i]\n  end\n  return l\nend",
    "  local a, b = {}, {}\n  for i = 1, n do\n    a[i] = l[i]\n  end\n  for i = n + 1, #l do\n    b[i - n] = l[i]\n  end\n  for i = 1, #a do\n    b[#b + 1] = a[i]\n  end\n  return b\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = 1, #l - n do\n\t\tl[i] = l[i + n]\n\tend\n\tfor i = 1, #t do\n\t\tl[#l + 1] = t[i]\n\tend\n\treturn l\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\ttable.insert(l, l[i])\n\tend\n\treturn t\nend",
    "  local t = {}\n  for i = 1, n do\n    t[i] = l[i]\n  end\n  for i = n + 1, #l do\n    l[i - n] = l[i]\n  end\n  for i = 1, n do\n    l[#l + 1] = t[i]\n  end\n  return l\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\tl[i - n] = l[i]\n\tend\n\tfor i = 1, #t do\n\t\tl[#l + 1] = t[i]\n\tend\n\treturn l\nend",
    "  local t = {}\n  for i = 1, n do\n    t[i] = l[i]\n  end\n  for i = n + 1, #l do\n    l[i - n] = l[i]\n  end\n  for i = 1, n do\n    l[#l - n + i] = t[i]\n  end\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\tl[i - n] = l[i]\n\tend\n\tfor i = 1, n do\n\t\tl[#l - n + i] = t[i]\n\tend\n\treturn l\nend",
    "\tlocal t = {}\n\tfor i = n + 1, #l do\n\t\ttable.insert(t, l[i])\n\tend\n\tfor i = 1, n do\n\t\ttable.insert(t, l[i])\n\tend\n\treturn t\nend",
    "    local a = {}\n    local b = {}\n    for i = 1, n do\n        a[i] = l[i]\n    end\n    for i = n + 1, #l do\n        b[i - n] = l[i]\n    end\n    for i = 1, #a do\n        b[#b + 1] = a[i]\n    end\n    return b\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\tl[i - n] = l[i]\n\tend\n\tfor i = 1, n do\n\t\tl[#l + 1] = t[i]\n\tend\n\treturn l\nend",
    "    local a, b = {}, {}\n    for i = 1, n do\n        a[i] = l[i]\n    end\n    for i = n + 1, #l do\n        b[i - n] = l[i]\n    end\n    for i = 1, #a do\n        b[#b + 1] = a[i]\n    end\n    return b\nend",
    "  local t = {}\n  for i = 1, n do\n    t[i] = l[i]\n  end\n  for i = n + 1, #l do\n    l[i - n] = l[i]\n  end\n  for i = 1, n do\n    l[#l - n + i] = t[i]\n  end\n  return l\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\tl[i - n] = l[i]\n\tend\n\tfor i = 1, n do\n\t\tl[#l - n + i] = t[i]\n\tend\n\treturn l\nend",
    "    local a = {}\n    for i=1,n do\n        a[i] = l[i]\n    end\n    for i=n+1,#l do\n        l[i-n] = l[i]\n    end\n    for i=1,n do\n        l[#l+1] = a[i]\n    end\n    return l\nend",
    "  local t = {}\n  for i = 1, n do\n    t[i] = l[i]\n  end\n  for i = n + 1, #l do\n    l[i - n] = l[i]\n  end\n  for i = 1, n do\n    l[#l - n + i] = t[i]\n  end\n  return l\nend",
    "\tlocal t = {}\n\tfor i = 1, n do\n\t\tt[i] = l[i]\n\tend\n\tfor i = n + 1, #l do\n\t\tl[i - n] = l[i]\n\tend\n\tfor i = 1, n do\n\t\tl[#l - n + i] = t[i]\n\tend\n\treturn l\nend",
    "    local a = {}\n    for i = 1, n do\n        a[i] = l[i]\n    end\n    for i = 1, #l - n do\n        l[i] = l[i + n]\n    end\n    for i = 1, #a do\n        l[#l + 1] = a[i]\n    end\n    return l\nend"
  ]
}
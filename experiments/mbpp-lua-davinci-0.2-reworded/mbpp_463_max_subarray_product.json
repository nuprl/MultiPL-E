{
  "name": "mbpp_463_max_subarray_product",
  "language": "lua",
  "prompt": "-- Write a function to find the maximum product subtable of the given table.\nlocal function max_subarray_product(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_subarray_product\n    lu.assertEquals(candidate({1, -2, -3, 0, 7, -8, -2}), 112)\n    lu.assertEquals(candidate({6, -3, -10, 0, 2}), 180)\n    lu.assertEquals(candidate({-2, -40, 0, -2, -3}), 80)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max_product = arr[1]\n  local min_product = arr[1]\n  local max_so_far = arr[1]",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = tmp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = tmp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local size = #arr\n    for i = 1, size do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "\tlocal max_ending_here = 1\n\tlocal min_ending_here = 1\n\tlocal max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local size = #arr\n    for i = 1, size do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = tmp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local size = #arr\n    for i = 1, size do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local size = #arr\n  for i = 1, size do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local size = #arr\n    for i = 1, size do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = tmp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "\tlocal max_ending_here = 1\n\tlocal min_ending_here = 1\n\tlocal max_so_far = 1\n\tlocal n = #arr\n\tfor i = 1, n do\n\t\tif arr[i] > 0 then\n\t\t\tmax_ending_here = max_ending_here * arr[i]\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1)\n\t\telseif arr[i] == 0 then\n\t\t\tmax_ending_here = 1\n\t\t\tmin_ending_here = 1\n\t\telse\n\t\t\tlocal temp = max_ending_here\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1)\n\t\t\tmin_ending_here = temp * arr[i]\n\t\tend\n\t\tif max_so_far < max_ending_here then\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_product = 1\n  local min_product = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_product = max_product * arr[i]\n      min_product = math.min(min_product * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_product = 1\n      min_product = 1\n    else\n      local temp = max_product\n      max_product = math.max(min_product * arr[i], 1)\n      min_product = temp * arr[i]\n    end\n    if max_so_far < max_product then\n      max_so_far = max_product\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local flag = 0",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_product = arr[1]\n    local min_product = arr[1]\n    local max_so_far = arr[1]\n    for i = 2, #arr do\n        local curr = arr[i]\n        local temp_max = max_product\n        max_product = math.max(curr, max_product * curr, min_product * curr)\n        min_product = math.min(curr, temp_max * curr, min_product * curr)\n        max_so_far = math.max(max_so_far, max_product)\n    end\n    return max_so_far\nend",
    "  local max_product = 1\n  local min_product = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local flag = 0\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n      flag = 1\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  if flag == 0 and max_so_far == 1 then\n    return 0\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = temp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = tmp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = temp * v\n        end",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i=1,#arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = tmp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local size = #arr\n  for i = 1, size do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_so_far = 1\n  local min_so_far = 1\n  local max_ending_here = 1\n  local max_product = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_so_far = math.min(min_so_far * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_so_far = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_so_far * arr[i], 1)\n      min_so_far = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min_ending_here * v\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_product = 1\n  local min_product = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_product = max_product * arr[i]\n      min_product = math.min(min_product * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_product = 1\n      min_product = 1\n    else\n      local temp = max_product\n      max_product = math.max(min_product * arr[i], 1)\n      min_product = temp * arr[i]\n    end\n    if max_so_far < max_product then\n      max_so_far = max_product\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for _, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = math.min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = math.max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local size = #arr\n    for i = 1, size do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    local size = #arr\n    for i = 1, size do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i, v in ipairs(arr) do\n        if v > 0 then\n            max_ending_here = max_ending_here * v\n            min_ending_here = min(min_ending_here * v, 1)\n        elseif v == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local tmp = max_ending_here\n            max_ending_here = max(min_ending_here * v, 1)\n            min_ending_here = tmp * v\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = temp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = math.min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = math.max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i=1,#arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = tmp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "\tlocal max_ending_here = 1\n\tlocal min_ending_here = 1\n\tlocal max_so_far = 1\n\tfor i = 1, #arr do\n\t\tif arr[i] > 0 then\n\t\t\tmax_ending_here = max_ending_here * arr[i]\n\t\t\tmin_ending_here = min(min_ending_here * arr[i], 1)\n\t\telseif arr[i] == 0 then\n\t\t\tmax_ending_here = 1\n\t\t\tmin_ending_here = 1\n\t\telse\n\t\t\tlocal tmp = max_ending_here\n\t\t\tmax_ending_here = max(min_ending_here * arr[i], 1)\n\t\t\tmin_ending_here = tmp * arr[i]\n\t\tend\n\t\tif max_so_far < max_ending_here then\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend",
    "  local max_ending_here = arr[1]\n  local min_ending_here = arr[1]\n  local max_so_far = arr[1]",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for i = 1, #arr do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "    local max_ending_here = 1\n    local min_ending_here = 1\n    local max_so_far = 1\n    for i = 1, #arr do\n        if arr[i] > 0 then\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        elseif arr[i] == 0 then\n            max_ending_here = 1\n            min_ending_here = 1\n        else\n            local temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        end\n        if max_so_far < max_ending_here then\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local n = #arr\n  for i = 1, n do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  local size = #arr\n  for i = 1, size do\n    if arr[i] > 0 then\n      max_ending_here = max_ending_here * arr[i]\n      min_ending_here = math.min(min_ending_here * arr[i], 1)\n    elseif arr[i] == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local temp = max_ending_here\n      max_ending_here = math.max(min_ending_here * arr[i], 1)\n      min_ending_here = temp * arr[i]\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend",
    "  local max_ending_here = 1\n  local min_ending_here = 1\n  local max_so_far = 1\n  for _, v in ipairs(arr) do\n    if v > 0 then\n      max_ending_here = max_ending_here * v\n      min_ending_here = math.min(min_ending_here * v, 1)\n    elseif v == 0 then\n      max_ending_here = 1\n      min_ending_here = 1\n    else\n      local tmp = max_ending_here\n      max_ending_here = math.max(min_ending_here * v, 1)\n      min_ending_here = tmp * v\n    end\n    if max_so_far < max_ending_here then\n      max_so_far = max_ending_here\n    end\n  end\n  return max_so_far\nend"
  ]
}
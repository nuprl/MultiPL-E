{
  "name": "mbpp_223_is_majority",
  "language": "lua",
  "prompt": "-- Write a function that takes in a sorted table, its length (n), and an element and returns whether the element is the majority element in the given sorted table. (The majority element is the element that occurs more than n/2 times.)\nlocal function is_majority(arr, n, x)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_majority\n    lu.assertEquals(candidate({1, 2, 3, 3, 3, 3, 10}, 7, 3), true)\n    lu.assertEquals(candidate({1, 1, 2, 4, 4, 4, 6, 6}, 8, 4), false)\n    lu.assertEquals(candidate({1, 1, 1, 2, 2}, 5, 1), true)\n    lu.assertEquals(candidate({1, 1, 2, 2}, 5, 1), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local count = 0\n    for i = 1, n do\n        if arr[i] == x then\n            count = count + 1\n        end\n    end\n    if count > n / 2 then\n        return true\n    else\n        return false\n    end\nend",
    "  local i = math.floor(n/2)\n  if arr[i] == x then\n    return true\n  end\n  return false\nend",
    "  local i = math.floor(n / 2)\n  if arr[i] == x then\n    return true\n  elseif arr[i] < x then\n    return is_majority(arr, i, x)\n  else\n    return is_majority(arr, n - i, x)\n  end\nend",
    "    local count = 0\n    for i = 1, n do\n        if arr[i] == x then\n            count = count + 1\n        end\n    end\n    return count > n / 2\nend",
    "  local i = math.floor(n / 2)\n  if arr[i] == x then\n    return true\n  elseif arr[i] > x then\n    return is_majority(arr, i, x)\n  else\n    return is_majority(arr, n - i, x)\n  end\nend",
    "  local i = math.floor(n / 2)\n  if arr[i] == x then\n    return true\n  elseif arr[i] < x then\n    return is_majority(arr, i, x)\n  else\n    return is_majority(arr, n - i, x)\n  end\nend",
    "    local count = 0\n    for i = 1, n do\n        if arr[i] == x then\n            count = count + 1\n        end\n    end\n    if count > n / 2 then\n        return true\n    else\n        return false\n    end\nend",
    "  local count = 0\n  for i = 1, n do\n    if arr[i] == x then\n      count = count + 1\n    end\n  end\n  if count > n / 2 then\n    return true\n  end\n  return false\nend",
    "  local i = math.floor(n / 2)\n  local j = i + 1\n  if arr[i] == x then\n    return true\n  elseif arr[j] == x then\n    return true\n  end\n  return false\nend",
    "  local i = math.floor(n / 2)\n  if arr[i] == x then\n    return true\n  elseif arr[i] > x then\n    return is_majority(arr, i, x)\n  else\n    return is_majority(arr, n - i, x)\n  end\nend",
    "    local count = 0\n    for i = 1, n do\n        if arr[i] == x then\n            count = count + 1\n        end\n    end\n    if count > n / 2 then\n        return true\n    else\n        return false\n    end\nend",
    "    local i = math.floor(n/2)\n    local j = i\n    while arr[i] ~= x and i > 0 do\n        i = i - 1\n    end\n    while arr[j] ~= x and j < n do\n        j = j + 1\n    end\n    return j - i + 1 > n/2\nend",
    "  local i = math.floor(n/2)\n  local j = i + 1\n  if arr[i] == x and arr[j] == x then\n    return true\n  end\n  return false\nend",
    "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif arr[i] == x then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count > n/2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif arr[i] == x then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tif count > n / 2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  local i = math.floor(n / 2)\n  if arr[i] == x then\n    return true\n  end\n  return false\nend",
    "    local count = 0\n    for i = 1, n do\n        if arr[i] == x then\n            count = count + 1\n        end\n    end\n    if count > n / 2 then\n        return true\n    end\n    return false\nend",
    "  local i = math.floor(n / 2)\n  if arr[i] == x then\n    return true\n  elseif arr[i] < x then\n    return is_majority(arr, i, x)\n  else\n    return is_majority(arr, n - i, x)\n  end\nend",
    "  local i = math.floor(n/2)\n  if arr[i] == x then\n    return true\n  else\n    return false\n  end\nend",
    "\tlocal i = math.floor(n/2)\n\tlocal j = i\n\twhile arr[i] ~= x do\n\t\ti = i + 1\n\t\tj = j - 1\n\t\tif i > n or j < 1 then\n\t\t\treturn false\n\t\tend\n\tend\n\tif i == n then\n\t\treturn true\n\tend\n\tif arr[i+1] == x then\n\t\treturn true\n\tend\n\tif j == 1 then\n\t\treturn true\n\tend\n\tif arr[j-1] == x then\n\t\treturn true\n\tend\n\treturn false\nend"
  ]
}
{
  "name": "mbpp_565_split",
  "language": "lua",
  "prompt": "-- Write a luathon function to split a string into characters.\nlocal function split(word)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_565_split.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = split\n    lu.assertEquals(candidate('python'), {'p', 'y', 't', 'h', 'o', 'n'})\n    lu.assertEquals(candidate('Name'), {'N', 'a', 'm', 'e'})\n    lu.assertEquals(candidate('program'), {'p', 'r', 'o', 'g', 'r', 'a', 'm'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local chars = {}\n  for char in word:gmatch(\".\") do\n    table.insert(chars, char)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "    local chars = {}\n    for i = 1, #word do\n        chars[i] = word:sub(i, i)\n    end\n    return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = string.sub(word, i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "    local chars = {}\n    for i = 1, #word do\n        chars[i] = word:sub(i, i)\n    end\n    return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "    local chars = {}\n    for i = 1, #word do\n        chars[i] = word:sub(i, i)\n    end\n    return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "    local chars = {}\n    for i = 1, #word do\n        chars[i] = word:sub(i, i)\n    end\n    return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend",
    "    local chars = {}\n    for i = 1, #word do\n        chars[i] = word:sub(i, i)\n    end\n    return chars\nend",
    "  local chars = {}\n  for i = 1, #word do\n    chars[i] = word:sub(i, i)\n  end\n  return chars\nend"
  ]
}
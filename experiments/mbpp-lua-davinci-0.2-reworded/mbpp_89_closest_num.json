{
  "name": "mbpp_89_closest_num",
  "language": "lua",
  "prompt": "-- Write a function to find the closest smaller number than n.\nlocal function closest_num(N)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = closest_num\n    lu.assertEquals(candidate(11), 10)\n    lu.assertEquals(candidate(7), 6)\n    lu.assertEquals(candidate(12), 11)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local n = N\n    local c = 0\n    while n > 0 do\n        n = n & (n - 1)\n        c = c + 1\n    end\n    return c\nend",
    "    local n = N\n    local i = 1\n    while n > 0 do\n        if n % 2 == 0 then\n            n = n / 2\n        else\n            n = n - 1\n        end\n        i = i + 1\n    end\n    return i\nend",
    "  local n = N\n  local i = 0\n  while n > 0 do\n    n = n >> 1\n    i = i + 1\n  end\n  return 2^(i-1)\nend",
    "\tlocal n = N\n\tlocal m = n\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif n % 2 == 1 then\n\t\t\tm = m - 2^(i-1)\n\t\tend\n\t\tn = math.floor(n/2)\n\t\ti = i + 1\n\tend\n\treturn m\nend",
    "    local n = math.floor(N)\n    local m = n % 2\n    if m == 0 then\n        return n - 1\n    else\n        return n + 1\n    end\nend",
    "\tlocal n = N\n\tlocal c = 0\n\twhile n > 0 do\n\t\tn = n >> 1\n\t\tc = c + 1\n\tend\n\treturn 2^(c-1)\nend",
    "  local n = N\n  local c = 0\n  while n > 0 do\n    n = n >> 1\n    c = c + 1\n  end\n  return 2^(c-1)\nend",
    "    local n = N\n    local m = n\n    local c = 0\n    while n > 0 do\n        local r = n % 2\n        if r == 1 then\n            c = c + 1\n        else\n            m = m + 1\n        end\n        n = math.floor(n / 2)\n    end\n    if c == 1 then\n        return m\n    else\n        return closest_num(m)\n    end\nend",
    "  local n = N\n  local c = 0\n  while n > 0 do\n    n = n >> 1\n    c = c + 1\n  end\n  return 2^(c-1)\nend",
    "    local n = N\n    local c = 0\n    while n > 0 do\n        n = n & (n - 1)\n        c = c + 1\n    end\n    return c\nend",
    "  local n = N\n  local m = 0\n  local i = 0\n  while n > 0 do\n    if n % 2 == 1 then\n      m = m + 2^i\n    end\n    n = math.floor(n / 2)\n    i = i + 1\n  end\n  return m\nend",
    "    local n = N\n    local c0, c1 = 0, 0\n    while n > 0 do\n        local r = n % 2\n        if r == 0 then\n            c0 = c0 + 1\n        else\n            c1 = c1 + 1\n        end\n        n = math.floor(n / 2)\n    end\n    if c0 > c1 then\n        return N - (2 ^ c1)\n    else\n        return N - (2 ^ (c0 - 1))\n    end\nend",
    "   local n = N\n   local c = 0\n   while n > 0 do\n      n = n >> 1\n      c = c + 1\n   end\n   return 2^(c-1)\nend",
    "  local n = N\n  local m = N\n  while n > 0 do\n    if n % 2 == 1 then\n      m = n\n    end\n    n = n // 2\n  end\n  return m\nend",
    "    local n = N\n    local c0, c1 = 0, 0\n    while n > 0 do\n        if n % 2 == 1 then\n            c1 = c1 + 1\n        else\n            c0 = c0 + 1\n        end\n        n = math.floor(n / 2)\n    end\n    if c1 == 1 then\n        return N - 1\n    end\n    n = N\n    local p = 1\n    while n % 2 == 0 do\n        n = math.floor(n / 2)\n        p = p * 2\n    end\n    return N - p\nend",
    "    local n = N\n    for i = 1, N do\n        if n % i == 0 then\n            return i\n        end\n    end\nend",
    "  local n = N\n  local m = N\n  while n > 0 do\n    if n % 2 == 1 then\n      break\n    end\n    n = n / 2\n  end\n  while m > 0 do\n    if m % 2 == 0 then\n      break\n    end\n    m = m / 2\n  end\n  return n, m\nend",
    "  local n = N\n  local c = 0\n  while n > 0 do\n    n = n >> 1\n    c = c + 1\n  end\n  return 2^(c-1)\nend",
    "    local n = N\n    local c = 0\n    while n > 0 do\n        n = n & (n - 1)\n        c = c + 1\n    end\n    return 2^(c - 1)\nend",
    "\tlocal n = N\n\tlocal i = 1\n\twhile n > 0 do\n\t\tn = n - i\n\t\ti = i + 1\n\tend\n\treturn n + i - 1\nend"
  ]
}
{
  "name": "mbpp_434_text_match_one",
  "language": "lua",
  "prompt": "-- Write a function that matches a string that has an a followed by one or more b's.\nlocal function text_match_one(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_434_text_match_one.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = text_match_one\n    lu.assertEquals(candidate('ac'), false)\n    lu.assertEquals(candidate('dc'), false)\n    lu.assertEquals(candidate('abba'), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local pattern = '^a+b+$'\n    return string.match(text, pattern)\nend",
    "    local pattern = '^a+b+$'\n    return string.match(text, pattern)\nend",
    "    local match = text:match(\"^a+b+$\")\n    if match then\n        print(\"Match: \" .. match)\n    else\n        print(\"No match\")\n    end\nend",
    "    local pattern = \"a+b+\"\n    return string.match(text, pattern)\nend",
    "    local pattern = \"ab+\"\n    return string.match(text, pattern)\nend",
    "    local match = string.match(text, \"a+b+\")\n    if match then\n        print(match)\n    end\nend",
    "    local match = text:match(\"^a+b+$\")\n    if match then\n        return match\n    end\n    return nil\nend",
    "    local pattern = \"a+b+\"\n    return string.match(text, pattern)\nend",
    "    local pattern = \"^a+b+$\"\n    return string.match(text, pattern)\nend",
    "  local pattern = \"a+b+\"\n  local result = string.match(text, pattern)\n  if result then\n    print(result)\n  else\n    print(\"no match\")\n  end\nend",
    "    local pattern = \"a+b+\"\n    local match = string.match(text, pattern)\n    if match then\n        print(\"match: \" .. match)\n    else\n        print(\"no match\")\n    end\nend",
    "    return string.match(text, \"a+b\")\nend",
    "    local pattern = \"a+b+\"\n    return string.match(text, pattern)\nend",
    "    return text:match(\"^a+b+$\")\nend",
    "  local pattern = \"a+b+\"\n  return string.match(text, pattern)\nend",
    "    local pattern = \"a+b+\"\n    return string.match(text, pattern)\nend",
    "  local match = string.match(text, \"a+b+\")\n  if match then\n    return match\n  else\n    return nil\n  end\nend",
    "  local a, b = text:match(\"^(a+)b+\")\n  if a and b then\n    return a, b\n  end\nend",
    "    local pattern = \"ab+\"\n    local match = string.match(text, pattern)\n    if match then\n        print(\"Found a match: \" .. match)\n    else\n        print(\"No match found\")\n    end\nend",
    "    local match = string.match(text, \"a+b+\")\n    if match then\n        print(\"Found match: \" .. match)\n    else\n        print(\"No match found!\")\n    end\nend"
  ]
}
{
  "name": "mbpp_739_find_Index",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\nlocal function find_Index(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_Index\n    lu.assertEquals(candidate(2), 4)\n    lu.assertEquals(candidate(3), 14)\n    lu.assertEquals(candidate(4), 45)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        if t > 10 ^ (n - 1) then\n            break\n        end\n        i = i + 1\n    end\n    return i\nend",
    "\tlocal i = 1\n\tlocal tri = 0\n\twhile (string.len(tri) < n) do\n\t\ttri = tri + i\n\t\ti = i + 1\n\tend\n\treturn i - 1\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        if t >= 10 ^ (n - 1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    local tri = 0\n    while true do\n        tri = tri + i\n        if #tostring(tri) == n then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if #tostring(sum) == n then\n            return i\n        end\n        i = i + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    while (true) do\n        local num = (i * (i + 1)) / 2\n        if (num >= math.pow(10, n - 1)) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if sum > 10^(n-1) then\n            return i\n        end\n        i = i + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if #tostring(sum) == n then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if sum > 10^(n-1) then\n            return i\n        end\n        i = i + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    local count = 0\n    while count < n do\n        j = j + i\n        i = i + 1\n        count = #tostring(j)\n    end\n    return i\nend",
    "    local i = 1\n    local j = 1\n    while true do\n        local t = (i * (i + 1)) / 2\n        if t > 10 ^ (n - 1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "\tlocal index = 1\n\tlocal triangular = 1\n\twhile (string.len(triangular) < n) do\n\t\tindex = index + 1\n\t\ttriangular = triangular + index\n\tend\n\treturn index\nend\nprint(find_Index(3))",
    "\tlocal i = 1\n\tlocal sum = 0\n\twhile true do\n\t\tsum = sum + i\n\t\tif #tostring(sum) == n then\n\t\t\treturn i\n\t\tend\n\t\ti = i + 1\n\tend\nend",
    "\tlocal index = 1\n\tlocal triangle = 1\n\twhile true do\n\t\tif #tostring(triangle) >= n then\n\t\t\treturn index\n\t\tend\n\t\tindex = index + 1\n\t\ttriangle = triangle + index\n\tend\nend",
    "    local i = 1\n    local j = 1\n    local num = 0\n    while true do\n        num = num + i\n        if num >= 10^(n-1) then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local count = 0\n    while count < n do\n        i = i + 1\n        count = math.floor(math.log10(i * (i + 1) / 2)) + 1\n    end\n    return i\nend",
    "    local i = 1\n    local j = 1\n    local sum = 0\n    while true do\n        sum = sum + i\n        if #tostring(sum) == n then\n            return j\n        end\n        i = i + 1\n        j = j + 1\n    end\nend",
    "    local i = 1\n    local j = 1\n    local k = 1\n    local count = 0\n    while true do\n        local num = i * (i + 1) / 2\n        local digits = 0\n        while num > 0 do\n            num = num / 10\n            digits = digits + 1\n        end\n        if digits == n then\n            count = count + 1\n            if count == 1 then\n                j = i\n            end\n            if count == 2 then\n                k = i\n                break\n            end\n        end\n        i = i + 1\n    end\n    return j, k\nend",
    "\t-- body\n\tlocal i = 1\n\tlocal j = 1\n\tlocal sum = 0\n\tlocal count = 0\n\twhile (count < n) do\n\t\tsum = sum + i\n\t\ti = i + 1\n\t\tcount = #tostring(sum)\n\tend\n\treturn j\nend",
    "    local i = 1\n    local j = 1\n    local count = 0\n    while count < n do\n        j = j + i\n        i = i + 1\n        count = count + 1\n    end\n    return j\nend"
  ]
}
{
  "name": "mbpp_612_merge",
  "language": "lua",
  "prompt": "-- Write a luathon function which takes a table of tables, where each subtable has two elements, and returns a table of two tables where the first table has the first element of each subtable and the second one has the second.\nlocal function merge(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = merge\n    lu.assertEquals(candidate({{'x', 'y'}, {'a', 'b'}, {'m', 'n'}}), {{'x', 'a', 'm'}, {'y', 'b', 'n'}})\n    lu.assertEquals(candidate({{1, 2}, {3, 4}, {5, 6}, {7, 8}}), {{1, 3, 5, 7}, {2, 4, 6, 8}})\n    lu.assertEquals(candidate({{'x', 'y', 'z'}, {'a', 'b', 'c'}, {'m', 'n', 'o'}}), {{'x', 'a', 'm'}, {'y', 'b', 'n'}, {'z', 'c', 'o'}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "  local res = {}\n  for _, v in ipairs(lst) do\n    res[1] = res[1] or {}\n    res[2] = res[2] or {}\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "\tlocal res1, res2 = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(res1, v[1])\n\t\ttable.insert(res2, v[2])\n\tend\n\treturn {res1, res2}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "  local res1 = {}\n  local res2 = {}\n  for i,v in ipairs(lst) do\n    res1[i] = v[1]\n    res2[i] = v[2]\n  end\n  return {res1, res2}\nend",
    "  local res1, res2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(res1, v[1])\n    table.insert(res2, v[2])\n  end\n  return {res1, res2}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i,v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "\tlocal first = {}\n\tlocal second = {}\n\tfor i, v in ipairs(lst) do\n\t\ttable.insert(first, v[1])\n\t\ttable.insert(second, v[2])\n\tend\n\treturn {first, second}\nend",
    "\tlocal l1, l2 = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(l1, v[1])\n\t\ttable.insert(l2, v[2])\n\tend\n\treturn {l1, l2}\nend",
    "\tlocal first = {}\n\tlocal second = {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(first, v[1])\n\t\ttable.insert(second, v[2])\n\tend\n\treturn {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "\tlocal a, b = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ta[#a+1] = v[1]\n\t\tb[#b+1] = v[2]\n\tend\n\treturn {a, b}\nend",
    "\tlocal a, b = {}, {}\n\tfor _, t in ipairs(lst) do\n\t\ttable.insert(a, t[1])\n\t\ttable.insert(b, t[2])\n\tend\n\treturn {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, pair in ipairs(lst) do\n    table.insert(first, pair[1])\n    table.insert(second, pair[2])\n  end\n  return {first, second}\nend",
    "  local res = { {}, {} }\n  for _, v in ipairs(lst) do\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "  local t1, t2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(t1, v[1])\n    table.insert(t2, v[2])\n  end\n  return {t1, t2}\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i = 1, #lst do\n    t1[i] = lst[i][1]\n    t2[i] = lst[i][2]\n  end\n  return {t1, t2}\nend",
    "    local a, b = {}, {}\n    for _, v in ipairs(lst) do\n        table.insert(a, v[1])\n        table.insert(b, v[2])\n    end\n    return {a, b}\nend",
    "\tlocal res = {}\n\tfor _, t in ipairs(lst) do\n\t\tfor i, v in ipairs(t) do\n\t\t\tres[i] = res[i] or {}\n\t\t\ttable.insert(res[i], v)\n\t\tend\n\tend\n\treturn res\nend",
    "  local t1, t2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(t1, v[1])\n    table.insert(t2, v[2])\n  end\n  return {t1, t2}\nend",
    "  local a, b = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "\tlocal t1, t2 = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(t1, v[1])\n\t\ttable.insert(t2, v[2])\n\tend\n\treturn {t1, t2}\nend",
    "\tlocal t1, t2 = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\tt1[i] = v[1]\n\t\tt2[i] = v[2]\n\tend\n\treturn {t1, t2}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "   local a, b = {}, {}\n   for i, v in ipairs(lst) do\n      a[i] = v[1]\n      b[i] = v[2]\n   end\n   return {a, b}\nend",
    "  local t1, t2 = {}, {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "    local a, b = {}, {}\n    for i = 1, #lst do\n        local x, y = unpack(lst[i])\n        a[i] = x\n        b[i] = y\n    end\n    return {a, b}\nend",
    "    local res1 = {}\n    local res2 = {}\n    for _, v in ipairs(lst) do\n        table.insert(res1, v[1])\n        table.insert(res2, v[2])\n    end\n    return {res1, res2}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i,v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1,t2}\nend",
    "  local a, b = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(a, t[1])\n    table.insert(b, t[2])\n  end\n  return {a, b}\nend",
    "  local first, second = {}, {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local t1, t2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(t1, v[1])\n    table.insert(t2, v[2])\n  end\n  return {t1, t2}\nend",
    "  local res1, res2 = {}, {}\n  for i = 1, #lst do\n    res1[i] = lst[i][1]\n    res2[i] = lst[i][2]\n  end\n  return {res1, res2}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "\tlocal t1, t2 = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\tt1[#t1+1] = v[1]\n\t\tt2[#t2+1] = v[2]\n\tend\n\treturn {t1, t2}\nend",
    "    local t1, t2 = {}, {}\n    for _, v in ipairs(lst) do\n        table.insert(t1, v[1])\n        table.insert(t2, v[2])\n    end\n    return {t1, t2}\nend",
    "    local res = { {}, {} }\n    for i = 1, #lst do\n        res[1][i] = lst[i][1]\n        res[2][i] = lst[i][2]\n    end\n    return res\nend",
    "  local first, second = {}, {}\n  for _, pair in ipairs(lst) do\n    table.insert(first, pair[1])\n    table.insert(second, pair[2])\n  end\n  return {first, second}\nend",
    "    local res = { {}, {} }\n    for _, v in ipairs(lst) do\n        table.insert(res[1], v[1])\n        table.insert(res[2], v[2])\n    end\n    return res\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "  local t1, t2 = {}, {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "\tlocal first = {}\n\tlocal second = {}\n\tfor i, v in ipairs(lst) do\n\t\ttable.insert(first, v[1])\n\t\ttable.insert(second, v[2])\n\tend\n\treturn {first, second}\nend",
    "  local a, b = {}, {}\n  for i = 1, #lst do\n    a[i] = lst[i][1]\n    b[i] = lst[i][2]\n  end\n  return {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for _, t in ipairs(lst) do\n    table.insert(first, t[1])\n    table.insert(second, t[2])\n  end\n  return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i = 1, #lst do\n    first[i] = lst[i][1]\n    second[i] = lst[i][2]\n  end\n  return {first, second}\nend",
    "    local a = {}\n    local b = {}\n    for _, v in ipairs(lst) do\n        table.insert(a, v[1])\n        table.insert(b, v[2])\n    end\n    return {a, b}\nend",
    "  local a, b = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(a, t[1])\n    table.insert(b, t[2])\n  end\n  return {a, b}\nend",
    "  local res = { {}, {} }\n  for _, v in ipairs(lst) do\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "    local a, b = {}, {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "  local first, second = {}, {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local t1, t2 = {}, {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "  local t1, t2 = {}, {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "    local t1 = {}\n    local t2 = {}\n    for i, v in ipairs(lst) do\n        t1[i] = v[1]\n        t2[i] = v[2]\n    end\n    return {t1, t2}\nend",
    "  local a, b = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(a, t[1])\n    table.insert(b, t[2])\n  end\n  return {a, b}\nend",
    "\tlocal res1, res2 = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\tres1[i] = v[1]\n\t\tres2[i] = v[2]\n\tend\n\treturn {res1, res2}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local r1, r2 = {}, {}\n  for i, v in ipairs(lst) do\n    r1[i] = v[1]\n    r2[i] = v[2]\n  end\n  return {r1, r2}\nend",
    "  local t1, t2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(t1, v[1])\n    table.insert(t2, v[2])\n  end\n  return {t1, t2}\nend",
    "    local a = {}\n    local b = {}\n    for _, v in ipairs(lst) do\n        table.insert(a, v[1])\n        table.insert(b, v[2])\n    end\n    return {a, b}\nend",
    "  local a, b = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "    local a = {}\n    local b = {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "\tlocal first = {}\n\tlocal second = {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(first, v[1])\n\t\ttable.insert(second, v[2])\n\tend\n\treturn {first, second}\nend",
    "  local res = { {}, {} }\n  for _, v in ipairs(lst) do\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "  local res = { {}, {} }\n  for _, v in ipairs(lst) do\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "  local res = {}\n  for i = 1, #lst do\n    res[i] = lst[i][1]\n  end\n  for i = 1, #lst do\n    res[i + #lst] = lst[i][2]\n  end\n  return res\nend",
    "  local res = { {}, {} }\n  for _, v in ipairs(lst) do\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local a = {}\n  local b = {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "  local res = { {}, {} }\n  for _, t in ipairs(lst) do\n    table.insert(res[1], t[1])\n    table.insert(res[2], t[2])\n  end\n  return res\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i = 1, #lst do\n    t1[i] = lst[i][1]\n    t2[i] = lst[i][2]\n  end\n  return {t1, t2}\nend",
    "  local lst1 = {}\n  local lst2 = {}\n  for i,v in ipairs(lst) do\n    lst1[i] = v[1]\n    lst2[i] = v[2]\n  end\n  return {lst1, lst2}\nend",
    "  local first, second = {}, {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "    local res = { {}, {} }\n    for _, t in ipairs(lst) do\n        table.insert(res[1], t[1])\n        table.insert(res[2], t[2])\n    end\n    return res\nend",
    "  local res = { {}, {} }\n  for i, v in ipairs(lst) do\n    res[1][i] = v[1]\n    res[2][i] = v[2]\n  end\n  return res\nend",
    "  local res = { {}, {} }\n  for i = 1, #lst do\n    res[1][i] = lst[i][1]\n    res[2][i] = lst[i][2]\n  end\n  return res\nend",
    "    local a, b = {}, {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "  local res = { {}, {} }\n  for i = 1, #lst do\n    res[1][i] = lst[i][1]\n    res[2][i] = lst[i][2]\n  end\n  return res\nend",
    "  local first, second = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(first, t[1])\n    table.insert(second, t[2])\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(first, t[1])\n    table.insert(second, t[2])\n  end\n  return {first, second}\nend",
    "    local a = {}\n    local b = {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "  local first, second = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(first, t[1])\n    table.insert(second, t[2])\n  end\n  return {first, second}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "  local res = { {}, {} }\n  for i = 1, #lst do\n    res[1][i] = lst[i][1]\n    res[2][i] = lst[i][2]\n  end\n  return res\nend",
    "    local t1, t2 = {}, {}\n    for i, v in ipairs(lst) do\n        t1[i] = v[1]\n        t2[i] = v[2]\n    end\n    return {t1, t2}\nend",
    "    local first, second = {}, {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "    local a, b = {}, {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "  local res = { {}, {} }\n  for _, sub in ipairs(lst) do\n    table.insert(res[1], sub[1])\n    table.insert(res[2], sub[2])\n  end\n  return res\nend",
    "  local first, second = {}, {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local a, b = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "  local t1, t2 = {}, {}\n  for _, subtable in ipairs(lst) do\n    table.insert(t1, subtable[1])\n    table.insert(t2, subtable[2])\n  end\n  return {t1, t2}\nend",
    "\tlocal res = { {}, {} }\n\tfor _, sub in ipairs(lst) do\n\t\ttable.insert(res[1], sub[1])\n\t\ttable.insert(res[2], sub[2])\n\tend\n\treturn res\nend",
    "  local a = {}\n  local b = {}\n  for _, v in ipairs(lst) do\n    a[#a+1] = v[1]\n    b[#b+1] = v[2]\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "    local t1, t2 = {}, {}\n    for _, v in ipairs(lst) do\n        table.insert(t1, v[1])\n        table.insert(t2, v[2])\n    end\n    return {t1, t2}\nend",
    "    local first, second = {}, {}\n    for _, subtable in ipairs(lst) do\n        table.insert(first, subtable[1])\n        table.insert(second, subtable[2])\n    end\n    return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local a = {}\n  local b = {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "  local a, b = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local res = {}\n  for i, v in ipairs(lst) do\n    res[i] = v[1]\n  end\n  return res\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "    local a, b = {}, {}\n    for i = 1, #lst do\n        a[i] = lst[i][1]\n        b[i] = lst[i][2]\n    end\n    return {a, b}\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "  local a, b = {}, {}\n  for i = 1, #lst do\n    a[i] = lst[i][1]\n    b[i] = lst[i][2]\n  end\n  return {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "\tlocal res = {}\n\tfor _, v in ipairs(lst) do\n\t\tres[1] = res[1] or {}\n\t\tres[2] = res[2] or {}\n\t\ttable.insert(res[1], v[1])\n\t\ttable.insert(res[2], v[2])\n\tend\n\treturn res\nend",
    "  local a, b = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "    local a, b = {}, {}\n    for _, v in ipairs(lst) do\n        table.insert(a, v[1])\n        table.insert(b, v[2])\n    end\n    return {a, b}\nend",
    "    local a, b = {}, {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "\tlocal res = { {}, {} }\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(res[1], v[1])\n\t\ttable.insert(res[2], v[2])\n\tend\n\treturn res\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for i, v in ipairs(lst) do\n    t1[i] = v[1]\n    t2[i] = v[2]\n  end\n  return {t1, t2}\nend",
    "    local first, second = {}, {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local a = {}\n  local b = {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "\tlocal first, second = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(first, v[1])\n\t\ttable.insert(second, v[2])\n\tend\n\treturn {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "    local a, b = {}, {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "\tlocal t1, t2 = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(t1, v[1])\n\t\ttable.insert(t2, v[2])\n\tend\n\treturn {t1, t2}\nend",
    "  local l1, l2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(l1, v[1])\n    table.insert(l2, v[2])\n  end\n  return {l1, l2}\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local t1, t2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(t1, v[1])\n    table.insert(t2, v[2])\n  end\n  return {t1, t2}\nend",
    "  local res = { {}, {} }\n  for _, t in ipairs(lst) do\n    table.insert(res[1], t[1])\n    table.insert(res[2], t[2])\n  end\n  return res\nend",
    "  local res = { {}, {} }\n  for i = 1, #lst do\n    res[1][i] = lst[i][1]\n    res[2][i] = lst[i][2]\n  end\n  return res\nend",
    "  local first = {}\n  local second = {}\n  for i = 1, #lst do\n    first[i] = lst[i][1]\n    second[i] = lst[i][2]\n  end\n  return {first, second}\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "  local res = { {}, {} }\n  for _, sub in ipairs(lst) do\n    table.insert(res[1], sub[1])\n    table.insert(res[2], sub[2])\n  end\n  return res\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i = 1, #lst do\n    first[i] = lst[i][1]\n    second[i] = lst[i][2]\n  end\n  return {first, second}\nend",
    "    local lst1 = {}\n    local lst2 = {}\n    for i, v in ipairs(lst) do\n        lst1[i] = v[1]\n        lst2[i] = v[2]\n    end\n    return {lst1, lst2}\nend",
    "\tlocal first, second = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\tfirst[i] = v[1]\n\t\tsecond[i] = v[2]\n\tend\n\treturn {first, second}\nend",
    "  local a, b = {}, {}\n  for _, t in ipairs(lst) do\n    table.insert(a, t[1])\n    table.insert(b, t[2])\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for i, v in ipairs(lst) do\n        first[i] = v[1]\n        second[i] = v[2]\n    end\n    return {first, second}\nend",
    "\tlocal a, b = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\ta[i] = v[1]\n\t\tb[i] = v[2]\n\tend\n\treturn {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "    local a, b = {}, {}\n    for i = 1, #lst do\n        a[i] = lst[i][1]\n        b[i] = lst[i][2]\n    end\n    return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local res = { {}, {} }\n  for _, v in ipairs(lst) do\n    table.insert(res[1], v[1])\n    table.insert(res[2], v[2])\n  end\n  return res\nend",
    "  local a = {}\n  local b = {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "    local t1, t2 = {}, {}\n    for _, t in ipairs(lst) do\n        table.insert(t1, t[1])\n        table.insert(t2, t[2])\n    end\n    return {t1, t2}\nend",
    "\tlocal t1, t2 = {}, {}\n\tfor i, v in ipairs(lst) do\n\t\tt1[i] = v[1]\n\t\tt2[i] = v[2]\n\tend\n\treturn {t1, t2}\nend",
    "    local first, second = {}, {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "    local first, second = {}, {}\n    for _, sub in ipairs(lst) do\n        table.insert(first, sub[1])\n        table.insert(second, sub[2])\n    end\n    return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local fst = {}\n  local snd = {}\n  for i, v in ipairs(lst) do\n    fst[i] = v[1]\n    snd[i] = v[2]\n  end\n  return {fst, snd}\nend",
    "\tlocal first, second = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(first, v[1])\n\t\ttable.insert(second, v[2])\n\tend\n\treturn {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "  local first, second = {}, {}\n  for _, pair in ipairs(lst) do\n    table.insert(first, pair[1])\n    table.insert(second, pair[2])\n  end\n  return {first, second}\nend",
    "  local t1 = {}\n  local t2 = {}\n  for _, v in ipairs(lst) do\n    table.insert(t1, v[1])\n    table.insert(t2, v[2])\n  end\n  return {t1, t2}\nend",
    "  local first = {}\n  local second = {}\n  for i,v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "    local res1 = {}\n    local res2 = {}\n    for i, v in ipairs(lst) do\n        res1[i] = v[1]\n        res2[i] = v[2]\n    end\n    return {res1, res2}\nend",
    "    local a, b = {}, {}\n    for _, t in ipairs(lst) do\n        a[#a + 1] = t[1]\n        b[#b + 1] = t[2]\n    end\n    return {a, b}\nend",
    "  local first = {}\n  local second = {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "    local a = {}\n    local b = {}\n    for _, sub in ipairs(lst) do\n        table.insert(a, sub[1])\n        table.insert(b, sub[2])\n    end\n    return {a, b}\nend",
    "  local a, b = {}, {}\n  for i, v in ipairs(lst) do\n    a[i] = v[1]\n    b[i] = v[2]\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for _, subtable in ipairs(lst) do\n        table.insert(first, subtable[1])\n        table.insert(second, subtable[2])\n    end\n    return {first, second}\nend",
    "  local a, b = {}, {}\n  for i = 1, #lst do\n    a[#a + 1] = lst[i][1]\n    b[#b + 1] = lst[i][2]\n  end\n  return {a, b}\nend",
    "    local first = {}\n    local second = {}\n    for _, v in ipairs(lst) do\n        table.insert(first, v[1])\n        table.insert(second, v[2])\n    end\n    return {first, second}\nend",
    "  local lst1, lst2 = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(lst1, v[1])\n    table.insert(lst2, v[2])\n  end\n  return {lst1, lst2}\nend",
    "  local a = {}\n  local b = {}\n  for _, v in ipairs(lst) do\n    table.insert(a, v[1])\n    table.insert(b, v[2])\n  end\n  return {a, b}\nend",
    "  local first, second = {}, {}\n  for _, v in ipairs(lst) do\n    table.insert(first, v[1])\n    table.insert(second, v[2])\n  end\n  return {first, second}\nend",
    "    local a, b = {}, {}\n    for i, v in ipairs(lst) do\n        a[i] = v[1]\n        b[i] = v[2]\n    end\n    return {a, b}\nend",
    "\tlocal a, b = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(a, v[1])\n\t\ttable.insert(b, v[2])\n\tend\n\treturn {a, b}\nend",
    "\tlocal t1 = {}\n\tlocal t2 = {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(t1, v[1])\n\t\ttable.insert(t2, v[2])\n\tend\n\treturn {t1, t2}\nend",
    "\tlocal lst1 = {}\n\tlocal lst2 = {}\n\tfor i,v in ipairs(lst) do\n\t\tlst1[i] = v[1]\n\t\tlst2[i] = v[2]\n\tend\n\treturn {lst1, lst2}\nend",
    "\tlocal first = {}\n\tlocal second = {}\n\tfor i, v in ipairs(lst) do\n\t\tfirst[i] = v[1]\n\t\tsecond[i] = v[2]\n\tend\n\treturn {first, second}\nend",
    "  local res = { {}, {} }\n  for _, t in ipairs(lst) do\n    table.insert(res[1], t[1])\n    table.insert(res[2], t[2])\n  end\n  return res\nend",
    "\tlocal t1, t2 = {}, {}\n\tfor _, v in ipairs(lst) do\n\t\ttable.insert(t1, v[1])\n\t\ttable.insert(t2, v[2])\n\tend\n\treturn {t1, t2}\nend",
    "  local first, second = {}, {}\n  for i, v in ipairs(lst) do\n    first[i] = v[1]\n    second[i] = v[2]\n  end\n  return {first, second}\nend",
    "    local first, second = {}, {}\n    for i, t in ipairs(lst) do\n        first[i] = t[1]\n        second[i] = t[2]\n    end\n    return {first, second}\nend"
  ]
}
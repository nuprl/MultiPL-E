{
  "name": "mbpp_74_is_samepatterns",
  "language": "lua",
  "prompt": "-- Write a function to check whether it follows the sequence given in the patterns table.\nlocal function is_samepatterns(colors, patterns)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_74_is_samepatterns.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_samepatterns\n    lu.assertEquals(candidate({'red', 'green', 'green'}, {'a', 'b', 'b'}), true)\n    lu.assertEquals(candidate({'red', 'green', 'greenn'}, {'a', 'b', 'b'}), false)\n    lu.assertEquals(candidate({'red', 'green', 'greenn'}, {'a', 'b'}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tfor i = 1, #patterns do\n\t\tlocal pattern = patterns[i]\n\t\tlocal color = colors[i]\n\t\tif pattern == \"*\" then\n\t\t\tif color == nil then\n\t\t\t\treturn true\n\t\t\tend\n\t\telseif pattern == \"?\" then\n\t\t\tif color ~= nil then\n\t\t\t\treturn true\n\t\t\tend\n\t\telseif pattern == color then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #patterns do\n        if colors[i] ~= patterns[i] then\n            return false\n        end\n    end\n    return true\nend",
    "  for i = 1, #colors do\n    if colors[i] ~= patterns[i] then\n      return false\n    end\n  end\n  return true\nend",
    "\tfor i = 1, #patterns do\n\t\tif colors[i] ~= patterns[i] then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    for i = 1, #colors do\n        if colors[i] ~= patterns[i] then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal pattern_index = 1\n\tfor i = 1, #colors do\n\t\tif colors[i] == patterns[pattern_index] then\n\t\t\tpattern_index = pattern_index + 1\n\t\t\tif pattern_index > #patterns then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "    local pattern = patterns[colors[1]]\n    for i = 2, #colors do\n        if pattern ~= patterns[colors[i]] then\n            return false\n        end\n    end\n    return true\nend",
    "\tlocal color_count = {}\n\tfor i = 1, #colors do\n\t\tlocal color = colors[i]\n\t\tcolor_count[color] = (color_count[color] or 0) + 1\n\tend\n\tfor i = 1, #patterns do\n\t\tlocal pattern = patterns[i]\n\t\tlocal color = pattern[1]\n\t\tlocal count = pattern[2]\n\t\tif color_count[color] ~= count then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tlocal pattern = patterns[1]\n\tfor i = 1, #colors do\n\t\tif colors[i] ~= pattern[i] then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    for i = 1, #patterns do\n        if colors[i] ~= patterns[i] then\n            return false\n        end\n    end\n    return true\nend",
    "  for i, pattern in ipairs(patterns) do\n    if pattern ~= colors[i] then\n      return false\n    end\n  end\n  return true\nend",
    "\tlocal pattern = patterns[colors[1]]\n\tfor i = 2, #colors do\n\t\tif pattern ~= patterns[colors[i]] then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i = 1, #patterns do\n\t\tlocal pattern = patterns[i]\n\t\tlocal color = colors[i]\n\t\tif color ~= pattern then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    local pattern_index = 1\n    for i = 1, #colors do\n        if colors[i] == patterns[pattern_index] then\n            pattern_index = pattern_index + 1\n            if pattern_index > #patterns then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    local pattern = patterns[colors[1]]\n    for i = 2, #colors do\n        if pattern ~= patterns[colors[i]] then\n            return false\n        end\n    end\n    return true\nend",
    "    local pattern = patterns[colors[1]]\n    if pattern == nil then\n        return false\n    end\n    for i = 2, #colors do\n        if pattern ~= patterns[colors[i]] then\n            return false\n        end\n    end\n    return true\nend",
    "\tif not patterns then return true end\n\tfor i = 1, #colors do\n\t\tif colors[i] ~= patterns[i] then return false end\n\tend\n\treturn true\nend",
    "    for i, pattern in ipairs(patterns) do\n        if colors[i] ~= pattern then\n            return false\n        end\n    end\n    return true\nend",
    "\tfor i = 1, #patterns do\n\t\tlocal pattern = patterns[i]\n\t\tif pattern[1] == colors[1] and pattern[2] == colors[2] and pattern[3] == colors[3] then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i = 1, #patterns do\n        if colors[i] ~= patterns[i] then\n            return false\n        end\n    end\n    return true\nend"
  ]
}
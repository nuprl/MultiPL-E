{
  "name": "mbpp_755_second_smallest",
  "language": "lua",
  "prompt": "-- Write a function to find the second smallest number in a table.\nlocal function second_smallest(numbers)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_755_second_smallest.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = second_smallest\n    lu.assertEquals(candidate({1, 2, -8, -2, 0, -2}), -2)\n    lu.assertEquals(candidate({1, 1, -0.5, 0, 2, -2, -2}), -0.5)\n    lu.assertEquals(candidate({2, 2}), None)\n    lu.assertEquals(candidate({2, 2, 2}), None)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[2]\n  for i = 3, #numbers do\n    if numbers[i] < smallest then\n      second_smallest = smallest\n      smallest = numbers[i]\n    elseif numbers[i] < second_smallest then\n      second_smallest = numbers[i]\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest, second_smallest = math.huge, math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[2]",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, n in ipairs(numbers) do\n        if n < smallest then\n            second_smallest = smallest\n            smallest = n\n        elseif n < second_smallest then\n            second_smallest = n\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local min, min2 = math.huge, math.huge\n  for _, n in ipairs(numbers) do\n    if n < min then\n      min2 = min\n      min = n\n    elseif n < min2 then\n      min2 = n\n    end\n  end\n  return min2\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local min, min2 = math.huge, math.huge\n  for _, n in ipairs(numbers) do\n    if n < min then\n      min2 = min\n      min = n\n    elseif n < min2 then\n      min2 = n\n    end\n  end\n  return min2\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "    local smallest, second_smallest\n    for _, number in ipairs(numbers) do\n        if not smallest or number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif not second_smallest or number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[2]\n  for i = 3, #numbers do\n    if numbers[i] < smallest then\n      second_smallest = smallest\n      smallest = numbers[i]\n    elseif numbers[i] < second_smallest then\n      second_smallest = numbers[i]\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = numbers[1]\n    local second_smallest = numbers[2]\n    for i = 3, #numbers do\n        if numbers[i] < smallest then\n            second_smallest = smallest\n            smallest = numbers[i]\n        elseif numbers[i] < second_smallest then\n            second_smallest = numbers[i]\n        end\n    end\n    return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = numbers[1]\n    local second_smallest = numbers[2]\n    for i = 3, #numbers do\n        if numbers[i] < smallest then\n            second_smallest = smallest\n            smallest = numbers[i]\n        elseif numbers[i] < second_smallest then\n            second_smallest = numbers[i]\n        end\n    end\n    return second_smallest\nend",
    "    local smallest, second_smallest = math.huge, math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[1]\n  for i = 2, #numbers do\n    if numbers[i] < smallest then\n      second_smallest = smallest\n      smallest = numbers[i]\n    elseif numbers[i] < second_smallest then\n      second_smallest = numbers[i]\n    end\n  end\n  return second_smallest\nend",
    "  local smallest, second_smallest\n  for _, n in ipairs(numbers) do\n    if not smallest or n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif not second_smallest or n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, num in ipairs(numbers) do\n    if num < smallest then\n      second_smallest = smallest\n      smallest = num\n    elseif num < second_smallest then\n      second_smallest = num\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  -- TODO: Implement me!\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, n in ipairs(numbers) do\n        if n < smallest then\n            second_smallest = smallest\n            smallest = n\n        elseif n < second_smallest then\n            second_smallest = n\n        end\n    end\n    return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "\tlocal smallest = math.huge\n\tlocal second_smallest = math.huge\n\tfor _, number in ipairs(numbers) do\n\t\tif number < smallest then\n\t\t\tsecond_smallest = smallest\n\t\t\tsmallest = number\n\t\telseif number < second_smallest then\n\t\t\tsecond_smallest = number\n\t\tend\n\tend\n\treturn second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, n in ipairs(numbers) do\n        if n < smallest then\n            second_smallest = smallest\n            smallest = n\n        elseif n < second_smallest then\n            second_smallest = n\n        end\n    end\n    return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, n in ipairs(numbers) do\n        if n < smallest then\n            second_smallest = smallest\n            smallest = n\n        elseif n < second_smallest then\n            second_smallest = n\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  -- TODO\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for i = 1, #numbers do\n        local number = numbers[i]\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local min = numbers[1]\n  local min2 = numbers[2]\n  if min2 < min then\n    min, min2 = min2, min\n  end\n  for i = 3, #numbers do\n    local n = numbers[i]\n    if n < min then\n      min2 = min\n      min = n\n    elseif n < min2 then\n      min2 = n\n    end\n  end\n  return min2\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = numbers[1]\n    local second_smallest = numbers[2]",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[2]\n  for i = 3, #numbers do\n    if numbers[i] < smallest then\n      second_smallest = smallest\n      smallest = numbers[i]\n    elseif numbers[i] < second_smallest then\n      second_smallest = numbers[i]\n    end\n  end\n  return second_smallest\nend",
    "    local min = math.huge\n    local min2 = math.huge\n    for _, number in ipairs(numbers) do\n        if number < min then\n            min2 = min\n            min = number\n        elseif number < min2 then\n            min2 = number\n        end\n    end\n    return min2\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[2]",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest, second_smallest = numbers[1], numbers[2]\n  if smallest > second_smallest then\n    smallest, second_smallest = second_smallest, smallest\n  end\n  for i = 3, #numbers do\n    local n = numbers[i]\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, n in ipairs(numbers) do\n        if n < smallest then\n            second_smallest = smallest\n            smallest = n\n        elseif n < second_smallest then\n            second_smallest = n\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "\tlocal smallest = math.huge\n\tlocal second_smallest = math.huge\n\tfor _, number in ipairs(numbers) do\n\t\tif number < smallest then\n\t\t\tsecond_smallest = smallest\n\t\t\tsmallest = number\n\t\telseif number < second_smallest then\n\t\t\tsecond_smallest = number\n\t\tend\n\tend\n\treturn second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, n in ipairs(numbers) do\n        if n < smallest then\n            second_smallest = smallest\n            smallest = n\n        elseif n < second_smallest then\n            second_smallest = n\n        end\n    end\n    return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "\tlocal smallest = math.huge\n\tlocal second_smallest = math.huge\n\tfor _, number in ipairs(numbers) do\n\t\tif number < smallest then\n\t\t\tsecond_smallest = smallest\n\t\t\tsmallest = number\n\t\telseif number < second_smallest then\n\t\t\tsecond_smallest = number\n\t\tend\n\tend\n\treturn second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for i = 1, #numbers do\n    local number = numbers[i]\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, n in ipairs(numbers) do\n    if n < smallest then\n      second_smallest = smallest\n      smallest = n\n    elseif n < second_smallest then\n      second_smallest = n\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge",
    "    local smallest = math.huge\n    local second_smallest = math.huge\n    for _, number in ipairs(numbers) do\n        if number < smallest then\n            second_smallest = smallest\n            smallest = number\n        elseif number < second_smallest then\n            second_smallest = number\n        end\n    end\n    return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = numbers[1]\n  local second_smallest = numbers[2]\n  if smallest > second_smallest then\n    smallest, second_smallest = second_smallest, smallest\n  end\n  for i = 3, #numbers do\n    if numbers[i] < smallest then\n      second_smallest = smallest\n      smallest = numbers[i]\n    elseif numbers[i] < second_smallest then\n      second_smallest = numbers[i]\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "    local smallest = math.huge\n    local second_smallest = math.huge",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend",
    "  local smallest = math.huge\n  local second_smallest = math.huge\n  for _, number in ipairs(numbers) do\n    if number < smallest then\n      second_smallest = smallest\n      smallest = number\n    elseif number < second_smallest then\n      second_smallest = number\n    end\n  end\n  return second_smallest\nend"
  ]
}
{
  "name": "mbpp_460_Extract",
  "language": "lua",
  "prompt": "-- Write a luathon function to get the first element of each subtable.\nlocal function Extract(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Extract\n    lu.assertEquals(candidate({{1, 2}, {3, 4, 5}, {6, 7, 8, 9}}), {1, 3, 6})\n    lu.assertEquals(candidate({{1, 2, 3}, {4, 5}}), {1, 4})\n    lu.assertEquals(candidate({{9, 8, 1}, {1, 2}}), {9, 1})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for i, sub in ipairs(lst) do\n    result[i] = sub[1]\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for i, subtable in ipairs(lst) do\n    result[i] = subtable[1]\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for i, v in ipairs(lst) do\n    table.insert(result, v[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, sublst in ipairs(lst) do\n    table.insert(result, sublst[1])\n  end\n  return result\nend",
    "  local result = {}\n  for i, subtable in ipairs(lst) do\n    result[i] = subtable[1]\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local res = {}\n  for _, sub in ipairs(lst) do\n    table.insert(res, sub[1])\n  end\n  return res\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for i, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend",
    "  local result = {}\n  for _, subtable in ipairs(lst) do\n    table.insert(result, subtable[1])\n  end\n  return result\nend"
  ]
}
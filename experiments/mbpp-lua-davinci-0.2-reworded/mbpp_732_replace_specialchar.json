{
  "name": "mbpp_732_replace_specialchar",
  "language": "lua",
  "prompt": "-- Write a function to replace all occurrences of spaces, commas, or dots with a colon.\nlocal function replace_specialchar(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = replace_specialchar\n    lu.assertEquals(candidate('Python language, Programming language.'), 'Python:language::Programming:language:')\n    lu.assertEquals(candidate('a b c,d e f'), 'a:b:c:d:e:f')\n    lu.assertEquals(candidate('ram reshma,ram rahim'), 'ram:reshma:ram:rahim')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return string.gsub(text, \"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%s\", \":\")\n        :gsub(\"%.\", \":\")\n        :gsub(\",\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "  return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"%p\", \":\")\nend",
    "  return text:gsub(\"[%s,.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "    return text:gsub(\"[%s,%.]\", \":\")\nend",
    "\treturn string.gsub(text, \"[%s,%.]\", \":\")\nend",
    "\treturn string.gsub(text, \"[%s,%.]\", \":\")\nend"
  ]
}
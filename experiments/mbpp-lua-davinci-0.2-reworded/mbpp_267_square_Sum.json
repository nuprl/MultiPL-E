{
  "name": "mbpp_267_square_Sum",
  "language": "lua",
  "prompt": "-- Write a luathon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nlocal function square_Sum(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = square_Sum\n    lu.assertEquals(candidate(2), 10)\n    lu.assertEquals(candidate(3), 35)\n    lu.assertEquals(candidate(4), 84)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2 * i - 1) ^ 2\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum + (2*i-1)^2\n\tend\n\treturn sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2 * i - 1) ^ 2\n  end\n  return sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + math.pow(2*i-1, 2)\n  end\n  return sum\nend",
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum + (2*i - 1)^2\n\tend\n\treturn sum\nend",
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum + i * i\n\tend\n\treturn sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2 * i - 1) ^ 2\n  end\n  return sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2*i - 1)^2\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2 * i - 1) ^ 2\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tsum = sum + (2 * i - 1) ^ 2\n\tend\n\treturn sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2 * i - 1) ^ 2\n  end\n  return sum\nend",
    "    local sum = 0\n    for i = 1, n do\n        sum = sum + (2 * i - 1) ^ 2\n    end\n    return sum\nend",
    "  local sum = 0\n  for i = 1, n do\n    sum = sum + (2*i - 1)^2\n  end\n  return sum\nend"
  ]
}
{
  "name": "mbpp_765_is_polite",
  "language": "lua",
  "prompt": "-- Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nlocal function is_polite(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_polite\n    lu.assertEquals(candidate(7), 11)\n    lu.assertEquals(candidate(4), 7)\n    lu.assertEquals(candidate(9), 13)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tif n % i == 0 then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend",
    "  local function is_prime(n)\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then\n        return false\n      end\n    end\n    return true\n  end",
    "  local function is_prime(n)\n    if n == 1 then return false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n  for i = 1, math.sqrt(n) do\n    if is_prime(i) and is_prime(n - i) then return true end\n  end\n  return false\nend",
    "  local function is_prime(n)\n    if n <= 1 then return false end\n    if n == 2 then return true end\n    if n % 2 == 0 then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return false end\n    end\n    return true\n  end",
    "    local sum = 0\n    for i = 1, n do\n        if n % i == 0 then\n            sum = sum + i\n        end\n    end\n    return sum\nend",
    "  local n_str = tostring(n)\n  local n_len = #n_str\n  local sum = 0\n  for i = 1, n_len do\n    sum = sum + tonumber(n_str:sub(i, i))\n  end\n  return n % sum == 0\nend",
    "    local function is_prime(n)\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n                return false\n            end\n        end\n        return true\n    end",
    "  local function is_prime(n)\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then\n        return false\n      end\n    end\n    return true\n  end",
    "  local function is_prime(n)\n    if n < 2 then return false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n  for i = 1, math.sqrt(n) do\n    if is_prime(i) and is_prime(n - i) then return true end\n  end\n  return false\nend",
    "  local function is_prime(n)\n    for i = 2, math.floor(math.sqrt(n)) do\n      if n % i == 0 then\n        return false\n      end\n    end\n    return true\n  end",
    "  local i = 1\n  local sum = 0\n  while sum < n do\n    sum = sum + i\n    i = i + 1\n  end\n  return sum == n\nend",
    "  local n_str = tostring(n)\n  local n_len = #n_str\n  local sum = 0\n  for i = 1, n_len do\n    sum = sum + tonumber(n_str:sub(i, i))\n  end\n  return n % sum == 0\nend",
    "    local i = 1\n    while n > 0 do\n        n = n - i\n        i = i + 1\n    end\n    return n == 0\nend",
    "    local sum = 0\n    for i = 1, n do\n        if n % i == 0 then\n            sum = sum + i\n        end\n    end\n    return sum\nend",
    "  local function is_prime(n)\n    for i = 2, n - 1 do\n      if n % i == 0 then\n        return false\n      end\n    end\n    return true\n  end\n  local function sum_of_divisors(n)\n    local sum = 0\n    for i = 1, n do\n      if n % i == 0 then\n        sum = sum + i\n      end\n    end\n    return sum\n  end\n  local sum = sum_of_divisors(n)\n  return is_prime(sum)\nend",
    "    local i = 1\n    while n % i == 0 do\n        i = i + 1\n    end\n    return i - 1\nend",
    "  local i = 1\n  while n % i == 0 do\n    i = i + 1\n  end\n  return i\nend",
    "  local i = 1\n  while n > 0 do\n    if n % i == 0 then\n      n = n / i\n    else\n      i = i + 1\n    end\n  end\n  return i\nend",
    "\tlocal function is_prime(n)\n\t\tif n <= 1 then return false end\n\t\tif n == 2 then return true end\n\t\tif n % 2 == 0 then return false end\n\t\tfor i = 3, math.sqrt(n), 2 do\n\t\t\tif n % i == 0 then return false end\n\t\tend\n\t\treturn true\n\tend",
    "\tlocal function is_prime(n)\n\t\tif n < 2 then return false end\n\t\tfor i = 2, math.floor(math.sqrt(n)) do\n\t\t\tif n % i == 0 then return false end\n\t\tend\n\t\treturn true\n\tend\n\tlocal function sum_of_divisors(n)\n\t\tlocal sum = 1\n\t\tfor i = 2, math.floor(math.sqrt(n)) do\n\t\t\tif n % i == 0 then\n\t\t\t\tsum = sum + i\n\t\t\t\tif i ~= n / i then\n\t\t\t\t\tsum = sum + n / i\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\treturn sum\n\tend\n\treturn is_prime(sum_of_divisors(n))\nend"
  ]
}
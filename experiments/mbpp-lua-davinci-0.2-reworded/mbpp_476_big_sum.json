{
  "name": "mbpp_476_big_sum",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the sum of the largest and smallest value in a given table.\nlocal function big_sum(nums)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = big_sum\n    lu.assertEquals(candidate({1, 2, 3}), 4)\n    lu.assertEquals(candidate({-1, 2, 3, 4}), 3)\n    lu.assertEquals(candidate({2, 3, 6}), 8)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max = nums[1]\n  local min = nums[1]\n  for i=2,#nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max + min\nend",
    "  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max + min\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i, v in ipairs(nums) do\n    if v < min then\n      min = v\n    end\n    if v > max then\n      max = v\n    end\n  end\n  return min + max\nend",
    "  local max = nums[1]\n  local min = nums[1]\n  for _, num in ipairs(nums) do\n    if num > max then\n      max = num\n    end\n    if num < min then\n      min = num\n    end\n  end\n  return max + min\nend",
    "    local min = nums[1]\n    local max = nums[1]\n    for i = 2, #nums do\n        if nums[i] < min then\n            min = nums[i]\n        elseif nums[i] > max then\n            max = nums[i]\n        end\n    end\n    return min + max\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend",
    "  local max = nums[1]\n  local min = nums[1]\n  for i = 2, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    elseif nums[i] < min then\n      min = nums[i]\n    end\n  end\n  return max + min\nend",
    "  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max + min\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return max + min\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend",
    "  local max = nums[1]\n  local min = nums[1]\n  local sum = 0\n  for i = 1, #nums do\n    if nums[i] > max then\n      max = nums[i]\n    end\n    if nums[i] < min then\n      min = nums[i]\n    end\n  end\n  sum = max + min\n  return sum\nend",
    "    local max = nums[1]\n    local min = nums[1]\n    for i = 2, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        elseif nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max + min\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    local num = nums[i]\n    if num < min then\n      min = num\n    elseif num > max then\n      max = num\n    end\n  end\n  return min + max\nend",
    "    local max = nums[1]\n    local min = nums[1]\n    for i = 2, #nums do\n        if nums[i] > max then\n            max = nums[i]\n        end\n        if nums[i] < min then\n            min = nums[i]\n        end\n    end\n    return max + min\nend",
    "  local max = nums[1]\n  local min = nums[1]\n  for i, v in ipairs(nums) do\n    if v > max then\n      max = v\n    end\n    if v < min then\n      min = v\n    end\n  end\n  return max + min\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    elseif nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend",
    "  local min = nums[1]\n  local max = nums[1]\n  for i = 2, #nums do\n    if nums[i] < min then\n      min = nums[i]\n    end\n    if nums[i] > max then\n      max = nums[i]\n    end\n  end\n  return min + max\nend"
  ]
}
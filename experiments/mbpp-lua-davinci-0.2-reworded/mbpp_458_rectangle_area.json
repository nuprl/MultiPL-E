{
  "name": "mbpp_458_rectangle_area",
  "language": "lua",
  "prompt": "-- Write a function to find the area of a rectangle.\nlocal function rectangle_area(l, b)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_458_rectangle_area.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rectangle_area\n    lu.assertEquals(candidate(10, 20), 200)\n    lu.assertEquals(candidate(10, 5), 50)\n    lu.assertEquals(candidate(4, 2), 8)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "\treturn l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "\treturn l * b\nend",
    "  return l * b\nend",
    "\treturn l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "\treturn l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "\treturn l * b\nend",
    "    return l * b\nend",
    "  return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend",
    "    return l * b\nend"
  ]
}
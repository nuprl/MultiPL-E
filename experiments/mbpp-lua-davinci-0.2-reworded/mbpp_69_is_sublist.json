{
  "name": "mbpp_69_is_sublist",
  "language": "lua",
  "prompt": "-- Write a function to check whether a table contains the given subtable or not.\nlocal function is_sublist(l, s)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_sublist\n    lu.assertEquals(candidate({2, 4, 3, 5, 7}, {3, 7}), false)\n    lu.assertEquals(candidate({2, 4, 3, 5, 7}, {4, 3}), true)\n    lu.assertEquals(candidate({2, 4, 3, 5, 7}, {1, 6}), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = 1\n    for _, v in ipairs(s) do\n        while l[i] ~= v do\n            i = i + 1\n            if i > #l then return false end\n        end\n    end\n    return true\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] ~= v then return false end\n    i = i + 1\n  end\n  return true\nend",
    "    local i = 1\n    for _, v in ipairs(s) do\n        while l[i] ~= v do\n            i = i + 1\n            if i > #l then return false end\n        end\n    end\n    return true\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local j = 1\n            while j <= #s and l[i + j - 1] == s[j] do\n                j = j + 1\n            end\n            if j > #s then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "   local i = 1\n   for _, v in ipairs(s) do\n      if v ~= l[i] then\n         return false\n      end\n      i = i + 1\n   end\n   return true\nend",
    "  for i = 1, #l do\n    if l[i] == s[1] then\n      local match = true\n      for j = 2, #s do\n        if l[i + j - 1] ~= s[j] then\n          match = false\n          break\n        end\n      end\n      if match then\n        return true\n      end\n    end\n  end\n  return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local j = 1\n            while j <= #s and l[i + j - 1] == s[j] do\n                j = j + 1\n            end\n            if j == #s + 1 then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local found = true\n            for j = 2, #s do\n                if l[i + j - 1] ~= s[j] then\n                    found = false\n                    break\n                end\n            end\n            if found then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local found = true\n            for j = 2, #s do\n                if l[i + j - 1] ~= s[j] then\n                    found = false\n                    break\n                end\n            end\n            if found then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local found = true\n            for j = 1, #s do\n                if l[i + j - 1] ~= s[j] then\n                    found = false\n                    break\n                end\n            end\n            if found then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  local i = 1\n  for _, v in ipairs(s) do\n    if l[i] ~= v then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
    "    if #l < #s then\n        return false\n    end\n    for i = 1, #l do\n        if l[i] == s[1] then\n            local found = true\n            for j = 2, #s do\n                if l[i + j - 1] ~= s[j] then\n                    found = false\n                    break\n                end\n            end\n            if found then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  for i = 1, #l do\n    if l[i] == s[1] then\n      local found = true\n      for j = 2, #s do\n        if l[i + j - 1] ~= s[j] then\n          found = false\n          break\n        end\n      end\n      if found then\n        return true\n      end\n    end\n  end\n  return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local k = 1\n            for j = i, #l do\n                if l[j] ~= s[k] then\n                    break\n                end\n                k = k + 1\n                if k > #s then\n                    return true\n                end\n            end\n        end\n    end\n    return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local j = 1\n            for k = i, #l do\n                if l[k] ~= s[j] then\n                    break\n                end\n                j = j + 1\n                if j > #s then\n                    return true\n                end\n            end\n        end\n    end\n    return false\nend",
    "    for i = 1, #l do\n        local j = 1\n        while j <= #s and l[i + j - 1] == s[j] do\n            j = j + 1\n        end\n        if j > #s then\n            return true\n        end\n    end\n    return false\nend",
    "    for i = 1, #l do\n        if l[i] == s[1] then\n            local found = true\n            for j = 2, #s do\n                if l[i + j - 1] ~= s[j] then\n                    found = false\n                    break\n                end\n            end\n            if found then\n                return true\n            end\n        end\n    end\n    return false\nend",
    "    if #l < #s then\n        return false\n    end\n    for i = 1, #l - #s + 1 do\n        local j = 1\n        while j <= #s and s[j] == l[i + j - 1] do\n            j = j + 1\n        end\n        if j > #s then\n            return true\n        end\n    end\n    return false\nend",
    "  for i = 1, #l do\n    if l[i] == s[1] then\n      local found = true\n      for j = 2, #s do\n        if l[i + j - 1] ~= s[j] then\n          found = false\n          break\n        end\n      end\n      if found then\n        return true\n      end\n    end\n  end\n  return false\nend",
    "    for i = 1, #l do\n        local j = 1\n        while l[i + j - 1] == s[j] do\n            j = j + 1\n            if j > #s then\n                return true\n            end\n        end\n    end\n    return false\nend"
  ]
}
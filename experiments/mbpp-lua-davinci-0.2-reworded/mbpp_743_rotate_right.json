{
  "name": "mbpp_743_rotate_right",
  "language": "lua",
  "prompt": "-- Write a function to rotate a given table by specified number of items to the right direction. https://www.geeksforgeeks.org/luathon-program-right-rotate-table-n/\nlocal function rotate_right(list, m)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_743_rotate_right.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rotate_right\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 3), {8, 9, 10, 1, 2, 3, 4, 5, 6, 7})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 2), {9, 10, 1, 2, 3, 4, 5, 6, 7, 8})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 5), {6, 7, 8, 9, 10, 1, 2, 3, 4, 5})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  for i = 1, m do\n    local last = list[#list]\n    for i = #list, 2, -1 do\n      list[i] = list[i - 1]\n    end\n    list[1] = last\n  end\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  if m == 0 then\n    return list\n  end\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local result = {}\n    for i = 1, #list do\n        result[(i + m - 1) % #list + 1] = list[i]\n    end\n    return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    if m < 0 then\n        m = m + n\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    local new_list = {}\n    for i = 1, m do\n        new_list[i] = list[n - m + i]\n    end\n    for i = m + 1, n do\n        new_list[i] = list[i - m]\n    end\n    return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local new_list = {}\n    for i = 1, #list do\n        new_list[i] = list[(i + m - 1) % #list + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    for i = 1, m do\n        local last = list[n]\n        for j = n, 2, -1 do\n            list[j] = list[j - 1]\n        end\n        list[1] = last\n    end\n    return list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  if m == 0 then\n    return list\n  end\n  local res = {}\n  for i = 1, m do\n    res[i] = list[n - m + i]\n  end\n  for i = 1, n - m do\n    res[m + i] = list[i]\n  end\n  return res\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local m = m % n\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "\tlocal n = #list\n\tlocal new_list = {}\n\tfor i = 1, n do\n\t\tnew_list[i] = list[(i + m - 1) % n + 1]\n\tend\n\treturn new_list\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local res = {}\n    for i = 1, n do\n        res[i] = list[(i + m - 1) % n + 1]\n    end\n    return res\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "\tlocal n = #list\n\tif m > n then\n\t\tm = m % n\n\tend\n\tlocal new_list = {}\n\tfor i = 1, n do\n\t\tnew_list[i] = list[(i + m - 1) % n + 1]\n\tend\n\treturn new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "  local n = #list\n  m = m % n\n  local temp = {}\n  for i = 1, m do\n    temp[i] = list[n - m + i]\n  end\n  for i = 1, n - m do\n    list[n - i + 1] = list[n - m - i + 1]\n  end\n  for i = 1, m do\n    list[i] = temp[i]\n  end\n  return list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local n = #list\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + m - 1) % n + 1]\n  end\n  return res\nend",
    "    local n = #list\n    m = m % n\n    local temp = {}\n    for i = 1, m do\n        temp[i] = list[n - m + i]\n    end\n    for i = n - m, 1, -1 do\n        list[i + m] = list[i]\n    end\n    for i = 1, m do\n        list[i] = temp[i]\n    end\n    return list\nend",
    "    local result = {}\n    for i = 1, #list do\n        result[i] = list[(i + m - 1) % #list + 1]\n    end\n    return result\nend",
    "  local n = #list\n  m = m % n\n  if m == 0 then return list end\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "  local n = #list\n  local r = {}\n  for i = 1, n do\n    r[i] = list[(i + m - 1) % n + 1]\n  end\n  return r\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    m = m % n\n    if m == 0 then return list end\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + r - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m) % n]\n    end\n    return new_list\nend",
    "  local n = #list\n  m = m % n\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    for i = 1, m do\n        local last = list[n]\n        for j = n, 2, -1 do\n            list[j] = list[j - 1]\n        end\n        list[1] = last\n    end\n    return list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    for i = 1, m do\n        table.insert(list, 1, table.remove(list))\n    end\n    return list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "  local n = #list\n  local m = m % n\n  if m == 0 then return list end\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + r - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "    local n = #list\n    local r = m % n\n    local t = {}\n    for i = 1, n do\n        t[i] = list[(i + r - 1) % n + 1]\n    end\n    return t\nend",
    "    local n = #list\n    if n == 0 then return list end\n    m = m % n\n    if m == 0 then return list end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local result = {}\n    for i = 1, #list do\n        result[i] = list[(i + m) % #list + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local m = m % n\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m) % n]\n    end\n    return new_list\nend",
    "    local n = #list\n    local rotated = {}\n    for i = 1, n do\n        rotated[i] = list[(i + m - 1) % n + 1]\n    end\n    return rotated\nend",
    "    local n = #list\n    if m < 0 then\n        m = n + m\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "\tlocal new_list = {}\n\tfor i = 1, #list do\n\t\tnew_list[i] = list[(i + m - 1) % #list + 1]\n\tend\n\treturn new_list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    for i = 1, m do\n        local last = list[n]\n        for j = n, 2, -1 do\n            list[j] = list[j - 1]\n        end\n        list[1] = last\n    end\n    return list\nend",
    "  local n = #list\n  local r = m % n\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + r - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local t = {}\n    for i = 1, n do\n        t[i] = list[(i + r - 1) % n + 1]\n    end\n    return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  m = m % n\n  local temp = {}\n  for i = 1, m do\n    temp[i] = list[n - m + i]\n  end\n  for i = n - m, 1, -1 do\n    list[i + m] = list[i]\n  end\n  for i = 1, m do\n    list[i] = temp[i]\n  end\n  return list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[(i + m - 1) % n + 1] = list[i]\n  end\n  return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local result = {}\n    local n = #list\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local result = {}\n  for i = 1, #list do\n    result[(i + m - 1) % #list + 1] = list[i]\n  end\n  return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local ret = {}\n    for i = 1, n do\n        ret[i] = list[(i + m - 1) % n + 1]\n    end\n    return ret\nend",
    "  local n = #list\n  if m < 0 then\n    return rotate_left(list, -m)\n  end\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + r - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local size = #list\n    local new_list = {}\n    for i = 1, size do\n        new_list[i] = list[(i + m - 1) % size + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local rotated = {}\n    for i = 1, n do\n        rotated[i] = list[(i + m - 1) % n + 1]\n    end\n    return rotated\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "  for i = 1, m do\n    local last = list[#list]\n    for j = #list, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[(i + m - 1) % n + 1] = list[i]\n    end\n    return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "\tlocal n = #list\n\tif m > n then\n\t\tm = m % n\n\tend\n\tfor i = 1, m do\n\t\ttable.insert(list, 1, table.remove(list))\n\tend\n\treturn list\nend",
    "    local n = #list\n    m = m % n\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    if m == 0 then\n        return list\n    end\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + r - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local r = m % n\n    local t = {}\n    for i = 1, n do\n        t[i] = list[(i + r - 1) % n + 1]\n    end\n    return t\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + m - 1) % n + 1]\n  end\n  return t\nend",
    "  local n = #list\n  local ret = {}\n  for i = 1, n do\n    ret[i] = list[(i + m - 1) % n + 1]\n  end\n  return ret\nend",
    "    local n = #list\n    local ret = {}\n    for i = 1, n do\n        ret[i] = list[(i + m - 1) % n + 1]\n    end\n    return ret\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local m = m % n\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "  local n = #list\n  m = m % n\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j-1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    if m < 0 then\n        m = n + m\n    end\n    m = m % n\n    if m == 0 then\n        return list\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i - m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  m = m % n\n  local rotated = {}\n  for i = 1, n do\n    rotated[i] = list[(i + m - 1) % n + 1]\n  end\n  return rotated\nend",
    "  local n = #list\n  local r = m % n\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + r - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local temp = {}\n    for i = 1, m do\n        temp[i] = list[n - m + i]\n    end\n    for i = n - m, 1, -1 do\n        list[i + m] = list[i]\n    end\n    for i = 1, m do\n        list[i] = temp[i]\n    end\n    return list\nend",
    "    local n = #list\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local m = m % n\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local len = #list\n    if m > len then\n        m = m % len\n    end\n    for i = 1, m do\n        table.insert(list, 1, table.remove(list))\n    end\n    return list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + m - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  if n == 0 then return list end\n  m = m % n\n  if m == 0 then return list end\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + m - 1) % n + 1]\n  end\n  return res\nend",
    "\tlocal n = #list\n\tif m > n then\n\t\tm = m % n\n\tend\n\tfor i = 1, m do\n\t\tlocal last = list[n]\n\t\tfor j = n, 2, -1 do\n\t\t\tlist[j] = list[j - 1]\n\t\tend\n\t\tlist[1] = last\n\tend\n\treturn list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  if m == 0 then\n    return list\n  end\n  local result = {}\n  for i = 1, m do\n    result[i] = list[n - m + i]\n  end\n  for i = 1, n - m do\n    result[m + i] = list[i]\n  end\n  return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local m = m % n\n  local temp = {}\n  for i = 1, m do\n    temp[i] = list[n - m + i]\n  end\n  for i = n - m, 1, -1 do\n    list[i + m] = list[i]\n  end\n  for i = 1, m do\n    list[i] = temp[i]\n  end\n  return list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[(i + m - 1) % n + 1] = list[i]\n    end\n    return new_list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    if m == 0 then\n        return list\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local n = #list\n  if m < 0 then\n    m = m + n\n  end\n  m = m % n\n  if m == 0 then\n    return list\n  end\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local result = {}\n  local n = #list\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        local j = (i + m - 1) % n + 1\n        new_list[i] = list[j]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "  local n = #list\n  m = m % n\n  local temp = {}\n  for i = 1, m do\n    temp[i] = list[n - m + i]\n  end\n  for i = n - m, 1, -1 do\n    list[i + m] = list[i]\n  end\n  for i = 1, m do\n    list[i] = temp[i]\n  end\n  return list\nend",
    "  local n = #list\n  local r = m % n\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + r - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local len = #list\n    local result = {}\n    for i = 1, len do\n        result[i] = list[(i + m - 1) % len + 1]\n    end\n    return result\nend",
    "    local n = #list\n    if m < 0 then\n        m = n + m\n    end\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local rotated = {}\n  for i = 1, n do\n    rotated[i] = list[(i + m - 1) % n + 1]\n  end\n  return rotated\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local r = m % n\n  local res = {}\n  for i = 1, n do\n    res[i] = list[(i + r - 1) % n + 1]\n  end\n  return res\nend",
    "  local n = #list\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local m = m % n\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + m - 1) % n + 1]\n    end\n    return result\nend",
    "  local n = #list\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + m - 1) % n + 1]\n  end\n  return t\nend",
    "  local n = #list\n  local rotated = {}\n  for i = 1, n do\n    rotated[i] = list[(i + m - 1) % n + 1]\n  end\n  return rotated\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  m = m % n\n  local temp = {}\n  for i = 1, m do\n    temp[i] = list[n - m + i]\n  end\n  for i = 1, n - m do\n    list[i + m] = list[i]\n  end\n  for i = 1, m do\n    list[i] = temp[i]\n  end\n  return list\nend",
    "    local n = #list\n    if m < 0 then\n        m = m + n\n    end\n    for i = 1, m do\n        local last = list[n]\n        for j = n, 2, -1 do\n            list[j] = list[j - 1]\n        end\n        list[1] = last\n    end\n    return list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local m = m % n\n    local temp = {}\n    for i = 1, m do\n        temp[i] = list[n - m + i]\n    end\n    for i = n - m, 1, -1 do\n        list[i + m] = list[i]\n    end\n    for i = 1, m do\n        list[i] = temp[i]\n    end\n    return list\nend",
    "  local n = #list\n  m = m % n\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local result = {}\n    for i = 1, #list do\n        result[i] = list[(i + m - 1) % #list + 1]\n    end\n    return result\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[(i + m - 1) % n + 1] = list[i]\n    end\n    return new_list\nend",
    "  local n = #list\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "    local n = #list\n    local m = m % n\n    local temp = {}\n    for i = 1, m do\n        temp[i] = list[n - m + i]\n    end\n    for i = n - m, 1, -1 do\n        list[i + m] = list[i]\n    end\n    for i = 1, m do\n        list[i] = temp[i]\n    end\n    return list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local result = {}\n    for i = 1, n do\n        result[i] = list[(i + r - 1) % n + 1]\n    end\n    return result\nend",
    "    local n = #list\n    m = m % n\n    if m == 0 then return list end\n    local t = {}\n    for i = 1, n do\n        t[i] = list[(i + m - 1) % n + 1]\n    end\n    return t\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "    local n = #list\n    if n == 0 then return list end\n    m = m % n\n    if m == 0 then return list end\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local result = {}\n  for i = 1, n do\n    result[i] = list[(i + m - 1) % n + 1]\n  end\n  return result\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  local new_list = {}\n  for i = 1, n do\n    new_list[i] = list[(i + m - 1) % n + 1]\n  end\n  return new_list\nend",
    "  local n = #list\n  if m > n then\n    m = m % n\n  end\n  for i = 1, m do\n    local last = list[n]\n    for j = n, 2, -1 do\n      list[j] = list[j - 1]\n    end\n    list[1] = last\n  end\n  return list\nend",
    "    local n = #list\n    if m > n then\n        m = m % n\n    end\n    for i = 1, m do\n        local last = list[n]\n        for j = n, 2, -1 do\n            list[j] = list[j - 1]\n        end\n        list[1] = last\n    end\n    return list\nend",
    "  local n = #list\n  local r = m % n\n  local t = {}\n  for i = 1, n do\n    t[i] = list[(i + r - 1) % n + 1]\n  end\n  return t\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + m - 1) % n + 1]\n    end\n    return new_list\nend",
    "    local n = #list\n    local new_list = {}\n    for i = 1, n do\n        new_list[(i + m - 1) % n + 1] = list[i]\n    end\n    return new_list\nend",
    "    local n = #list\n    local r = m % n\n    local new_list = {}\n    for i = 1, n do\n        new_list[i] = list[(i + r - 1) % n + 1]\n    end\n    return new_list\nend"
  ]
}
{
  "name": "mbpp_120_max_product_tuple",
  "language": "lua",
  "prompt": "-- Write a function to find the maximum absolute product between numbers in pairs of tables within a given table.\nlocal function max_product_tuple(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_product_tuple\n    lu.assertEquals(candidate({{2, 7}, {2, 6}, {1, 8}, {4, 9}}), 36)\n    lu.assertEquals(candidate({{10, 20}, {15, 2}, {5, 10}}), 200)\n    lu.assertEquals(candidate({{11, 44}, {10, 15}, {20, 5}, {12, 9}}), 484)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = math.abs(list1[i][j] * list1[i][k])\n                    if product > max_product then\n                        max_product = product\n                    end\n                end\n            end\n        end\n    end\n    return max_product\nend",
    "  local max = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        if i ~= j and j ~= k and i ~= k then\n          local product = list1[i][j] * list1[i][k]\n          if product > max then\n            max = product\n          end\n        end\n      end\n    end\n  end\n  return max\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        if i ~= k and j ~= k then\n          local product = list1[i][j] * list1[i][k]\n          if product > max_product then\n            max_product = product\n          end\n        end\n      end\n    end\n  end\n  return max_product\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = i + 1, #list1 do\n      local product = math.abs(list1[i] * list1[j])\n      if product > max_product then\n        max_product = product\n      end\n    end\n  end\n  return max_product\nend",
    "    local max_product = -math.huge\n    for i = 1, #list1 do\n        for j = i + 1, #list1 do\n            local product = list1[i] * list1[j]\n            if product > max_product then\n                max_product = product\n            end\n        end\n    end\n    return max_product\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        local product = math.abs(list1[i][j] * list1[i][k])\n        if product > max_product then\n          max_product = product\n        end\n      end\n    end\n  end\n  return max_product\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = list1[i][j] * list1[i][k]\n                    if product > max then\n                        max = product\n                    end\n                end\n            end\n        end\n    end\n    return max\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        if i ~= k and j ~= k then\n          local product = math.abs(list1[i][j] * list1[i][k])\n          if product > max_product then\n            max_product = product\n          end\n        end\n      end\n    end\n  end\n  return max_product\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = math.abs(list1[i][j] * list1[i][k])\n                    if product > max then\n                        max = product\n                    end\n                end\n            end\n        end\n    end\n    return max\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = math.abs(list1[i][j] * list1[i][k])\n                    if product > max_product then\n                        max_product = product\n                    end\n                end\n            end\n        end\n    end\n    return max_product\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        local product = list1[i][j] * list1[i][k]\n        if product > max_product then\n          max_product = product\n        end\n      end\n    end\n  end\n  return max_product\nend",
    "  local max = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      local product = list1[i][j] * list1[i][j+1]\n      if product > max then\n        max = product\n      end\n    end\n  end\n  return max\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k then\n                    local product = list1[i][j] * list1[k][j]\n                    if math.abs(product) > max then\n                        max = math.abs(product)\n                    end\n                end\n            end\n        end\n    end\n    return max\nend",
    "  local max_product = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        local product = math.abs(list1[i][j] * list1[i][k])\n        if product > max_product then\n          max_product = product\n        end\n      end\n    end\n  end\n  return max_product\nend",
    "  local max = 0\n  for i = 1, #list1 do\n    for j = 1, #list1[i] do\n      for k = 1, #list1[i] do\n        if i ~= k and j ~= k then\n          local prod = list1[i][j] * list1[i][k]\n          if prod > max then\n            max = prod\n          end\n        end\n      end\n    end\n  end\n  return max\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= j and j ~= k and k ~= i then\n                    local product = list1[i][j] * list1[i][k]\n                    if product > max_product then\n                        max_product = product\n                    end\n                end\n            end\n        end\n    end\n    return max_product\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = list1[i][j] * list1[i][k]\n                    if product > max_product then\n                        max_product = product\n                    end\n                end\n            end\n        end\n    end\n    return max_product\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = list1[i][j] * list1[i][k]\n                    if product > max_product then\n                        max_product = product\n                    end\n                end\n            end\n        end\n    end\n    return max_product\nend",
    "    local max_product = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = math.abs(list1[i][j] * list1[i][k])\n                    if product > max_product then\n                        max_product = product\n                    end\n                end\n            end\n        end\n    end\n    return max_product\nend",
    "    local max = 0\n    for i = 1, #list1 do\n        for j = 1, #list1[i] do\n            for k = 1, #list1[i] do\n                if i ~= k and j ~= k then\n                    local product = list1[i][j] * list1[i][k]\n                    if product > max then\n                        max = product\n                    end\n                end\n            end\n        end\n    end\n    return max\nend"
  ]
}
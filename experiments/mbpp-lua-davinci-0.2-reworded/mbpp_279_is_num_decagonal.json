{
  "name": "mbpp_279_is_num_decagonal",
  "language": "lua",
  "prompt": "-- Write a function to find the nth decagonal number.\nlocal function is_num_decagonal(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_num_decagonal\n    lu.assertEquals(candidate(3), 27)\n    lu.assertEquals(candidate(7), 175)\n    lu.assertEquals(candidate(10), 370)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return num == math.floor(num)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local n2 = n * 2\n  local n3 = n * 3\n  local n4 = n * 4\n  local n5 = n * 5\n  local n6 = n * 6\n  local n7 = n * 7\n  local n8 = n * 8\n  local n9 = n * 9\n  local n10 = n * 10\n  local n11 = n * 11\n  local n12 = n * 12\n  local n13 = n * 13\n  local n14 = n * 14\n  local n15 = n * 15\n  local n16 = n * 16\n  local n17 = n * 17\n  local n18 = n * 18\n  local n19 = n * 19\n  local n20 = n * 20\n  local n21 = n * 21\n  local n22 = n * 22\n  local n23 = n * 23\n  local n24 = n * 24\n  local n25 = n * 25\n  local n26 = n * 26\n  local n27 = n * 27\n  local n28 = n * 28\n  local n29 = n * 29\n  local n30 = n * 30\n  local n31 = n * 31\n  local n32 = n * 32\n  local n33 = n * 33\n  local n34 = n * 34\n  local n35 = n * 35\n  local n36 = n * 36\n  local n37 = n * 37\n  local n38 = n * 38\n  local n39 = n * 39\n  local n40 = n * 40\n  local n41 = n * 41\n  local n42 = n * 42\n  local n43 = n * 43\n  local n44 = n * 44\n  local n45 = n * 45\n  local n46 = n * 46\n  local n47 = n * 47\n  local n48 = n * 48\n  local n49 = n * 49\n  local n50 = n * 50\n  local n51 = n * 51\n  local n52 = n * 52\n  local n53 = n * 53\n  local n54 = n * 54\n  local n55 = n * 55\n  local n56 = n * 56\n  local n57 = n * 57\n  local n58 = n *",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(n * 2)\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  return nth_decagonal\nend",
    "  local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return num == math.floor(num)\nend",
    "  local nth_decagonal = (3*n^2 - n) / 2\n  return nth_decagonal\nend"
  ]
}
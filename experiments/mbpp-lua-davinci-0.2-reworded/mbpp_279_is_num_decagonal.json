{
  "name": "mbpp_279_is_num_decagonal",
  "language": "lua",
  "prompt": "-- Write a function to find the nth decagonal number.\nlocal function is_num_decagonal(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_num_decagonal\n    lu.assertEquals(candidate(3), 27)\n    lu.assertEquals(candidate(7), 175)\n    lu.assertEquals(candidate(10), 370)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return num == math.floor(num)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local n2 = n * 2\n  local n3 = n * 3\n  local n4 = n * 4\n  local n5 = n * 5\n  local n6 = n * 6\n  local n7 = n * 7\n  local n8 = n * 8\n  local n9 = n * 9\n  local n10 = n * 10\n  local n11 = n * 11\n  local n12 = n * 12\n  local n13 = n * 13\n  local n14 = n * 14\n  local n15 = n * 15\n  local n16 = n * 16\n  local n17 = n * 17\n  local n18 = n * 18\n  local n19 = n * 19\n  local n20 = n * 20\n  local n21 = n * 21\n  local n22 = n * 22\n  local n23 = n * 23\n  local n24 = n * 24\n  local n25 = n * 25\n  local n26 = n * 26\n  local n27 = n * 27\n  local n28 = n * 28\n  local n29 = n * 29\n  local n30 = n * 30\n  local n31 = n * 31\n  local n32 = n * 32\n  local n33 = n * 33\n  local n34 = n * 34\n  local n35 = n * 35\n  local n36 = n * 36\n  local n37 = n * 37\n  local n38 = n * 38\n  local n39 = n * 39\n  local n40 = n * 40\n  local n41 = n * 41\n  local n42 = n * 42\n  local n43 = n * 43\n  local n44 = n * 44\n  local n45 = n * 45\n  local n46 = n * 46\n  local n47 = n * 47\n  local n48 = n * 48\n  local n49 = n * 49\n  local n50 = n * 50\n  local n51 = n * 51\n  local n52 = n * 52\n  local n53 = n * 53\n  local n54 = n * 54\n  local n55 = n * 55\n  local n56 = n * 56\n  local n57 = n * 57\n  local n58 = n *",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(n * 2)\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  return nth_decagonal\nend",
    "  local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return num == math.floor(num)\nend",
    "  local nth_decagonal = (3*n^2 - n) / 2\n  return nth_decagonal\nend",
    "    local nth_decagonal = (3*n^2 - n)/2\n    return nth_decagonal\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local n10 = 10 * n\n  local n2 = 2 * n\n  local n1 = n\n  local n0 = 1\n  local d = math.floor(n10 / 3)\n  local m = n10 % 3\n  if m == 0 then\n    return true\n  elseif m == 1 then\n    return n2 % 4 == 0 and n1 % 2 == 0 and n0 % 1 == 0\n  elseif m == 2 then\n    return n2 % 2 == 0 and n1 % 1 == 0\n  end\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local x = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return x == math.floor(x)\nend",
    "    local x = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n    return x == math.floor(x)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth = math.sqrt(n*2)\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "    local nth_decagonal = n * (3 * n - 2)\n    local nth_triangle = math.sqrt(nth_decagonal * 2)\n    local nth_pentagonal = math.sqrt(nth_decagonal * 24 + 1)\n    local nth_hexagonal = math.sqrt(nth_decagonal * 8 + 1) / 4\n    return nth_triangle == math.floor(nth_triangle) and\n           nth_pentagonal == math.floor(nth_pentagonal) and\n           nth_hexagonal == math.floor(nth_hexagonal)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return num == math.floor(num)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local n = math.floor(n)\n  local d = (math.sqrt(4*n + 1) + 1)/2\n  return d == math.floor(d)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal x = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn x == math.floor(x)\nend",
    "  local n2 = n * 2\n  local n3 = n * 3\n  local n4 = n * 4\n  local n5 = n * 5\n  local n6 = n * 6\n  local n7 = n * 7\n  local n8 = n * 8\n  local n9 = n * 9\n  local n10 = n * 10\n  local n11 = n * 11\n  local n12 = n * 12\n  local n13 = n * 13\n  local n14 = n * 14\n  local n15 = n * 15\n  local n16 = n * 16\n  local n17 = n * 17\n  local n18 = n * 18\n  local n19 = n * 19\n  local n20 = n * 20\n  local n21 = n * 21\n  local n22 = n * 22\n  local n23 = n * 23\n  local n24 = n * 24\n  local n25 = n * 25\n  local n26 = n * 26\n  local n27 = n * 27\n  local n28 = n * 28\n  local n29 = n * 29\n  local n30 = n * 30\n  local n31 = n * 31\n  local n32 = n * 32\n  local n33 = n * 33\n  local n34 = n * 34\n  local n35 = n * 35\n  local n36 = n * 36\n  local n37 = n * 37\n  local n38 = n * 38\n  local n39 = n * 39\n  local n40 = n * 40\n  local n41 = n * 41\n  local n42 = n * 42\n  local n43 = n * 43\n  local n44 = n * 44\n  local n45 = n * 45\n  local n46 = n * 46\n  local n47 = n * 47\n  local n48 = n * 48\n  local n49 = n * 49\n  local n50 = n * 50\n  local n51 = n * 51\n  local n52 = n * 52\n  local n53 = n * 53\n  local n54 = n * 54\n  local n55 = n * 55\n  local n56 = n * 56\n  local n57 = n * 57\n  local n58 = n *",
    "    local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return num % 1 == 0\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = n * (3 * n - 1) / 2\n  local nth_hexagonal = n * (2 * n - 1)\n  return nth_decagonal == nth_pentagonal and nth_decagonal == nth_hexagonal\nend",
    "  local n2 = n*2\n  local n3 = n*3\n  local n4 = n*4\n  local n5 = n*5\n  local n6 = n*6\n  local n7 = n*7\n  local n8 = n*8\n  local n9 = n*9\n  local n10 = n*10\n  local n11 = n*11\n  local n12 = n*12\n  local n13 = n*13\n  local n14 = n*14\n  local n15 = n*15\n  local n16 = n*16\n  local n17 = n*17\n  local n18 = n*18\n  local n19 = n*19\n  local n20 = n*20\n  local n21 = n*21\n  local n22 = n*22\n  local n23 = n*23\n  local n24 = n*24\n  local n25 = n*25\n  local n26 = n*26\n  local n27 = n*27\n  local n28 = n*28\n  local n29 = n*29\n  local n30 = n*30\n  local n31 = n*31\n  local n32 = n*32\n  local n33 = n*33\n  local n34 = n*34\n  local n35 = n*35\n  local n36 = n*36\n  local n37 = n*37\n  local n38 = n*38\n  local n39 = n*39\n  local n40 = n*40\n  local n41 = n*41\n  local n42 = n*42\n  local n43 = n*43\n  local n44 = n*44\n  local n45 = n*45\n  local n46 = n*46\n  local n47 = n*47\n  local n48 = n*48\n  local n49 = n*49\n  local n50 = n*50\n  local n51 = n*51\n  local n52 = n*52\n  local n53 = n*53\n  local n54 = n*54\n  local n55 = n*55\n  local n56 = n*56\n  local n57 = n*57\n  local n58 = n*",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n    if nth_pentagonal == math.floor(nth_pentagonal) then\n        return true\n    end\n    return false\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "\tlocal n = tonumber(n)\n\tif n == nil then return false end\n\tlocal x = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn x == math.floor(x)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = 0\n  local nth_decagonal_index = 0\n  local nth_decagonal_index_plus_1 = 0\n  local nth_decagonal_index_plus_2 = 0\n  local nth_decagonal_index_plus_3 = 0\n  local nth_decagonal_index_plus_4 = 0\n  local nth_decagonal_index_plus_5 = 0\n  local nth_decagonal_index_plus_6 = 0\n  local nth_decagonal_index_plus_7 = 0\n  local nth_decagonal_index_plus_8 = 0\n  local nth_decagonal_index_plus_9 = 0\n  local nth_decagonal_index_plus_10 = 0\n  local nth_decagonal_index_plus_11 = 0\n  local nth_decagonal_index_plus_12 = 0\n  local nth_decagonal_index_plus_13 = 0\n  local nth_decagonal_index_plus_14 = 0\n  local nth_decagonal_index_plus_15 = 0\n  local nth_decagonal_index_plus_16 = 0\n  local nth_decagonal_index_plus_17 = 0\n  local nth_decagonal_index_plus_18 = 0\n  local nth_decagonal_index_plus_19 = 0\n  local nth_decagonal_index_plus_20 = 0\n  local nth_decagonal_index_plus_21 = 0\n  local nth_decagonal_index_plus_22 = 0\n  local nth_decagonal_index_plus_23 = 0\n  local nth_decagonal_index_plus_24 = 0\n  local nth_decagonal_index_plus_25 = 0\n  local nth_decagonal_index_plus_26 = 0\n  local nth_decagonal_index_plus_27 = 0\n  local nth_decagonal_index_plus_28 = 0\n  local nth_decagonal_index_plus_29 = 0\n  local nth_decagonal_index_plus_30 = 0\n  local nth_decagonal_index",
    "    local nth = math.sqrt(2*n/5 + 1/4)\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = math.sqrt(2*n/5 + 1/4)\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n  local nth_hexagonal = (math.sqrt(8 * nth_decagonal + 1) + 1) / 4\n  if math.floor(nth_pentagonal) == nth_pentagonal and\n     math.floor(nth_hexagonal) == nth_hexagonal then\n    return true\n  else\n    return false\n  end\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n    return nth_decagonal_sqrt_int * nth_decagonal_sqrt_int == nth_decagonal\nend",
    "  local nth_decagonal = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth_decagonal == math.floor(nth_decagonal)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n  return nth_decagonal_sqrt_int == nth_decagonal_sqrt\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = (1 + math.sqrt(1 + 24 * nth_decagonal)) / 6\n  return nth_pentagonal == math.floor(nth_pentagonal)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(40 * n + 9) + 3) / 10\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local x = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n    return x == math.floor(x)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal n1 = (3 + math.sqrt(9 + 40 * n)) / 10\n\treturn n1 == math.floor(n1)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return num == math.floor(num)\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n  if math.floor(nth_pentagonal) == nth_pentagonal then\n    return true\n  else\n    return false\n  end\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth = math.sqrt(n * 2)\n    return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = n * (3 * n - 2)\n\treturn nth_decagonal\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n^2 - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local n1 = (math.sqrt(40 * n + 9) + 3) / 10\n    return n1 == math.floor(n1)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    local nth_decagonal_sqrt_floor = math.floor(nth_decagonal_sqrt)\n    local nth_decagonal_sqrt_ceil = math.ceil(nth_decagonal_sqrt)\n    local nth_decagonal_sqrt_floor_sqr = nth_decagonal_sqrt_floor * nth_decagonal_sqrt_floor\n    local nth_decagonal_sqrt_ceil_sqr = nth_decagonal_sqrt_ceil * nth_decagonal_sqrt_ceil\n    if nth_decagonal_sqrt_floor_sqr == nth_decagonal or nth_decagonal_sqrt_ceil_sqr == nth_decagonal then\n        return true\n    else\n        return false\n    end\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_floor = math.floor(nth_decagonal_sqrt)\n  if nth_decagonal_sqrt_floor == nth_decagonal_sqrt then\n    local nth_decagonal_sqrt_floor_plus_1 = nth_decagonal_sqrt_floor + 1\n    local nth_decagonal_sqrt_floor_plus_1_sqrt = math.sqrt(nth_decagonal_sqrt_floor_plus_1)\n    local nth_decagonal_sqrt_floor_plus_1_sqrt_floor = math.floor(nth_decagonal_sqrt_floor_plus_1_sqrt)\n    if nth_decagonal_sqrt_floor_plus_1_sqrt_floor == nth_decagonal_sqrt_floor_plus_1_sqrt then\n      return true\n    end\n  end\n  return false\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n    local nth_triangular = (-1 + math.sqrt(1 + 8 * nth_decagonal)) / 2\n    return nth_decagonal, nth_pentagonal, nth_triangular\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(4*n + 1) + 1)/2\n  return nth == math.floor(nth)\nend",
    "  local d = (math.sqrt(1 + 4 * 3 * 2 * n) - 1) / 6\n  return d == math.floor(d)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local x = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n  return x == math.floor(x)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    return nth_decagonal\nend",
    "  local nth = ((math.sqrt(1 + 4 * 2 * n) - 1) / 2)\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3*n^2 - n) / 2\n  local nth_pentagonal = (1/6) * (1 + math.sqrt(1 + 24*nth_decagonal))\n  return nth_pentagonal == math.floor(nth_pentagonal)\nend",
    "  local n = math.sqrt(n * 2)\n  return n == math.floor(n)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = math.floor(math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n  return nth_pentagonal == math.floor(nth_pentagonal)\nend",
    "    local nth_decagonal = (3*n*n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local n = n or 0\n    local n_decagonal = (math.sqrt(1 + 4 * 3 * 2 * n) + 1) / 6\n    return n_decagonal == math.floor(n_decagonal)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = n * (3 * n - 2)\n    local nth_pentagonal = (1 + math.sqrt(1 + 24 * nth_decagonal)) / 6\n    return nth_pentagonal == math.floor(nth_pentagonal)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3*n^2 - n)/2\n    local nth_pentagonal = (1/6)*(math.sqrt(24*nth_decagonal+1)+1)\n    local nth_triangular = (-1 + math.sqrt(1+8*nth_decagonal))/2\n    return (nth_decagonal == math.floor(nth_decagonal) and\n            nth_pentagonal == math.floor(nth_pentagonal) and\n            nth_triangular == math.floor(nth_triangular))\nend",
    "\tlocal nth_decagonal = (3*n^2 - n) / 2\n\treturn nth_decagonal\nend",
    "    local n1 = (math.sqrt(40 * n + 9) + 3) / 10\n    return n1 == math.floor(n1)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "  local n1 = (math.sqrt(40 * n + 9) - 3) / 10\n  return n1 == math.floor(n1)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n  return nth_decagonal_sqrt_int * nth_decagonal_sqrt_int == nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = ((math.sqrt(4 * n + 1) + 1) / 2)\n  return nth == math.floor(nth)\nend",
    "  local nth = ((math.sqrt(4*n + 1) + 1) / 2)\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_pentagonal = n * (3 * n - 1) / 2\n  local nth_hexagonal = n * (2 * n - 1)\n  return nth_decagonal == nth_pentagonal and nth_decagonal == nth_hexagonal\nend",
    "    local nth_decagonal = n * (3 * n - 2)\n    local nth_pentagonal = math.floor(math.sqrt(nth_decagonal * 24 + 1) + 1) / 6\n    if nth_pentagonal == math.floor(nth_pentagonal) then\n        return true\n    else\n        return false\n    end\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = n * (3 * n - 2)\n    local nth_pentagonal = (1 + math.sqrt(1 + 24 * nth_decagonal)) / 6\n    return math.floor(nth_pentagonal) == nth_pentagonal\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3 * n * n - n) / 2\n  return nth_decagonal\nend",
    "    local nth_decagonal = (3*n^2 - n) / 2\n    local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n    local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n    return nth_decagonal_sqrt == nth_decagonal_sqrt_int\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth_decagonal = (3*n^2 - n) / 2\n  return nth_decagonal % 1 == 0\nend",
    "  local nth = (math.sqrt(4 * n + 1) + 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth_decagonal = (3 * n * n - n) / 2\n\treturn nth_decagonal\nend",
    "\tlocal nth = 0.1 * (3 * n * n - n)\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  local nth_triangle = math.sqrt(nth_decagonal * 2)\n  return nth_triangle % 1 == 0\nend",
    "  local nth_decagonal = (3*n^2 - n) / 2\n  local nth_decagonal_sqrt = math.sqrt(nth_decagonal)\n  local nth_decagonal_sqrt_int = math.floor(nth_decagonal_sqrt)\n  return nth_decagonal_sqrt == nth_decagonal_sqrt_int\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal\nend",
    "    local n1 = (math.sqrt(40 * n + 9) + 3) / 10\n    return n1 == math.floor(n1)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local num = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return num == math.floor(num)\nend",
    "    local nth_decagonal = (3 * n^2 - n) / 2\n    return nth_decagonal % 1 == 0\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth_decagonal = n * (3 * n - 2) / 2\n    local nth_pentagonal = (math.sqrt(24 * nth_decagonal + 1) + 1) / 6\n    local nth_hexagonal = (math.sqrt(8 * nth_decagonal + 1) + 1) / 4\n    return nth_pentagonal == math.floor(nth_pentagonal) and nth_hexagonal == math.floor(nth_hexagonal)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "  local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n    return nth == math.floor(nth)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "\tlocal nth = (math.sqrt(1 + 4 * 2 * n) - 1) / 2\n\treturn nth == math.floor(nth)\nend",
    "\tlocal n1 = (math.sqrt(40*n+9)-3)/10\n\treturn n1 == math.floor(n1)\nend",
    "    local nth_decagonal = (3 * n * n - n) / 2\n    return nth_decagonal\nend",
    "  local nth_decagonal = n * (3 * n - 2)\n  return is_num_pentagonal(nth_decagonal)\nend"
  ]
}
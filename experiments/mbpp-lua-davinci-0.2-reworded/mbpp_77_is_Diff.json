{
  "name": "mbpp_77_is_Diff",
  "language": "lua",
  "prompt": "-- Write a luathon function to find whether a number is divisible by 11.\nlocal function is_Diff(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_Diff\n    lu.assertEquals(candidate(12345), false)\n    lu.assertEquals(candidate(1212112), true)\n    lu.assertEquals(candidate(1212), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal sum1, sum2 = 0, 0\n\tlocal n = math.abs(n)\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "  local n = tostring(n)\n  local odd_sum = 0\n  local even_sum = 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "    local n1, n2 = n % 10, n // 10 % 10\n    return n1 - n2 == 0 or is_Diff(n // 10)\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum_odd, sum_even = 0, 0\n\twhile n > 0 do\n\t\tsum_odd = sum_odd + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum_even = sum_even + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum_odd - sum_even\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum, even_sum = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal even, odd = 0, 0\n\twhile n > 0 do\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn (even - odd) % 11 == 0\nend",
    "    local sum = 0\n    local diff = 0\n    local i = 1\n    while n > 0 do\n        local d = n % 10\n        if i % 2 == 0 then\n            diff = diff + d\n        else\n            sum = sum + d\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum - diff\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 1 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal even, odd = 0, 0\n\twhile n > 0 do\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn (even - odd) % 11 == 0\nend",
    "    local sum_odd = 0\n    local sum_even = 0\n    local i = 1\n    while n > 0 do\n        local digit = n % 10\n        if i % 2 == 0 then\n            sum_odd = sum_odd + digit\n        else\n            sum_even = sum_even + digit\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum_odd - sum_even\nend",
    "    local n = tostring(n)\n    local odd_sum = 0\n    local even_sum = 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "    local n1 = 0\n    local n2 = 0\n    local n3 = 0\n    local n4 = 0\n    local n5 = 0\n    local n6 = 0\n    local n7 = 0\n    local n8 = 0\n    local n9 = 0\n    local n10 = 0\n    local n11 = 0\n    local n12 = 0\n    local n13 = 0\n    local n14 = 0\n    local n15 = 0\n    local n16 = 0\n    local n17 = 0\n    local n18 = 0\n    local n19 = 0\n    local n20 = 0\n    local n21 = 0\n    local n22 = 0\n    local n23 = 0\n    local n24 = 0\n    local n25 = 0\n    local n26 = 0\n    local n27 = 0\n    local n28 = 0\n    local n29 = 0\n    local n30 = 0\n    local n31 = 0\n    local n32 = 0\n    local n33 = 0\n    local n34 = 0\n    local n35 = 0\n    local n36 = 0\n    local n37 = 0\n    local n38 = 0\n    local n39 = 0\n    local n40 = 0\n    local n41 = 0\n    local n42 = 0\n    local n43 = 0\n    local n44 = 0\n    local n45 = 0\n    local n46 = 0\n    local n47 = 0\n    local n48 = 0\n    local n49 = 0\n    local n50 = 0\n    local n51 = 0\n    local n52 = 0\n    local n53 = 0\n    local n54 = 0\n    local n55 = 0\n    local n56 = 0\n    local n57 = 0\n    local n58 = 0\n    local n59 = 0\n    local n60 = 0\n    local n61 = 0\n    local n62 = 0\n    local n63 = 0\n    local n64 = 0\n    local n65 = 0\n    local n66 = 0\n    local n67 = 0\n    local n68 = 0\n    local n69 = 0\n    local n70 = 0\n    local n71 = 0\n    local n72 = 0\n    local n73 = 0\n",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal n1,n2 = 0,0\n\tfor i = 1,#tostring(n) do\n\t\tif i % 2 == 0 then\n\t\t\tn1 = n1 + tonumber(tostring(n):sub(i,i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(tostring(n):sub(i,i))\n\t\tend\n\tend\n\treturn n1 - n2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal n1,n2 = 0,0\n\tlocal n = tostring(n)\n\tfor i=1,#n do\n\t\tif i%2 == 0 then\n\t\t\tn1 = n1 + tonumber(n:sub(i,i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(n:sub(i,i))\n\t\tend\n\tend\n\tif (n1 - n2)%11 == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend"
  ]
}
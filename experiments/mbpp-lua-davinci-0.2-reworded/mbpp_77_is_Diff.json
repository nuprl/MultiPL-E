{
  "name": "mbpp_77_is_Diff",
  "language": "lua",
  "prompt": "-- Write a luathon function to find whether a number is divisible by 11.\nlocal function is_Diff(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_Diff\n    lu.assertEquals(candidate(12345), false)\n    lu.assertEquals(candidate(1212112), true)\n    lu.assertEquals(candidate(1212), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal sum1, sum2 = 0, 0\n\tlocal n = math.abs(n)\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "  local n = tostring(n)\n  local odd_sum = 0\n  local even_sum = 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "    local n1, n2 = n % 10, n // 10 % 10\n    return n1 - n2 == 0 or is_Diff(n // 10)\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum_odd, sum_even = 0, 0\n\twhile n > 0 do\n\t\tsum_odd = sum_odd + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum_even = sum_even + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum_odd - sum_even\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum, even_sum = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal even, odd = 0, 0\n\twhile n > 0 do\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn (even - odd) % 11 == 0\nend",
    "    local sum = 0\n    local diff = 0\n    local i = 1\n    while n > 0 do\n        local d = n % 10\n        if i % 2 == 0 then\n            diff = diff + d\n        else\n            sum = sum + d\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum - diff\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 1 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal even, odd = 0, 0\n\twhile n > 0 do\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn (even - odd) % 11 == 0\nend",
    "    local sum_odd = 0\n    local sum_even = 0\n    local i = 1\n    while n > 0 do\n        local digit = n % 10\n        if i % 2 == 0 then\n            sum_odd = sum_odd + digit\n        else\n            sum_even = sum_even + digit\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum_odd - sum_even\nend",
    "    local n = tostring(n)\n    local odd_sum = 0\n    local even_sum = 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "    local n1 = 0\n    local n2 = 0\n    local n3 = 0\n    local n4 = 0\n    local n5 = 0\n    local n6 = 0\n    local n7 = 0\n    local n8 = 0\n    local n9 = 0\n    local n10 = 0\n    local n11 = 0\n    local n12 = 0\n    local n13 = 0\n    local n14 = 0\n    local n15 = 0\n    local n16 = 0\n    local n17 = 0\n    local n18 = 0\n    local n19 = 0\n    local n20 = 0\n    local n21 = 0\n    local n22 = 0\n    local n23 = 0\n    local n24 = 0\n    local n25 = 0\n    local n26 = 0\n    local n27 = 0\n    local n28 = 0\n    local n29 = 0\n    local n30 = 0\n    local n31 = 0\n    local n32 = 0\n    local n33 = 0\n    local n34 = 0\n    local n35 = 0\n    local n36 = 0\n    local n37 = 0\n    local n38 = 0\n    local n39 = 0\n    local n40 = 0\n    local n41 = 0\n    local n42 = 0\n    local n43 = 0\n    local n44 = 0\n    local n45 = 0\n    local n46 = 0\n    local n47 = 0\n    local n48 = 0\n    local n49 = 0\n    local n50 = 0\n    local n51 = 0\n    local n52 = 0\n    local n53 = 0\n    local n54 = 0\n    local n55 = 0\n    local n56 = 0\n    local n57 = 0\n    local n58 = 0\n    local n59 = 0\n    local n60 = 0\n    local n61 = 0\n    local n62 = 0\n    local n63 = 0\n    local n64 = 0\n    local n65 = 0\n    local n66 = 0\n    local n67 = 0\n    local n68 = 0\n    local n69 = 0\n    local n70 = 0\n    local n71 = 0\n    local n72 = 0\n    local n73 = 0\n",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal n1,n2 = 0,0\n\tfor i = 1,#tostring(n) do\n\t\tif i % 2 == 0 then\n\t\t\tn1 = n1 + tonumber(tostring(n):sub(i,i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(tostring(n):sub(i,i))\n\t\tend\n\tend\n\treturn n1 - n2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal n1,n2 = 0,0\n\tlocal n = tostring(n)\n\tfor i=1,#n do\n\t\tif i%2 == 0 then\n\t\t\tn1 = n1 + tonumber(n:sub(i,i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(n:sub(i,i))\n\t\tend\n\tend\n\tif (n1 - n2)%11 == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    local diff = 0\n    while n > 0 do\n        sum1 = sum1 + n % 10\n        n = math.floor(n / 10)\n        sum2 = sum2 + n % 10\n        n = math.floor(n / 10)\n    end\n    diff = sum1 - sum2\n    if diff == 0 then\n        return true\n    else\n        return false\n    end\nend",
    "  local n = tostring(n)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      sum1 = sum1 + tonumber(n:sub(i,i))\n    else\n      sum2 = sum2 + tonumber(n:sub(i,i))\n    end\n  end\n  if math.abs(sum1 - sum2) % 11 == 0 then\n    return true\n  else\n    return false\n  end\nend",
    "\tlocal n1, n2 = 0, 0\n\tlocal n = tostring(n)\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tn1 = n1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn n1 - n2\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "    local n = tostring(n)\n    local odd_sum, even_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + n:sub(i, i)\n        else\n            even_sum = even_sum + n:sub(i, i)\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal n1, n2 = n % 10, n // 10\n\tlocal diff = n1 - n2\n\twhile n2 > 0 do\n\t\tn1, n2 = n2 % 10, n2 // 10\n\t\tdiff = diff - n1 + n2\n\tend\n\treturn diff == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\teven = even + tonumber(n:sub(i, i))\n\t\telse\n\t\t\todd = odd + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd - even) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2 == 0\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 1 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + d\n\t\telse\n\t\t\tsum2 = sum2 + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal n1, n2 = 0, 0\n\tfor i = 1, #tostring(n) do\n\t\tif i % 2 == 0 then\n\t\t\tn1 = n1 + tonumber(tostring(n):sub(i, i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(tostring(n):sub(i, i))\n\t\tend\n\tend\n\treturn n1 - n2\nend",
    "  local n = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      sum1 = sum1 + tonumber(n:sub(i, i))\n    else\n      sum2 = sum2 + tonumber(n:sub(i, i))\n    end\n  end\n  return (sum1 - sum2) % 11 == 0\nend",
    "\tlocal even, odd = 0, 0\n\twhile n > 0 do\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn (even - odd) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum = 0\n\tlocal even_sum = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "    local n = tostring(n)\n    local odd_sum, even_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    local i = 1\n    while n > 0 do\n        local d = n % 10\n        if i % 2 == 0 then\n            sum1 = sum1 + d\n        else\n            sum2 = sum2 + d\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum1 - sum2\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn math.abs(sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum = 0\n\tlocal even_sum = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "    local n = tostring(n)\n    local even_sum, odd_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 0 then\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        else\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (even_sum - odd_sum) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 == n2\nend",
    "    local n = tostring(n)\n    local odd_sum, even_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "  local s = tostring(n)\n  local sum1 = 0\n  local sum2 = 0\n  for i = 1, #s, 2 do\n    sum1 = sum1 + tonumber(s:sub(i, i))\n  end\n  for i = 2, #s, 2 do\n    sum2 = sum2 + tonumber(s:sub(i, i))\n  end\n  return sum1 - sum2\nend",
    "\tlocal s = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #s do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(s:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(s:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal n1, n2 = n, n\n\twhile n1 > 0 do\n\t\tsum1 = sum1 + n1 % 10\n\t\tn1 = math.floor(n1 / 10)\n\tend\n\twhile n2 > 0 do\n\t\tsum2 = sum2 + n2 % 10\n\t\tn2 = math.floor(n2 / 10)\n\t\tsum1 = sum1 - n2 % 10\n\t\tn2 = math.floor(n2 / 10)\n\tend\n\treturn sum1 == 0\nend",
    "  local n = math.abs(n)\n  local sum_odd, sum_even = 0, 0\n  while n > 0 do\n    sum_odd = sum_odd + n % 10\n    n = math.floor(n / 10)\n    sum_even = sum_even + n % 10\n    n = math.floor(n / 10)\n  end\n  return sum_odd - sum_even\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum = 0\n\tlocal even_sum = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i,i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i,i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal s = tostring(n)\n\tlocal l = #s\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, l do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(s:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(s:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1 = n % 10\n\tlocal n2 = (n - n1) / 10\n\tlocal n3 = n1 - n2\n\tif n3 == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    local n1 = 0\n    local n2 = 0\n    local n3 = 0\n    local n4 = 0\n    local n5 = 0\n    local n6 = 0\n    local n7 = 0\n    local n8 = 0\n    local n9 = 0\n    local n10 = 0\n    local n11 = 0\n    local n12 = 0\n    local n13 = 0\n    local n14 = 0\n    local n15 = 0\n    local n16 = 0\n    local n17 = 0\n    local n18 = 0\n    local n19 = 0\n    local n20 = 0\n    local n21 = 0\n    local n22 = 0\n    local n23 = 0\n    local n24 = 0\n    local n25 = 0\n    local n26 = 0\n    local n27 = 0\n    local n28 = 0\n    local n29 = 0\n    local n30 = 0\n    local n31 = 0\n    local n32 = 0\n    local n33 = 0\n    local n34 = 0\n    local n35 = 0\n    local n36 = 0\n    local n37 = 0\n    local n38 = 0\n    local n39 = 0\n    local n40 = 0\n    local n41 = 0\n    local n42 = 0\n    local n43 = 0\n    local n44 = 0\n    local n45 = 0\n    local n46 = 0\n    local n47 = 0\n    local n48 = 0\n    local n49 = 0\n    local n50 = 0\n    local n51 = 0\n    local n52 = 0\n    local n53 = 0\n    local n54 = 0\n    local n55 = 0\n    local n56 = 0\n    local n57 = 0\n    local n58 = 0\n    local n59 = 0\n    local n60 = 0\n    local n61 = 0\n    local n62 = 0\n    local n63 = 0\n    local n64 = 0\n    local n65 = 0\n    local n66 = 0\n    local n67 = 0\n    local n68 = 0\n    local n69 = 0\n    local n70 = 0\n    local n71 = 0\n    local n72 = 0\n    local n73 = 0\n",
    "    local sum_odd, sum_even = 0, 0\n    while n > 0 do\n        local digit = n % 10\n        if digit % 2 == 0 then\n            sum_even = sum_even + digit\n        else\n            sum_odd = sum_odd + digit\n        end\n        n = math.floor(n / 10)\n    end\n    return sum_odd - sum_even\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "    if n < 0 then n = -n end\n    local odd = 0\n    local even = 0\n    while n > 0 do\n        local d = n % 10\n        if d % 2 == 0 then\n            even = even + d\n        else\n            odd = odd + d\n        end\n        n = math.floor(n / 10)\n    end\n    return (odd - even) % 11 == 0\nend",
    "  local n = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      sum1 = sum1 + tonumber(n:sub(i, i))\n    else\n      sum2 = sum2 + tonumber(n:sub(i, i))\n    end\n  end\n  return (sum1 - sum2) % 11 == 0\nend",
    "\tlocal n1,n2 = 0,0\n\tlocal n = math.abs(n)\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "    local n = tostring(n)\n    local odd_sum = 0\n    local even_sum = 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum = 0\n\tlocal even_sum = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    local i = 1\n    while n > 0 do\n        if i % 2 == 0 then\n            sum1 = sum1 + n % 10\n        else\n            sum2 = sum2 + n % 10\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum1 == sum2\nend",
    "    local n = tostring(n)\n    local evenSum, oddSum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 0 then\n            evenSum = evenSum + tonumber(n:sub(i, i))\n        else\n            oddSum = oddSum + tonumber(n:sub(i, i))\n        end\n    end\n    return (evenSum - oddSum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal s = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #s, 2 do\n\t\tsum1 = sum1 + tonumber(s:sub(i, i))\n\tend\n\tfor i = 2, #s, 2 do\n\t\tsum2 = sum2 + tonumber(s:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn sum1 - sum2\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    local i = 1\n    while n > 0 do\n        local d = n % 10\n        if i % 2 == 1 then\n            sum1 = sum1 + d\n        else\n            sum2 = sum2 + d\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return math.abs(sum1 - sum2) % 11 == 0\nend",
    "    local n = tostring(n)\n    local odd_sum, even_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "  local n1 = 0\n  local n2 = 0\n  while n > 0 do\n    n1 = n1 + n % 10\n    n = math.floor(n / 10)\n    n2 = n2 + n % 10\n    n = math.floor(n / 10)\n  end\n  return n1 == n2\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum, even_sum = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "    local n = tostring(n)\n    local evenSum, oddSum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 0 then\n            evenSum = evenSum + tonumber(n:sub(i, i))\n        else\n            oddSum = oddSum + tonumber(n:sub(i, i))\n        end\n    end\n    return math.abs(evenSum - oddSum) % 11 == 0\nend",
    "  if n < 0 then n = -n end\n  local odd_sum = 0\n  local even_sum = 0\n  local digit = 0\n  while n > 0 do\n    digit = n % 10\n    if digit % 2 == 0 then\n      even_sum = even_sum + digit\n    else\n      odd_sum = odd_sum + digit\n    end\n    n = math.floor(n / 10)\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal even, odd = 0, 0\n\twhile n > 0 do\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn (even - odd) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\tlocal n = math.abs(n)\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal odd, even = 0, 0\n\twhile n > 0 do\n\t\todd = odd + n % 10\n\t\tn = math.floor(n / 10)\n\t\teven = even + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn odd - even\nend",
    "  local n = tostring(n)\n  local even_sum = 0\n  local odd_sum = 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      even_sum = even_sum + tonumber(n:sub(i,i))\n    else\n      odd_sum = odd_sum + tonumber(n:sub(i,i))\n    end\n  end\n  if math.abs(even_sum - odd_sum) % 11 == 0 then\n    return true\n  else\n    return false\n  end\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tdiff = diff + d\n\t\telse\n\t\t\tsum = sum + d\n\t\tend\n\t\ti = i + 1\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum - diff\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum2 = sum2 + n % 10\n\t\telse\n\t\t\tsum1 = sum1 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "    local n = tostring(n)\n    local even_sum, odd_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 0 then\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        else\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\tlocal n = tostring(n)\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tn1 = n1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (n1 - n2) % 11 == 0\nend",
    "    local sum = 0\n    local diff = 0\n    local i = 1\n    while n > 0 do\n        local d = n % 10\n        if i % 2 == 1 then\n            sum = sum + d\n        else\n            diff = diff + d\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum - diff\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn sum1 == sum2\nend",
    "  local sum1 = 0\n  local sum2 = 0\n  local i = 1\n  while n > 0 do\n    local d = n % 10\n    if i % 2 == 1 then\n      sum1 = sum1 + d\n    else\n      sum2 = sum2 + d\n    end\n    n = math.floor(n / 10)\n    i = i + 1\n  end\n  return sum1 - sum2\nend",
    "    local n = tostring(n)\n    local even, odd = 0, 0\n    for i = 1, #n do\n        if i % 2 == 0 then\n            even = even + tonumber(n:sub(i, i))\n        else\n            odd = odd + tonumber(n:sub(i, i))\n        end\n    end\n    return (even - odd) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 1 then\n\t\t\tsum1 = sum1 + d\n\t\telse\n\t\t\tsum2 = sum2 + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal n = n\n\tlocal n1 = 0\n\tlocal n2 = 0\n\tlocal n3 = 0\n\tlocal n4 = 0\n\tlocal n5 = 0\n\tlocal n6 = 0\n\tlocal n7 = 0\n\tlocal n8 = 0\n\tlocal n9 = 0\n\tlocal n10 = 0\n\tlocal n11 = 0\n\tlocal n12 = 0\n\tlocal n13 = 0\n\tlocal n14 = 0\n\tlocal n15 = 0\n\tlocal n16 = 0\n\tlocal n17 = 0\n\tlocal n18 = 0\n\tlocal n19 = 0\n\tlocal n20 = 0\n\tlocal n21 = 0\n\tlocal n22 = 0\n\tlocal n23 = 0\n\tlocal n24 = 0\n\tlocal n25 = 0\n\tlocal n26 = 0\n\tlocal n27 = 0\n\tlocal n28 = 0\n\tlocal n29 = 0\n\tlocal n30 = 0\n\tlocal n31 = 0\n\tlocal n32 = 0\n\tlocal n33 = 0\n\tlocal n34 = 0\n\tlocal n35 = 0\n\tlocal n36 = 0\n\tlocal n37 = 0\n\tlocal n38 = 0\n\tlocal n39 = 0\n\tlocal n40 = 0\n\tlocal n41 = 0\n\tlocal n42 = 0\n\tlocal n43 = 0\n\tlocal n44 = 0\n\tlocal n45 = 0\n\tlocal n46 = 0\n\tlocal n47 = 0\n\tlocal n48 = 0\n\tlocal n49 = 0\n\tlocal n50 = 0\n\tlocal n51 = 0\n\tlocal n52 = 0\n\tlocal n53 = 0\n\tlocal n54 = 0\n\tlocal n55 = 0\n\tlocal n56 = 0\n\tlocal n57 = 0\n\tlocal n58 = 0\n\tlocal n59 = 0\n\tlocal n60 = 0\n\tlocal n61 = 0\n\tlocal n62 = 0\n\tlocal n63 = 0\n\tlocal n64 = 0\n\tlocal n65 = 0\n\tlocal n66 = 0\n\tlocal n67 = 0\n\tlocal n68 = 0\n\tlocal n69 = 0\n\tlocal n70 = 0\n\tlocal n71 = 0\n\tlocal n72 = 0\n\t",
    "\tlocal n = tostring(n)\n\tlocal even = 0\n\tlocal odd = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\teven = even + tonumber(n:sub(i, i))\n\t\telse\n\t\t\todd = odd + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd - even) % 11 == 0\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal dig = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tdiff = diff - dig\n\t\telse\n\t\t\tsum = sum + dig\n\t\tend\n\t\tn = n / 10\n\t\ti = i + 1\n\tend\n\treturn sum == diff\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "  local sum_even, sum_odd = 0, 0\n  while n > 0 do\n    local digit = n % 10\n    if digit % 2 == 0 then\n      sum_even = sum_even + digit\n    else\n      sum_odd = sum_odd + digit\n    end\n    n = math.floor(n / 10)\n  end\n  return sum_even - sum_odd\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal n = math.abs(n)\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "    local sum_odd, sum_even = 0, 0\n    while n > 0 do\n        sum_odd = sum_odd + n % 10\n        n = math.floor(n / 10)\n        sum_even = sum_even + n % 10\n        n = math.floor(n / 10)\n    end\n    return sum_odd - sum_even\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #tostring(n) do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(tostring(n):sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(tostring(n):sub(i, i))\n\t\tend\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum_even, sum_odd = 0, 0\n\twhile n > 0 do\n\t\tsum_odd = sum_odd + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum_even = sum_even + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum_even - sum_odd\nend",
    "  local s = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #s, 2 do\n    sum1 = sum1 + tonumber(s:sub(i, i))\n  end\n  for i = 2, #s, 2 do\n    sum2 = sum2 + tonumber(s:sub(i, i))\n  end\n  return (sum1 - sum2) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\tlocal n = tostring(n)\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\tn1 = n1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn n1 - n2\nend",
    "    if n < 0 then\n        n = -n\n    end\n    local odd_sum = 0\n    local even_sum = 0\n    local digit\n    while n > 0 do\n        digit = n % 10\n        if digit % 2 == 0 then\n            even_sum = even_sum + digit\n        else\n            odd_sum = odd_sum + digit\n        end\n        n = math.floor(n / 10)\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum_odd, sum_even = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum_even = sum_even + n % 10\n\t\telse\n\t\t\tsum_odd = sum_odd + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum_odd - sum_even\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    local i = 0\n    while n > 0 do\n        sum1 = sum1 + n % 10\n        n = math.floor(n / 10)\n        sum2 = sum2 + n % 10\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    if i % 2 == 0 then\n        return sum1 == sum2\n    else\n        return sum1 == sum2 + n % 10\n    end\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "    local sum1, sum2 = 0, 0\n    while n > 0 do\n        sum1 = sum1 + n % 10\n        n = math.floor(n / 10)\n        sum2 = sum2 + n % 10\n        n = math.floor(n / 10)\n    end\n    return sum1 == sum2\nend",
    "  local n = tostring(n)\n  local even = 0\n  local odd = 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      even = even + tonumber(n:sub(i, i))\n    else\n      odd = odd + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd - even) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn sum1 - sum2\nend",
    "  local n = tostring(n)\n  local odd_sum = 0\n  local even_sum = 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i,i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i,i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "  local sum1 = 0\n  local sum2 = 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      sum1 = sum1 + tonumber(n:sub(i, i))\n    else\n      sum2 = sum2 + tonumber(n:sub(i, i))\n    end\n  end\n  return sum1 - sum2\nend",
    "\tlocal n1 = 0\n\tlocal n2 = 0\n\tlocal n3 = 0\n\tlocal n4 = 0\n\tlocal n5 = 0\n\tlocal n6 = 0\n\tlocal n7 = 0\n\tlocal n8 = 0\n\tlocal n9 = 0\n\tlocal n10 = 0\n\tlocal n11 = 0\n\tlocal n12 = 0\n\tlocal n13 = 0\n\tlocal n14 = 0\n\tlocal n15 = 0\n\tlocal n16 = 0\n\tlocal n17 = 0\n\tlocal n18 = 0\n\tlocal n19 = 0\n\tlocal n20 = 0\n\tlocal n21 = 0\n\tlocal n22 = 0\n\tlocal n23 = 0\n\tlocal n24 = 0\n\tlocal n25 = 0\n\tlocal n26 = 0\n\tlocal n27 = 0\n\tlocal n28 = 0\n\tlocal n29 = 0\n\tlocal n30 = 0\n\tlocal n31 = 0\n\tlocal n32 = 0\n\tlocal n33 = 0\n\tlocal n34 = 0\n\tlocal n35 = 0\n\tlocal n36 = 0\n\tlocal n37 = 0\n\tlocal n38 = 0\n\tlocal n39 = 0\n\tlocal n40 = 0\n\tlocal n41 = 0\n\tlocal n42 = 0\n\tlocal n43 = 0\n\tlocal n44 = 0\n\tlocal n45 = 0\n\tlocal n46 = 0\n\tlocal n47 = 0\n\tlocal n48 = 0\n\tlocal n49 = 0\n\tlocal n50 = 0\n\tlocal n51 = 0\n\tlocal n52 = 0\n\tlocal n53 = 0\n\tlocal n54 = 0\n\tlocal n55 = 0\n\tlocal n56 = 0\n\tlocal n57 = 0\n\tlocal n58 = 0\n\tlocal n59 = 0\n\tlocal n60 = 0\n\tlocal n61 = 0\n\tlocal n62 = 0\n\tlocal n63 = 0\n\tlocal n64 = 0\n\tlocal n65 = 0\n\tlocal n66 = 0\n\tlocal n67 = 0\n\tlocal n68 = 0\n\tlocal n69 = 0\n\tlocal n70 = 0\n\tlocal n71 = 0\n\tlocal n72 = 0\n\tlocal n73 = 0\n",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "    local n = tostring(n)\n    local odd_sum, even_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "  local s = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #s do\n    if i % 2 == 0 then\n      sum1 = sum1 + tonumber(s:sub(i, i))\n    else\n      sum2 = sum2 + tonumber(s:sub(i, i))\n    end\n  end\n  return (sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal num = n\n\twhile num > 0 do\n\t\tsum1 = sum1 + num % 10\n\t\tnum = math.floor(num / 10)\n\t\tsum2 = sum2 + num % 10\n\t\tnum = math.floor(num / 10)\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tdiff = diff - d\n\t\telse\n\t\t\tsum = sum + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum == diff\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "  local sum1 = 0\n  local sum2 = 0\n  local i = 1\n  while n > 0 do\n    local d = n % 10\n    if i % 2 == 0 then\n      sum2 = sum2 + d\n    else\n      sum1 = sum1 + d\n    end\n    i = i + 1\n    n = math.floor(n / 10)\n  end\n  return sum1 - sum2\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum = 0\n\tlocal even_sum = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "    local n = tostring(n)\n    local even_sum = 0\n    local odd_sum = 0\n    for i = 1, #n do\n        if i % 2 == 0 then\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        else\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "  local s = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #s, 2 do\n    sum1 = sum1 + tonumber(s:sub(i, i))\n  end\n  for i = 2, #s, 2 do\n    sum2 = sum2 + tonumber(s:sub(i, i))\n  end\n  return (sum1 - sum2) % 11 == 0\nend",
    "\tlocal even_sum, odd_sum = 0, 0\n\twhile n > 0 do\n\t\teven_sum = even_sum + n % 10\n\t\tn = math.floor(n / 10)\n\t\todd_sum = odd_sum + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn even_sum - odd_sum\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum = 0\n\tfor i = 1, #n do\n\t\tsum = sum + (n:sub(i, i) % 2 == 0 and 1 or -1) * n:sub(i, i)\n\tend\n\treturn sum % 11 == 0\nend",
    "    local n = tostring(n)\n    local sum1, sum2 = 0, 0\n    for i = 1, #n, 2 do\n        sum1 = sum1 + tonumber(n:sub(i, i))\n    end\n    for i = 2, #n, 2 do\n        sum2 = sum2 + tonumber(n:sub(i, i))\n    end\n    return sum1 - sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal n1, n2 = n, n\n\twhile n1 > 0 do\n\t\tsum1 = sum1 + n1 % 10\n\t\tn1 = math.floor(n1 / 10)\n\tend\n\twhile n2 > 0 do\n\t\tsum2 = sum2 + n2 % 10\n\t\tn2 = math.floor(n2 / 10)\n\t\tsum1 = sum1 - n2 % 10\n\t\tn2 = math.floor(n2 / 10)\n\tend\n\treturn sum1 == 0\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tdiff = diff - n % 10\n\t\telse\n\t\t\tdiff = diff + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn diff\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local sum1, sum2 = 0, 0\n  while n > 0 do\n    local d = n % 10\n    n = math.floor(n / 10)\n    sum1 = sum1 + d\n    sum2 = sum2 + n % 10\n    n = math.floor(n / 10)\n  end\n  return sum1 == sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + d\n\t\telse\n\t\t\tsum2 = sum2 + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tdiff = diff - d\n\t\telse\n\t\t\tsum = sum + d\n\t\tend\n\t\tn = n // 10\n\t\ti = i + 1\n\tend\n\treturn sum == diff\nend",
    "\tlocal n1 = 0\n\tlocal n2 = 0\n\tlocal n3 = 0\n\tlocal n4 = 0\n\tlocal n5 = 0\n\tlocal n6 = 0\n\tlocal n7 = 0\n\tlocal n8 = 0\n\tlocal n9 = 0\n\tlocal n10 = 0\n\tlocal n11 = 0\n\tlocal n12 = 0\n\tlocal n13 = 0\n\tlocal n14 = 0\n\tlocal n15 = 0\n\tlocal n16 = 0\n\tlocal n17 = 0\n\tlocal n18 = 0\n\tlocal n19 = 0\n\tlocal n20 = 0\n\tlocal n21 = 0\n\tlocal n22 = 0\n\tlocal n23 = 0\n\tlocal n24 = 0\n\tlocal n25 = 0\n\tlocal n26 = 0\n\tlocal n27 = 0\n\tlocal n28 = 0\n\tlocal n29 = 0\n\tlocal n30 = 0\n\tlocal n31 = 0\n\tlocal n32 = 0\n\tlocal n33 = 0\n\tlocal n34 = 0\n\tlocal n35 = 0\n\tlocal n36 = 0\n\tlocal n37 = 0\n\tlocal n38 = 0\n\tlocal n39 = 0\n\tlocal n40 = 0\n\tlocal n41 = 0\n\tlocal n42 = 0\n\tlocal n43 = 0\n\tlocal n44 = 0\n\tlocal n45 = 0\n\tlocal n46 = 0\n\tlocal n47 = 0\n\tlocal n48 = 0\n\tlocal n49 = 0\n\tlocal n50 = 0\n\tlocal n51 = 0\n\tlocal n52 = 0\n\tlocal n53 = 0\n\tlocal n54 = 0\n\tlocal n55 = 0\n\tlocal n56 = 0\n\tlocal n57 = 0\n\tlocal n58 = 0\n\tlocal n59 = 0\n\tlocal n60 = 0\n\tlocal n61 = 0\n\tlocal n62 = 0\n\tlocal n63 = 0\n\tlocal n64 = 0\n\tlocal n65 = 0\n\tlocal n66 = 0\n\tlocal n67 = 0\n\tlocal n68 = 0\n\tlocal n69 = 0\n\tlocal n70 = 0\n\tlocal n71 = 0\n\tlocal n72 = 0\n\tlocal n73 = 0\n",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum, even_sum = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 1 then\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "    local n = tostring(n)\n    local odd_sum, even_sum = 0, 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 == n2\nend",
    "\tlocal s = tostring(n)\n\tlocal l = #s\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, l do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(s:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(s:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "    local n = tostring(n)\n    local len = #n\n    local odd_sum, even_sum = 0, 0\n    for i = 1, len do\n        if i % 2 == 0 then\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        else\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "    local n = tostring(n)\n    local odd_sum = 0\n    local even_sum = 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\tfor i = 1, #tostring(n) do\n\t\tif i % 2 == 0 then\n\t\t\tn1 = n1 + tonumber(tostring(n):sub(i, i))\n\t\telse\n\t\t\tn2 = n2 + tonumber(tostring(n):sub(i, i))\n\t\tend\n\tend\n\treturn n1 - n2\nend",
    "\tlocal sum_even, sum_odd = 0, 0\n\twhile n > 0 do\n\t\tsum_even = sum_even + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum_odd = sum_odd + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum_even - sum_odd\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal s = tostring(n)\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, #s, 2 do\n\t\tsum1 = sum1 + tonumber(s:sub(i, i))\n\tend\n\tfor i = 2, #s, 2 do\n\t\tsum2 = sum2 + tonumber(s:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local sum1 = 0\n  local sum2 = 0\n  local i = 1\n  while n > 0 do\n    local d = n % 10\n    if i % 2 == 1 then\n      sum1 = sum1 + d\n    else\n      sum2 = sum2 + d\n    end\n    n = math.floor(n / 10)\n    i = i + 1\n  end\n  return sum1 - sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal len = #n\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, len, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\tsum2 = sum2 + tonumber(n:sub(i + 1, i + 1))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 1 then\n\t\t\tsum1 = sum1 + d\n\t\telse\n\t\t\tsum2 = sum2 + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "  local sum_odd, sum_even = 0, 0\n  while n > 0 do\n    sum_odd = sum_odd + n % 10\n    n = math.floor(n / 10)\n    sum_even = sum_even + n % 10\n    n = math.floor(n / 10)\n  end\n  return sum_odd - sum_even\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "    local n1, n2 = 0, 0\n    while n > 0 do\n        n1 = n1 + n % 10\n        n = math.floor(n / 10)\n        n2 = n2 + n % 10\n        n = math.floor(n / 10)\n    end\n    return n1 - n2 == 0\nend",
    "\tlocal s = tostring(n)\n\tlocal l = #s\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, l do\n\t\tlocal d = tonumber(s:sub(i, i))\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + d\n\t\telse\n\t\t\tsum2 = sum2 + d\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n, 2 do\n\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\tend\n\tfor i = 2, #n, 2 do\n\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum = 0\n\tlocal even_sum = 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 1 then\n\t\t\tsum = sum + d\n\t\telse\n\t\t\tdiff = diff + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum == diff\nend",
    "\tlocal n = tostring(n)\n\tlocal odd_sum, even_sum = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\teven_sum = even_sum + tonumber(n:sub(i, i))\n\t\telse\n\t\t\todd_sum = odd_sum + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (odd_sum - even_sum) % 11 == 0\nend",
    "  local n = tostring(n)\n  local even, odd = 0, 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      even = even + n:sub(i, i)\n    else\n      odd = odd + n:sub(i, i)\n    end\n  end\n  return (odd - even) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal n1 = n%10\n\tlocal n2 = math.floor(n/10)%10\n\tlocal n3 = math.floor(n/100)%10\n\tlocal n4 = math.floor(n/1000)%10\n\tlocal n5 = math.floor(n/10000)%10\n\tlocal n6 = math.floor(n/100000)%10\n\tlocal n7 = math.floor(n/1000000)%10\n\tlocal n8 = math.floor(n/10000000)%10\n\tlocal n9 = math.floor(n/100000000)%10\n\tlocal n10 = math.floor(n/1000000000)%10\n\tlocal n11 = math.floor(n/10000000000)%10\n\tlocal n12 = math.floor(n/100000000000)%10\n\tlocal n13 = math.floor(n/1000000000000)%10\n\tlocal n14 = math.floor(n/10000000000000)%10\n\tlocal n15 = math.floor(n/100000000000000)%10\n\tlocal n16 = math.floor(n/1000000000000000)%10\n\tlocal n17 = math.floor(n/10000000000000000)%10\n\tlocal n18 = math.floor(n/100000000000000000)%10\n\tlocal n19 = math.floor(n/1000000000000000000)%10\n\tlocal n20 = math.floor(n/10000000000000000000)%10\n\tlocal n21 = math.floor(n/100000000000000000000)%10\n\tlocal n22 = math.floor(n/1000000000000000000000)%10\n\tlocal n23 = math.floor(n/10000000000000000000000)%10\n\tlocal n24 = math.floor(n/100000000000000000000000)%10\n\tlocal n25 = math.floor(n/1000000000000000000000000)%10\n\tlocal n26 = math.floor(n/10000000000000000000000000)%10\n\tlocal n27 = math.floor(n/100000000000000000000000000)%10\n\tlocal n28 = math.floor(n/1000000000000000000000000000)%10\n\tlocal n29 = math.floor(n/10000000000000000000000000000)%10\n\tlocal n30 = math",
    "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + n % 10\n\t\telse\n\t\t\tsum2 = sum2 + n % 10\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local n = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      sum1 = sum1 + n:sub(i, i)\n    else\n      sum2 = sum2 + n:sub(i, i)\n    end\n  end\n  return (sum1 - sum2) % 11 == 0\nend",
    "  local n = tostring(n)\n  local sum1, sum2 = 0, 0\n  for i = 1, #n, 2 do\n    sum1 = sum1 + tonumber(n:sub(i, i))\n  end\n  for i = 2, #n, 2 do\n    sum2 = sum2 + tonumber(n:sub(i, i))\n  end\n  return sum1 - sum2\nend",
    "\tlocal n = tostring(n)\n\tlocal l = #n\n\tlocal i = 1\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\twhile i <= l do\n\t\tsum1 = sum1 + tonumber(n:sub(i,i))\n\t\tsum2 = sum2 + tonumber(n:sub(l-i+1,l-i+1))\n\t\ti = i + 1\n\tend\n\tif sum1 - sum2 == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2\nend",
    "\tlocal sum = 0\n\tlocal diff = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tdiff = diff - d\n\t\telse\n\t\t\tsum = sum + d\n\t\tend\n\t\tn = n / 10\n\t\ti = i + 1\n\tend\n\treturn sum == diff\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tfor i = 1, #n do\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + tonumber(n:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(n:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local sum_odd, sum_even = 0, 0\n  local n = n\n  while n > 0 do\n    local d = n % 10\n    if d % 2 == 0 then\n      sum_even = sum_even + d\n    else\n      sum_odd = sum_odd + d\n    end\n    n = math.floor(n / 10)\n  end\n  return sum_odd - sum_even\nend",
    "    local sum_even = 0\n    local sum_odd = 0\n    local i = 1\n    while n > 0 do\n        local digit = n % 10\n        if i % 2 == 0 then\n            sum_even = sum_even + digit\n        else\n            sum_odd = sum_odd + digit\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return sum_even - sum_odd\nend",
    "\tlocal sum1, sum2 = 0, 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tsum1 = sum1 + d\n\t\telse\n\t\t\tsum2 = sum2 + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum1 - sum2\nend",
    "\tif n < 0 then\n\t\tn = -n\n\tend\n\tlocal sum_odd = 0\n\tlocal sum_even = 0\n\tlocal i = 1\n\twhile n > 0 do\n\t\tlocal d = n % 10\n\t\tif i % 2 == 0 then\n\t\t\tsum_even = sum_even + d\n\t\telse\n\t\t\tsum_odd = sum_odd + d\n\t\tend\n\t\tn = math.floor(n / 10)\n\t\ti = i + 1\n\tend\n\treturn sum_odd - sum_even\nend",
    "\tlocal s = tostring(n)\n\tlocal odd = 0\n\tlocal even = 0\n\tfor i = 1, #s do\n\t\tif i % 2 == 1 then\n\t\t\todd = odd + tonumber(s:sub(i, i))\n\t\telse\n\t\t\teven = even + tonumber(s:sub(i, i))\n\t\tend\n\tend\n\treturn (odd - even) % 11 == 0\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 - sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 - sum2\nend",
    "  local n = tostring(n)\n  local even_sum = 0\n  local odd_sum = 0\n  for i = 1, #n do\n    if i % 2 == 0 then\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    else\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "  local n = tostring(n)\n  local odd_sum, even_sum = 0, 0\n  for i = 1, #n do\n    if i % 2 == 1 then\n      odd_sum = odd_sum + tonumber(n:sub(i, i))\n    else\n      even_sum = even_sum + tonumber(n:sub(i, i))\n    end\n  end\n  return (odd_sum - even_sum) % 11 == 0\nend",
    "  local sum_odd, sum_even = 0, 0\n  while n > 0 do\n    sum_odd = sum_odd + n % 10\n    n = math.floor(n / 10)\n    sum_even = sum_even + n % 10\n    n = math.floor(n / 10)\n  end\n  return (sum_odd - sum_even) % 11 == 0\nend",
    "\tlocal n = math.abs(n)\n\tlocal s = tostring(n)\n\tlocal l = #s\n\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, l do\n\t\tif i % 2 == 1 then\n\t\t\tsum1 = sum1 + tonumber(s:sub(i, i))\n\t\telse\n\t\t\tsum2 = sum2 + tonumber(s:sub(i, i))\n\t\tend\n\tend\n\treturn (sum1 - sum2) % 11 == 0\nend",
    "  local sum1, sum2 = 0, 0\n  for i = 1, #tostring(n) do\n    if i % 2 == 0 then\n      sum1 = sum1 + tonumber(tostring(n):sub(i, i))\n    else\n      sum2 = sum2 + tonumber(tostring(n):sub(i, i))\n    end\n  end\n  return sum1 - sum2\nend",
    "    local n = tostring(n)\n    local odd_sum = 0\n    local even_sum = 0\n    for i = 1, #n do\n        if i % 2 == 1 then\n            odd_sum = odd_sum + tonumber(n:sub(i, i))\n        else\n            even_sum = even_sum + tonumber(n:sub(i, i))\n        end\n    end\n    return (odd_sum - even_sum) % 11 == 0\nend",
    "\tlocal n1, n2 = 0, 0\n\twhile n > 0 do\n\t\tn1 = n1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tn2 = n2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn n1 - n2 == 0\nend",
    "    local sum1 = 0\n    local sum2 = 0\n    local i = 1\n    while n > 0 do\n        local digit = n % 10\n        if i % 2 == 1 then\n            sum1 = sum1 + digit\n        else\n            sum2 = sum2 + digit\n        end\n        n = math.floor(n / 10)\n        i = i + 1\n    end\n    return (sum1 - sum2) % 11 == 0\nend",
    "  local sum1, sum2 = 0, 0\n  while n > 0 do\n    sum1 = sum1 + n % 10\n    n = math.floor(n / 10)\n    sum2 = sum2 + n % 10\n    n = math.floor(n / 10)\n  end\n  return sum1 == sum2\nend",
    "\tlocal sum1, sum2 = 0, 0\n\twhile n > 0 do\n\t\tsum1 = sum1 + n % 10\n\t\tn = math.floor(n / 10)\n\t\tsum2 = sum2 + n % 10\n\t\tn = math.floor(n / 10)\n\tend\n\treturn sum1 == sum2\nend"
  ]
}
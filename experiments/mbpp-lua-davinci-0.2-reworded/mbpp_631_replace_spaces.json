{
  "name": "mbpp_631_replace_spaces",
  "language": "lua",
  "prompt": "-- Write a function to replace whitespaces with an underscore and vice versa in a given string.\nlocal function replace_spaces(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_631_replace_spaces.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = replace_spaces\n    lu.assertEquals(candidate('Jumanji The Jungle'), 'Jumanji_The_Jungle')\n    lu.assertEquals(candidate('The_Avengers'), 'The Avengers')\n    lu.assertEquals(candidate('Fast and Furious'), 'Fast_and_Furious')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    return string.gsub(text, ' ', '_')\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "  local new_text = string.gsub(text, ' ', '_')\n  new_text = string.gsub(new_text, '_', ' ')\n  return new_text\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return string.gsub(text, \" \", \"_\")\nend",
    "    return string.gsub(text, \"[%s_]\", {[\" \"] = \"_\", [\"_\"] = \" \"})\nend",
    "  return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    local new_text = string.gsub(text, \" \", \"_\")\n    new_text = string.gsub(new_text, \"_\", \" \")\n    return new_text\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "  return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    return text:gsub(\"%s\", \"_\")\nend",
    "    local new_text = text:gsub(\"%s\", \"_\")\n    new_text = new_text:gsub(\"_\", \" \")\n    return new_text\nend",
    "    return string.gsub(text, \"%s\", \"_\")\nend"
  ]
}
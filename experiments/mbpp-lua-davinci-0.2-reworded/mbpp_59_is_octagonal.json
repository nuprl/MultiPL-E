{
  "name": "mbpp_59_is_octagonal",
  "language": "lua",
  "prompt": "-- Write a function to find the nth octagonal number.\nlocal function is_octagonal(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_octagonal\n    lu.assertEquals(candidate(5), 65)\n    lu.assertEquals(candidate(10), 280)\n    lu.assertEquals(candidate(15), 645)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local s = math.sqrt(n)\n  return s == math.floor(s)\nend",
    "  local n_sqrt = math.sqrt(n)\n  local n_sqrt_floor = math.floor(n_sqrt)\n  if n_sqrt_floor == n_sqrt then\n    local n_sqrt_div_3 = n_sqrt / 3\n    local n_sqrt_div_3_floor = math.floor(n_sqrt_div_3)\n    if n_sqrt_div_3_floor == n_sqrt_div_3 then\n      return true\n    end\n  end\n  return false\nend",
    "  local n = math.sqrt(1 + 24 * n)\n  return n == math.floor(n)\nend",
    "  local nth = math.sqrt(n)\n  return nth == math.floor(nth)\nend",
    "  local n = math.sqrt(n)\n  return n == math.floor(n)\nend",
    "  local nth = (math.sqrt(24*n+1)+1)/6\n  return nth == math.floor(nth)\nend",
    "    local nth = (math.sqrt(24 * n + 1) + 1) / 6\n    return nth == math.floor(nth)\nend",
    "  local r = math.sqrt(n)\n  return r == math.floor(r) and (r + 1) % 4 == 0\nend",
    "    local n = math.sqrt(1 + 24*n)\n    return n == math.floor(n)\nend",
    "  local n2 = math.sqrt(n)\n  local n3 = math.sqrt(n2)\n  return n3 == math.floor(n3)\nend",
    "  local s = math.sqrt(1 + 24 * n)\n  return s % 6 == 5\nend",
    "  local x = (math.sqrt(24*n+1)+1)/6\n  return x == math.floor(x)\nend",
    "    local n1 = (math.sqrt(24 * n + 1) + 1) / 6\n    return n1 == math.floor(n1)\nend",
    "  local n = math.sqrt(1 + 24 * n)\n  return n % 6 == 5\nend",
    "    local n1 = math.sqrt(n)\n    local n2 = math.sqrt(2*n)\n    if n1 == math.floor(n1) and n2 == math.floor(n2) then\n        return true\n    end\n    return false\nend",
    "    local n = math.sqrt(1 + 24 * n)\n    return n == math.floor(n)\nend",
    "    local nth = (math.sqrt(24 * n + 1) + 1) / 6\n    return nth == math.floor(nth)\nend",
    "  local n = math.sqrt(n)\n  return n == math.floor(n)\nend",
    "    local n2 = math.floor(math.sqrt(n))\n    if n2 * n2 == n then\n        local n3 = math.floor(math.sqrt(n2))\n        if n3 * n3 == n2 and (n3 + 1) % 3 == 0 then\n            return true\n        end\n    end\n    return false\nend",
    "  local nth = (math.sqrt(24 * n + 1) + 1) / 6\n  return nth == math.floor(nth)\nend"
  ]
}
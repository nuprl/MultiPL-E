{
  "name": "mbpp_393_max_length_list",
  "language": "lua",
  "prompt": "-- Write a function to find the table with maximum length.\nlocal function max_length_list(input_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_393_max_length_list.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_length_list\n    lu.assertEquals(candidate({{0}, {1, 3}, {5, 7}, {9, 11}, {13, 15, 17}}), {3, {13, 15, 17}})\n    lu.assertEquals(candidate({{1, 2, 3, 4, 5}, {1, 2, 3, 4}, {1, 2, 3}, {1, 2}, {1}}), {5, {1, 2, 3, 4, 5}})\n    lu.assertEquals(candidate({{3, 4, 5}, {6, 7, 8, 9}, {10, 11, 12}}), {4, {6, 7, 8, 9}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max_length = 0\n  local max_length_list = {}\n  for _, list in ipairs(input_list) do\n    if #list > max_length then\n      max_length = #list\n      max_length_list = list\n    end\n  end\n  return max_length_list\nend",
    "  local max_length = 0\n  local max_length_list = {}\n  for i,v in ipairs(input_list) do\n    if type(v) == \"table\" then\n      local length = #v\n      if length > max_length then\n        max_length = length\n        max_length_list = {v}\n      elseif length == max_length then\n        table.insert(max_length_list, v)\n      end\n    end\n  end\n  return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        local length = #list\n        if length > max_length then\n            max_length = length\n            max_length_list = {list}\n        elseif length == max_length then\n            table.insert(max_length_list, list)\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, v in ipairs(input_list) do\n        if #v > max_length then\n            max_length = #v\n            max_length_list = {v}\n        elseif #v == max_length then\n            table.insert(max_length_list, v)\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "  local max_length = 0\n  local max_length_list = {}\n  for i, v in ipairs(input_list) do\n    if #v > max_length then\n      max_length = #v\n      max_length_list = {v}\n    elseif #v == max_length then\n      table.insert(max_length_list, v)\n    end\n  end\n  return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "  local max_length = 0\n  local max_length_list = {}\n  for _, list in ipairs(input_list) do\n    if #list > max_length then\n      max_length = #list\n      max_length_list = list\n    end\n  end\n  return max_length_list\nend",
    "\tlocal max_length = 0\n\tlocal max_length_list = {}\n\tfor _, list in ipairs(input_list) do\n\t\tlocal length = #list\n\t\tif length > max_length then\n\t\t\tmax_length = length\n\t\t\tmax_length_list = {list}\n\t\telseif length == max_length then\n\t\t\tmax_length_list[#max_length_list + 1] = list\n\t\tend\n\tend\n\treturn max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, v in ipairs(input_list) do\n        if #v > max_length then\n            max_length = #v\n            max_length_list = {v}\n        elseif #v == max_length then\n            table.insert(max_length_list, v)\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "  local max_length = 0\n  local max_length_list = {}\n  for _, list in ipairs(input_list) do\n    if #list > max_length then\n      max_length = #list\n      max_length_list = list\n    end\n  end\n  return max_length_list\nend",
    "  local max_length = 0\n  local max_length_list = {}\n  for _, list in ipairs(input_list) do\n    if #list > max_length then\n      max_length = #list\n      max_length_list = {list}\n    elseif #list == max_length then\n      table.insert(max_length_list, list)\n    end\n  end\n  return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        local length = #list\n        if length > max_length then\n            max_length = length\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend",
    "    local max_length = 0\n    local max_length_list = {}\n    for _, list in ipairs(input_list) do\n        if #list > max_length then\n            max_length = #list\n            max_length_list = list\n        end\n    end\n    return max_length_list\nend"
  ]
}
{
  "name": "mbpp_305_start_withp",
  "language": "lua",
  "prompt": "-- Write a function to return two words from a table of words starting with letter 'p'.\nlocal function start_withp(words)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = start_withp\n    lu.assertEquals(candidate({'Python PHP', 'Java JavaScript', 'c c++'}), {'Python', 'PHP'})\n    lu.assertEquals(candidate({'Python Programming', 'Java Programming'}), {'Python', 'Programming'})\n    lu.assertEquals(candidate({'Pqrst Pqr', 'qrstuv'}), {'Pqrst', 'Pqr'})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if string.sub(word, 1, 1) == 'p' then\n      table.insert(pwords, word)\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1,1) == 'p' then\n            pwords[#pwords+1] = word\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n        if #pwords == 2 then\n            break\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i = 1, #words do\n    if words[i]:sub(1, 1) == 'p' then\n      pwords[#pwords + 1] = words[i]\n    end\n  end\n  return pwords[1], pwords[2]\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n        if #pwords == 2 then\n            break\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for _, word in ipairs(words) do\n        if word:sub(1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if word:find(\"^p\") then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "  local pwords = {}\n  for i, word in ipairs(words) do\n    if word:sub(1,1) == 'p' then\n      pwords[#pwords+1] = word\n    end\n    if #pwords == 2 then\n      break\n    end\n  end\n  return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local result = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(result, word)\n        end\n        if #result == 2 then\n            break\n        end\n    end\n    return result\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend",
    "    local pwords = {}\n    for i, word in ipairs(words) do\n        if string.sub(word, 1, 1) == 'p' then\n            table.insert(pwords, word)\n        end\n    end\n    return pwords\nend"
  ]
}
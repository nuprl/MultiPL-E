{
  "name": "mbpp_306_max_sum_increasing_subseq",
  "language": "lua",
  "prompt": "-- Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\nlocal function max_sum_increasing_subseq(a, n, index, k)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_306_max_sum_increasing_subseq.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_sum_increasing_subseq\n    lu.assertEquals(candidate({1, 101, 2, 3, 100, 4, 5}, 7, 4, 6), 11)\n    lu.assertEquals(candidate({1, 101, 2, 3, 100, 4, 5}, 7, 2, 5), 7)\n    lu.assertEquals(candidate({11, 15, 19, 21, 26, 28, 31}, 7, 2, 4), 71)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local max_sum = a[k]\n  local sum = 0\n  for i = index, k - 1 do\n    sum = sum + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "  local max = 0\n  for i = index + 1, k do\n    if a[i] > a[index] then\n      local sum = max_sum_increasing_subseq(a, n, i, k)\n      if sum > max then\n        max = sum\n      end\n    end\n  end\n  return a[index] + max\nend",
    "    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i - 1, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "  local sum = 0\n  local max = 0\n  for i = index, k do\n    sum = sum + a[i]\n    if sum > max then\n      max = sum\n    end\n  end\n  return max\nend",
    "    local sum = 0\n    local max_sum = 0\n    local i = index\n    while i < k do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n        i = i + 1\n    end\n    return max_sum\nend",
    "  if index == 0 then\n    return a[k]\n  end",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "\tlocal max_sum = 0\n\tfor i = index, k do\n\t\tlocal sum = 0\n\t\tfor j = index, i do\n\t\t\tsum = sum + a[j]\n\t\tend\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "\tlocal max_sum = a[k]\n\tlocal sum = a[k]\n\tfor i = k - 1, index, -1 do\n\t\tif a[i] < a[k] then\n\t\t\tsum = sum + a[i]\n\t\t\tif sum > max_sum then\n\t\t\t\tmax_sum = sum\n\t\t\tend\n\t\tend\n\tend\n\treturn max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = 0\n    for j = index, i do\n      if a[j] < a[i] then\n        sum = sum + a[j]\n      end\n    end\n    sum = sum + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "  local max_sum = 0\n  for i = index + 1, k do\n    if a[i] > a[index] then\n      local sum = a[i] + max_sum_increasing_subseq(a, n, i, k)\n      if sum > max_sum then\n        max_sum = sum\n      end\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = a[i]\n    for j = i + 1, k do\n      if a[j] > a[i] then\n        sum = sum + a[j]\n      end\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    if index == 0 then return 0 end\n    local max_sum = 0\n    for i = 1, index - 1 do\n        if a[i] < a[index] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then max_sum = sum end\n        end\n    end\n    if k > index then\n        local sum = max_sum_increasing_subseq(a, n, k, k)\n        if sum > max_sum then max_sum = sum end\n    end\n    return a[index] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, index, i)\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum + a[k]\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = 0\n    for j = index, i do\n      sum = sum + a[j]\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        local sum = max_sum_increasing_subseq(a, n, i-1, k)\n        if a[i] < a[k] then\n            sum = sum + a[k]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tfor i = index, k do\n\t\tsum = sum + a[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "   local max_sum = 0\n   for i = index, k do\n      local sum = max_sum_increasing_subseq(a, n, index, i)\n      if sum > max_sum then\n         max_sum = sum\n      end\n   end\n   return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max = 0\n    for i = index, k - 1 do\n        local sum = a[i] + max_sum_increasing_subseq(a, n, i + 1, k)\n        if sum > max then\n            max = sum\n        end\n    end\n    return max\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max then\n            max = sum\n        end\n    end\n    return max\nend",
    "   local max_sum = 0\n   for i = index, k do\n      local sum = max_sum_increasing_subseq(a, n, index, i)\n      if sum > max_sum then\n         max_sum = sum\n      end\n   end\n   return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = i + 1, k do\n            if a[j] > a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = a[k]\n    for i = index, k - 1 do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local max = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n            if sum > max then\n                max = sum\n            end\n        end\n    end\n    return a[k] + max\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = index, i do\n            sum = sum + a[j]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local sum = 0\n  local max_sum = 0\n  local max_sum_index = 0\n  local i = index\n  while i <= k do\n    if a[i] > a[index] then\n      sum = sum + a[i]\n      if sum > max_sum then\n        max_sum = sum\n        max_sum_index = i\n      end\n    end\n    i = i + 1\n  end\n  return max_sum, max_sum_index\nend",
    "    local max_sum = 0\n    local max_sum_k = 0\n    local max_sum_k_index = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n                max_sum_k = a[i]\n                max_sum_k_index = i\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i + 1, k)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n    end\n    return sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = index, k do\n    sum = sum + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n        if sum > max then\n            max = sum\n        end\n    end\n    return max\nend",
    "  local max_sum = 0\n  for i = index + 1, k do\n    local sum = max_sum_increasing_subseq(a, n, i, n)\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return a[index] + max_sum\nend",
    "   local max_sum = 0\n   local max_sum_k = 0\n   local max_sum_k_index = 0\n   for i = 1, index do\n      local sum = max_sum_increasing_subseq(a, n, i)\n      if sum > max_sum then\n         max_sum = sum\n         max_sum_k_index = i\n      end\n   end\n   if k > index then\n      max_sum_k = max_sum + a[k]\n   end\n   return math.max(max_sum, max_sum_k)\nend",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tfor i = index, k do\n\t\tsum = sum + a[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = index, i - 1 do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "  if index == 0 then\n    return a[k]\n  end\n  local max_sum = max_sum_increasing_subseq(a, n, index - 1, k)\n  for i = index - 1, 0, -1 do\n    if a[i] < a[k] then\n      max_sum = math.max(max_sum, max_sum_increasing_subseq(a, n, i, i) + a[k])\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "    if index == 1 then\n        return a[k]\n    end\n    local max = 0\n    for i = 1, index - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k)\n        if a[i] < a[k] and sum > max then\n            max = sum\n        end\n    end\n    return max + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = index, i do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = index, i - 1 do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = index, i - 1 do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum + a[k] > max_sum then\n            max_sum = sum + a[k]\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = a[i]\n    for j = index, i - 1 do\n      if a[j] < a[i] then\n        sum = sum + a[j]\n      end\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    for i = index, k-1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k-1)\n        if sum + a[k] > max_sum then\n            max_sum = sum + a[k]\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = i + 1, k do\n            if a[j] > a[i] then\n                sum = sum + a[j]\n            end\n        end\n        max_sum = math.max(max_sum, sum)\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = i + 1, k do\n            if a[j] > a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "\tlocal max_sum = a[k]\n\tlocal sum = 0\n\tfor i = index, k - 1 do\n\t\tsum = sum + a[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, i + 1, k)\n        if a[i] < a[k] and sum + a[k] > max then\n            max = sum + a[k]\n        end\n    end\n    return max\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, i, k)\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return a[k] + max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i - 1, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    local max_sum_k = 0\n    local max_sum_k_index = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n                max_sum_k = a[i]\n                max_sum_k_index = i\n            end\n        end\n    end\n    return max_sum_k + a[k]\nend",
    "    local max = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max = math.max(max, a[i] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = i, k do\n            sum = sum + a[j]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_k = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            max_sum_k = max_sum_k + a[i]\n        end\n    end\n    max_sum_k = max_sum_k + a[k]\n    local max_sum_i = max_sum_increasing_subseq_rec(a, n, index)\n    if max_sum_k > max_sum_i then\n        max_sum = max_sum_k\n    else\n        max_sum = max_sum_i\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, i + 1, k)\n        if sum > max then\n            max = sum\n        end\n    end\n    return a[k] + max\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "\tlocal max_sum = 0\n\tlocal max_sum_index = 0\n\tfor i = index, k do\n\t\tif a[i] < a[k] then\n\t\t\tlocal sum = a[k] + max_sum_increasing_subseq(a, n, i, k - 1)\n\t\t\tif sum > max_sum then\n\t\t\t\tmax_sum = sum\n\t\t\t\tmax_sum_index = i\n\t\t\tend\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = i + 1, k do\n            if a[j] > a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = a[i]\n    for j = i + 1, k do\n      if a[j] > a[i] then\n        sum = sum + a[j]\n      end\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "  local max = 0\n  for i = index, k - 1 do\n    if a[i] < a[k] then\n      local sum = max_sum_increasing_subseq(a, n, i + 1, k)\n      if sum > max then\n        max = sum\n      end\n    end\n  end\n  return a[k] + max\nend",
    "    local max_sum = 0\n    local max_sum_with_k = 0\n    local max_sum_without_k = 0\n    local max_sum_with_k_and_k = 0\n    local max_sum_without_k_and_k = 0",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index + 1, k do\n        if a[i] > a[index] then\n            local sum = a[i] + max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        max_sum = max_sum + a[i]\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k + 1)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum + a[k] > max_sum then\n            max_sum = sum + a[k]\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = a[k] + max_sum_increasing_subseq(a, n, i, k - 1)\n            if max_sum < sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max then\n            max = sum\n        end\n    end\n    return max\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n    end\n    return sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return a[k] + max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, index, i-1) + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = index, i do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, i + 1, k)\n    if a[i] < a[k] and sum + a[i] > max then\n      max = sum + a[i]\n    end\n  end\n  return max\nend",
    "    if index == 0 then\n        return a[index]\n    end\n    local max_sum = 0\n    for i = 0, index - 1 do\n        if a[i] < a[index] then\n            local sum = max_sum_increasing_subseq(a, n, i, index)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[index]\nend",
    "    if index == 0 then\n        return 0\n    end\n    local max_sum = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = 0\n    for j = index, i do\n      sum = sum + a[j]\n    end\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    local i = index\n    while i < k do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n        end\n        i = i + 1\n    end\n    sum = sum + a[k]\n    return sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = index, k do\n    sum = sum + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tfor i = index, k do\n\t\tsum = sum + a[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return a[k] + max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local sum = 0\n    local max = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n        end\n    end\n    sum = sum + a[k]\n    return sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if max_sum < sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    local i = index\n    while i < k do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n        i = i + 1\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i + 1, k)\n            if sum > max then\n                max = sum\n            end\n        end\n    end\n    return a[k] + max\nend",
    "  local max = 0\n  for i = index, k do\n    local sum = a[i]\n    for j = i + 1, k do\n      if a[j] > a[i] then\n        sum = sum + a[j]\n      end\n    end\n    if sum > max then\n      max = sum\n    end\n  end\n  return max\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = index, i do\n            sum = sum + a[j]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1) + a[k]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  local sum = 0\n  for i = index, k do\n    sum = sum + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "\tlocal max_sum = 0\n\tfor i = index, k do\n\t\tlocal sum = 0\n\t\tfor j = index, i do\n\t\t\tsum = sum + a[j]\n\t\tend\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "\tlocal max_sum = a[k]\n\tlocal sum = 0\n\tfor i = index, k - 1 do\n\t\tsum = sum + a[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k + 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[k] + max_sum_increasing_subseq(a, n, i, k - 1))\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "   local max_sum = a[k]\n   local sum = 0\n   for i = index, k - 1 do\n      sum = sum + a[i]\n      if sum > max_sum then\n         max_sum = sum\n      end\n   end\n   return max_sum\nend",
    "    if k == n then\n        return a[k]\n    end",
    "    local max_sum = 0\n    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_index = 0\n    for i = index, k do\n        local sum = a[i] + max_sum_increasing_subseq(a, n, i + 1, k)\n        if sum > max_sum then\n            max_sum = sum\n            max_sum_index = i\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index + 1, k do\n        local sum = a[i] + max_sum_increasing_subseq(a, n, i, k)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i+1, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        max_sum = max_sum + a[i]\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            max_sum = math.max(max_sum, a[i])\n        end\n    end\n    return max_sum + a[k]\nend",
    "  local max_sum = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, index, i - 1) + a[i]\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return max_sum\nend",
    "    local max_sum = 0\n    local max_sum_k = 0\n    local sum = 0\n    local sum_k = 0\n    local i = 1\n    while i <= index do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n        if i < k then\n            sum_k = sum_k + a[i]\n            if sum_k > max_sum_k then\n                max_sum_k = sum_k\n            end\n        end\n        i = i + 1\n    end\n    return max_sum + a[k] + max_sum_k\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = index, i - 1 do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max then\n            max = sum\n        end\n    end\n    return max + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = i + 1, k do\n            if a[j] > a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max then\n                max = sum\n            end\n        end\n    end\n    return max + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = index, i-1 do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    for i = index, k do\n        sum = sum + a[i]\n    end\n    return sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return a[k] + max_sum\nend",
    "  local max_sum = 0\n  local max_sum_k = 0\n  local max_sum_i = 0\n  local max_sum_i_k = 0\n  for i = 1, index do\n    if a[i] < a[k] then\n      max_sum_i = max_sum_i + a[i]\n      if max_sum_i > max_sum then\n        max_sum = max_sum_i\n      end\n    end\n  end\n  for i = index+1, k do\n    if a[i] < a[k] then\n      max_sum_k = max_sum_k + a[i]\n      if max_sum_k > max_sum then\n        max_sum = max_sum_k\n      end\n    end\n  end\n  max_sum_i_k = max_sum_i + max_sum_k + a[k]\n  if max_sum_i_k > max_sum then\n    max_sum = max_sum_i_k\n  end\n  return max_sum\nend",
    "    local max_sum = a[k]\n    local sum = 0\n    for i = index, k - 1 do\n        sum = sum + a[i]\n        max_sum = math.max(max_sum, sum + a[k])\n    end\n    return max_sum\nend",
    "  local max = 0\n  for i = index, k do\n    local sum = max_sum_increasing_subseq(a, n, index, i)\n    if sum > max then\n      max = sum\n    end\n  end\n  return max + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = index, i do\n            sum = sum + a[j]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "  if index == 0 then\n    return a[k]\n  end",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k - 1 do\n        local sum = max_sum_increasing_subseq(a, n, i, k - 1)\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max_sum = a[k]\n    local sum = a[k]\n    for i = index, k - 1 do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "\tlocal sum = 0\n\tfor i = index, k do\n\t\tsum = sum + a[i]\n\tend\n\treturn sum\nend",
    "    local sum = a[k]\n    local max_sum = sum\n    for i = index, k - 1 do\n        if a[i] < a[k] then\n            sum = sum + a[i]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "  local max_sum = 0\n  for i = index, k-1 do\n    local sum = max_sum_increasing_subseq(a, n, i+1, k)\n    if sum > max_sum then\n      max_sum = sum\n    end\n  end\n  return a[k] + max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if max_sum < sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end",
    "    local max_sum = 0\n    for i = index, k do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i, k)\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return a[k] + max_sum\nend",
    "    local max = 0\n    for i = index, k do\n        local sum = a[i]\n        local max_sum = max_sum_increasing_subseq(a, n, i + 1, k)\n        if max_sum > 0 then\n            sum = sum + max_sum\n        end\n        if sum > max then\n            max = sum\n        end\n    end\n    return max\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        local sum = max_sum_increasing_subseq(a, n, i - 1, k)\n        if a[i] < a[k] and sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum + a[k]\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = a[i]\n        for j = index, i - 1 do\n            if a[j] < a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = 0\n        for j = i, k do\n            if a[j] > a[i] then\n                sum = sum + a[j]\n            end\n        end\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "\tlocal max_sum = 0\n\tlocal sum = 0\n\tfor i = index, k do\n\t\tsum = sum + a[i]\n\t\tif sum > max_sum then\n\t\t\tmax_sum = sum\n\t\tend\n\tend\n\treturn max_sum\nend",
    "    if index == 0 then\n        return a[k]\n    end\n    local max_sum = 0\n    for i = 1, index do\n        if a[i] < a[k] then\n            local sum = max_sum_increasing_subseq(a, n, i - 1, i) + a[k]\n            if sum > max_sum then\n                max_sum = sum\n            end\n        end\n    end\n    return max_sum\nend",
    "    local max_sum = 0\n    for i = index, k do\n        local sum = max_sum_increasing_subseq(a, n, index, i) + a[k]\n        if sum > max_sum then\n            max_sum = sum\n        end\n    end\n    return max_sum\nend",
    "    local sum = 0\n    local i = index\n    while i < k do\n        sum = sum + a[i]\n        i = i + 1\n    end\n    return sum\nend"
  ]
}
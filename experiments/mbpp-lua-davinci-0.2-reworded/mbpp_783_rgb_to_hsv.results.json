{
  "name": "mbpp_783_rgb_to_hsv",
  "language": "lua",
  "prompt": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_783_rgb_to_hsv.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf02jytne.lua:32: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpf02jytne.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpr481prx_.lua:17: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    else\n        if r == max then\n            h = (g - b) / delta\n        elseif g == max then\n            h = 2 + (b - r) / delta\n        elseif b == max then\n            h = 4 + (r - g) / delta\n        end\n        h = h * 60\n        if h < 0 then\n            h = h + 360\n        end\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps0wa4rsu.lua:34: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmps0wa4rsu.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf02jytne.lua:32: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpf02jytne.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    local h, s, v\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpojkkvop4.lua:31: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpojkkvop4.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpc3ylzrz4.lua:15: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf02jytne.lua:32: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpf02jytne.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpaonnuori.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpaonnuori.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local d = max - min\n    if max == 0 then s = 0 else s = d / max end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            h = (g - b) / d\n            if g < b then h = h + 6 end\n        elseif max == g then h = (b - r) / d + 2\n        elseif max == b then h = (r - g) / d + 4\n        end\n        h = h / 6\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsl2poq1n.lua:26: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpsl2poq1n.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpr481prx_.lua:17: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local d = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = d / max\n    end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            h = (g - b) / d\n            if g < b then\n                h = h + 6\n            end\n        elseif max == g then\n            h = (b - r) / d + 2\n        elseif max == b then\n            h = (r - g) / d + 4\n        end\n        h = h / 6\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiioy6ylf.lua:34: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpiioy6ylf.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjm50hgn8.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpjm50hgn8.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    else\n        if r == max then\n            h = (g - b) / delta\n        elseif g == max then\n            h = 2 + (b - r) / delta\n        elseif b == max then\n            h = 4 + (r - g) / delta\n        end\n        h = h * 60\n        if h < 0 then\n            h = h + 360\n        end\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps0wa4rsu.lua:34: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmps0wa4rsu.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf02jytne.lua:32: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpf02jytne.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n\tlocal h, s, v\n\tlocal min = math.min(r, g, b)\n\tlocal max = math.max(r, g, b)\n\tlocal delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp_9vgt_s3.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v = 0, 0, max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpre2pmpk1.lua:15: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = (max - min) / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * (g - b) / (max - min)\n        else\n            h = 60 * (g - b) / (max - min) + 360\n        end\n    elseif max == g then\n        h = 60 * (b - r) / (max - min) + 120\n    elseif max == b then\n        h = 60 * (r - g) / (max - min) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplv5gc6iq.lua:31: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmplv5gc6iq.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local max = math.max(r, g, b)\n  local min = math.min(r, g, b)\n  local delta = max - min\n  v = max\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if max == min then\n    h = 0\n  elseif max == r then\n    h = (g - b) / delta\n  elseif max == g then\n    h = 2 + (b - r) / delta\n  elseif max == b then\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_jftjjim.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp_jftjjim.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            h = (g - b) / delta\n        elseif max == g then\n            h = 2 + (b - r) / delta\n        elseif max == b then\n            h = 4 + (r - g) / delta\n        end\n        h = h * 60\n        if h < 0 then\n            h = h + 360\n        end\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyv9x028w.lua:34: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpyv9x028w.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5uk3jep8.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjm50hgn8.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpjm50hgn8.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min, max, delta\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp8yqv04hz.lua:14: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpyj6cjnnj.lua:14: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if max == min then\n    h = 0\n  elseif max == r then\n    h = (g - b) / delta\n  elseif max == g then\n    h = 2 + (b - r) / delta\n  elseif max == b then\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qkmhfv0.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp5qkmhfv0.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjm50hgn8.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpjm50hgn8.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local d = max - min\n    if max == 0 then s = 0 else s = d / max end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            if g >= b then\n                h = (g - b) / d\n            else\n                h = (g - b) / d + 6\n            end\n        elseif max == g then\n            h = (b - r) / d + 2\n        elseif max == b then\n            h = (r - g) / d + 4\n        end\n        h = h / 6\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdqxuedzh.lua:31: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpdqxuedzh.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n\tlocal h, s, v\n\tlocal min = math.min(r, g, b)\n\tlocal max = math.max(r, g, b)\n\tlocal delta = max - min\n\tv = max\n\tif max == 0 then\n\t\ts = 0\n\telse\n\t\ts = delta / max\n\tend\n\tif max == min then\n\t\th = 0\n\telseif r == max then\n\t\th = (g - b) / delta\n\telseif g == max then\n\t\th = 2 + (b - r) / delta\n\telseif b == max then\n\t\th = 4 + (r - g) / delta\n\tend\n\th = h * 60\n\tif h < 0 then\n\t\th = h + 360\n\tend\n\treturn h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4exwpuo3.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp4exwpuo3.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    local h, s, v = 0, 0, max\n    if max ~= 0 then\n        s = delta / max\n    end\n    if delta ~= 0 then\n        if r == max then\n            h = (g - b) / delta\n        elseif g == max then\n            h = 2 + (b - r) / delta\n        else\n            h = 4 + (r - g) / delta\n        end\n        h = h * 60\n        if h < 0 then\n            h = h + 360\n        end\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4rycxl0e.lua:29: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp4rycxl0e.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    local h, s, v\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * (g - b) / delta\n        else\n            h = 60 * (g - b) / delta + 360\n        end\n    elseif max == g then\n        h = 60 * (b - r) / delta + 120\n    elseif max == b then\n        h = 60 * (r - g) / delta + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbt8h3poy.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpbt8h3poy.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        h = (g - b) / delta\n        if g < b then\n            h = h + 6\n        end\n    elseif max == g then\n        h = (b - r) / delta + 2\n    elseif max == b then\n        h = (r - g) / delta + 4\n    end\n    h = h / 6\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphq6rl82g.lua:32: expected: {0, 0.0, 100.0}\nactual: 0.0\nstack traceback:\n\t/tmp/tmphq6rl82g.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    local h, s, v\n    if delta == 0 then\n        h = 0\n    elseif r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk96gcmbe.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpk96gcmbe.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjm50hgn8.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpjm50hgn8.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local max = math.max(r, g, b)\n  local min = math.min(r, g, b)\n  local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmphb7amx3i.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp700c0_16.lua:15: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    else\n        if r == max then\n            h = (g - b) / delta\n        elseif g == max then\n            h = 2 + (b - r) / delta\n        else\n            h = 4 + (r - g) / delta\n        end\n        h = h * 60\n        if h < 0 then\n            h = h + 360\n        end\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcn7ekg13.lua:34: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpcn7ekg13.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if max == min then\n    h = 0\n  elseif max == r then\n    h = (g - b) / delta\n  elseif max == g then\n    h = 2 + (b - r) / delta\n  elseif max == b then\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qkmhfv0.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp5qkmhfv0.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpaonnuori.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpaonnuori.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local max = math.max(r, g, b)\n  local min = math.min(r, g, b)\n  local h, s, v\n  v = max\n  local d = max - min\n  if max == 0 then\n    s = 0\n  else\n    s = d / max\n  end\n  if max == min then\n    h = 0\n  else\n    if max == r then\n      h = (g - b) / d\n      if g < b then\n        h = h + 6\n      end\n    elseif max == g then\n      h = (b - r) / d + 2\n    elseif max == b then\n      h = (r - g) / d + 4\n    end\n    h = h / 6\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz1e5bwqp.lua:34: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpz1e5bwqp.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local d = max - min\n    if max == 0 then s = 0 else s = d / max end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            if g >= b then\n                h = (g - b) / d\n            else\n                h = (g - b) / d + 6\n            end\n        elseif max == g then\n            h = (b - r) / d + 2\n        elseif max == b then\n            h = (r - g) / d + 4\n        end\n        h = h / 6\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdqxuedzh.lua:31: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpdqxuedzh.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local r, g, b = r/255, g/255, b/255\n  local max, min = math.max(r, g, b), math.min(r, g, b)\n  local h, s, v\n  v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpdeyibbp2.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if max == min then\n    h = 0\n  elseif max == r then\n    if g >= b then\n      h = 60 * ((g - b) / delta)\n    else\n      h = 60 * ((g - b) / delta) + 360\n    end\n  elseif max == g then\n    h = 60 * ((b - r) / delta) + 120\n  elseif max == b then\n    h = 60 * ((r - g) / delta) + 240\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohh1ht0d.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpohh1ht0d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local max = math.max(r, g, b)\n  local min = math.min(r, g, b)\n  local delta = max - min\n  v = max / 255\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if delta == 0 then\n    h = 0\n  elseif r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqrz0dghr.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpqrz0dghr.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local max = math.max(r, g, b)\n  local min = math.min(r, g, b)\n  local delta = max - min\n  v = max\n  if (max ~= 0) then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if (r == max) then\n    h = (g - b) / delta\n  elseif (g == max) then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if (h < 0) then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo82fmz2k.lua:32: expected: {0, 0.0, 100.0}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpo82fmz2k.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n\tlocal h, s, v\n\tlocal min = math.min(r, g, b)\n\tlocal max = math.max(r, g, b)\n\tlocal delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp_9vgt_s3.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmpi_6s70je.lua:17: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        h = 60 * ((g - b) / delta)\n    elseif max == g then\n        h = 60 * ((b - r) / delta + 2)\n    elseif max == b then\n        h = 60 * ((r - g) / delta + 4)\n    end\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu2e93_71.lua:30: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpu2e93_71.lua:30: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = (g - b) / delta\n        else\n            h = (g - b) / delta + 6\n        end\n    elseif max == g then\n        h = (b - r) / delta + 2\n    elseif max == b then\n        h = (r - g) / delta + 4\n    end\n    h = h / 6\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmkpraidx.lua:33: expected: {0, 0.0, 100.0}\nactual: 0.0\nstack traceback:\n\t/tmp/tmpmkpraidx.lua:33: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local d = max - min\n    if max == 0 then s = 0 else s = d / max end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            if g >= b then\n                h = (g - b) / d\n            else\n                h = (g - b) / d + 6\n            end\n        elseif max == g then\n            h = (b - r) / d + 2\n        elseif max == b then\n            h = (r - g) / d + 4\n        end\n        h = h / 6\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdqxuedzh.lua:31: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpdqxuedzh.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = (g - b) / delta\n        else\n            h = (g - b) / delta + 6\n        end\n    elseif max == g then\n        h = (b - r) / delta + 2\n    elseif max == b then\n        h = (r - g) / delta + 4\n    end\n    h = h / 6\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx1q4pqwx.lua:33: expected: {0, 0.0, 100.0}\nactual: 0.0\nstack traceback:\n\t/tmp/tmpx1q4pqwx.lua:33: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local max = math.max(r, g, b)\n  local min = math.min(r, g, b)\n  local h, s, v\n  v = max\n  local delta = max - min\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if max == min then\n    h = 0\n  else\n    if max == r then\n      if g >= b then\n        h = (g - b) / delta\n      else\n        h = (g - b) / delta + 6\n      end\n    elseif max == g then\n      h = (b - r) / delta + 2\n    elseif max == b then\n      h = (r - g) / delta + 4\n    end\n    h = h / 6\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk1echh9p.lua:35: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpk1echh9p.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    -- Convert RGB to HSV\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp69l0wjwl.lua:17: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpc3ylzrz4.lua:15: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n\tlocal h, s, v\n\tlocal min = math.min(r, g, b)\n\tlocal max = math.max(r, g, b)\n\tlocal delta = max - min\n\tv = max\n\tif max ~= 0 then\n\t\ts = delta / max\n\telse\n\t\ts = 0\n\t\th = -1\n\t\treturn h, s, v\n\tend\n\tif r == max then\n\t\th = (g - b) / delta\n\telseif g == max then\n\t\th = 2 + (b - r) / delta\n\telse\n\t\th = 4 + (r - g) / delta\n\tend\n\th = h * 60\n\tif h < 0 then\n\t\th = h + 360\n\tend\n\treturn h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvccndy74.lua:32: expected: {0, 0.0, 100.0}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpvccndy74.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf02jytne.lua:32: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpf02jytne.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqjmtbq9d.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpqjmtbq9d.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * ((g - b) / delta)\n        else\n            h = 60 * ((g - b) / delta) + 360\n        end\n    elseif max == g then\n        h = 60 * ((b - r) / delta) + 120\n    elseif max == b then\n        h = 60 * ((r - g) / delta) + 240\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf02jytne.lua:32: expected: {0, 0, 100}\nactual: 0\nstack traceback:\n\t/tmp/tmpf02jytne.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r/255, g/255, b/255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpgf_y4wrq.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            if g >= b then\n                h = 60 * ((g - b) / delta)\n            else\n                h = 60 * ((g - b) / delta) + 360\n            end\n        elseif max == g then\n            h = 60 * ((b - r) / delta) + 120\n        elseif max == b then\n            h = 60 * ((r - g) / delta) + 240\n        end\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13pj5rir.lua:34: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp13pj5rir.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * (g - b) / delta\n        else\n            h = 60 * (g - b) / delta + 360\n        end\n    elseif max == g then\n        h = 60 * (b - r) / delta + 120\n    elseif max == b then\n        h = 60 * (r - g) / delta + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprjrxaeom.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmprjrxaeom.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local h, s, v\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  v = max\n  if max == 0 then\n    s = 0\n  else\n    s = delta / max\n  end\n  if max == min then\n    h = 0\n  else\n    if r == max then\n      h = (g - b) / delta\n    elseif g == max then\n      h = 2 + (b - r) / delta\n    else\n      h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n      h = h + 360\n    end\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ds6zr55.lua:34: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmp5ds6zr55.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\n    local d = max - min\n    if max == 0 then s = 0 else s = d / max end\n    if max == min then\n        h = 0\n    else\n        if max == r then\n            if g >= b then\n                h = (g - b) / d\n            else\n                h = (g - b) / d + 6\n            end\n        elseif max == g then\n            h = (b - r) / d + 2\n        elseif max == b then\n            h = (r - g) / d + 4\n        end\n        h = h / 6\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdqxuedzh.lua:31: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpdqxuedzh.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    local h, s, v\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = 60 * (g - b) / delta\n        else\n            h = 60 * (g - b) / delta + 360\n        end\n    elseif max == g then\n        h = 60 * (b - r) / delta + 120\n    elseif max == b then\n        h = 60 * (r - g) / delta + 240\n    end\n    v = max\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbt8h3poy.lua:32: expected: {0, 0.0, 100.0}\nactual: 0\nstack traceback:\n\t/tmp/tmpbt8h3poy.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n  local h, s, v\n  v = max\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n  return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcbu3xl6b.lua:32: expected: {0, 0.0, 100.0}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcbu3xl6b.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max == 0 then\n        s = 0\n    else\n        s = delta / max\n    end\n    if max == min then\n        h = 0\n    elseif max == r then\n        if g >= b then\n            h = (g - b) / delta\n        else\n            h = (g - b) / delta + 6\n        end\n    elseif max == g then\n        h = (b - r) / delta + 2\n    elseif max == b then\n        h = (r - g) / delta + 4\n    end\n    h = h / 6\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx1q4pqwx.lua:33: expected: {0, 0.0, 100.0}\nactual: 0.0\nstack traceback:\n\t/tmp/tmpx1q4pqwx.lua:33: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        -- r = g = b = 0\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdvuv1xha.lua:33: expected: {0, 0.0, 100.0}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpdvuv1xha.lua:33: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmp5htpxv0z.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    local h, s, v = 0, 0, max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "lua: /tmp/tmprzz9fshx.lua:16: 'end' expected (to close 'function' at line 2) near <eof>\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local max = math.max(r, g, b)\n    local min = math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp6id9odfl.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\n    v = max\n    if max ~= 0 then\n        s = delta / max\n    else\n        s = 0\n        h = -1\n        return h, s, v\n    end\n    if r == max then\n        h = (g - b) / delta\n    elseif g == max then\n        h = 2 + (b - r) / delta\n    else\n        h = 4 + (r - g) / delta\n    end\n    h = h * 60\n    if h < 0 then\n        h = h + 360\n    end\n    return h, s, v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyopu2od.lua:32: expected: {0, 0, 100}\nactual: #NaN\nstack traceback:\n\t/tmp/tmpcyopu2od.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local h, s, v\n    local min = math.min(r, g, b)\n    local max = math.max(r, g, b)\n    local delta = max - min\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmp64k05q3t.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/\nlocal function rgb_to_hsv(r, g, b)\n    local r, g, b = r / 255, g / 255, b / 255\n    local max, min = math.max(r, g, b), math.min(r, g, b)\n    local h, s, v\n    v = max\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = rgb_to_hsv\n    lu.assertEquals(candidate(255, 255, 255), {0, 0.0, 100.0})\n    lu.assertEquals(candidate(0, 215, 0), {120.0, 100.0, 84.31372549019608})\n    lu.assertEquals(candidate(10, 215, 110), {149.26829268292684, 95.34883720930233, 84.31372549019608})\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027693,
      "stdout": "",
      "stderr": "lua: /tmp/tmpbys7nkp9.lua:16: 'end' expected (to close 'function' at line 2) near '<eof>'\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
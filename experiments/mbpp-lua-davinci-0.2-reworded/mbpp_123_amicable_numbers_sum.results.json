{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "lua",
  "prompt": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local d = divisors_sum(i)\n    if d ~= i and divisors_sum(d) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7vq47pmq.lua:5: attempt to call global 'divisors_sum' (a nil value)\nstack traceback:\n\t/tmp/tmp7vq47pmq.lua:5: in function 'candidate'\n\t/tmp/tmp7vq47pmq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_proper_divisors(i)\n        if a > i and sum_of_proper_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplu25r0ub.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmplu25r0ub.lua:5: in function 'candidate'\n\t/tmp/tmplu25r0ub.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    if a ~= i and sum_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpobo8_kwu.lua:5: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpobo8_kwu.lua:5: in function 'candidate'\n\t/tmp/tmpobo8_kwu.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and a <= limit and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwrs1sbk0.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpwrs1sbk0.lua:5: in function 'candidate'\n\t/tmp/tmpwrs1sbk0.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i == sum_of_divisors(j) and i ~= j then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5u4ncox2.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp5u4ncox2.lua:5: in function 'candidate'\n\t/tmp/tmp5u4ncox2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_divisors(i)\n    if i ~= j and i == sum_divisors(j) then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpidfjzob0.lua:5: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpidfjzob0.lua:5: in function 'candidate'\n\t/tmp/tmpidfjzob0.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and a <= limit and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_ghfz8sc.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp_ghfz8sc.lua:5: in function 'candidate'\n\t/tmp/tmp_ghfz8sc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local d = sum_of_divisors(i)\n        if d ~= i and sum_of_divisors(d) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxyetle7i.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpxyetle7i.lua:5: in function 'candidate'\n\t/tmp/tmpxyetle7i.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9e6vbrpj.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp9e6vbrpj.lua:5: in function 'candidate'\n\t/tmp/tmp9e6vbrpj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2dhbxc5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa2dhbxc5.lua:5: in local 'candidate'\n\t/tmp/tmpa2dhbxc5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2dhbxc5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa2dhbxc5.lua:5: in local 'candidate'\n\t/tmp/tmpa2dhbxc5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_divisors(i)\n\t\tif i ~= j and sum_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps63x7dwd.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmps63x7dwd.lua:5: in local 'candidate'\n\t/tmp/tmps63x7dwd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = proper_divisors_sum(i)\n    if a ~= i and proper_divisors_sum(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl2j1if51.lua:5: attempt to call a nil value (global 'proper_divisors_sum')\nstack traceback:\n\t/tmp/tmpl2j1if51.lua:5: in local 'candidate'\n\t/tmp/tmpl2j1if51.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif is_amicable(i) then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptny_0hx3.lua:5: attempt to call a nil value (global 'is_amicable')\nstack traceback:\n\t/tmp/tmptny_0hx3.lua:5: in local 'candidate'\n\t/tmp/tmptny_0hx3.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_proper_divisors(i)\n\t\tif i ~= j and sum_of_proper_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2lhq93zd.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp2lhq93zd.lua:5: in local 'candidate'\n\t/tmp/tmp2lhq93zd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2dhbxc5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa2dhbxc5.lua:5: in local 'candidate'\n\t/tmp/tmpa2dhbxc5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_proper_divisors(i)\n    if i ~= j and sum_of_proper_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4pnwqszn.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp4pnwqszn.lua:5: in local 'candidate'\n\t/tmp/tmp4pnwqszn.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    if a > i and sum_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk4h8__qg.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpk4h8__qg.lua:5: in local 'candidate'\n\t/tmp/tmpk4h8__qg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        local b = sum_of_divisors(a)\n        if i == b and i ~= a then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7mm7jqt_.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp7mm7jqt_.lua:5: in local 'candidate'\n\t/tmp/tmp7mm7jqt_.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local d = sum_of_divisors(i)\n    if d > i and sum_of_divisors(d) == i then\n      sum = sum + i + d\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnl4c6r79.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpnl4c6r79.lua:5: in local 'candidate'\n\t/tmp/tmpnl4c6r79.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_of_proper_divisors(i)\n        if i ~= j and sum_of_proper_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb4_jv8md.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpb4_jv8md.lua:5: in local 'candidate'\n\t/tmp/tmpb4_jv8md.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a ~= i and d(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7jh4m6n1.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp7jh4m6n1.lua:5: in local 'candidate'\n\t/tmp/tmp7jh4m6n1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        if a ~= i and sum_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4jknbg11.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp4jknbg11.lua:5: in local 'candidate'\n\t/tmp/tmp4jknbg11.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a > i and sum_of_proper_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_iw7dxpq.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp_iw7dxpq.lua:5: in local 'candidate'\n\t/tmp/tmp_iw7dxpq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq95qjps6.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpq95qjps6.lua:5: in local 'candidate'\n\t/tmp/tmpq95qjps6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvsfxwth7.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpvsfxwth7.lua:5: in local 'candidate'\n\t/tmp/tmpvsfxwth7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm_euwide.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpm_euwide.lua:5: in local 'candidate'\n\t/tmp/tmpm_euwide.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2dhbxc5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa2dhbxc5.lua:5: in local 'candidate'\n\t/tmp/tmpa2dhbxc5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_proper_divisors(i)\n        if a ~= i and sum_proper_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpindfqsdq.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpindfqsdq.lua:5: in local 'candidate'\n\t/tmp/tmpindfqsdq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    local b = sum_of_divisors(a)\n    if b == i and a ~= b then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg72153l9.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpg72153l9.lua:5: in local 'candidate'\n\t/tmp/tmpg72153l9.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9e6vbrpj.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp9e6vbrpj.lua:5: in function 'candidate'\n\t/tmp/tmp9e6vbrpj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 2, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwypu8_mz.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpwypu8_mz.lua:5: in local 'candidate'\n\t/tmp/tmpwypu8_mz.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdfrliyfa.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpdfrliyfa.lua:5: in local 'candidate'\n\t/tmp/tmpdfrliyfa.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq95qjps6.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpq95qjps6.lua:5: in local 'candidate'\n\t/tmp/tmpq95qjps6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_divisors(i)\n\t\tif a > i and sum_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps8h43nz5.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmps8h43nz5.lua:5: in local 'candidate'\n\t/tmp/tmps8h43nz5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_proper_divisors(i)\n        if a > i and sum_proper_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpidheoe81.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpidheoe81.lua:5: in local 'candidate'\n\t/tmp/tmpidheoe81.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_proper_divisors(i)\n        if a ~= i and sum_of_proper_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprllg5_c2.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmprllg5_c2.lua:5: in local 'candidate'\n\t/tmp/tmprllg5_c2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a, b = amicable_pair(i)\n    if a and b then\n      sum = sum + a + b\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmsukqgk3.lua:5: attempt to call a nil value (global 'amicable_pair')\nstack traceback:\n\t/tmp/tmpmsukqgk3.lua:5: in local 'candidate'\n\t/tmp/tmpmsukqgk3.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tif a ~= i and sum_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprmmujjhr.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmprmmujjhr.lua:5: in local 'candidate'\n\t/tmp/tmprmmujjhr.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal amicables = {}\n\tfor i = 1, limit do\n\t\tlocal sum = sum_of_divisors(i)\n\t\tif sum_of_divisors(sum) == i and sum ~= i then\n\t\t\tamicables[i] = true\n\t\t\tamicables[sum] = true\n\t\tend\n\tend\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tif amicables[i] then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoie89xj_.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpoie89xj_.lua:5: in local 'candidate'\n\t/tmp/tmpoie89xj_.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq95qjps6.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpq95qjps6.lua:5: in local 'candidate'\n\t/tmp/tmpq95qjps6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        if a > i and sum_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6ekk26q9.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmp6ekk26q9.lua:5: in local 'candidate'\n\t/tmp/tmp6ekk26q9.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_divisors(i)\n\t\tif a > i then\n\t\t\tlocal b = sum_divisors(a)\n\t\t\tif b == i then\n\t\t\t\tsum = sum + i + a\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpas0q_byu.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpas0q_byu.lua:5: in local 'candidate'\n\t/tmp/tmpas0q_byu.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5n9_hjle.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp5n9_hjle.lua:5: in local 'candidate'\n\t/tmp/tmp5n9_hjle.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_of_divisors(i)\n        if i ~= j and sum_of_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0z73nas.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa0z73nas.lua:5: in local 'candidate'\n\t/tmp/tmpa0z73nas.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local s = sum_of_divisors(i)\n    if sum_of_divisors(s) == i and s ~= i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphe8bedy2.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmphe8bedy2.lua:5: in local 'candidate'\n\t/tmp/tmphe8bedy2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    local b = d(a)\n    if b == i and a ~= b then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4vzfy8hy.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp4vzfy8hy.lua:5: in local 'candidate'\n\t/tmp/tmp4vzfy8hy.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = divisors_sum(i)\n        if a > i and divisors_sum(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfxo37q7d.lua:5: attempt to call a nil value (global 'divisors_sum')\nstack traceback:\n\t/tmp/tmpfxo37q7d.lua:5: in local 'candidate'\n\t/tmp/tmpfxo37q7d.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq95qjps6.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpq95qjps6.lua:5: in local 'candidate'\n\t/tmp/tmpq95qjps6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a > i then\n\t\t\tlocal b = sum_of_proper_divisors(a)\n\t\t\tif b == i then\n\t\t\t\tsum = sum + a + b\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphdv8vsc3.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmphdv8vsc3.lua:5: in local 'candidate'\n\t/tmp/tmphdv8vsc3.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local d = sum_of_divisors(i)\n    if d ~= i and sum_of_divisors(d) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpie2j1ctd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpie2j1ctd.lua:5: in local 'candidate'\n\t/tmp/tmpie2j1ctd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 2, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp33qc_wox.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp33qc_wox.lua:5: in local 'candidate'\n\t/tmp/tmp33qc_wox.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2dhbxc5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa2dhbxc5.lua:5: in local 'candidate'\n\t/tmp/tmpa2dhbxc5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvsfxwth7.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpvsfxwth7.lua:5: in local 'candidate'\n\t/tmp/tmpvsfxwth7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_proper_divisors(i)\n    if i ~= j and sum_proper_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvqslpw0n.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpvqslpw0n.lua:5: in local 'candidate'\n\t/tmp/tmpvqslpw0n.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a ~= i and d(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1jqwyd2d.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp1jqwyd2d.lua:5: in local 'candidate'\n\t/tmp/tmp1jqwyd2d.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a > i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2dhbxc5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa2dhbxc5.lua:5: in local 'candidate'\n\t/tmp/tmpa2dhbxc5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9e6vbrpj.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp9e6vbrpj.lua:5: in function 'candidate'\n\t/tmp/tmp9e6vbrpj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_divisors(i)\n\t\tif a > i and sum_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps8h43nz5.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmps8h43nz5.lua:5: in local 'candidate'\n\t/tmp/tmps8h43nz5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if i ~= a and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41r0v139.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp41r0v139.lua:5: in function 'candidate'\n\t/tmp/tmp41r0v139.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_proper_divisors(i)\n    if a ~= i and sum_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0ctt7px.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpa0ctt7px.lua:5: in local 'candidate'\n\t/tmp/tmpa0ctt7px.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i then\n            local b = sum_of_divisors(a)\n            if b == i then\n                sum = sum + a + b\n            end\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp02zdlo8.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpp02zdlo8.lua:5: in local 'candidate'\n\t/tmp/tmpp02zdlo8.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  local divisors = {}\n  for i = 1, limit do\n    divisors[i] = sum_of_divisors(i)\n  end\n  for i = 1, limit do\n    local j = divisors[i]\n    if j > i and divisors[j] == i then\n      sum = sum + i + j\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm6_zvxdb.lua:6: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpm6_zvxdb.lua:6: in local 'candidate'\n\t/tmp/tmpm6_zvxdb.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_of_divisors(i)\n        if i ~= j and sum_of_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0z73nas.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa0z73nas.lua:5: in local 'candidate'\n\t/tmp/tmpa0z73nas.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_proper_divisors(i)\n        if a ~= i and sum_of_proper_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprllg5_c2.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmprllg5_c2.lua:5: in local 'candidate'\n\t/tmp/tmprllg5_c2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_proper_divisors(i)\n    if i == sum_of_proper_divisors(j) and i ~= j then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoij4eb8f.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpoij4eb8f.lua:5: in local 'candidate'\n\t/tmp/tmpoij4eb8f.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq95qjps6.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpq95qjps6.lua:5: in local 'candidate'\n\t/tmp/tmpq95qjps6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    if a > i and sum_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvsilvf0.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpnvsilvf0.lua:5: in local 'candidate'\n\t/tmp/tmpnvsilvf0.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_proper_divisors(i)\n        if a ~= i and sum_of_proper_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprllg5_c2.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmprllg5_c2.lua:5: in local 'candidate'\n\t/tmp/tmprllg5_c2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tlocal b = sum_of_proper_divisors(a)\n\t\tif i == b and a ~= b then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnlsh4f0m.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpnlsh4f0m.lua:5: in local 'candidate'\n\t/tmp/tmpnlsh4f0m.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_divisors(i)\n    if a ~= i and sum_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpobo8_kwu.lua:5: attempt to call global 'sum_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpobo8_kwu.lua:5: in function 'candidate'\n\t/tmp/tmpobo8_kwu.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9e6vbrpj.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp9e6vbrpj.lua:5: in function 'candidate'\n\t/tmp/tmp9e6vbrpj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        local b = sum_of_divisors(a)\n        if b == i and a ~= b then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg28366k5.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpg28366k5.lua:5: in local 'candidate'\n\t/tmp/tmpg28366k5.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a > i and sum_of_proper_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_iw7dxpq.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp_iw7dxpq.lua:5: in local 'candidate'\n\t/tmp/tmp_iw7dxpq.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal j = sum_of_divisors(i)\n\t\tif i ~= j and sum_of_divisors(j) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppa57sw77.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppa57sw77.lua:5: in local 'candidate'\n\t/tmp/tmppa57sw77.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a ~= i and sum_of_divisors(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsief4ibg.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpsief4ibg.lua:5: in function 'candidate'\n\t/tmp/tmpsief4ibg.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_proper_divisors(i)\n    if i ~= j and sum_proper_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvqslpw0n.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmpvqslpw0n.lua:5: in local 'candidate'\n\t/tmp/tmpvqslpw0n.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local j = sum_of_divisors(i)\n        if i ~= j and sum_of_divisors(j) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0z73nas.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpa0z73nas.lua:5: in local 'candidate'\n\t/tmp/tmpa0z73nas.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_proper_divisors(i)\n\t\tif a > i and sum_proper_divisors(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp710yxcfz.lua:5: attempt to call a nil value (global 'sum_proper_divisors')\nstack traceback:\n\t/tmp/tmp710yxcfz.lua:5: in local 'candidate'\n\t/tmp/tmp710yxcfz.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = d(i)\n\t\tif a > i and d(a) == i then\n\t\t\tsum = sum + i + a\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq95qjps6.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpq95qjps6.lua:5: in local 'candidate'\n\t/tmp/tmpq95qjps6.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tlocal b = sum_of_divisors(a)\n\t\tif b == i and a ~= b then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp16xu08m8.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmp16xu08m8.lua:5: in local 'candidate'\n\t/tmp/tmp16xu08m8.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq5m6ww1.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmpaq5m6ww1.lua:5: in function 'candidate'\n\t/tmp/tmpaq5m6ww1.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a > i and sum_of_divisors(a) == i then\n      sum = sum + i + a\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0ok9og_s.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmp0ok9og_s.lua:5: in function 'candidate'\n\t/tmp/tmp0ok9og_s.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_proper_divisors(i)\n\t\tif a ~= i and sum_of_proper_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpftgxtrfc.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmpftgxtrfc.lua:5: in local 'candidate'\n\t/tmp/tmpftgxtrfc.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a > i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvsfxwth7.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpvsfxwth7.lua:5: in local 'candidate'\n\t/tmp/tmpvsfxwth7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9e6vbrpj.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp9e6vbrpj.lua:5: in function 'candidate'\n\t/tmp/tmp9e6vbrpj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_proper_divisors(i)\n    if a ~= i and sum_of_proper_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzp_0hde5.lua:5: attempt to call global 'sum_of_proper_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpzp_0hde5.lua:5: in function 'candidate'\n\t/tmp/tmpzp_0hde5.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_of_divisors(i)\n        if a > i and sum_of_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2yv_d0l.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpw2yv_d0l.lua:5: in local 'candidate'\n\t/tmp/tmpw2yv_d0l.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local d = sum_of_divisors(i)\n    if d ~= i and sum_of_divisors(d) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpie2j1ctd.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpie2j1ctd.lua:5: in local 'candidate'\n\t/tmp/tmpie2j1ctd.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if a ~= i and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb8xfjcu2.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmpb8xfjcu2.lua:5: in local 'candidate'\n\t/tmp/tmpb8xfjcu2.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_proper_divisors(i)\n    if i ~= j and sum_of_proper_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4pnwqszn.lua:5: attempt to call a nil value (global 'sum_of_proper_divisors')\nstack traceback:\n\t/tmp/tmp4pnwqszn.lua:5: in local 'candidate'\n\t/tmp/tmp4pnwqszn.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = amicable_number(i)\n    if a and a ~= i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj9s9e5th.lua:5: attempt to call a nil value (global 'amicable_number')\nstack traceback:\n\t/tmp/tmpj9s9e5th.lua:5: in local 'candidate'\n\t/tmp/tmpj9s9e5th.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local j = sum_of_divisors(i)\n    if i ~= j and sum_of_divisors(j) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxi6m872r.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpxi6m872r.lua:5: in local 'candidate'\n\t/tmp/tmpxi6m872r.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = amicable_number(i)\n    if a and a ~= i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj9s9e5th.lua:5: attempt to call a nil value (global 'amicable_number')\nstack traceback:\n\t/tmp/tmpj9s9e5th.lua:5: in local 'candidate'\n\t/tmp/tmpj9s9e5th.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        if a > i and sum_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt_fcxbs7.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpt_fcxbs7.lua:5: in local 'candidate'\n\t/tmp/tmpt_fcxbs7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = d(i)\n        if a > i and d(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9e6vbrpj.lua:5: attempt to call global 'd' (a nil value)\nstack traceback:\n\t/tmp/tmp9e6vbrpj.lua:5: in function 'candidate'\n\t/tmp/tmp9e6vbrpj.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = proper_divisors_sum(i)\n        if a ~= i and a < limit and proper_divisors_sum(a) == i then\n            sum = sum + i\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpow46n_eh.lua:5: attempt to call a nil value (global 'proper_divisors_sum')\nstack traceback:\n\t/tmp/tmpow46n_eh.lua:5: in local 'candidate'\n\t/tmp/tmpow46n_eh.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n\tlocal sum = 0\n\tfor i = 1, limit do\n\t\tlocal a = sum_of_divisors(i)\n\t\tif a ~= i and sum_of_divisors(a) == i then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppstp6ftb.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmppstp6ftb.lua:5: in local 'candidate'\n\t/tmp/tmppstp6ftb.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = d(i)\n    if i ~= a and d(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6v56ovl3.lua:5: attempt to call a nil value (global 'd')\nstack traceback:\n\t/tmp/tmp6v56ovl3.lua:5: in local 'candidate'\n\t/tmp/tmp6v56ovl3.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n    local sum = 0\n    for i = 1, limit do\n        local a = sum_divisors(i)\n        if a > i and sum_divisors(a) == i then\n            sum = sum + i + a\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt_fcxbs7.lua:5: attempt to call a nil value (global 'sum_divisors')\nstack traceback:\n\t/tmp/tmpt_fcxbs7.lua:5: in local 'candidate'\n\t/tmp/tmpt_fcxbs7.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    if a ~= i and sum_of_divisors(a) == i then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027737,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnid7dc8c.lua:5: attempt to call global 'sum_of_divisors' (a nil value)\nstack traceback:\n\t/tmp/tmpnid7dc8c.lua:5: in function 'candidate'\n\t/tmp/tmpnid7dc8c.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function to sum all amicable numbers from 1 to a specified number.\nlocal function amicable_numbers_sum(limit)\n  local sum = 0\n  for i = 1, limit do\n    local a = sum_of_divisors(i)\n    local b = sum_of_divisors(a)\n    if i == b and i ~= a then\n      sum = sum + i\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = amicable_numbers_sum\n    lu.assertEquals(candidate(999), 504)\n    lu.assertEquals(candidate(9999), 31626)\n    lu.assertEquals(candidate(99), 0)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122673,
      "stdout": "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl8ovacgy.lua:5: attempt to call a nil value (global 'sum_of_divisors')\nstack traceback:\n\t/tmp/tmpl8ovacgy.lua:5: in local 'candidate'\n\t/tmp/tmpl8ovacgy.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
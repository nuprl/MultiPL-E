{
  "name": "mbpp_790_even_position",
  "language": "lua",
  "prompt": "-- Write a luathon function to check whether every even index contains even numbers of a given table.\nlocal function even_position(nums)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = even_position\n    lu.assertEquals(candidate({3, 2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3}), false)\n    lu.assertEquals(candidate({2, 1, 4}), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "  local result = true\n  for i = 2, #nums, 2 do\n    if nums[i] % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "  local result = true\n  for i, num in ipairs(nums) do\n    if i % 2 == 0 and num % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "    for i, num in ipairs(nums) do\n        if i % 2 == 0 and num % 2 ~= 0 then\n            return false\n        end\n    end\n    return true\nend",
    "    for i, v in ipairs(nums) do\n        if i % 2 == 0 and v % 2 ~= 0 then\n            return false\n        end\n    end\n    return true\nend",
    "  for i = 2, #nums, 2 do\n    if nums[i] % 2 == 1 then\n      return false\n    end\n  end\n  return true\nend",
    "  local result = true\n  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "    for i = 1, #nums, 2 do\n        if nums[i] % 2 ~= 0 then\n            return false\n        end\n    end\n    return true\nend",
    "  for i,v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      return false\n    end\n  end\n  return true\nend",
    "  local even = true\n  for i = 2, #nums, 2 do\n    if nums[i] % 2 ~= 0 then\n      even = false\n      break\n    end\n  end\n  return even\nend",
    "  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      return false\n    end\n  end\n  return true\nend",
    "  local result = true\n  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "  local even_indices = {}\n  for i, v in ipairs(nums) do\n    if i % 2 == 0 then\n      table.insert(even_indices, v)\n    end\n  end\n  for _, v in ipairs(even_indices) do\n    if v % 2 ~= 0 then\n      return false\n    end\n  end\n  return true\nend",
    "  local result = true\n  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "  local result = true\n  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      return false\n    end\n  end\n  return true\nend",
    "    for i, v in ipairs(nums) do\n        if i % 2 == 0 and v % 2 ~= 0 then\n            return false\n        end\n    end\n    return true\nend",
    "    local result = true\n    for i, v in ipairs(nums) do\n        if i % 2 == 0 then\n            if v % 2 ~= 0 then\n                result = false\n                break\n            end\n        end\n    end\n    return result\nend",
    "  local result = true\n  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      result = false\n      break\n    end\n  end\n  return result\nend",
    "  for i, v in ipairs(nums) do\n    if i % 2 == 0 and v % 2 ~= 0 then\n      return false\n    end\n  end\n  return true\nend",
    "    for i = 1, #nums, 2 do\n        if nums[i] % 2 ~= 0 then\n            return false\n        end\n    end\n    return true\nend"
  ]
}
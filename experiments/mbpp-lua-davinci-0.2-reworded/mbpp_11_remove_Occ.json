{
  "name": "mbpp_11_remove_Occ",
  "language": "lua",
  "prompt": "-- Write a luathon function to remove first and last occurrence of a given character from the string.\nlocal function remove_Occ(s, ch)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_Occ\n    lu.assertEquals(candidate('hello', 'l'), 'heo')\n    lu.assertEquals(candidate('abcda', 'a'), 'bcd')\n    lu.assertEquals(candidate('PHP', 'P'), 'H')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal s1 = s:gsub(\"^\"..ch, \"\")\n\tlocal s2 = s1:gsub(ch..\"$\", \"\")\n\treturn s2\nend",
    "  local i, j = s:find(ch)\n  if i == 1 then\n    s = s:sub(2)\n  elseif j == #s then\n    s = s:sub(1, -2)\n  else\n    s = s:sub(1, i - 1) .. s:sub(j + 1)\n  end\n  return s\nend",
    "\tlocal i, j = string.find(s, ch)\n\tlocal k = string.find(s, ch, -1)\n\treturn string.sub(s, 1, i-1)..string.sub(s, j+1, k-1)..string.sub(s, k+1)\nend",
    "  local s1 = string.gsub(s, ch, \"\")\n  local s2 = string.gsub(s1, ch, \"\")\n  return s2\nend",
    "  local i, j = s:find(ch)\n  if i then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "\tlocal i = 1\n\tlocal j = #s\n\twhile i <= #s do\n\t\tif s:sub(i, i) == ch then\n\t\t\ts = s:sub(1, i - 1) .. s:sub(i + 1, #s)\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\twhile j >= 1 do\n\t\tif s:sub(j, j) == ch then\n\t\t\ts = s:sub(1, j - 1) .. s:sub(j + 1, #s)\n\t\t\tbreak\n\t\tend\n\t\tj = j - 1\n\tend\n\treturn s\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local ii = 0\n  local jj = 0\n  local kk = 0\n  local ll = 0\n  local mm = 0\n  local nn = 0\n  local oo = 0\n  local pp = 0\n  local qq = 0\n  local rr = 0\n  local ss = 0\n  local tt = 0\n  local uu = 0\n  local vv = 0\n  local ww = 0\n  local xx = 0\n  local yy = 0\n  local zz = 0\n  local aa = 0\n  local bb = 0\n  local cc = 0\n  local dd = 0\n  local ee = 0\n  local ff = 0\n  local gg = 0\n  local hh = 0\n  local iii = 0\n  local jjj = 0\n  local kkk = 0\n  local lll = 0\n  local mmm = 0\n  local nnn = 0\n  local ooo = 0\n  local ppp = 0\n  local qqq = 0\n  local rrr = 0\n  local sss = 0\n  local ttt = 0\n  local uuu = 0\n  local vvv = 0\n  local www = 0\n  local xxx = 0\n  local yyy = 0\n  local zzz = 0\n  local aaaa = 0\n  local bbbb = 0\n  local cccc = 0\n  local dddd = 0\n  local eeee = 0\n  local ffff = 0\n  local gggg = 0\n  local hhhh = 0\n  local i",
    "\tlocal i, j = string.find(s, ch)\n\tif i and j then\n\t\treturn string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\n\tend\n\treturn s\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\telse\n\t\treturn s:sub(1, i-1) .. s:sub(j+1, -1)\n\tend\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local first = s:find(ch)\n    local last = s:find(ch, -1)\n    return s:sub(1, first - 1) .. s:sub(first + 1, last - 1) .. s:sub(last + 1)\nend",
    "\tlocal first = s:find(ch)\n\tlocal last = s:reverse():find(ch)\n\treturn s:sub(1, first-1) .. s:sub(first+1, #s-last) .. s:sub(#s-last+2, #s)\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "\tlocal s1 = s:gsub(ch, \"\")\n\tlocal s2 = s1:gsub(ch, \"\")\n\treturn s2\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\tif i == nil then\n\t\treturn s\n\telseif i == 1 then\n\t\treturn s:sub(2)\n\telseif j == 1 then\n\t\treturn s:sub(1, -2)\n\telse\n\t\treturn s:sub(1, i - 1) .. s:sub(i + 1)\n\tend\nend"
  ]
}
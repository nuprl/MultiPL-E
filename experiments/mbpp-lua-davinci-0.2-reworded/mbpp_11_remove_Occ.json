{
  "name": "mbpp_11_remove_Occ",
  "language": "lua",
  "prompt": "-- Write a luathon function to remove first and last occurrence of a given character from the string.\nlocal function remove_Occ(s, ch)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_Occ\n    lu.assertEquals(candidate('hello', 'l'), 'heo')\n    lu.assertEquals(candidate('abcda', 'a'), 'bcd')\n    lu.assertEquals(candidate('PHP', 'P'), 'H')\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal s1 = s:gsub(\"^\"..ch, \"\")\n\tlocal s2 = s1:gsub(ch..\"$\", \"\")\n\treturn s2\nend",
    "  local i, j = s:find(ch)\n  if i == 1 then\n    s = s:sub(2)\n  elseif j == #s then\n    s = s:sub(1, -2)\n  else\n    s = s:sub(1, i - 1) .. s:sub(j + 1)\n  end\n  return s\nend",
    "\tlocal i, j = string.find(s, ch)\n\tlocal k = string.find(s, ch, -1)\n\treturn string.sub(s, 1, i-1)..string.sub(s, j+1, k-1)..string.sub(s, k+1)\nend",
    "  local s1 = string.gsub(s, ch, \"\")\n  local s2 = string.gsub(s1, ch, \"\")\n  return s2\nend",
    "  local i, j = s:find(ch)\n  if i then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "\tlocal i = 1\n\tlocal j = #s\n\twhile i <= #s do\n\t\tif s:sub(i, i) == ch then\n\t\t\ts = s:sub(1, i - 1) .. s:sub(i + 1, #s)\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\twhile j >= 1 do\n\t\tif s:sub(j, j) == ch then\n\t\t\ts = s:sub(1, j - 1) .. s:sub(j + 1, #s)\n\t\t\tbreak\n\t\tend\n\t\tj = j - 1\n\tend\n\treturn s\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "  local i = 0\n  local j = 0\n  local k = 0\n  local l = 0\n  local m = 0\n  local n = 0\n  local o = 0\n  local p = 0\n  local q = 0\n  local r = 0\n  local t = 0\n  local u = 0\n  local v = 0\n  local w = 0\n  local x = 0\n  local y = 0\n  local z = 0\n  local a = 0\n  local b = 0\n  local c = 0\n  local d = 0\n  local e = 0\n  local f = 0\n  local g = 0\n  local h = 0\n  local ii = 0\n  local jj = 0\n  local kk = 0\n  local ll = 0\n  local mm = 0\n  local nn = 0\n  local oo = 0\n  local pp = 0\n  local qq = 0\n  local rr = 0\n  local ss = 0\n  local tt = 0\n  local uu = 0\n  local vv = 0\n  local ww = 0\n  local xx = 0\n  local yy = 0\n  local zz = 0\n  local aa = 0\n  local bb = 0\n  local cc = 0\n  local dd = 0\n  local ee = 0\n  local ff = 0\n  local gg = 0\n  local hh = 0\n  local iii = 0\n  local jjj = 0\n  local kkk = 0\n  local lll = 0\n  local mmm = 0\n  local nnn = 0\n  local ooo = 0\n  local ppp = 0\n  local qqq = 0\n  local rrr = 0\n  local sss = 0\n  local ttt = 0\n  local uuu = 0\n  local vvv = 0\n  local www = 0\n  local xxx = 0\n  local yyy = 0\n  local zzz = 0\n  local aaaa = 0\n  local bbbb = 0\n  local cccc = 0\n  local dddd = 0\n  local eeee = 0\n  local ffff = 0\n  local gggg = 0\n  local hhhh = 0\n  local i",
    "\tlocal i, j = string.find(s, ch)\n\tif i and j then\n\t\treturn string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\n\tend\n\treturn s\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\telse\n\t\treturn s:sub(1, i-1) .. s:sub(j+1, -1)\n\tend\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local first = s:find(ch)\n    local last = s:find(ch, -1)\n    return s:sub(1, first - 1) .. s:sub(first + 1, last - 1) .. s:sub(last + 1)\nend",
    "\tlocal first = s:find(ch)\n\tlocal last = s:reverse():find(ch)\n\treturn s:sub(1, first-1) .. s:sub(first+1, #s-last) .. s:sub(#s-last+2, #s)\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "\tlocal s1 = s:gsub(ch, \"\")\n\tlocal s2 = s1:gsub(ch, \"\")\n\treturn s2\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\tif i == nil then\n\t\treturn s\n\telseif i == 1 then\n\t\treturn s:sub(2)\n\telseif j == 1 then\n\t\treturn s:sub(1, -2)\n\telse\n\t\treturn s:sub(1, i - 1) .. s:sub(i + 1)\n\tend\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    return s\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  local k = s:len() - j + 1\n  return s:sub(1, i - 1) .. s:sub(i + 1, k - 1) .. s:sub(k + 1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\telse\n\t\treturn s:sub(1, i-1) .. s:sub(j+1)\n\tend\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local s1 = s:gsub(ch, \"\")\n  local s2 = s1:gsub(ch, \"\")\n  return s2\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(j+1)\n    else\n        return s\n    end\nend",
    "    local i, j = s:find(ch)\n    if i then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    return s:gsub(\"^\"..ch..\"+\", \"\"):gsub(ch..\"+$\", \"\")\nend",
    "    local s1 = s:gsub(ch, \"\")\n    local s2 = s1:gsub(ch, \"\")\n    return s2\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  if i then\n    return s:sub(1, i-1) .. s:sub(i+1)\n  else\n    return s\n  end\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\tend\n\tif i == 1 then\n\t\ts = string.sub(s, 2)\n\telse\n\t\ts = string.sub(s, 1, i - 1) .. string.sub(s, i + 1)\n\tend\n\ti, j = string.find(s, ch, -1)\n\tif i == nil then\n\t\treturn s\n\tend\n\tif i == 1 then\n\t\ts = string.sub(s, 2)\n\telse\n\t\ts = string.sub(s, 1, i - 1) .. string.sub(s, i + 1)\n\tend\n\treturn s\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local first = s:find(ch)\n    local last = s:reverse():find(ch)\n    if first == 1 then\n        s = s:sub(2)\n    elseif last == 1 then\n        s = s:sub(1, -2)\n    else\n        s = s:sub(1, first-1) .. s:sub(first+1)\n        s = s:sub(1, -last-1) .. s:sub(-last+1)\n    end\n    return s\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local f = s:find(ch)\n  local l = s:reverse():find(ch)\n  return s:sub(1, f - 1) .. s:sub(f + 1, -l - 1) .. s:sub(-l + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i, j = s:find(ch)\n    if i == nil then return s end\n    return s:sub(1, i-1) .. s:sub(j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\telseif i == 1 and j == #s then\n\t\treturn \"\"\n\telseif i == 1 then\n\t\treturn s:sub(j+1)\n\telseif j == #s then\n\t\treturn s:sub(1, i-1)\n\telse\n\t\treturn s:sub(1, i-1) .. s:sub(j+1)\n\tend\nend",
    "\tlocal i, j = string.find(s, ch)\n\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, s:len()-j) .. s:sub(s:len()-j+2, s:len())\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "  local first = s:find(ch)\n  local last = s:find(ch, -1, true)\n  return s:sub(1, first-1) .. s:sub(first+1, last-1) .. s:sub(last+1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i then\n\t\ts = s:sub(1, i-1) .. s:sub(i+1)\n\tend\n\ti, j = s:find(ch, -1)\n\tif i then\n\t\ts = s:sub(1, i-1) .. s:sub(i+1)\n\tend\n\treturn s\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i-1) .. s:sub(i+1)\n    end\n    local j = s:find(ch, -1)\n    if j then\n        s = s:sub(1, j-1) .. s:sub(j+1)\n    end\n    return s\nend",
    "\tlocal i = string.find(s, ch)\n\tlocal j = string.find(s, ch, -1)\n\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2, #s)\nend",
    "  local s1 = s:gsub(\"^\"..ch, \"\")\n  local s2 = s1:gsub(ch..\"$\", \"\")\n  return s2\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\telseif i == 1 then\n\t\treturn remove_Occ(s:sub(j+1), ch)\n\telseif j == #s then\n\t\treturn remove_Occ(s:sub(1, i-1), ch)\n\telse\n\t\treturn remove_Occ(s:sub(1, i-1) .. s:sub(j+1), ch)\n\tend\nend",
    "\tlocal s1 = s:gsub(\"^\"..ch, \"\")\n\tlocal s2 = s1:gsub(ch..\"$\", \"\")\n\treturn s2\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1)..s:sub(i+1, #s-j)..s:sub(#s-j+2, #s)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\telse\n\t\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\n\tend\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "\tlocal start = s:find(ch)\n\tlocal finish = s:reverse():find(ch)\n\tif start == nil or finish == nil then\n\t\treturn s\n\tend\n\treturn s:sub(1, start - 1) .. s:sub(start + 1, -finish - 1) .. s:sub(-finish + 1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i then\n\t\ts = s:sub(1, i-1) .. s:sub(j+1)\n\tend\n\ti, j = s:reverse():find(ch)\n\tif i then\n\t\ts = s:sub(1, -i-1) .. s:sub(-j+1)\n\tend\n\treturn s\nend",
    "\tlocal i = 1\n\tlocal j = s:len()\n\twhile i <= s:len() do\n\t\tif s:sub(i,i) == ch then\n\t\t\ts = s:sub(1,i-1) .. s:sub(i+1)\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\twhile j >= 1 do\n\t\tif s:sub(j,j) == ch then\n\t\t\ts = s:sub(1,j-1) .. s:sub(j+1)\n\t\t\tbreak\n\t\tend\n\t\tj = j - 1\n\tend\n\treturn s\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local f = string.find(s, ch)\n    local l = string.find(s, ch, -1)\n    if f == nil or l == nil then\n        return s\n    end\n    return string.sub(s, 1, f-1) .. string.sub(s, f+1, l-1) .. string.sub(s, l+1)\nend",
    "    local f, l = s:find(ch, 1, true), s:find(ch, -1, true)\n    if f and l then\n        return s:sub(1, f-1) .. s:sub(f+1, l-1) .. s:sub(l+1)\n    elseif f then\n        return s:sub(1, f-1) .. s:sub(f+1)\n    elseif l then\n        return s:sub(1, l-1) .. s:sub(l+1)\n    else\n        return s\n    end\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\telseif i == 1 then\n\t\treturn string.sub(s, 2)\n\telseif j == string.len(s) then\n\t\treturn string.sub(s, 1, j-1)\n\telse\n\t\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\n\tend\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\telse\n\t\treturn s:sub(1, i-1) .. s:sub(j+1)\n\tend\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal i, j = s:find(ch)\n\tlocal k, l = s:reverse():find(ch)\n\treturn s:sub(1, i-1)..s:sub(j+1, -k-1)..s:sub(-l+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i, j = string.find(s, ch)\n    if i == nil then\n        return s\n    end\n    local s1 = string.sub(s, 1, i - 1)\n    local s2 = string.sub(s, j + 1)\n    return s1 .. s2\nend",
    "  local i, j = string.find(s, ch)\n  if i == nil then return s end\n  if i == 1 then\n    s = string.sub(s, 2)\n  else\n    s = string.sub(s, 1, i - 1) .. string.sub(s, i + 1)\n  end\n  i, j = string.find(s, ch)\n  if i == nil then return s end\n  if i == string.len(s) then\n    s = string.sub(s, 1, i - 1)\n  else\n    s = string.sub(s, 1, i - 1) .. string.sub(s, i + 1)\n  end\n  return s\nend",
    "   local i = s:find(ch)\n   if i then\n      return s:sub(1, i-1) .. s:sub(i+1)\n   else\n      return s\n   end\nend",
    "  local s1 = s:gsub(ch, \"\")\n  local s2 = s1:gsub(ch, \"\")\n  return s2\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    if i == nil then\n        return s\n    else\n        return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2, #s)\n    end\nend",
    "  local i, j = string.find(s, ch)\n  if i and j then\n    return string.sub(s, 1, i-1) .. string.sub(s, j+1)\n  else\n    return s\n  end\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "  local i, j = s:find(ch)\n  if i then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2, #s)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "  local i, j = s:find(ch)\n  if i == nil then return s end\n  if i == 1 then\n    return remove_Occ(s:sub(2), ch)\n  elseif j == #s then\n    return remove_Occ(s:sub(1, #s - 1), ch)\n  else\n    return s:sub(1, i - 1) .. remove_Occ(s:sub(j + 1), ch)\n  end\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  local len = s:len()\n  return s:sub(1, i - 1) .. s:sub(i + 1, len - j) .. s:sub(len - j + 2, len)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2)\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i - 1) .. s:sub(i + 1, #s - j) .. s:sub(#s - j + 2, #s)\nend",
    "    local i = 1\n    while i <= #s do\n        if s:sub(i, i) == ch then\n            s = s:sub(1, i - 1) .. s:sub(i + 1)\n            i = i - 1\n        end\n        i = i + 1\n    end\n    return s\nend",
    "\tlocal start = string.find(s, ch)\n\tlocal finish = string.find(s, ch, -1)\n\tlocal s1 = string.sub(s, 1, start - 1)\n\tlocal s2 = string.sub(s, finish + 1)\n\treturn s1 .. s2\nend",
    "  local s1 = s:gsub(\"^\"..ch, \"\")\n  local s2 = s1:gsub(ch..\"$\", \"\")\n  return s2\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local first = s:find(ch)\n  local last = s:find(ch, -1, true)\n  return s:sub(1, first - 1) .. s:sub(first + 1, last - 1) .. s:sub(last + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "\tlocal s1 = s:gsub(ch, \"\")\n\tlocal s2 = s1:gsub(ch, \"\")\n\treturn s2\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    local s1 = s:sub(1, i - 1)\n    local s2 = s:sub(j + 1, -1)\n    return s1 .. s2\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i and j then\n\t\treturn string.sub(s, 1, i-1) .. string.sub(s, j+1)\n\tend\n\treturn s\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "  local i = s:find(ch)\n  if i then\n    s = s:sub(1, i-1) .. s:sub(i+1)\n  end\n  i = s:find(ch, -1)\n  if i then\n    s = s:sub(1, i-1) .. s:sub(i+1)\n  end\n  return s\nend",
    "  local i, j = s:find(ch)\n  if i then\n    return s:sub(1, i - 1) .. s:sub(j + 1)\n  end\n  return s\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n    else\n        return s\n    end\nend",
    "  local i, j = s:find(ch)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then return s end\n\treturn s:sub(1, i-1) .. s:sub(j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = string.find(s, ch)\n  local j = string.find(s, ch, -1)\n  return string.sub(s, 1, i-1) .. string.sub(s, j+1)\nend",
    "  local s1 = s:gsub(\"^\"..ch, \"\")\n  local s2 = s1:gsub(ch..\"$\", \"\")\n  return s2\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2)\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1)\n    return string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\nend",
    "  local s1 = s:gsub(ch, \"\")\n  local s2 = s1:gsub(ch, \"\")\n  return s2\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+2)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+1, -1)\nend",
    "    local i = string.find(s, ch)\n    local j = string.find(s, ch, -1)\n    local s1 = string.sub(s, 1, i-1)\n    local s2 = string.sub(s, j+1)\n    return s1..s2\nend",
    "    local f = s:find(ch)\n    local l = s:reverse():find(ch)\n    if f == nil then\n        return s\n    elseif l == nil then\n        return s:sub(1, f - 1)\n    else\n        return s:sub(1, f - 1) .. s:sub(f + 1, -l - 1) .. s:sub(-l + 1, -1)\n    end\nend",
    "  local i, j = s:find(ch)\n  if i == 1 then\n    s = s:sub(2)\n  elseif j == #s then\n    s = s:sub(1, #s - 1)\n  else\n    s = s:sub(1, i - 1) .. s:sub(j + 1)\n  end\n  return s\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+1, -1)\nend",
    "  local first = string.find(s, ch)\n  local last = string.find(s, ch, -1)\n  if first == nil and last == nil then\n    return s\n  elseif first == nil then\n    return string.sub(s, 1, last - 1)\n  elseif last == nil then\n    return string.sub(s, first + 1)\n  else\n    return string.sub(s, 1, first - 1) .. string.sub(s, last + 1)\n  end\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\telseif i == 1 and j == #s then\n\t\treturn \"\"\n\telseif i == 1 then\n\t\treturn string.sub(s, j + 1)\n\telseif j == #s then\n\t\treturn string.sub(s, 1, i - 1)\n\telse\n\t\treturn string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\n\tend\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i == nil then\n\t\treturn s\n\tend\n\treturn s:sub(1, i - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\nend",
    "  local s1 = s:gsub(\"^\"..ch, \"\")\n  local s2 = s1:gsub(ch..\"$\", \"\")\n  return s2\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  if i == nil or j == nil then\n    return s\n  end\n  return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    local i = s:find(ch, -1)\n    if i then\n        s = s:sub(1, i - 1) .. s:sub(i + 1)\n    end\n    return s\nend",
    "  local s1 = string.gsub(s, ch, \"\", 1)\n  local s2 = string.gsub(s1, ch, \"\", -1)\n  return s2\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "\tlocal i = 1\n\tlocal j = #s\n\twhile i <= #s do\n\t\tif s:sub(i,i) == ch then\n\t\t\ts = s:sub(1,i-1) .. s:sub(i+1)\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\twhile j >= 1 do\n\t\tif s:sub(j,j) == ch then\n\t\t\ts = s:sub(1,j-1) .. s:sub(j+1)\n\t\t\tbreak\n\t\tend\n\t\tj = j - 1\n\tend\n\treturn s\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:find(ch, -1, true)\n\treturn s:sub(1, i-1)..s:sub(i+1, j-1)..s:sub(j+1)\nend",
    "    local i, j = s:find(ch)\n    if i == nil then\n        return s\n    else\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    end\nend",
    "  local first = s:find(ch)\n  local last = s:find(ch, -1, true)\n  return s:sub(1, first-1) .. s:sub(first+1, last-1) .. s:sub(last+1)\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local s1 = s:gsub(ch, \"\")\n  local s2 = s1:gsub(ch, \"\")\n  return s2\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i, j = s:find(ch)\n    if i == nil then return s end\n    return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:find(ch, -1, true)\n\tif i and j then\n\t\treturn s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n\tend\n\treturn s\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  local k = s:len() - j + 1\n  return s:sub(1, i - 1) .. s:sub(i + 1, k - 1) .. s:sub(k + 1)\nend",
    "\tlocal i, j = s:find(ch)\n\tif i then\n\t\treturn s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n\tend\n\treturn s\nend",
    "    return s:gsub(\"^\"..ch..\"+\", \"\"):gsub(ch..\"+$\", \"\")\nend",
    "  local i, j = s:find(ch)\n  return s:sub(1, i-1) .. s:sub(j+1)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\tend\n\tif i == 1 then\n\t\ts = string.sub(s, j + 1)\n\telse\n\t\ts = string.sub(s, 1, i - 1) .. string.sub(s, j + 1)\n\tend\n\treturn remove_Occ(s, ch)\nend",
    "\tlocal i, j = s:find(ch)\n\tlocal k = s:reverse():find(ch)\n\treturn s:sub(1, i-1)..s:sub(j+1, -k-1)..s:sub(-k+1, -1)\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2)\nend",
    "  local i, j = s:find(ch)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  else\n    return s\n  end\nend",
    "    local i = s:find(ch)\n    local j = s:find(ch, -1, true)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\n    elseif i then\n        return s:sub(1, i - 1) .. s:sub(i + 1)\n    elseif j then\n        return s:sub(1, j - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "\tlocal i = s:find(ch)\n\tlocal j = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  if i then\n    return s:sub(1, i - 1) .. s:sub(i + 1)\n  end\n  return s\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\n    else\n        return s\n    end\nend",
    "  local i, j = s:find(ch)\n  if i then\n    return s:sub(1, i-1) .. s:sub(i+1, j-1) .. s:sub(j+1)\n  end\n  return s\nend",
    "  local i = s:find(ch)\n  if i then\n    s = s:sub(1, i-1) .. s:sub(i+1)\n  end\n  i = s:find(ch, -1)\n  if i then\n    s = s:sub(1, i-1) .. s:sub(i+1)\n  end\n  return s\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tlocal i1, j1 = string.find(s, ch, -1)\n\treturn string.sub(s, 1, i-1)..string.sub(s, j+1, i1-1)..string.sub(s, j1+1)\nend",
    "\tlocal i, j = string.find(s, ch)\n\tif i == nil then\n\t\treturn s\n\tend\n\tlocal s1 = string.sub(s, 1, i-1)\n\tlocal s2 = string.sub(s, j+1)\n\treturn s1..s2\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, #s - j) .. s:sub(#s - j + 2)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  return s:gsub(ch, \"\"):gsub(ch, \"\")\nend",
    "  local i, j = s:find(ch)\n  if i then\n    return s:sub(1, i-1) .. s:sub(j+1)\n  end\n  return s\nend",
    "    local i, j = s:find(ch)\n    if i and j then\n        return s:sub(1, i - 1) .. s:sub(j + 1)\n    else\n        return s\n    end\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, #s-j) .. s:sub(#s-j+2, #s)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  if i and j then\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\n  else\n    return s\n  end\nend",
    "  return s:gsub(ch, \"\", 1):gsub(ch, \"\", 1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "\tlocal i = s:find(ch)\n\tif i then\n\t\ts = s:sub(1, i-1) .. s:sub(i+1)\n\tend\n\tlocal i = s:find(ch, -1)\n\tif i then\n\t\ts = s:sub(1, i-1) .. s:sub(i+1)\n\tend\n\treturn s\nend",
    "\tlocal i, j = s:find(ch)\n\tlocal k = s:reverse():find(ch)\n\treturn s:sub(1, i-1) .. s:sub(j+1, -k-1) .. s:sub(-k+1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i - 1) .. s:sub(i + 1, -j - 1) .. s:sub(-j + 1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1)..s:sub(i+1, -j-1)..s:sub(-j+1, -1)\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "  local f = string.find(s, ch)\n  local l = string.find(s, ch, -1)\n  local s1 = string.sub(s, 1, f-1)\n  local s2 = string.sub(s, l+1)\n  return s1..s2\nend",
    "  local i = s:find(ch)\n  local j = s:reverse():find(ch)\n  return s:sub(1, i-1) .. s:sub(i+1, -j-1) .. s:sub(-j+1, -1)\nend",
    "    local i = s:find(ch)\n    local j = s:reverse():find(ch)\n    return s:sub(1, i-1) .. s:sub(i+1, -j) .. s:sub(-j+1, -1)\nend",
    "  local s1 = s:gsub(\"^\"..ch, \"\")\n  local s2 = s1:gsub(ch..\"$\", \"\")\n  return s2\nend",
    "  local i = s:find(ch)\n  local j = s:find(ch, -1, true)\n  return s:sub(1, i - 1) .. s:sub(i + 1, j - 1) .. s:sub(j + 1)\nend"
  ]
}
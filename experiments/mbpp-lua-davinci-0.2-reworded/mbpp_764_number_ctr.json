{
  "name": "mbpp_764_number_ctr",
  "language": "lua",
  "prompt": "-- Write a luathon function to count number of digits in a given string.\nlocal function number_ctr(str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = number_ctr\n    lu.assertEquals(candidate('program2bedone'), 1)\n    lu.assertEquals(candidate('3wonders'), 1)\n    lu.assertEquals(candidate('123'), 3)\n    lu.assertEquals(candidate('3wond-1ers2'), 3)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "\tlocal ctr = 0\n\tfor i = 1, #str do\n\t\tif tonumber(str:sub(i, i)) then\n\t\t\tctr = ctr + 1\n\t\tend\n\tend\n\treturn ctr\nend",
    "\tlocal count = 0\n\tfor i = 1, #str do\n\t\tif tonumber(str:sub(i, i)) then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend",
    "    local ctr = 0\n    for i = 1, #str do\n        if string.match(str:sub(i, i), \"%d\") then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend",
    "    local count = 0\n    for i = 1, #str do\n        if tonumber(str:sub(i,i)) then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "\tlocal count = 0\n\tfor i = 1, #str do\n\t\tif str:sub(i, i):match(\"%d\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend",
    "    local ctr = 0\n    for i=1,#str do\n        if string.find(str, i, i) then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend",
    "\tlocal count = 0\n\tfor i = 1, #str do\n\t\tif string.match(str:sub(i, i), \"%d\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend",
    "    local ctr = 0\n    for i = 1, #str do\n        if str:sub(i, i):match(\"%d\") then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend",
    "  local ctr = 0\n  for i = 1, #str do\n    if tonumber(str:sub(i, i)) then\n      ctr = ctr + 1\n    end\n  end\n  return ctr\nend",
    "\tlocal ctr = 0\n\tfor i = 1, #str do\n\t\tif tonumber(str:sub(i, i)) then\n\t\t\tctr = ctr + 1\n\t\tend\n\tend\n\treturn ctr\nend",
    "  local ctr = 0\n  for i = 1, #str do\n    if tonumber(str:sub(i, i)) then\n      ctr = ctr + 1\n    end\n  end\n  return ctr\nend",
    "  local ctr = 0\n  for i = 1, #str do\n    if string.match(str:sub(i, i), \"%d\") then\n      ctr = ctr + 1\n    end\n  end\n  return ctr\nend",
    "    local count = 0\n    for i = 1, #str do\n        if string.find(str, \"%d\") then\n            count = count + 1\n        end\n    end\n    return count\nend",
    "    local ctr = 0\n    for i = 1, #str do\n        if tonumber(str:sub(i, i)) then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend",
    "    local ctr = 0\n    for i = 1, #str do\n        if tonumber(str:sub(i, i)) then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend",
    "  local ctr = 0\n  for i = 1, #str do\n    if tonumber(str:sub(i, i)) then\n      ctr = ctr + 1\n    end\n  end\n  return ctr\nend",
    "    local ctr = 0\n    for i = 1, #str do\n        if str:sub(i,i):match(\"%d\") then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend",
    "\tlocal ctr = 0\n\tfor i = 1, #str do\n\t\tif tonumber(str:sub(i, i)) then\n\t\t\tctr = ctr + 1\n\t\tend\n\tend\n\treturn ctr\nend",
    "\tlocal ctr = 0\n\tfor i = 1, #str do\n\t\tif tonumber(str:sub(i, i)) then\n\t\t\tctr = ctr + 1\n\t\tend\n\tend\n\treturn ctr\nend",
    "    local ctr = 0\n    for i = 1, #str do\n        if tonumber(str:sub(i, i)) then\n            ctr = ctr + 1\n        end\n    end\n    return ctr\nend"
  ]
}
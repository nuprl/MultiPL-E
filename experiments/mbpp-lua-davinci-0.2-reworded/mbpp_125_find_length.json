{
  "name": "mbpp_125_find_length",
  "language": "lua",
  "prompt": "-- Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\nlocal function find_length(string)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_length\n    lu.assertEquals(candidate('11000010001'), 6)\n    lu.assertEquals(candidate('10111'), 1)\n    lu.assertEquals(candidate('11011101100101'), 2)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string.sub(string, i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0 + count_1)\n        end\n    end\n    count_0 = 0\n    count_1 = 0\n    for i = #string, 1, -1 do\n        if string.sub(string, i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0 + count_1)\n        end\n    end\n    return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] then\n            max_length = math.max(max_length, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_length\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  count_0 = 0\n  count_1 = 0\n  for i = #string, 1, -1 do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_length = math.max(max_length, i - hash[count])\n        end\n    end\n    return max_length\nend",
    "  local max_length = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_length = i\n    end\n  end\n  return max_length\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local count = 0\n    local max_count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count = count + 1\n        else\n            count = count - 1\n        end\n        if count > max_count then\n            max_count = count\n        end\n    end\n    return max_count\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  local len = string.len(string)\n  for i = 1, len do\n    if string.sub(string, i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i=1, #string do\n    if string:sub(i,i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local max_length = 0\n  local count = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    count = count_0 - count_1\n    if count == 0 then\n      max_length = math.max(max_length, i)\n    end\n  end\n  return max_length\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    max_diff = math.max(max_diff, count)\n  end\n  return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0 + count_1)\n        end\n    end\n    count_0 = 0\n    count_1 = 0\n    for i = #string, 1, -1 do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0 + count_1)\n        end\n    end\n    return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_zero = 0\n    local count_one = 0\n    for i = 1, #string do\n        if string[i] == '0' then\n            count_zero = count_zero + 1\n        else\n            count_one = count_one + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_zero - count_one))\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n    end\n    count = 0\n    for i = n, 1, -1 do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = math.max(max_length, n - i + 1)\n        end\n    end\n    return max_length\nend",
    "  local max_diff = 0\n  local count_1 = 0\n  local count_0 = 0\n  local i = 1\n  while i <= #string do\n    if string:sub(i, i) == \"1\" then\n      count_1 = count_1 + 1\n    else\n      count_0 = count_0 + 1\n    end\n    if count_1 == count_0 then\n      max_diff = math.max(max_diff, count_1 * 2)\n    end\n    i = i + 1\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    count_0 = 0\n    count_1 = 0\n    for i = #string, 1, -1 do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "\tlocal max_length = 0\n\tlocal count = 0\n\tlocal hash = {}\n\tfor i = 1, #string do\n\t\tif string[i] == '0' then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count == 0 then\n\t\t\tmax_length = i\n\t\tend\n\t\tif hash[count] then\n\t\t\tmax_length = math.max(max_length, i - hash[count])\n\t\telse\n\t\t\thash[count] = i\n\t\tend\n\tend\n\treturn max_length\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = string:len()\n  for i = 1, n do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    max_diff = math.max(max_diff, count)\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_zero = 0\n  local count_one = 0\n  local length = string.len(string)\n  for i = 1, length do\n    if string.sub(string, i, i) == '0' then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    if count_zero == count_one then\n      max_diff = math.max(max_diff, count_zero * 2)\n    end\n  end\n  count_zero = 0\n  count_one = 0\n  for i = length, 1, -1 do\n    if string.sub(string, i, i) == '0' then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    if count_zero == count_one then\n      max_diff = math.max(max_diff, count_zero * 2)\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local len = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count + 1\n        else\n            count = count - 1\n        end\n        if count == 0 then\n            len = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            len = i - hash[count]\n        end\n        if len > max_len then\n            max_len = len\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "\tlocal max_diff = 0\n\tlocal count_0 = 0\n\tlocal count_1 = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount_0 = count_0 + 1\n\t\telse\n\t\t\tcount_1 = count_1 + 1\n\t\tend\n\t\tmax_diff = math.max(max_diff, math.abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    count = 0\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = math.max(max_len, n - i)\n        end\n    end\n    return max_len\nend",
    "    local max_diff = 0\n    local count = 0\n    local zeros = 0\n    local ones = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            zeros = zeros + 1\n        else\n            ones = ones + 1\n        end\n        count = count + 1\n        if zeros == ones then\n            if count > max_diff then\n                max_diff = count\n            end\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        max_diff = math.max(max_diff, count)\n    end\n    return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_length = math.max(max_length, i - hash[count])\n        end\n    end\n    return max_length\nend",
    "  local max_diff = 0\n  local count_zero = 0\n  local count_one = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    if count_zero == count_one then\n      max_diff = math.max(max_diff, count_zero + count_one)\n    end\n  end\n  count_zero = 0\n  count_one = 0\n  for i = #string, 1, -1 do\n    if string:sub(i, i) == '0' then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    if count_zero == count_one then\n      max_diff = math.max(max_diff, count_zero + count_one)\n    end\n  end\n  return max_diff\nend",
    "    local count = 0\n    local max_count = 0\n    local zero_count = 0\n    local one_count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            zero_count = zero_count + 1\n        else\n            one_count = one_count + 1\n        end\n        if zero_count == one_count then\n            count = zero_count + one_count\n            if count > max_count then\n                max_count = count\n            end\n        end\n    end\n    return max_count\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = string.len(string)\n  for i = 1, n do\n    if string.sub(string, i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 0, 1 do\n        hash[i] = -1\n    end\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if hash[count] == -1 then\n            hash[count] = i\n        else\n            max_len = math.max(max_len, i - hash[count])\n        end\n    end\n    return max_len\nend",
    "\tlocal max_diff = 0\n\tlocal count = 0\n\tlocal i = 1\n\twhile i <= #string do\n\t\tif string:sub(i, i) == '0' then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count < 0 then\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_diff then\n\t\t\tmax_diff = count\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn max_diff\nend",
    "  local max_length = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_length = i\n    end\n    if hash[count] == nil then\n      hash[count] = i\n    else\n      max_length = math.max(max_length, i - hash[count])\n    end\n  end\n  return max_length\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 0, 1 do\n        hash[i] = -1\n    end\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if hash[count] == -1 then\n            hash[count] = i\n        else\n            max_len = math.max(max_len, i - hash[count])\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local len = string.len(string)\n    for i = 1, len do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i=1,#string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  local n = string.len(string)\n  for i = 1, n do\n    if string.sub(string, i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "  local count = 0\n  local max_count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count > max_count then\n      max_count = count\n    end\n  end\n  return max_count\nend",
    "  local count = 0\n  local max = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "\tlocal max_length = 0\n\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count == 0 then\n\t\t\tmax_length = math.max(max_length, i)\n\t\tend\n\tend\n\treturn max_length\nend",
    "    local max_length = 0\n    local count = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        count = count_0 - count_1\n        if count == 0 then\n            max_length = math.max(max_length, i)\n        end\n    end\n    return max_length\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local count = 0\n  local max = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  count_0 = 0\n  count_1 = 0\n  for i = #string, 1, -1 do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == \"1\" then\n      count = count + 1\n    else\n      count = count - 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    max_diff = math.max(max_diff, count)\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local len = string.len(string)\n  for i = 1, len do\n    if string.sub(string, i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n  end\n  return max_len\nend",
    "  local max_length = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_length = i\n    end\n    if hash[count] then\n      max_length = math.max(max_length, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_length\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0)\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  count_0 = 0\n  count_1 = 0\n  for i = #string, 1, -1 do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            count = count_0 + count_1\n            if count > max_length then\n                max_length = count\n            end\n        end\n    end\n    return max_length\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_len = math.max(max_len, i - hash[count])\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "  local max_len = 0\n  local len = 0\n  local count = 0\n  local i = 0\n  while i < #string do\n    if string[i] == '0' then\n      count = count + 1\n    else\n      count = count - 1\n    end\n    if count == 0 then\n      len = i + 1\n    else\n      local j = i - 1\n      while j >= 0 do\n        if string[j] == '0' then\n          count = count + 1\n        else\n          count = count - 1\n        end\n        if count == 0 then\n          len = i - j\n          break\n        end\n        j = j - 1\n      end\n    end\n    if len > max_len then\n      max_len = len\n    end\n    i = i + 1\n  end\n  return max_len\nend",
    "\tlocal max_diff = 0\n\tlocal count_zero = 0\n\tlocal count_one = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount_zero = count_zero + 1\n\t\telse\n\t\t\tcount_one = count_one + 1\n\t\tend\n\t\tmax_diff = math.max(max_diff, math.abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        max_diff = math.max(max_diff, count)\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      count = count_0 + count_1\n      if count > max_len then\n        max_len = count\n      end\n    end\n  end\n  return max_len\nend",
    "    local max_diff = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    local diff = math.abs(count_0 - count_1)\n    if diff > max_diff then\n      max_diff = diff\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n    end\n    count = 0\n    for i = n, 1, -1 do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = math.max(max_length, n - i + 1)\n        end\n    end\n    return max_length\nend",
    "    local max_len = 0\n    local count = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            count = count_0 + count_1\n            if count > max_len then\n                max_len = count\n            end\n        end\n    end\n    return max_len\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "  local max_length = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_length = i\n    end\n  end\n  return max_length\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 * 2)\n    end\n  end\n  count_0 = 0\n  count_1 = 0\n  for i = #string, 1, -1 do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 * 2)\n    end\n  end\n  return max_diff\nend",
    "  local max_length = 0\n  local count = 0\n  local n = string.len(string)\n  for i = 1, n do\n    if string.sub(string, i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_length = i\n    end\n  end\n  return max_length\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    local length = string.len(string)\n    for i = 1, length do\n        if string.sub(string, i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0 * 2)\n        end\n    end\n    count_0 = 0\n    count_1 = 0\n    for i = length, 1, -1 do\n        if string.sub(string, i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0 * 2)\n        end\n    end\n    return max_diff\nend",
    "    local count = 0\n    local max_count = 0\n    local i = 1\n    while i <= #string do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_count then\n            max_count = count\n        end\n        i = i + 1\n    end\n    return max_count\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_zero = 0\n  local count_one = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_zero - count_one))\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] then\n            max_length = math.max(max_length, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_length\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local count = 0\n  local max = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"1\" then\n      count = count + 1\n    else\n      count = count - 1\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "  local max_length = 0\n  local count = 0\n  local hash = {}\n  hash[0] = -1\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if hash[count] then\n      max_length = math.max(max_length, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_length\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_len = math.max(max_len, i - hash[count])\n        end\n    end\n    return max_len\nend",
    "    local count = 0\n    local max_count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_count then\n            max_count = count\n        end\n    end\n    return max_count\nend",
    "    local max_length = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n    end\n    return max_length\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local zero_count = 0\n  local one_count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      zero_count = zero_count + 1\n    else\n      one_count = one_count + 1\n    end\n    count = zero_count - one_count\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    local hash = {}\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_len = math.max(max_len, i - hash[count])\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == \"1\" then\n      count = count + 1\n    else\n      count = count - 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    local length = string.len(string)\n    for i = 1, length do\n        if string.sub(string, i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n    end\n    return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n        if char == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local count = 0\n    local max = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max then\n            max = count\n        end\n    end\n    return max\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count + 1\n    else\n      count = count - 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i=1,n do\n        if string.sub(string,i,i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local zeros = 0\n  local ones = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      zeros = zeros + 1\n    else\n      ones = ones + 1\n    end\n    count = count + 1\n    if zeros == ones then\n      max_diff = math.max(max_diff, count)\n      count = 0\n      zeros = 0\n      ones = 0\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_len = math.max(max_len, count_0 * 2)\n        end\n    end\n    count_0 = 0\n    count_1 = 0\n    for i = #string, 1, -1 do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_len = math.max(max_len, count_0 * 2)\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    local hash = {}\n    for i = 0, n do\n        hash[i] = 0\n    end\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] ~= nil then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "  local max_length = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_length = i\n    end\n    if hash[count] then\n      max_length = math.max(max_length, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_length\nend",
    "    local max_length = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n    end\n    return max_length\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "  local max_diff = 0\n  local count_zero = 0\n  local count_one = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_zero - count_one))\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local count = 0\n    local max = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max then\n            max = count\n        end\n    end\n    return max\nend",
    "  local max_len = 0\n  local count = 0\n  local n = string.len(string)\n  for i = 1, n do\n    if string.sub(string, i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n  end\n  return max_len\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  local len = string.len(string)\n  for i = 1, len do\n    if string.sub(string, i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "  local count = 0\n  local max = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "  local count = 0\n  local max = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "\tlocal max_diff = 0\n\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count < 0 then\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_diff then\n\t\t\tmax_diff = count\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local count = 0\n    local max_count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_count then\n            max_count = count\n        end\n    end\n    return max_count\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = string.len(string)\n  for i = 1, n do\n    if string.sub(string, i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    max_diff = math.max(max_diff, count)\n  end\n  return max_diff\nend",
    "\tlocal max_diff = 0\n\tlocal count = 0\n\tlocal n = string.len(string)\n\tfor i = 1, n do\n\t\tif string.sub(string, i, i) == \"0\" then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count < 0 then\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_diff then\n\t\t\tmax_diff = count\n\t\tend\n\tend\n\treturn max_diff\nend",
    "  local max = 0\n  local count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "  local count = 0\n  local max_count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_count then\n      max_count = count\n    end\n  end\n  return max_count\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  hash[0] = -1\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "    local count = 0\n    local max = 0\n    local n = string.len(string)\n    local i = 1\n    while i <= n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count + 1\n        else\n            count = count - 1\n        end\n        if count > max then\n            max = count\n        end\n        i = i + 1\n    end\n    return max\nend",
    "  local max_len = 0\n  local count = 0\n  local n = #string\n  local i = 1\n  while i <= n do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = math.max(max_len, i)\n    end\n    i = i + 1\n  end\n  count = 0\n  i = 1\n  while i <= n do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = math.max(max_len, n - i + 1)\n    end\n    i = i + 1\n  end\n  return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0)\n    end\n  end\n  return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local zeros = 0\n  local ones = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      zeros = zeros + 1\n    else\n      ones = ones + 1\n    end\n    count = count + 1\n    if zeros == ones then\n      if count > max_diff then\n        max_diff = count\n      end\n      count = 0\n      zeros = 0\n      ones = 0\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local count = 0\n    local max = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"1\" then\n            count = count + 1\n        else\n            count = count - 1\n        end\n        if count > max then\n            max = count\n        end\n    end\n    return max\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] then\n            max_length = math.max(max_length, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_length\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n    end\n    return max_diff\nend",
    "\tlocal max_diff = 0\n\tlocal count_0 = 0\n\tlocal count_1 = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount_0 = count_0 + 1\n\t\telse\n\t\t\tcount_1 = count_1 + 1\n\t\tend\n\t\tmax_diff = math.max(max_diff, math.abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  local len = string.len(string)\n  for i = 1, len do\n    if string.sub(string, i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "    local count_0, count_1 = 0, 0\n    local max_diff = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max_diff then\n      max_diff = count\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local map = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if map[count] then\n            max_len = math.max(max_len, i - map[count])\n        else\n            map[count] = i\n        end\n    end\n    return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "\tlocal max_len = 0\n\tlocal count = 0\n\tlocal hash = {}\n\tfor i = 1, #string do\n\t\tif string[i] == '0' then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count == 0 then\n\t\t\tmax_len = i\n\t\tend\n\t\tif hash[count] then\n\t\t\tmax_len = math.max(max_len, i - hash[count])\n\t\telse\n\t\t\thash[count] = i\n\t\tend\n\tend\n\treturn max_len\nend",
    "  local max_len = 0\n  local count = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n  end\n  return max_len\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string[i] == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] == nil then\n      hash[count] = i\n    else\n      max_len = math.max(max_len, i - hash[count])\n    end\n  end\n  return max_len\nend",
    "\tlocal max_diff = 0\n\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count < 0 then\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_diff then\n\t\t\tmax_diff = count\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_length = math.max(max_length, i - hash[count])\n        end\n    end\n    return max_length\nend",
    "  local max_diff = 0\n  local count_zero = 0\n  local count_one = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_zero = count_zero + 1\n    else\n      count_one = count_one + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_zero - count_one))\n  end\n  return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n        if hash[count] == nil then\n            hash[count] = i\n        else\n            max_length = math.max(max_length, i - hash[count])\n        end\n    end\n    return max_length\nend",
    "    local count = 0\n    local max_count = 0\n    local zero_count = 0\n    local one_count = 0",
    "    local max_diff = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local max_length = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_length = i\n        end\n    end\n    return max_length\nend",
    "    local max_diff = 0\n    local count_0 = 0\n    local count_1 = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count_0 = count_0 + 1\n        else\n            count_1 = count_1 + 1\n        end\n        if count_0 == count_1 then\n            max_diff = math.max(max_diff, count_0)\n        end\n    end\n    return max_diff\nend",
    "\tlocal count = 0\n\tlocal max = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == \"0\" then\n\t\t\tcount = count + 1\n\t\telse\n\t\t\tcount = count - 1\n\t\tend\n\t\tif count < 0 then\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max then\n\t\t\tmax = count\n\t\tend\n\tend\n\treturn max\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "  local max_len = 0\n  local count = 0\n  local hash = {}\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] then\n      max_len = math.max(max_len, i - hash[count])\n    else\n      hash[count] = i\n    end\n  end\n  return max_len\nend",
    "    local max_len = 0\n    local count = 0\n    local hash = {}\n    for i = 1, #string do\n        if string[i] == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n        if hash[count] then\n            max_len = math.max(max_len, i - hash[count])\n        else\n            hash[count] = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count = 0\n  local zero_count = 0\n  local one_count = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      zero_count = zero_count + 1\n    else\n      one_count = one_count + 1\n    end\n    count = count + 1\n    if count == 1 then\n      max_diff = one_count - zero_count\n    else\n      if max_diff < one_count - zero_count then\n        max_diff = one_count - zero_count\n      end\n    end\n  end\n  return max_diff\nend",
    "  local max_len = 0\n  local count = 0\n  local len = string.len(string)\n  local hash = {}\n  for i = 1, len do\n    if string.sub(string, i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = i\n    end\n    if hash[count] == nil then\n      hash[count] = i\n    else\n      if max_len < i - hash[count] then\n        max_len = i - hash[count]\n      end\n    end\n  end\n  return max_len\nend",
    "  local count = 0\n  local max = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count < 0 then\n      count = 0\n    end\n    if count > max then\n      max = count\n    end\n  end\n  return max\nend",
    "    local max_diff = 0\n    local count = 0\n    for i = 1, #string do\n        if string:sub(i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0 + count_1)\n    end\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        max_diff = math.max(max_diff, count)\n    end\n    return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = #string\n    for i = 1, n do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_diff = math.max(max_diff, i)\n        end\n    end\n    count = 0\n    for i = n, 1, -1 do\n        if string:sub(i, i) == '0' then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_diff = math.max(max_diff, n - i + 1)\n        end\n    end\n    return max_diff\nend",
    "\tlocal max_diff = 0\n\tlocal count = 0\n\tfor i = 1, #string do\n\t\tif string:sub(i, i) == '0' then\n\t\t\tcount = count - 1\n\t\telse\n\t\t\tcount = count + 1\n\t\tend\n\t\tif count < 0 then\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_diff then\n\t\t\tmax_diff = count\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i=1,n do\n        if string.sub(string,i,i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_1 + count_0)\n    end\n  end\n  count_0 = 0\n  count_1 = 0\n  for i = n, 1, -1 do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_1 + count_0)\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == '0' then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    if count_0 == count_1 then\n      max_diff = math.max(max_diff, count_0)\n    end\n  end\n  return max_diff\nend",
    "    local max_len = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count == 0 then\n            max_len = i\n        end\n    end\n    return max_len\nend",
    "  local max_len = 0\n  local count = 0\n  local n = #string\n  for i = 1, n do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = math.max(max_len, i)\n    end\n  end\n  count = 0\n  for i = n, 1, -1 do\n    if string:sub(i, i) == \"0\" then\n      count = count - 1\n    else\n      count = count + 1\n    end\n    if count == 0 then\n      max_len = math.max(max_len, n - i + 1)\n    end\n  end\n  return max_len\nend",
    "  local max_diff = 0\n  local count_0 = 0\n  local count_1 = 0\n  for i = 1, #string do\n    if string:sub(i, i) == \"0\" then\n      count_0 = count_0 + 1\n    else\n      count_1 = count_1 + 1\n    end\n    max_diff = math.max(max_diff, math.abs(count_0 - count_1))\n  end\n  return max_diff\nend",
    "    local max_diff = 0\n    local count = 0\n    local n = string.len(string)\n    for i = 1, n do\n        if string.sub(string, i, i) == \"0\" then\n            count = count - 1\n        else\n            count = count + 1\n        end\n        if count < 0 then\n            count = 0\n        end\n        if count > max_diff then\n            max_diff = count\n        end\n    end\n    return max_diff\nend"
  ]
}
{
  "name": "mbpp_95_Find_Min_Length",
  "language": "lua",
  "prompt": "-- Write a luathon function to find the length of the smallest table in a table of tables.\nlocal function Find_Min_Length(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_95_Find_Min_Length.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = Find_Min_Length\n    lu.assertEquals(candidate({{1}, {1, 2}}), 1)\n    lu.assertEquals(candidate({{1, 2}, {1, 2, 3}, {1, 2, 3, 4}}), 2)\n    lu.assertEquals(candidate({{3, 3, 3}, {4, 4, 4, 4}}), 3)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local min_len = math.huge\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min_len then\n            min_len = len\n        end\n    end\n    return min_len\nend",
    "   local min = math.huge\n   for _, t in ipairs(lst) do\n      if #t < min then\n         min = #t\n      end\n   end\n   return min\nend",
    "    local min = math.huge\n    for _, v in ipairs(lst) do\n        if type(v) == \"table\" then\n            local len = #v\n            if len < min then\n                min = len\n            end\n        end\n    end\n    return min\nend",
    "\tlocal min = math.huge\n\tfor i,v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "\tlocal min = math.huge\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  for i = 1, #lst do\n    local len = #lst[i]\n    if len < min then\n      min = len\n    end\n  end\n  return min\nend",
    "  local min_len = math.huge\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n    end\n  end\n  return min_len\nend",
    "    local min = math.huge\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min then\n            min = len\n        end\n    end\n    return min\nend",
    "  local min = math.huge\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n    end\n  end\n  return min\nend",
    "\tlocal min = math.huge\n\tfor _, v in ipairs(lst) do\n\t\tif type(v) == \"table\" then\n\t\t\tlocal len = #v\n\t\t\tif len < min then\n\t\t\t\tmin = len\n\t\t\tend\n\t\tend\n\tend\n\treturn min\nend",
    "    local min = math.huge\n    for i = 1, #lst do\n        if #lst[i] < min then\n            min = #lst[i]\n        end\n    end\n    return min\nend",
    "  local min_len = math.huge\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min_len then\n      min_len = len\n    end\n  end\n  return min_len\nend",
    "\tlocal min = math.huge\n\tfor _, tbl in ipairs(lst) do\n\t\tif #tbl < min then\n\t\t\tmin = #tbl\n\t\tend\n\tend\n\treturn min\nend",
    "  local min = math.huge\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n    end\n  end\n  return min\nend",
    "    local min_length = math.huge\n    for _, tbl in ipairs(lst) do\n        local length = #tbl\n        if length < min_length then\n            min_length = length\n        end\n    end\n    return min_length\nend",
    "  local min = math.huge\n  for _, t in ipairs(lst) do\n    local len = #t\n    if len < min then\n      min = len\n    end\n  end\n  return min\nend",
    "  local min = math.huge\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n    end\n  end\n  return min\nend",
    "  local min_length = math.huge\n  for _, tbl in ipairs(lst) do\n    local length = #tbl\n    if length < min_length then\n      min_length = length\n    end\n  end\n  return min_length\nend",
    "    local min = math.huge\n    for _, tbl in ipairs(lst) do\n        local len = #tbl\n        if len < min then\n            min = len\n        end\n    end\n    return min\nend",
    "  local min = math.huge\n  for _, tbl in ipairs(lst) do\n    local len = #tbl\n    if len < min then\n      min = len\n    end\n  end\n  return min\nend"
  ]
}
{
  "name": "mbpp_766_pair_wise",
  "language": "lua",
  "prompt": "-- Write a function to return a table of all pairs of consecutive items in a given table.\nlocal function pair_wise(l1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pair_wise\n    lu.assertEquals(candidate({1, 1, 2, 3, 3, 4, 4, 5}), {{1, 1}, {1, 2}, {2, 3}, {3, 3}, {3, 4}, {4, 4}, {4, 5}})\n    lu.assertEquals(candidate({1, 5, 7, 9, 10}), {{1, 5}, {5, 7}, {7, 9}, {9, 10}})\n    lu.assertEquals(candidate({5, 1, 9, 7, 10}), {{5, 1}, {1, 9}, {9, 7}, {7, 10}})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}), {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9, 10}})\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "  local l2 = {}\n  for i = 1, #l1 - 1 do\n    l2[i] = {l1[i], l1[i + 1]}\n  end\n  return l2\nend",
    "    local result = {}\n    for i = 1, #l1 - 1 do\n        result[i] = {l1[i], l1[i + 1]}\n    end\n    return result\nend",
    "  local l2 = {}\n  for i = 1, #l1 - 1 do\n    l2[i] = {l1[i], l1[i + 1]}\n  end\n  return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "\tlocal l2 = {}\n\tfor i = 1, #l1 - 1 do\n\t\tl2[i] = {l1[i], l1[i + 1]}\n\tend\n\treturn l2\nend",
    "  local l2 = {}\n  for i = 1, #l1 - 1 do\n    l2[i] = {l1[i], l1[i + 1]}\n  end\n  return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "    local result = {}\n    for i = 1, #l1 - 1 do\n        result[i] = {l1[i], l1[i + 1]}\n    end\n    return result\nend",
    "  local l2 = {}\n  for i = 1, #l1 - 1 do\n    l2[i] = {l1[i], l1[i + 1]}\n  end\n  return l2\nend",
    "  local l2 = {}\n  for i = 1, #l1 - 1 do\n    l2[i] = {l1[i], l1[i + 1]}\n  end\n  return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i + 1]}\n    end\n    return l2\nend",
    "  local l2 = {}\n  for i = 1, #l1 - 1 do\n    l2[i] = {l1[i], l1[i + 1]}\n  end\n  return l2\nend",
    "\tlocal l2 = {}\n\tfor i = 1, #l1 - 1 do\n\t\tl2[i] = {l1[i], l1[i + 1]}\n\tend\n\treturn l2\nend",
    "\tlocal l2 = {}\n\tfor i = 1, #l1 - 1 do\n\t\tl2[i] = {l1[i], l1[i + 1]}\n\tend\n\treturn l2\nend",
    "    local l2 = {}\n    for i = 1, #l1 - 1 do\n        l2[i] = {l1[i], l1[i+1]}\n    end\n    return l2\nend"
  ]
}
{
  "name": "mbpp_405_check_tuplex",
  "language": "lua",
  "prompt": "-- Write a function to check whether an element exists within a table.\nlocal function check_tuplex(tuplex, tuple1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_405_check_tuplex.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_tuplex\n    lu.assertEquals(candidate({'w', 3, 'r', 'e', 's', 'o', 'u', 'r', 'c', 'e'}, 'r'), true)\n    lu.assertEquals(candidate({'w', 3, 'r', 'e', 's', 'o', 'u', 'r', 'c', 'e'}, '5'), false)\n    lu.assertEquals(candidate({'w', 3, 'r', 'e', 's', 'o', 'u', 'r', 'c', 'e'}, 3), true)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "completions": [
    "    for k, v in pairs(tuplex) do\n        if v == tuple1 then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1 == tuple2 then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for i, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1 == tuple2 then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "  for _, tuple2 in ipairs(tuplex) do\n    if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n      return true\n    end\n  end\n  return false\nend",
    "    for _, tuple2 in pairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for k, v in pairs(tuplex) do\n        if v == tuple1 then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in ipairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend",
    "    for _, tuple2 in pairs(tuplex) do\n        if tuple1[1] == tuple2[1] and tuple1[2] == tuple2[2] then\n            return true\n        end\n    end\n    return false\nend"
  ]
}
{
  "name": "mbpp_166_find_even_pair",
  "language": "lua",
  "prompt": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_166_find_even_pair.py",
  "prompt_terminology": "reworded",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ],
  "results": [
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        even_count = even_count + 1\n      end\n    end\n  end\n  return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local even_pair = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                even_pair = even_pair + 1\n            end\n        end\n    end\n    return even_pair\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local even_count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                even_count = even_count + 1\n            end\n        end\n    end\n    return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  local even = {}\n  local odd = {}\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even[#even + 1] = A[i]\n    else\n      odd[#odd + 1] = A[i]\n    end\n  end\n  count = count + #even * (#even - 1) / 2\n  count = count + #odd * (#odd - 1) / 2\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for _, v in ipairs(A) do\n    if v % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local even_count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                even_count = even_count + 1\n            end\n        end\n    end\n    return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local n = #A\n  local count = 0\n  for i = 1, n do\n    for j = i + 1, n do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even = {}\n  local odd = {}\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even[#even + 1] = A[i]\n    else\n      odd[#odd + 1] = A[i]\n    end\n  end\n  return #even * (#even - 1) / 2 + #odd * (#odd - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local even_pairs = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                even_pairs = even_pairs + 1\n            end\n        end\n    end\n    return even_pairs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        even_count = even_count + 1\n      end\n    end\n  end\n  return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local even_count = 0\n    local odd_count = 0\n    for i = 1, #A do\n        if A[i] % 2 == 0 then\n            even_count = even_count + 1\n        else\n            odd_count = odd_count + 1\n        end\n    end\n    return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i+1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        even_count = even_count + 1\n      end\n    end\n  end\n  return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i+1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for _, v in ipairs(A) do\n    if v % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        even_count = even_count + 1\n      end\n    end\n  end\n  return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local evens = {}\n  local odds = {}\n  for i = 1, #A do\n    local a = A[i]\n    if a % 2 == 0 then\n      evens[a] = true\n    else\n      odds[a] = true\n    end\n  end\n  local count = 0\n  for i = 1, #A do\n    local a = A[i]\n    if a % 2 == 0 then\n      if odds[a] then\n        count = count + 1\n      end\n    else\n      if evens[a] then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsy2j0uro.lua:32: expected: 4, actual: 0\nstack traceback:\n\t/tmp/tmpsy2j0uro.lua:32: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local n = #A\n  local count = 0\n  for i = 1, n do\n    for j = i + 1, n do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for _, v in ipairs(A) do\n    if v % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for _, x in ipairs(A) do\n    if x % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local even_count = 0\n    local odd_count = 0\n    for _, v in ipairs(A) do\n        if v % 2 == 0 then\n            even_count = even_count + 1\n        else\n            odd_count = odd_count + 1\n        end\n    end\n    return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for _, a in ipairs(A) do\n    if a % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        even_count = even_count + 1\n      end\n    end\n  end\n  return even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal even_count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\teven_count = even_count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn even_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n\tlocal count = 0\n\tfor i = 1, #A do\n\t\tfor j = i + 1, #A do\n\t\t\tif (A[i] + A[j]) % 2 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for _, v in ipairs(A) do\n    if v % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n    local count = 0\n    for i = 1, #A do\n        for j = i + 1, #A do\n            if (A[i] + A[j]) % 2 == 0 then\n                count = count + 1\n            end\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * (even_count - 1) / 2 + odd_count * (odd_count - 1) / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local count = 0\n  for i = 1, #A do\n    for j = i + 1, #A do\n      if (A[i] + A[j]) % 2 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1665027713,
      "stdout": ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "-- Write a function that counts the number of pairs of integers in a table that xor to an even number.\nlocal function find_even_pair(A)\n  local even_count = 0\n  local odd_count = 0\n  for i = 1, #A do\n    if A[i] % 2 == 0 then\n      even_count = even_count + 1\n    else\n      odd_count = odd_count + 1\n    end\n  end\n  return even_count * odd_count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_even_pair\n    lu.assertEquals(candidate({5, 4, 7, 2, 1}), 4)\n    lu.assertEquals(candidate({7, 2, 8, 1, 0, 5, 11}), 9)\n    lu.assertEquals(candidate({1, 2, 3}), 1)\nend\n\nos.exit(lu.LuaUnit.run())",
      "timestamp": 1666122759,
      "stdout": "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfytqxmwf.lua:18: expected: 4, actual: 6\nstack traceback:\n\t/tmp/tmpfytqxmwf.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
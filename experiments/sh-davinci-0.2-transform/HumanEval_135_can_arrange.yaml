name: HumanEval_135_can_arrange
language: sh
prompt: "#!/bin/bash\n# Create a function which returns the largest index of an element\
  \ which\n# is not greater than or equal to the element immediately preceding it.\
  \ If\n# no such element exists then return -1. The given array will not contain\n\
  # duplicate values.\n# Examples:\n# >>> $(can_arrange \"1 2 4 3 5\")\n# \"3\"\n\
  # >>> $(can_arrange \"1 2 3\")\n# \"-1\"\n#\n# $1 is a space-separated list\ncan_arrange()\
  \ {\n"
tests: "}\n\ncandidate() {\n    can_arrange \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 4 3 5\") = \"3\" ]]\n    [[ $(candidate \"1 2 4 5\") = \"\
  -1\" ]]\n    [[ $(candidate \"1 4 2 5 6 7 8 9 10\") = \"2\" ]]\n    [[ $(candidate\
  \ \"4 8 5 7 3\") = \"4\" ]]\n    [[ $(candidate \"\") = \"-1\" ]]\n}\n\nrun_test"
completions: ["    local -a arr\n    local i\n    local j\n    local max_idx\n   \
    \ local max_val\n    local -i idx\n    local -i len\n    local -i max_len\n  \
    \  local -i max_len_idx\n    local -i max_len_val\n    local -i val\n\n    # Convert\
    \ the space-separated list into an array\n    arr=($1)\n\n    # Iterate over the\
    \ array, starting at the end\n    for ((i = ${#arr[@]} - 1; i >= 0; i--)); do\n\
    \        # Initialize the maximum length to 1\n        max_len=1\n\n        #\
    \ Initialize the maximum length index to the current index\n        max_len_idx=$i\n\
    \n        # Initialize the maximum length value to the current value\n       \
    \ max_len_val=${arr[i]}\n\n        # Iterate over the array, starting at the next\
    \ index\n        for ((j = i - 1; j >= 0; j--)); do\n            # Get the value\
    \ at the current index\n            val=${arr[j]}\n\n            # If the value\
    \ is less than or equal to the maximum length value\n            if ((val <= max_len_val));\
    \ then\n                # Increment the maximum length\n                ((max_len++))\n\
    \n                # Set the maximum length index to the current index\n      \
    \          max_len_idx=$j\n\n                # Set the maximum length value to\
    \ the current value\n                max_len_val=$val\n            fi\n      \
    \  done\n\n        # If the maximum length is greater than the current maximum\
    \ length\n        if ((max_len > max_len)); then\n            # Set the maximum\
    \ length to the current maximum length\n            max_len=$max_len\n\n     \
    \       # Set the maximum length index to the current maximum length index\n \
    \           max_idx=$max_len_idx\n\n            # Set the maximum length value\
    \ to the current maximum length value\n            max_val=$max_len_val\n    \
    \    fi\n    done\n\n    # If the maximum length is greater than 1\n    if ((max_len\
    \ > 1)); then\n        # Print the maximum length index\n        echo $max_idx\n\
    \    else\n        # Print -1\n        echo -1\n    fi", "    local -a arr=($1)\n\
    \    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    for ((i=n-1; i>=0; i--)); do\n        if ((arr[i]\
    \ >= max_value)); then\n            max_value=arr[i]\n            max_index=i\n\
    \        fi\n    done\n    echo $max_index", "    local -a arr=(\"$@\")\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n\
    \    local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        if ((arr[i]\
    \ > max_value)); then\n            max_value=arr[i]\n            max_index=i\n\
    \        fi\n    done\n    for ((i=0; i<len; i++)); do\n        if ((arr[i] <\
    \ max_value)); then\n            for ((j=i+1; j<len; j++)); do\n             \
    \   if ((arr[j] < arr[i])); then\n                    echo \"$j\"\n          \
    \          return\n                fi\n            done\n        fi\n    done\n\
    \    echo \"-1\"", "  local -a arr=($1)\n  local i=0\n  local j=0\n  local k=0\n\
    \  local n=${#arr[@]}\n  local max=0\n  local max_i=0\n  local max_j=0\n  local\
    \ max_k=0\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<n; j++)); do\n    \
    \  for ((k=j+1; k<n; k++)); do\n        if [[ ${arr[i]} -lt ${arr[j]} && ${arr[j]}\
    \ -lt ${arr[k]} ]]; then\n          if [[ ${arr[k]} -gt $max ]]; then\n      \
    \      max=${arr[k]}\n            max_i=$i\n            max_j=$j\n           \
    \ max_k=$k\n          fi\n        fi\n      done\n    done\n  done\n  if [[ $max\
    \ -gt 0 ]]; then\n    echo $max_k\n  else\n    echo -1\n  fi", "    local -a arr\n\
    \    local -i i j\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if ((arr[i]\
    \ >= arr[j])); then\n                echo \"$j\"\n                return\n   \
    \         fi\n        done\n    done\n    echo \"-1\"", "    local -a arr\n  \
    \  local -i i\n    local -i j\n    local -i max\n    local -i max_i\n    local\
    \ -i max_j\n    local -i max_k\n    local -i max_l\n    local -i max_m\n    local\
    \ -i max_n\n    local -i max_o\n    local -i max_p\n    local -i max_q\n    local\
    \ -i max_r\n    local -i max_s\n    local -i max_t\n    local -i max_u\n    local\
    \ -i max_v\n    local -i max_w\n    local -i max_x\n    local -i max_y\n    local\
    \ -i max_z\n    local -i max_aa\n    local -i max_ab\n    local -i max_ac\n  \
    \  local -i max_ad\n    local -i max_ae\n    local -i max_af\n    local -i max_ag\n\
    \    local -i max_ah\n    local -i max_ai\n    local -i max_aj\n    local -i max_ak\n\
    \    local -i max_al\n    local -i max_am\n    local -i max_an\n    local -i max_ao\n\
    \    local -i max_ap\n    local -i max_aq\n    local -i max_ar\n    local -i max_as\n\
    \    local -i max_at\n    local -i max_au\n    local -i max_av\n    local -i max_aw\n\
    \    local -i max_ax\n    local -i max_ay\n    local -i max_az\n    local -i max_ba\n\
    \    local -i max_bb\n    local -i max_bc\n    local -i max_bd\n    local -i max_be\n\
    \    local -i max_bf\n    local -i max_bg\n    local -i max_bh\n    local -i max_bi\n\
    \    local -i max_bj\n    local -i max_bk\n    local -i max_bl\n    local -i max_bm\n\
    \    local -i max_bn\n    local -i max_bo\n    local -i max_bp\n    local -i max_",
  "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    local -i j=0\n    local\
    \ -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n  \
    \  local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n  \
    \  local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n  \
    \  local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n  \
    \  local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n  \
    \  local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n  \
    \  local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n  \
    \  local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n  \
    \  local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n  \
    \  local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n  \
    \  local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=", " \
    \ local -a arr\n  local -i i j\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    for ((j=i-1; j>=0; j--)); do\n      if ((arr[i] >= arr[j]));\
    \ then\n        echo \"$j\"\n        return\n      fi\n    done\n  done\n  echo\
    \ \"-1\"", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local\
    \ -i n=${#arr[@]}\n    local -i max_i=-1\n    local -i max_j=-1\n    local -i\
    \ max_diff=-1\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++));\
    \ do\n            if ((arr[j] < arr[i])); then\n                if ((j-i > max_diff));\
    \ then\n                    max_diff=j-i\n                    max_i=i\n      \
    \              max_j=j\n                fi\n            fi\n        done\n   \
    \ done\n    if ((max_i == -1)); then\n        echo -1\n    else\n        echo\
    \ $max_j\n    fi", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i n=${#arr[@]}\n  local -i\
    \ value=0\n\n  for ((i=n-1; i>=0; i--)); do\n    value=${arr[i]}\n    if ((value\
    \ >= max_value)); then\n      max_value=$value\n      max_index=$i\n    fi\n \
    \ done\n\n  echo $max_index", "    local -a arr\n    local i\n    local len\n\
    \    local max\n    local max_index\n    local prev\n\n    arr=($1)\n    len=${#arr[@]}\n\
    \    max=${arr[0]}\n    max_index=0\n    prev=${arr[0]}\n\n    for ((i=1; i<len;\
    \ i++)); do\n        if [[ ${arr[i]} -lt $prev ]]; then\n            if [[ ${arr[i]}\
    \ -gt $max ]]; then\n                max=${arr[i]}\n                max_index=$i\n\
    \            fi\n        else\n            prev=${arr[i]}\n        fi\n    done\n\
    \n    if [[ $max_index -eq 0 ]]; then\n        echo -1\n    else\n        echo\
    \ $max_index\n    fi", "    local -a arr=($1)\n    local -i i=0\n    local -i\
    \ j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local -i curr_value=0\n\
    \    local -i curr_index=0\n    local -i prev_value=0\n    local -i prev_index=0\n\
    \    local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        curr_value=${arr[i]}\n\
    \        curr_index=$i\n        for ((j=i+1; j<len; j++)); do\n            if\
    \ ((${arr[j]} < curr_value)); then\n                if ((${arr[j]} > max_value));\
    \ then\n                    max_value=${arr[j]}\n                    max_index=$j\n\
    \                fi\n            fi\n        done\n        if ((max_index > -1));\
    \ then\n            prev_value=${arr[i]}\n            prev_index=$i\n        \
    \    arr[i]=${arr[max_index]}\n            arr[max_index]=$prev_value\n      \
    \      break\n        fi\n    done\n    if ((max_index > -1)); then\n        for\
    \ ((i=max_index; i>prev_index; i--)); do\n            curr_value=${arr[i]}\n \
    \           arr[i]=${arr[i-1]}\n            arr[i-1]=$curr_value\n        done\n\
    \    fi\n    echo $max_index", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=len-1; i>=0; i--)); do\n    if ((arr[i] >= max_value)); then\n    \
    \  max_value=arr[i]\n      max_index=i\n    fi\n  done\n  echo \"$max_index\"",
  "  local -a arr=($1)\n  local -i i=${#arr[@]}\n  while ((i--)); do\n    if ((arr[i]\
    \ >= arr[i-1])); then\n      echo $i\n      return\n    fi\n  done\n  echo -1",
  "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    local -i j\n    while ((i\
    \ > 0)); do\n        ((j = i - 1))\n        while ((j >= 0)); do\n           \
    \ if ((arr[j] <= arr[i])); then\n                ((j--))\n            else\n \
    \               echo \"$j\"\n                return\n            fi\n        done\n\
    \        ((i--))\n    done\n    echo \"-1\"", "    local -a arr=(\"$@\")\n   \
    \ local len=${#arr[@]}\n    local i=0\n    local j=0\n    local max=0\n    local\
    \ max_idx=0\n    local result=-1\n\n    for ((i=len-1; i>=0; i--)); do\n     \
    \   if [[ ${arr[i]} -ge $max ]]; then\n            max=${arr[i]}\n           \
    \ max_idx=$i\n        fi\n    done\n\n    for ((i=len-1; i>=0; i--)); do\n   \
    \     if [[ ${arr[i]} -lt $max ]]; then\n            result=$i\n            break\n\
    \        fi\n    done\n\n    echo $result", "    local -a arr\n    local -i i\n\
    \    local -i j\n    local -i k\n    local -i n\n    local -i max_idx\n    local\
    \ -i max_val\n    local -i cur_val\n    local -i cur_idx\n    local -i ret_val\n\
    \n    arr=($1)\n    n=${#arr[@]}\n    max_idx=-1\n    max_val=-1\n    for ((i=n-1;\
    \ i>=0; i--)); do\n        cur_val=${arr[i]}\n        cur_idx=$i\n        if ((cur_val\
    \ >= max_val)); then\n            max_val=$cur_val\n            max_idx=$cur_idx\n\
    \        else\n            ret_val=$cur_idx\n            break\n        fi\n \
    \   done\n    echo $ret_val", "  local -a arr=(\"$@\")\n  local -i i=0\n  local\
    \ -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local -i curr_value=0\n\
    \  local -i curr_index=0\n  local -i prev_value=0\n  local -i prev_index=0\n \
    \ for ((i=0; i<${#arr[@]}; i++)); do\n    curr_value=${arr[$i]}\n    curr_index=$i\n\
    \    for ((j=0; j<${#arr[@]}; j++)); do\n      prev_value=${arr[$j]}\n      prev_index=$j\n\
    \      if ((prev_value < curr_value && prev_index < curr_index)); then\n     \
    \   if ((prev_value > max_value)); then\n          max_value=$prev_value\n   \
    \       max_index=$prev_index\n        fi\n      fi\n    done\n  done\n  echo\
    \ $max_index", "    local arr=($1)\n    local i=0\n    local j=0\n    local max_index=-1\n\
    \    local max_value=0\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n        if\
    \ [[ ${arr[i]} -ge $max_value ]]; then\n            max_value=${arr[i]}\n    \
    \        max_index=$i\n        fi\n    done\n    echo $max_index", "    local\
    \ -a arr=($1)\n    local i=0\n    local j=0\n    local k=0\n    local max=0\n\
    \    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_sum=0\n\
    \    local sum=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n\
    \        for ((j=i+1; j<len; j++)); do\n            for ((k=j+1; k<len; k++));\
    \ do\n                sum=$((arr[i] + arr[j] + arr[k]))\n                if ((sum\
    \ > max_sum)); then\n                    max_sum=$sum\n                    max_i=$i\n\
    \                    max_j=$j\n                    max_k=$k\n                fi\n\
    \            done\n        done\n    done\n    echo \"$max_i $max_j $max_k\"",
  "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max=0\n  local\
    \ -i max_index=0\n  local -i len=${#arr[@]}\n  local -i result=-1\n\n  for ((i=0;\
    \ i<len; i++)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len;\
    \ j++)); do\n      if [[ ${arr[j]} -lt $max ]]; then\n        max=${arr[j]}\n\
    \        max_index=$j\n      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n\
    \      result=$i\n      break\n    fi\n  done\n\n  echo $result", "  local -a\
    \ arr=($1)\n  local i=0\n  local len=${#arr[@]}\n  local max_index=-1\n  local\
    \ max_value=${arr[0]}\n  local max_index_value=${arr[0]}\n  local max_index_value_index=0\n\
    \  while [ $i -lt $len ]; do\n    if [ ${arr[$i]} -gt $max_value ]; then\n   \
    \   max_value=${arr[$i]}\n      max_index=$i\n    fi\n    if [ ${arr[$i]} -gt\
    \ $max_index_value ]; then\n      max_index_value=${arr[$i]}\n      max_index_value_index=$i\n\
    \    fi\n    i=$((i+1))\n  done\n  if [ $max_index -eq $max_index_value_index\
    \ ]; then\n    echo $max_index\n  else\n    echo -1\n  fi", "    local -a arr\n\
    \    local -i i\n    local -i j\n    local -i max\n    local -i max_i\n    local\
    \ -i n\n    local -i tmp\n\n    arr=($1)\n    n=${#arr[@]}\n    max=${arr[0]}\n\
    \    max_i=0\n    for ((i=1; i<n; i++)); do\n        if ((arr[i] < max)); then\n\
    \            max=${arr[i]}\n            max_i=i\n        fi\n    done\n    for\
    \ ((i=0; i<max_i; i++)); do\n        if ((arr[i] > max)); then\n            tmp=arr[i]\n\
    \            arr[i]=max\n            max=tmp\n            for ((j=i+1; j<max_i;\
    \ j++)); do\n                if ((arr[j] < max)); then\n                    max=${arr[j]}\n\
    \                    max_i=j\n                fi\n            done\n        fi\n\
    \    done\n    if ((max_i == n-1)); then\n        echo \"-1\"\n    else\n    \
    \    echo \"$max_i\"\n    fi", "    local -a arr=($1)\n    local -i i=0\n    local\
    \ -i j=0\n    local -i max=0\n    local -i len=${#arr[@]}\n    local -i res=-1\n\
    \    for ((i=0; i<len; i++)); do\n        max=i\n        for ((j=i+1; j<len; j++));\
    \ do\n            if [[ ${arr[j]} -lt ${arr[i]} ]]; then\n                if [[\
    \ ${arr[j]} -gt ${arr[max]} ]]; then\n                    max=j\n            \
    \    fi\n            fi\n        done\n        if [[ $max -ne $i ]]; then\n  \
    \          res=$i\n            break\n        fi\n    done\n    echo $res", " \
    \   local -a arr=($1)\n    local i=0\n    local j=0\n    local max=0\n    local\
    \ max_index=0\n    local len=${#arr[@]}\n    for ((i=len-1; i>=0; i--)); do\n\
    \        if [[ ${arr[i]} -ge $max ]]; then\n            max=${arr[i]}\n      \
    \      max_index=$i\n        fi\n    done\n    echo $max_index", "    local -a\
    \ arr\n    local -i i\n    local -i j\n    local -i max_index\n    local -i max_value\n\
    \    local -i n\n    local -i result\n    arr=($1)\n    n=${#arr[@]}\n    max_index=-1\n\
    \    max_value=${arr[0]}\n    for ((i=1; i<n; i++)); do\n        if (( arr[i]\
    \ < max_value )); then\n            max_index=$i\n            max_value=${arr[i]}\n\
    \        fi\n    done\n    for ((i=0; i<n; i++)); do\n        if (( arr[i] > max_value\
    \ )); then\n            result=$i\n            break\n        fi\n    done\n \
    \   echo $result", "  local -a arr\n  local i\n  local j\n  local -i max\n  local\
    \ -i max_index\n  local -i curr_index\n  local -i curr_max\n  local -i curr_max_index\n\
    \  local -i prev_max_index\n  local -i prev_max\n  local -i prev_index\n  local\
    \ -i prev_val\n  local -i curr_val\n  local -i curr_index\n  local -i next_val\n\
    \  local -i next_index\n  local -i next_max\n  local -i next_max_index\n  local\
    \ -i next_prev_max_index\n  local -i next_prev_max\n  local -i next_prev_index\n\
    \  local -i next_prev_val\n  local -i next_curr_val\n  local -i next_curr_index\n\
    \  local -i next_next_val\n  local -i next_next_index\n  local -i next_next_max\n\
    \  local -i next_next_max_index\n  local -i next_next_prev_max_index\n  local\
    \ -i next_next_prev_max\n  local -i next_next_prev_index\n  local -i next_next_prev_val\n\
    \  local -i next_next_curr_val\n  local -i next_next_curr_index\n  local -i next_next_next_val\n\
    \  local -i next_next_next_index\n  local -i next_next_next_max\n  local -i next_next_next_max_index\n\
    \  local -i next_next_next_prev_max_index\n  local -i next_next_next_prev_max\n\
    \  local -i next_next_next_prev_index\n  local -i next_next_next_prev_val\n  local\
    \ -i next_next_next_curr_val\n  local -i next_next_next_curr_index\n  local -i\
    \ next_next_next_next_val\n  local -i next_next_next_next_index\n  local -i next_next_next_next_max\n\
    \  local -i next_", "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n\
    \    local -i i\n    local -i j\n    local -i max_index=-1\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if ((arr[j]\
    \ <= arr[i] && j > max_index)); then\n                max_index=$j\n         \
    \   fi\n        done\n    done\n    echo \"$max_index\"", "  local -a arr\n  local\
    \ -i i\n  local -i j\n  local -i max\n  local -i max_index\n  local -i n\n  local\
    \ -i prev\n  local -i result\n\n  arr=($1)\n  n=${#arr[@]}\n  result=-1\n  prev=${arr[0]}\n\
    \  for ((i=1; i<n; i++)); do\n    if [[ ${arr[i]} -ge prev ]]; then\n      prev=${arr[i]}\n\
    \      continue\n    fi\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1;\
    \ j<n; j++)); do\n      if [[ ${arr[j]} -ge prev ]]; then\n        break\n   \
    \   fi\n      if [[ ${arr[j]} -gt max ]]; then\n        max=${arr[j]}\n      \
    \  max_index=$j\n      fi\n    done\n    result=$max_index\n    break\n  done\n\
    \  echo $result", "  local -a arr=($1)\n  local -i len=${#arr[@]}\n  local -i\
    \ i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  for\
    \ ((i=len-1; i>=0; i--)); do\n    if ((arr[i] >= max_value)); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  echo $max_index", "    local -a arr\n  \
    \  local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i max_index\n\
    \    local -i max_value\n    local -i max_value_index\n    local -i max_value_index_prev\n\
    \    local -i max_value_prev\n    local -i max_value_prev_index\n    local -i\
    \ max_value_prev_index_prev\n    local -i max_value_prev_prev\n    local -i max_value_prev_prev_index\n\
    \    local -i max_value_prev_prev_index_prev\n    local -i max_value_prev_prev_prev\n\
    \    local -i max_value_prev_prev_prev_index\n    local -i max_value_prev_prev_prev_index_prev\n\
    \    local -i max_value_prev_prev_prev_prev\n    local -i max_value_prev_prev_prev_prev_index\n\
    \    local -i max_value_prev_prev_prev_prev_index_prev\n    local -i max_value_prev_prev_prev_prev_prev\n\
    \    local -i max_value_prev_prev_prev_prev_prev_index\n    local -i max_value_prev_prev_prev_prev_prev_index_prev\n\
    \    local -i max_value_prev_prev_prev_prev_prev_prev\n    local -i max_value_prev_prev_prev_prev_prev_prev_index\n\
    \    local -i max_value_prev_prev_prev_prev_prev_prev_index_prev\n    local -i\
    \ max_value_prev_prev_prev_prev_prev_prev_prev\n    local -i max_value_prev_prev_prev_prev_prev_prev_prev_index\n\
    \    local -i max_value_prev_prev_prev_prev_prev_prev_prev_index_prev\n    local\
    \ -i max_value_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i max_value_prev_prev_prev_prev_prev_prev_prev_prev_index\n\
    \    local -i max_value_prev_prev_prev_prev", "    local -a arr=($1)\n    local\
    \ -i i\n    local -i j\n    local -i max_index=-1\n    local -i max_value=${arr[0]}\n\
    \    local -i current_value\n    for ((i=1; i<${#arr[@]}; i++)); do\n        current_value=${arr[i]}\n\
    \        if ((current_value < max_value)); then\n            for ((j=i-1; j>=0;\
    \ j--)); do\n                if ((arr[j] <= current_value)); then\n          \
    \          max_index=$j\n                    break\n                fi\n     \
    \       done\n        else\n            max_index=$i\n            max_value=$current_value\n\
    \        fi\n    done\n    echo $max_index", "    local -a arr=(\"$@\")\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n\
    \    local -i curr_value=0\n    local -i curr_index=0\n    for ((i=${#arr[@]}-1;\
    \ i>=0; i--)); do\n        curr_value=${arr[i]}\n        curr_index=i\n      \
    \  if ((curr_value >= max_value)); then\n            max_value=curr_value\n  \
    \          max_index=curr_index\n        fi\n    done\n    echo \"$max_index\"",
  "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n\
    \    local -i max_index=-1\n    local -i max_value=0\n    local -i max_index_temp=0\n\
    \    local -i max_value_temp=0\n    local -i result=-1\n\n    for ((i=n-1; i>=0;\
    \ i--)); do\n        max_index_temp=$i\n        max_value_temp=${arr[i]}\n   \
    \     for ((j=i-1; j>=0; j--)); do\n            if [[ ${arr[j]} -le ${arr[i]}\
    \ ]]; then\n                if [[ ${arr[j]} -gt $max_value_temp ]]; then\n   \
    \                 max_index_temp=$j\n                    max_value_temp=${arr[j]}\n\
    \                fi\n            fi\n        done\n        if [[ $max_value_temp\
    \ -gt $max_value ]]; then\n            max_index=$max_index_temp\n           \
    \ max_value=$max_value_temp\n        fi\n    done\n\n    if [[ $max_index -ne\
    \ -1 ]]; then\n        result=$max_index\n    fi\n\n    echo $result", "    local\
    \ -a arr\n    local i\n    local j\n    local -i max_index\n    local -i max_value\n\
    \    local -i curr_value\n    local -i curr_index\n    local -i max_index_found\n\
    \    local -i max_value_found\n    local -i curr_value_found\n    local -i curr_index_found\n\
    \    local -i max_index_found_index\n    local -i max_value_found_index\n    local\
    \ -i curr_value_found_index\n    local -i curr_index_found_index\n    local -i\
    \ max_index_found_index_index\n    local -i max_value_found_index_index\n    local\
    \ -i curr_value_found_index_index\n    local -i curr_index_found_index_index\n\
    \    local -i max_index_found_index_index_index\n    local -i max_value_found_index_index_index\n\
    \    local -i curr_value_found_index_index_index\n    local -i curr_index_found_index_index_index\n\
    \    local -i max_index_found_index_index_index_index\n    local -i max_value_found_index_index_index_index\n\
    \    local -i curr_value_found_index_index_index_index\n    local -i curr_index_found_index_index_index_index\n\
    \    local -i max_index_found_index_index_index_index_index\n    local -i max_value_found_index_index_index_index_index\n\
    \    local -i curr_value_found_index_index_index_index_index\n    local -i curr_index_found_index_index_index_index_index\n\
    \    local -i max_index_found_index_index_index_index_index_index\n    local -i\
    \ max_value_found_index_index_index_index_index_index\n    local -i curr_value_found_index_index_index_index_index_index\n\
    \    local -i curr_index_found_index_index_index_index_index_index\n   ", "  \
    \  local -a arr\n    local i\n    local j\n    local max\n    local max_index\n\
    \    local -i result\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    result=-1\n\
    \    for ((i=${#arr[@]}-1; i>0; i--)); do\n        max=${arr[i]}\n        max_index=$i\n\
    \        for ((j=i-1; j>=0; j--)); do\n            if [[ ${arr[j]} -lt $max ]];\
    \ then\n                max=${arr[j]}\n                max_index=$j\n        \
    \    fi\n        done\n        if [[ $max_index -lt $i ]]; then\n            result=$max_index\n\
    \            break\n        fi\n    done\n    echo \"$result\"", "    local -a\
    \ arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i len=${#arr[@]}\n    for ((i=len-1; i>=0;\
    \ i--)); do\n        if [[ ${arr[i]} -le max_value ]]; then\n            echo\
    \ $max_index\n            return\n        fi\n        if [[ ${arr[i]} -gt max_value\
    \ ]]; then\n            max_value=${arr[i]}\n            max_index=$i\n      \
    \  fi\n    done\n    echo $max_index", "    local -a arr=($1)\n    local -i i=0\n\
    \    local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local\
    \ -i len=${#arr[@]}\n    for ((i=len-1; i>=0; i--)); do\n        if ((arr[i]>=max_value));\
    \ then\n            max_value=arr[i]\n            max_index=i\n        fi\n  \
    \  done\n    echo $max_index", "  local -a arr\n  local i\n  local j\n  local\
    \ max\n  local max_i\n  local max_j\n  local -i n\n  local -i res\n\n  arr=($1)\n\
    \  n=${#arr[@]}\n  res=-1\n\n  for ((i=0; i<n-1; i++)); do\n    max=${arr[i]}\n\
    \    max_i=$i\n    max_j=$i\n    for ((j=i+1; j<n; j++)); do\n      if [[ ${arr[j]}\
    \ -le $max ]]; then\n        max=${arr[j]}\n        max_j=$j\n      fi\n    done\n\
    \    if [[ $max_i -lt $max_j ]]; then\n      res=$max_i\n      break\n    fi\n\
    \  done\n\n  echo $res", "    local -a arr\n    local -i i\n    local -i j\n \
    \   local -i max\n    local -i max_idx\n    local -i n\n    local -i tmp\n\n \
    \   arr=($1)\n    n=${#arr[@]}\n    max=${arr[0]}\n    max_idx=0\n    for ((i=1;\
    \ i<n; i++)); do\n        if [[ ${arr[i]} -lt max ]]; then\n            max=${arr[i]}\n\
    \            max_idx=i\n        fi\n    done\n    if [[ max_idx -eq 0 ]]; then\n\
    \        echo -1\n        return\n    fi\n    for ((i=max_idx; i<n; i++)); do\n\
    \        if [[ ${arr[i]} -ge max ]]; then\n            tmp=${arr[i]}\n       \
    \     arr[i]=${arr[max_idx]}\n            arr[max_idx]=$tmp\n            max_idx=$i\n\
    \            break\n        fi\n    done\n    for ((i=max_idx+1; i<n; i++)); do\n\
    \        if [[ ${arr[i]} -lt ${arr[max_idx]} ]]; then\n            echo $max_idx\n\
    \            return\n        fi\n    done\n    echo -1", "  local -a arr=($1)\n\
    \  local -i i=${#arr[@]}-1\n  local -i j=0\n  local -i max_idx=-1\n  while ((\
    \ i >= 0 )); do\n    if (( arr[i] < arr[i-1] )); then\n      (( j = i - 1 ))\n\
    \      while (( j >= 0 )); do\n        if (( arr[j] <= arr[i] )); then\n     \
    \     (( max_idx = j ))\n          break\n        fi\n        (( j -= 1 ))\n \
    \     done\n      break\n    fi\n    (( i -= 1 ))\n  done\n  echo \"$max_idx\"",
  "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i len=${#arr[@]}\n    for ((i=len-1; i>=0;\
    \ i--)); do\n        if [[ ${arr[i]} -ge $max_value ]]; then\n            max_value=${arr[i]}\n\
    \            max_index=$i\n        fi\n    done\n    echo $max_index", "    local\
    \ -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n\
    \    local -i max_i=-1\n    local -i max_j=-1\n    local -i max_diff=-1\n    local\
    \ -i diff=0\n    local -i max_val=-1\n    local -i val=0\n\n    for ((i=0; i<len;\
    \ i++)); do\n        val=${arr[i]}\n        for ((j=i+1; j<len; j++)); do\n  \
    \          diff=${arr[j]}-$val\n            if ((diff > 0 && diff > max_diff));\
    \ then\n                max_diff=$diff\n                max_i=$i\n           \
    \     max_j=$j\n                max_val=$val\n            fi\n        done\n \
    \   done\n\n    if ((max_i == -1)); then\n        echo -1\n    else\n        echo\
    \ $max_j\n    fi", "    local arr=($1)\n    local len=${#arr[@]}\n    local i=0\n\
    \    local j=0\n    local max=0\n    local max_index=0\n    local result=-1\n\
    \    while [ $i -lt $len ]; do\n        j=$((i+1))\n        max=${arr[$i]}\n \
    \       max_index=$i\n        while [ $j -lt $len ]; do\n            if [ ${arr[$j]}\
    \ -le $max ]; then\n                max=${arr[$j]}\n                max_index=$j\n\
    \            fi\n            j=$((j+1))\n        done\n        if [ $max_index\
    \ -gt $i ]; then\n            result=$max_index\n            break\n        fi\n\
    \        i=$((i+1))\n    done\n    echo $result", "    local -a arr\n    local\
    \ i\n    local j\n    local max\n    local max_index\n    local -i len\n    local\
    \ -i ret\n    arr=($1)\n    len=${#arr[@]}\n    ret=-1\n    for ((i=len-1; i>=0;\
    \ i--)); do\n        max=${arr[i]}\n        max_index=$i\n        for ((j=i-1;\
    \ j>=0; j--)); do\n            if [[ ${arr[j]} -lt $max ]]; then\n           \
    \     max=${arr[j]}\n                max_index=$j\n            fi\n        done\n\
    \        if [[ $max_index -lt $i ]]; then\n            ret=$max_index\n      \
    \      break\n        fi\n    done\n    echo $ret", "    local -a arr\n    local\
    \ i\n    local max\n    local max_index\n    local index\n    local -i result\n\
    \n    # Convert $1 to an array\n    arr=($1)\n\n    # Iterate through the array,\
    \ starting at the second element\n    for ((i=1; i<${#arr[@]}; i++)); do\n   \
    \     # If the current element is less than the maximum element seen so far\n\
    \        # then set the result to the index of the current element\n        if\
    \ ((${arr[i]} < max)); then\n            result=$i\n            break\n      \
    \  fi\n\n        # If the current element is greater than the maximum element\
    \ seen so\n        # far then set the maximum element to the current element and\
    \ set the\n        # maximum index to the current index\n        if ((${arr[i]}\
    \ > max)); then\n            max=${arr[i]}\n            max_index=$i\n       \
    \ fi\n    done\n\n    # If the result is not set then set it to the maximum index\n\
    \    if ((result == 0)); then\n        result=$max_index\n    fi\n\n    # If the\
    \ result is still not set then set it to -1\n    if ((result == 0)); then\n  \
    \      result=-1\n    fi\n\n    echo $result", "    local -a arr\n    local -i\
    \ i j\n    arr=($1)\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n        if ((arr[i]\
    \ < arr[i-1])); then\n            for ((j=i-1; j>=0; j--)); do\n             \
    \   if ((arr[i] >= arr[j])); then\n                    echo $j\n             \
    \       return\n                fi\n            done\n        fi\n    done\n \
    \   echo -1", "    local -a array=($1)\n    local -i i\n    for ((i=${#array[@]}-1;\
    \ i>0; i--)); do\n        if ((array[i] < array[i-1])); then\n            echo\
    \ $i\n            return\n        fi\n    done\n    echo -1", "  local -a arr=($1)\n\
    \  local i=0\n  local j=1\n  local max_index=-1\n  while [ $j -lt ${#arr[@]} ];\
    \ do\n    if [ ${arr[$j]} -le ${arr[$i]} ]; then\n      if [ $j -gt $max_index\
    \ ]; then\n        max_index=$j\n      fi\n    else\n      i=$j\n    fi\n    j=$((j+1))\n\
    \  done\n  echo $max_index", "  local -a arr\n  local i j\n  IFS=' ' read -r -a\
    \ arr <<< \"$1\"\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    for ((j=i-1; j>=0;\
    \ j--)); do\n      if [[ ${arr[i]} -ge ${arr[j]} ]]; then\n        echo \"$j\"\
    \n        return\n      fi\n    done\n  done\n  echo \"-1\"", "  local -a arr\n\
    \  local -i i\n  local -i j\n  local -i max\n  local -i max_i\n  local -i n\n\n\
    \  arr=($1)\n  n=${#arr[@]}\n  max_i=-1\n  for ((i=n-2; i>=0; i--)); do\n    max=${arr[i+1]}\n\
    \    max_i=$((i+1))\n    for ((j=i+2; j<n; j++)); do\n      if ((${arr[j]} > max));\
    \ then\n        max=${arr[j]}\n        max_i=$j\n      fi\n    done\n    if ((${arr[i]}\
    \ >= max)); then\n      max_i=-1\n    else\n      break\n    fi\n  done\n  echo\
    \ $max_i", "  local -a arr=($1)\n  local -i i=${#arr[@]}\n  while ((i--)); do\n\
    \    if ((arr[i] < arr[i-1])); then\n      echo $i\n      return\n    fi\n  done\n\
    \  echo -1", "    local -a arr\n    local -i i\n    local -i max\n    local -i\
    \ max_i\n    local -i n\n    local -i prev\n    local -i res\n\n    arr=($1)\n\
    \    n=${#arr[@]}\n    if (( n == 0 )); then\n        echo -1\n        return\n\
    \    fi\n\n    prev=${arr[0]}\n    max=${arr[0]}\n    max_i=0\n    res=-1\n  \
    \  for (( i = 1; i < n; i++ )); do\n        if (( arr[i] < prev )); then\n   \
    \         if (( arr[i] > max )); then\n                max=${arr[i]}\n       \
    \         max_i=i\n            fi\n        else\n            prev=${arr[i]}\n\
    \            max=${arr[i]}\n            max_i=i\n        fi\n    done\n\n    if\
    \ (( max < prev )); then\n        res=$max_i\n    fi\n\n    echo $res", "    local\
    \ -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n\
    \    local -i max_i=-1\n    local -i max_val=0\n    for ((i=n-2; i>=0; i--));\
    \ do\n        if ((arr[i] >= arr[i+1])); then\n            continue\n        fi\n\
    \        if ((arr[i] > max_val)); then\n            max_val=arr[i]\n         \
    \   max_i=i\n        fi\n    done\n    echo $max_i", "    local -a arr\n    local\
    \ -i i\n    local -i j\n    local -i max\n    local -i max_index\n    local -i\
    \ n\n    local -i prev\n    local -i ret\n    arr=($1)\n    n=${#arr[@]}\n   \
    \ max=${arr[0]}\n    max_index=0\n    ret=-1\n    for ((i=1; i<n; i++)); do\n\
    \        prev=${arr[i-1]}\n        if [[ ${arr[i]} -lt prev ]]; then\n       \
    \     if [[ ${arr[i]} -gt max ]]; then\n                max=${arr[i]}\n      \
    \          max_index=i\n            fi\n        else\n            if [[ ${arr[i]}\
    \ -gt max ]]; then\n                ret=$max_index\n                break\n  \
    \          fi\n        fi\n    done\n    echo $ret", "    local -a arr\n    local\
    \ i\n    local -i j\n    local -i max_index\n    local -i max_value\n    local\
    \ -i result\n\n    arr=($1)\n    result=-1\n    max_index=0\n    max_value=${arr[0]}\n\
    \    for ((i=1; i<${#arr[@]}; i++)); do\n        if ((arr[i] < max_value)); then\n\
    \            for ((j=i-1; j>=max_index; j--)); do\n                if ((arr[i]\
    \ >= arr[j])); then\n                    result=$j\n                    break\n\
    \                fi\n            done\n            break\n        else\n     \
    \       max_index=$i\n            max_value=${arr[i]}\n        fi\n    done\n\
    \    echo $result", "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i\
    \ j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local -i curr_value=0\n\
    \    local -i curr_index=0\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n      \
    \  curr_value=${arr[i]}\n        curr_index=i\n        if ((curr_value > max_value));\
    \ then\n            max_value=curr_value\n            max_index=curr_index\n \
    \       fi\n    done\n    echo \"$max_index\"", "    local -a arr\n    local -i\
    \ i\n    local -i max_i\n    local -i max_val\n    local -i val\n    IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n    max_i=-1\n    max_val=${arr[0]}\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        val=${arr[i]}\n        if ((val < max_val)); then\n     \
    \       max_i=$i\n            max_val=$val\n        fi\n    done\n    echo $max_i",
  "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n\
    \  local -i max_value=0\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    if ((arr[i]\
    \ >= max_value)); then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n\
    \  echo $max_index", "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i\
    \ j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local -i len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        if ((arr[i] > max_value)); then\n  \
    \          max_value=arr[i]\n            max_index=i\n        fi\n    done\n \
    \   for ((i=0; i<len; i++)); do\n        if ((arr[i] < max_value)); then\n   \
    \         for ((j=i+1; j<len; j++)); do\n                if ((arr[j] > arr[i]));\
    \ then\n                    break\n                fi\n            done\n    \
    \        if ((j == len)); then\n                echo \"$i\"\n                return\n\
    \            fi\n        fi\n    done\n    echo \"$max_index\"", "    local -a\
    \ arr=($1)\n    local -i i=${#arr[@]}\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i cur_value=0\n    local -i cur_index=0\n\
    \    while (( i-- )); do\n        cur_value=${arr[i]}\n        cur_index=i\n \
    \       if (( cur_value > max_value )); then\n            max_value=cur_value\n\
    \            max_index=cur_index\n        fi\n    done\n    echo $max_index",
  "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    local -i j=0\n    local\
    \ -i max_index=-1\n    local -i max_value=-1\n    while ((i >= 0)); do\n     \
    \   if ((arr[i] < max_value)); then\n            ((i--))\n            continue\n\
    \        fi\n        if ((arr[i] > max_value)); then\n            max_value=arr[i]\n\
    \            max_index=i\n        fi\n        while ((j < i)); do\n          \
    \  if ((arr[j] < arr[i])); then\n                ((j++))\n                continue\n\
    \            fi\n            if ((arr[j] > arr[i])); then\n                arr[i]=arr[j]\n\
    \                max_index=i\n                break\n            fi\n        \
    \    ((j++))\n        done\n        ((i--))\n    done\n    echo $max_index", " \
    \ local arr=($1)\n  local i=0\n  local j=0\n  local k=0\n  local n=${#arr[@]}\n\
    \  local max=0\n  local max_index=0\n  local max_index_arr=()\n  local max_index_arr_len=0\n\
    \  local max_index_arr_len_prev=0\n  local max_index_arr_len_prev_prev=0\n  local\
    \ max_index_arr_len_prev_prev_prev=0\n  local max_index_arr_len_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev=0\n  local max_index_arr_len_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev=0\n  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local max_index_arr_len_prev_prev_prev_prev_", "  local -a arr=(\"$@\")\n \
    \ local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i len=${#arr[@]}\n  for ((i=len-1; i>=0; i--)); do\n    if ((arr[i]\
    \ >= max_value)); then\n      max_value=arr[i]\n      max_index=i\n    fi\n  done\n\
    \  echo \"$max_index\"", "    local -a arr=($1)\n    local -i i=${#arr[@]}\n \
    \   local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local\
    \ -i current_value=0\n    local -i current_index=0\n    local -i prev_value=0\n\
    \    local -i prev_index=0\n    local -i temp_index=0\n    local -i temp_value=0\n\
    \    local -i temp_max_index=0\n    local -i temp_max_value=0\n    local -i temp_prev_index=0\n\
    \    local -i temp_prev_value=0\n    local -i temp_current_index=0\n    local\
    \ -i temp_current_value=0\n    local -i temp_max_index_value=0\n    local -i temp_prev_index_value=0\n\
    \    local -i temp_current_index_value=0\n    local -i temp_max_index_index=0\n\
    \    local -i temp_prev_index_index=0\n    local -i temp_current_index_index=0\n\
    \    local -i temp_max_index_index_value=0\n    local -i temp_prev_index_index_value=0\n\
    \    local -i temp_current_index_index_value=0\n    local -i temp_max_index_index_index=0\n\
    \    local -i temp_prev_index_index_index=0\n    local -i temp_current_index_index_index=0\n\
    \    local -i temp_max_index_index_index_value=0\n    local -i temp_prev_index_index_index_value=0\n\
    \    local -i temp_current_index_index_index_value=0\n    local -i temp_max_index_index_index_index=0\n\
    \    local -i temp_prev_index_index_index_index=0\n    local -i temp_current_index_index_index_index=0\n\
    \    local -i temp_max_index_index_index_index_value=0\n    local -i temp_prev_index_index_index_index_value=0\n",
  "  local -a arr\n  local -i i\n  local -i j\n  local -i max\n  local -i max_idx\n\
    \  local -i n\n  local -i prev\n  local -i ret\n\n  arr=($1)\n  n=${#arr[@]}\n\
    \  ret=-1\n  prev=${arr[0]}\n  for ((i=1; i<n; i++)); do\n    if ((prev < arr[i]));\
    \ then\n      max=arr[i]\n      max_idx=i\n      for ((j=i+1; j<n; j++)); do\n\
    \        if ((prev < arr[j]) && (arr[j] < max)); then\n          max=arr[j]\n\
    \          max_idx=j\n        fi\n      done\n      ret=$max_idx\n      break\n\
    \    fi\n    prev=${arr[i]}\n  done\n  echo $ret", "    local -a arr\n    arr=($1)\n\
    \    local -i i\n    local -i j\n    local -i n\n    n=${#arr[@]}\n    for ((i=n-1;\
    \ i>=0; i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if (( arr[j]\
    \ <= arr[i] )); then\n                echo $j\n                return\n      \
    \      fi\n        done\n    done\n    echo -1", "    local -a arr=()\n    local\
    \ i\n    local j\n    local max\n    local max_index\n    local result\n\n   \
    \ # Convert the space-separated list into an array\n    read -a arr <<< \"$1\"\
    \n\n    # Iterate over the array\n    for ((i=${#arr[@]}-1; i>=0; i--)); do\n\
    \        # Set the max to the current element\n        max=${arr[i]}\n       \
    \ max_index=$i\n\n        # Iterate over the remaining elements\n        for ((j=i-1;\
    \ j>=0; j--)); do\n            # If the current element is less than the max then\
    \ set the max\n            # to the current element and set the max index to the\
    \ current\n            # index\n            if [[ ${arr[j]} -lt $max ]]; then\n\
    \                max=${arr[j]}\n                max_index=$j\n            fi\n\
    \        done\n\n        # If the max index is not the current index then swap\
    \ the elements\n        # and break\n        if [[ $max_index -ne $i ]]; then\n\
    \            arr[$i]=${arr[max_index]}\n            arr[max_index]=$max\n    \
    \        break\n        fi\n    done\n\n    # If the max index is the last index\
    \ then return -1\n    if [[ $max_index -eq ${#arr[@]}-1 ]]; then\n        echo\
    \ -1\n    else\n        echo $max_index\n    fi", "    local -a arr=($1)\n   \
    \ local -i i=${#arr[@]}-1\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\
    \    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i\
    \ ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i\
    \ ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i\
    \ al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i\
    \ ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i\
    \ at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i\
    \ ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i\
    \ bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i\
    \ bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i\
    \ bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i\
    \ bn=0\n    local -i bo=0\n    local -i bp=", "    local -a arr\n    local -i\
    \ i\n    local -i j\n    local -i max_index\n    local -i max_value\n    local\
    \ -i n\n    local -i temp_index\n    local -i temp_value\n    local -i value\n\
    \    arr=($1)\n    n=${#arr[@]}\n    max_index=-1\n    max_value=-1\n    for ((i=n-1;\
    \ i>=0; i--)); do\n        value=${arr[i]}\n        if ((value >= max_value));\
    \ then\n            temp_index=max_index\n            temp_value=max_value\n \
    \           max_index=i\n            max_value=value\n        fi\n        if ((value\
    \ < temp_value)); then\n            echo $temp_index\n            return\n   \
    \     fi\n    done\n    echo -1", "  local -a arr=($1)\n  local -i i=0\n  local\
    \ -i j=0\n  local -i n=${#arr[@]}\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i max_value_index=-1\n  local -i max_value_index_prev=-1\n  local -i\
    \ max_value_index_prev_prev=-1\n  local -i max_value_index_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev=-1\n  local -i max_value_index_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_prev=-1\n  local -i max_value_index_prev_prev_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev=-1\n  local\
    \ -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n  local\
    \ -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n  local\
    \ -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=-1\n\
    \  local -i max_value_index_prev_prev_prev_prev_prev_", "    local -a arr\n  \
    \  local -i i j\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n        if ((arr[i] < arr[i-1])); then\n            for ((j=i-1;\
    \ j>=0; j--)); do\n                if ((arr[i] >= arr[j])); then\n           \
    \         echo $j\n                    return\n                fi\n          \
    \  done\n        fi\n    done\n    echo -1", "  local -a arr=($1)\n  local -i\
    \ i=${#arr[@]}-1\n  local -i j\n  while ((i > 0)); do\n    ((j = i - 1))\n   \
    \ while ((j >= 0)); do\n      if ((arr[j] <= arr[i])); then\n        ((j--))\n\
    \      else\n        echo $j\n        return\n      fi\n    done\n    ((i--))\n\
    \  done\n  echo -1", "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n  local\
    \ -i j\n  while (( i > 0 )); do\n    (( j = i - 1 ))\n    while (( j >= 0 ));\
    \ do\n      if (( arr[j] <= arr[i] )); then\n        (( j-- ))\n      else\n \
    \       break\n      fi\n    done\n    (( i-- ))\n  done\n  echo \"$j\"", "  local\
    \ -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_i=-1\n  local -i\
    \ max_j=-1\n  local -i max_diff=-1\n  local -i diff=0\n  local -i len=${#arr[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      diff=${arr[j]}-${arr[i]}\n\
    \      if ((diff > 0 && diff > max_diff)); then\n        max_diff=$diff\n    \
    \    max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  if ((max_i == -1));\
    \ then\n    echo -1\n  else\n    echo $max_j\n  fi", "  local -a arr\n  local\
    \ i\n  local j\n  local k\n  local n\n  local -i max_index=-1\n  local -i max_value=-1\n\
    \  arr=($1)\n  n=${#arr[@]}\n  for ((i=0; i<n; i++)); do\n    if ((arr[i] < max_value));\
    \ then\n      for ((j=i+1; j<n; j++)); do\n        if ((arr[j] < arr[i])); then\n\
    \          if ((arr[j] > max_value)); then\n            max_value=${arr[j]}\n\
    \            max_index=$j\n          fi\n        fi\n      done\n      if ((max_index\
    \ >= 0)); then\n        k=${arr[i]}\n        arr[i]=${arr[max_index]}\n      \
    \  arr[max_index]=$k\n        echo \"${arr[@]}\"\n        return\n      fi\n \
    \   else\n      max_value=${arr[i]}\n    fi\n  done\n  echo \"-1\"", "    local\
    \ -a arr\n    local i=0\n    local max=0\n    local index=-1\n    for num in $1;\
    \ do\n        arr[$i]=$num\n        ((i++))\n    done\n    for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n        if [[ ${arr[$i]} -le ${arr[$i-1]} ]]; then\n       \
    \     if [[ ${arr[$i]} -gt $max ]]; then\n                max=${arr[$i]}\n   \
    \             index=$i\n            fi\n        fi\n    done\n    echo $index",
  "    local -a arr\n    local i\n    local j\n    local max_index\n    local max_value\n\
    \    local -i max_index_value\n    local -i max_index_index\n    local -i max_index_index_value\n\
    \    local -i max_index_index_index\n    local -i max_index_index_index_value\n\
    \    local -i max_index_index_index_index\n    local -i max_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index\n    local -i max_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index_index\n    local -i max_index_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index_index_index\n    local -i max_index_index_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index_index_index_index\n    local -i\
    \ max_index_index_index_index_index_index_index_index_value\n    local -i max_index_index_index_index_index_index_index_index_index\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_index\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_index_index\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_index_index_index\n\
    \    local -i max_index_index_index_index_index_index_index_index_index_index_index_index_value\n\
    \    local -i max_index_index_index_index", "  local -a arr=($1)\n  local -i i=${#arr[@]}\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i\
    \ ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n \
    \ local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i\
    \ al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n \
    \ local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i\
    \ au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n \
    \ local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i\
    \ bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n \
    \ local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i\
    \ bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n", "    local -a arr=($1)\n\
    \    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i\
    \ max_index=-1\n    local -i max_value=-1\n    for ((i=0; i<len; i++)); do\n \
    \       if [[ ${arr[i]} -gt max_value ]]; then\n            max_value=${arr[i]}\n\
    \            max_index=i\n        fi\n        if [[ ${arr[i]} -lt max_value ]];\
    \ then\n            for ((j=i; j>=0; j--)); do\n                if [[ ${arr[j]}\
    \ -le ${arr[i]} ]]; then\n                    echo $j\n                    return\n\
    \                fi\n            done\n        fi\n    done\n    echo $max_index",
  "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    local -i j=i-1\n    while\
    \ (( i > 0 )); do\n        if (( arr[i] < arr[j] )); then\n            echo $i\n\
    \            return\n        fi\n        (( i--, j-- ))\n    done\n    echo -1",
  "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n  local -i j=i-1\n  while (( i\
    \ > 0 )); do\n    if (( arr[i] < arr[j] )); then\n      echo $i\n      return\n\
    \    fi\n    (( i--, j-- ))\n  done\n  echo -1", "  local -a arr\n  local -i i\
    \ j\n  arr=($1)\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    if ((arr[i]<arr[i-1]));\
    \ then\n      echo \"$i\"\n      return\n    fi\n  done\n  echo \"-1\"", "   \
    \ local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i len=${#arr[@]}\n    for ((i=len-1; i>=0;\
    \ i--)); do\n        if ((arr[i] >= max_value)); then\n            max_value=arr[i]\n\
    \            max_index=i\n        fi\n    done\n    echo $max_index", "  local\
    \ -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local\
    \ -i max_value=0\n  local -i len=${#arr[@]}\n  for ((i=len-1; i>=0; i--)); do\n\
    \    if ((arr[i] >= max_value)); then\n      max_value=arr[i]\n      max_index=i\n\
    \    fi\n  done\n  echo $max_index", "  local -a arr\n  local -i i\n  local -i\
    \ j\n  local -i max\n  local -i max_index\n  local -i n\n  local -i prev\n  local\
    \ -i prev_index\n  local -i result\n  arr=($1)\n  n=${#arr[@]}\n  result=-1\n\
    \  prev_index=-1\n  for ((i=0; i<n; i++)); do\n    if ((prev_index >= 0)); then\n\
    \      if ((arr[i] >= prev)); then\n        prev_index=-1\n      fi\n    fi\n\
    \    if ((prev_index < 0)); then\n      prev=arr[i]\n      prev_index=i\n    \
    \  max_index=-1\n      max=0\n    else\n      if ((arr[i] > max)); then\n    \
    \    max=arr[i]\n        max_index=i\n      fi\n    fi\n  done\n  if ((max_index\
    \ >= 0)); then\n    result=max_index\n  fi\n  echo \"$result\"", "    local -a\
    \ arr\n    local -i i j\n    read -ra arr <<< \"$1\"\n    for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n        if ((arr[i] < arr[i-1])); then\n            for ((j=i-1;\
    \ j>=0; j--)); do\n                if ((arr[i] >= arr[j])); then\n           \
    \         echo \"$j\"\n                    return\n                fi\n      \
    \      done\n            echo \"-1\"\n            return\n        fi\n    done\n\
    \    echo \"-1\"", "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    local\
    \ -i j\n    while (( i > 0 )); do\n        (( j = i - 1 ))\n        while (( j\
    \ >= 0 )); do\n            if (( arr[j] <= arr[i] )); then\n                ((\
    \ j-- ))\n            else\n                echo \"$j\"\n                return\n\
    \            fi\n        done\n        (( i-- ))\n    done\n    echo \"-1\"",
  "    local -a arr=($1)\n    local i=0\n    local j=0\n    local max=0\n    local\
    \ max_index=0\n    local max_index_prev=0\n    local max_index_prev_prev=0\n \
    \   local max_index_prev_prev_prev=0\n    local max_index_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev=0\n    local max_index_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev=0\n    local max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
  "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    while ((i > 0)); do\n \
    \       if ((arr[i] < arr[i-1])); then\n            break\n        fi\n      \
    \  ((i--))\n    done\n    echo $i", "    local -a arr\n    local i\n    local\
    \ j\n    local k\n    local max\n    local max_index\n    local -i n\n    local\
    \ -i result\n\n    arr=($1)\n    n=${#arr[@]}\n    result=-1\n    for ((i=n-1;\
    \ i>=0; i--)); do\n        max=${arr[i]}\n        max_index=i\n        for ((j=i-1;\
    \ j>=0; j--)); do\n            if [[ ${arr[j]} -le $max ]]; then\n           \
    \     max=${arr[j]}\n                max_index=j\n            fi\n        done\n\
    \        if [[ $max_index -lt $i ]]; then\n            result=$max_index\n   \
    \         break\n        fi\n    done\n    echo $result", "    local -a arr=()\n\
    \    local i=0\n    local j=0\n    local max_idx=0\n    local max_val=0\n    local\
    \ tmp_val=0\n    local tmp_idx=0\n    local ret_val=-1\n\n    # Convert space-separated\
    \ list to array\n    for i in $1; do\n        arr[j]=$i\n        ((j++))\n   \
    \ done\n\n    # Iterate through array from the end\n    for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n        # If the current element is less than the previous element,\n\
    \        # then we have found the largest index of an element which is\n     \
    \   # not greater than or equal to the element immediately preceding it.\n   \
    \     if ((arr[i] < arr[i-1])); then\n            ret_val=$i\n            break\n\
    \        fi\n    done\n\n    # If we found such an element, then we need to find\
    \ the largest\n    # element in the array which is less than or equal to the element\n\
    \    # immediately preceding it.\n    if ((ret_val != -1)); then\n        max_val=${arr[ret_val-1]}\n\
    \        for ((i=ret_val; i<${#arr[@]}; i++)); do\n            tmp_val=${arr[i]}\n\
    \            if ((tmp_val <= max_val)); then\n                max_val=$tmp_val\n\
    \                max_idx=$i\n            fi\n        done\n\n        # Swap the\
    \ elements\n        tmp_val=${arr[ret_val-1]}\n        arr[ret_val-1]=${arr[max_idx]}\n\
    \        arr[max_idx]=$tmp_val\n\n        # Reverse the elements from ret_val\
    \ to the end of the array\n        for ((i=ret_val, j=${#arr[@]}-1; i<j; i++,\
    \ j--)); do\n            tmp_val=${arr[i]}\n            arr[i]=${arr[j]}\n   \
    \         arr[j]=$tmp_val\n        done\n    fi\n\n    echo $ret_val", "    local\
    \ -a arr=(\"$@\")\n    local i=0\n    local j=0\n    local max=0\n    local max_index=0\n\
    \    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        max=${arr[i]}\n\
    \        max_index=$i\n        for ((j=i+1; j<len; j++)); do\n            if [[\
    \ ${arr[j]} -le $max ]]; then\n                max=${arr[j]}\n               \
    \ max_index=$j\n            fi\n        done\n        if [[ $max_index -ne $i\
    \ ]]; then\n            arr[$max_index]=${arr[i]}\n            arr[$i]=$max\n\
    \        fi\n    done\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]}\
    \ -lt ${arr[i+1]} ]]; then\n            echo $i\n            return\n        fi\n\
    \    done\n    echo -1", "    local -a arr=(\"$@\")\n    local -i i=0\n    local\
    \ -i j=0\n    local -i n=${#arr[@]}\n    local -i max_index=-1\n    local -i max_value=0\n\
    \    local -i current_value=0\n    local -i current_index=0\n    for ((i=n-1;\
    \ i>=0; i--)); do\n        current_value=${arr[i]}\n        current_index=i\n\
    \        for ((j=i-1; j>=0; j--)); do\n            if ((${arr[j]} <= current_value));\
    \ then\n                if ((current_index > max_index)); then\n             \
    \       max_index=current_index\n                    max_value=current_value\n\
    \                fi\n                break\n            fi\n        done\n   \
    \ done\n    echo $max_index", "    local -a arr\n    local -i i j\n    IFS=' '\
    \ read -a arr <<< \"$1\"\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n        for\
    \ ((j=i-1; j>=0; j--)); do\n            if ((arr[i] >= arr[j])); then\n      \
    \          echo \"$j\"\n                return\n            fi\n        done\n\
    \    done\n    echo \"-1\"", "    local -a arr=($1)\n    local -i i=0\n    local\
    \ -i j=0\n    local -i max=0\n    local -i max_i=0\n    local -i max_j=0\n   \
    \ local -i n=${#arr[@]}\n    local -i res=-1\n\n    for ((i=0; i<n; i++)); do\n\
    \        max=0\n        max_i=0\n        max_j=0\n        for ((j=i+1; j<n; j++));\
    \ do\n            if ((arr[j] < arr[i] && arr[j] > max)); then\n             \
    \   max=arr[j]\n                max_i=i\n                max_j=j\n           \
    \ fi\n        done\n        if ((max_i > 0 && max_j > 0)); then\n            res=max_j\n\
    \            break\n        fi\n    done\n\n    echo $res", "    local -a arr=($1)\n\
    \    local -i i=${#arr[@]}\n    while ((i--)); do\n        if ((arr[i] <= arr[i-1]));\
    \ then\n            echo $i\n            return\n        fi\n    done\n    echo\
    \ -1", "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i\n \
    \   for ((i=len-1; i>=0; i--)); do\n        if (( arr[i] < arr[i-1] )); then\n\
    \            echo $i\n            return\n        fi\n    done\n    echo -1",
  "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n  local -i j=0\n  local -i k=0\n\
    \  local -i max_k=-1\n  local -i max_j=-1\n  while (( i > 0 )); do\n    (( j =\
    \ i - 1 ))\n    while (( j >= 0 )); do\n      if (( arr[i] >= arr[j] )); then\n\
    \        (( k = j ))\n        if (( k > max_k )); then\n          max_k=k\n  \
    \        max_j=i\n        fi\n      fi\n      (( j-- ))\n    done\n    (( i--\
    \ ))\n  done\n  echo $max_j", "    local -a arr=(\"$@\")\n    local -i i=0\n \
    \   local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local\
    \ -i curr_value=0\n    local -i curr_index=0\n    local -i len=${#arr[@]}\n  \
    \  for ((i=0; i<len; i++)); do\n        curr_value=${arr[i]}\n        curr_index=$i\n\
    \        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]} -le curr_value\
    \ ]]; then\n                if [[ ${arr[j]} -gt max_value ]]; then\n         \
    \           max_value=${arr[j]}\n                    max_index=$j\n          \
    \      fi\n            fi\n        done\n        if [[ $max_index -ne -1 ]]; then\n\
    \            echo $max_index\n            return\n        fi\n    done\n    echo\
    \ $max_index", "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local\
    \ -i len=${#arr[@]}\n    local -i i=0\n    local -i max_index=-1\n    local -i\
    \ max_value=0\n    while (( i < len )); do\n        if (( arr[i] < arr[i-1] ));\
    \ then\n            if (( arr[i] > max_value )); then\n                max_value=arr[i]\n\
    \                max_index=i\n            fi\n        fi\n        (( i++ ))\n\
    \    done\n    echo \"$max_index\"", "    local -a arr=(\"$@\")\n    local -i\
    \ i=0\n    local -i j=0\n    local -i max=0\n    local -i max_index=0\n    local\
    \ -i len=${#arr[@]}\n    for ((i=len-2; i>=0; i--)); do\n        max=${arr[i+1]}\n\
    \        max_index=$((i+1))\n        for ((j=i+1; j<len; j++)); do\n         \
    \   if ((arr[j]<=arr[i] && arr[j]>=max)); then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if ((max_index!=i+1));\
    \ then\n            echo $max_index\n            return\n        fi\n    done\n\
    \    echo -1", "  local -a arr=($1)\n  local -i i=${#arr[@]}\n  local -i j=0\n\
    \  local -i max_i=0\n  local -i max_j=0\n  local -i max_val=0\n  local -i val=0\n\
    \  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    val=${arr[i]}\n    if ((val > max_val));\
    \ then\n      max_val=$val\n      max_i=$i\n      max_j=$j\n    fi\n    ((j++))\n\
    \  done\n  echo \"$max_i\"", "  local -a arr\n  local -i i\n  local -i j\n  local\
    \ -i max\n  local -i max_i\n  local -i n\n  local -i prev\n  local -i ret\n\n\
    \  arr=($1)\n  n=${#arr[@]}\n  ret=-1\n  prev=${arr[0]}\n  for ((i=1; i<n; i++));\
    \ do\n    if [[ ${arr[i]} -ge prev ]]; then\n      prev=${arr[i]}\n      continue\n\
    \    fi\n    max=${arr[i]}\n    max_i=$i\n    for ((j=i+1; j<n; j++)); do\n  \
    \    if [[ ${arr[j]} -ge prev ]]; then\n        break\n      fi\n      if [[ ${arr[j]}\
    \ -gt max ]]; then\n        max=${arr[j]}\n        max_i=$j\n      fi\n    done\n\
    \    ret=$max_i\n    break\n  done\n  echo $ret", "  local -a arr\n  local i\n\
    \  local j\n  local max\n  local max_index\n  local -i result\n\n  arr=($1)\n\
    \  result=-1\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    max=${arr[i]}\n    max_index=$i\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -lt $max ]]; then\n \
    \       max=${arr[j]}\n        max_index=$j\n      fi\n    done\n    if [[ $max_index\
    \ -ne $i ]]; then\n      result=$max_index\n      break\n    fi\n  done\n  echo\
    \ $result", "  local -a arr\n  local i\n  local j\n  local k\n  local max\n  local\
    \ max_index\n  local len\n  arr=($1)\n  len=${#arr[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n\
    \      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n      for ((k=max_index;\
    \ k>i; k--)); do\n        arr[k]=${arr[k-1]}\n      done\n      arr[i]=$max\n\
    \    fi\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${arr[i]} -gt ${arr[i+1]}\
    \ ]]; then\n      echo $i\n      return\n    fi\n  done\n  echo -1", "    local\
    \ -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n\
    \    local -i max=0\n    local -i max_index=0\n    local -i index=-1\n    for\
    \ ((i=len-1; i>=0; i--)); do\n        if ((arr[i] >= max)); then\n           \
    \ max=arr[i]\n            max_index=i\n        else\n            index=i\n   \
    \         break\n        fi\n    done\n    echo $index", "    local -a arr=($1)\n\
    \    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i current_value=0\n    local -i current_index=0\n\
    \    for ((i=0; i<n; i++)); do\n        current_value=${arr[i]}\n        current_index=i\n\
    \        for ((j=i+1; j<n; j++)); do\n            if [[ ${arr[j]} -le current_value\
    \ ]]; then\n                if [[ ${arr[j]} -gt max_value ]]; then\n         \
    \           max_value=${arr[j]}\n                    max_index=j\n           \
    \     fi\n            fi\n        done\n        if [[ max_index -ne -1 ]]; then\n\
    \            echo \"$max_index\"\n            return\n        fi\n    done\n \
    \   echo \"-1\"", "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n    local\
    \ -i j=0\n    while (( i > 0 )); do\n        if (( arr[i] < arr[i-1] )); then\n\
    \            j=i\n            while (( j > 0 )); do\n                if (( arr[j]\
    \ < arr[i-1] )); then\n                    break\n                fi\n       \
    \         (( j-- ))\n            done\n            echo $j\n            return\n\
    \        fi\n        (( i-- ))\n    done\n    echo -1", "  local -a arr\n  local\
    \ i\n  local j\n  local max\n  local max_index\n  local -i result\n\n  arr=($1)\n\
    \  result=-1\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    max=${arr[i]}\n    max_index=$i\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -lt $max ]]; then\n \
    \       max=${arr[j]}\n        max_index=$j\n      fi\n    done\n    if [[ $max_index\
    \ -ne $i ]]; then\n      result=$max_index\n      break\n    fi\n  done\n  echo\
    \ $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local\
    \ -i max_index=-1\n  local -i max_value=0\n  local -i current_value=0\n  local\
    \ -i current_index=0\n  local -i arr_len=${#arr[@]}\n\n  for ((i=0; i<arr_len;\
    \ i++)); do\n    current_value=${arr[i]}\n    current_index=i\n    for ((j=i+1;\
    \ j<arr_len; j++)); do\n      if ((current_value < arr[j] && arr[j] <= max_value));\
    \ then\n        max_value=${arr[j]}\n        max_index=j\n      fi\n    done\n\
    \    if ((max_index > current_index)); then\n      echo $max_index\n      return\n\
    \    fi\n  done\n  echo -1", "    local -a arr\n    arr=($1)\n    local -i len=${#arr[@]}\n\
    \    local -i i\n    for ((i=len-1; i>=0; i--)); do\n        if ((arr[i] < arr[i-1]));\
    \ then\n            echo $i\n            return\n        fi\n    done\n    echo\
    \ -1", "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n\
    \    local -i j=0\n    local -i max_i=0\n    local -i max_j=0\n    local -i max_diff=0\n\
    \    local -i diff=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len;\
    \ j++)); do\n            diff=${arr[j]}-${arr[i]}\n            if ((diff > 0 &&\
    \ diff > max_diff)); then\n                max_diff=$diff\n                max_i=$i\n\
    \                max_j=$j\n            fi\n        done\n    done\n    if ((max_diff\
    \ > 0)); then\n        echo $max_j\n    else\n        echo -1\n    fi", "    local\
    \ -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i curr_value=0\n    local -i curr_index=0\n\
    \    local -i prev_value=0\n    local -i prev_index=0\n    local -i len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        curr_value=${arr[i]}\n        curr_index=$i\n\
    \        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]} -le $curr_value\
    \ ]]; then\n                if [[ $max_value -lt ${arr[j]} ]]; then\n        \
    \            max_value=${arr[j]}\n                    max_index=$j\n         \
    \       fi\n            fi\n        done\n        if [[ $max_index -gt -1 ]];\
    \ then\n            prev_value=$curr_value\n            prev_index=$curr_index\n\
    \            curr_value=$max_value\n            curr_index=$max_index\n      \
    \      arr[$prev_index]=$curr_value\n            arr[$curr_index]=$prev_value\n\
    \            max_value=0\n            max_index=-1\n        fi\n    done\n   \
    \ for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n\
    \            echo $i\n            return\n        fi\n    done\n    echo -1",
  "  local -a arr\n  local i\n  local j\n  local max\n  local max_index\n  local -i\
    \ result=-1\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for ((i=${#arr[@]}-1; i>0;\
    \ i--)); do\n    max=${arr[i]}\n    max_index=$i\n    for ((j=i-1; j>=0; j--));\
    \ do\n      if [[ ${arr[j]} -lt $max ]]; then\n        max=${arr[j]}\n       \
    \ max_index=$j\n      fi\n    done\n    if [[ $max_index -ne $i ]]; then\n   \
    \   result=$max_index\n      break\n    fi\n  done\n  echo $result", "    local\
    \ -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i\
    \ j=0\n    local -i max_idx=-1\n    local -i max_val=0\n    local -i cur_val=0\n\
    \    for ((i=len-1; i>=0; i--)); do\n        cur_val=${arr[i]}\n        if ((cur_val\
    \ < max_val)); then\n            echo \"$max_idx\"\n            return\n     \
    \   fi\n        if ((cur_val > max_val)); then\n            max_val=$cur_val\n\
    \            max_idx=$i\n        fi\n    done\n    echo \"-1\"", "    local -a\
    \ arr=(\"$@\")\n    local i=0\n    local max_i=0\n    local max_val=0\n    local\
    \ cur_val=0\n    local prev_val=0\n    local result=-1\n\n    for ((i=${#arr[@]}-1;\
    \ i>=0; i--)); do\n        cur_val=${arr[$i]}\n        if ((cur_val < prev_val));\
    \ then\n            if ((cur_val > max_val)); then\n                max_val=$cur_val\n\
    \                max_i=$i\n            fi\n        else\n            result=$max_i\n\
    \            break\n        fi\n        prev_val=$cur_val\n    done\n\n    echo\
    \ \"$result\"", "    local -a arr\n    local i\n    local max\n    local max_index\n\
    \    local prev\n    local result\n\n    arr=($1)\n    max=${arr[0]}\n    max_index=0\n\
    \    prev=${arr[0]}\n    result=-1\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        if [[ ${arr[i]} -gt max ]]; then\n            max=${arr[i]}\n       \
    \     max_index=i\n        fi\n\n        if [[ ${arr[i]} -le prev ]]; then\n \
    \           result=$i\n            break\n        fi\n\n        prev=${arr[i]}\n\
    \    done\n\n    if [[ $result -eq -1 ]]; then\n        result=$max_index\n  \
    \  fi\n\n    echo $result", "    local -a arr\n    local -i i\n    local -i max_i\n\
    \    local -i max_val\n    local -i val\n    local -i res\n\n    arr=($1)\n  \
    \  max_i=${#arr[@]}-1\n    max_val=${arr[$max_i]}\n    res=-1\n\n    for ((i=max_i-1;\
    \ i>=0; i--)); do\n        val=${arr[$i]}\n        if ((val < max_val)); then\n\
    \            res=$i\n        else\n            max_val=$val\n        fi\n    done\n\
    \n    echo $res", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n \
    \ local -i max_index=-1\n  local -i max_value=0\n  local -i n=${#arr[@]}\n  for\
    \ ((i=n-1; i>=0; i--)); do\n    if ((arr[i] >= max_value)); then\n      max_value=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  echo \"$max_index\"", "    local -a arr=(\"\
    $@\")\n    local -i i=0\n    local -i j=0\n    local -i max_index=0\n    local\
    \ -i max_value=0\n    local -i result=-1\n\n    for ((i=${#arr[@]}-1; i>=0; i--));\
    \ do\n        if ((arr[i] >= max_value)); then\n            max_value=arr[i]\n\
    \            max_index=i\n        fi\n        if ((max_value > arr[i-1])); then\n\
    \            result=$max_index\n            break\n        fi\n    done\n\n  \
    \  echo \"$result\"", "  local -a arr\n  local -i i\n  local -i max\n  local -i\
    \ max_i\n  local -i n\n  local -i prev\n  local -i res\n\n  arr=($1)\n  n=${#arr[@]}\n\
    \  max=${arr[0]}\n  max_i=0\n  prev=${arr[0]}\n  res=-1\n\n  for ((i=1; i<n; i++));\
    \ do\n    if [[ ${arr[i]} -le prev ]]; then\n      if [[ ${arr[i]} -gt max ]];\
    \ then\n        max=${arr[i]}\n        max_i=i\n      fi\n    else\n      prev=${arr[i]}\n\
    \    fi\n  done\n\n  if [[ $max_i -ne 0 ]]; then\n    res=$max_i\n  fi\n\n  echo\
    \ $res", "  local -a arr=(\"$@\")\n  local -i i=0 j=0\n  local -i n=${#arr[@]}\n\
    \  local -i max_index=-1\n  local -i max_value=0\n  while (( i < n )); do\n  \
    \  j=i+1\n    while (( j < n )); do\n      if (( arr[j] < arr[i] )); then\n  \
    \      if (( arr[j] > max_value )); then\n          max_value=${arr[j]}\n    \
    \      max_index=j\n        fi\n      fi\n      (( j++ ))\n    done\n    (( i++\
    \ ))\n  done\n  echo $max_index", "    local -a arr=($1)\n    local i=0\n    local\
    \ len=${#arr[@]}\n    local max_index=-1\n    local max_value=${arr[0]}\n    local\
    \ max_index_value=${arr[0]}\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]}\
    \ -ge $max_value ]; then\n            max_value=${arr[$i]}\n            max_index=$i\n\
    \        elif [ ${arr[$i]} -ge $max_index_value ]; then\n            max_index_value=${arr[$i]}\n\
    \        fi\n        i=$((i+1))\n    done\n    if [ $max_index -eq 0 ]; then\n\
    \        echo -1\n    else\n        echo $max_index\n    fi", "    local -a arr=($1)\n\
    \    local -i i=0\n    local -i j=0\n    local -i max_i=-1\n    local -i max_j=-1\n\
    \    local -i max_diff=-1\n    local -i diff=0\n    local -i len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n    \
    \        diff=${arr[j]}-${arr[i]}\n            if ((diff > 0 && diff > max_diff));\
    \ then\n                max_diff=$diff\n                max_i=$i\n           \
    \     max_j=$j\n            fi\n        done\n    done\n    if ((max_i == -1));\
    \ then\n        echo -1\n    else\n        echo $max_j\n    fi", "  local -a arr=(\"\
    $@\")\n  local -i len=${#arr[@]}\n  local -i i=0\n  local -i j=0\n  local -i max=0\n\
    \  local -i max_idx=0\n  local -i res=-1\n\n  for ((i=len-1; i>=0; i--)); do\n\
    \    if ((arr[i] >= max)); then\n      max=arr[i]\n      max_idx=i\n    else\n\
    \      res=i\n      break\n    fi\n  done\n\n  echo $res", "  local -a arr=($1)\n\
    \  local -i i=${#arr[@]}-1\n  local -i j=0\n  local -i max=-1\n  while (( i >\
    \ 0 )); do\n    (( j = i - 1 ))\n    while (( j >= 0 )); do\n      if (( arr[j]\
    \ <= arr[i] )); then\n        (( j-- ))\n      else\n        (( max = j ))\n \
    \       break\n      fi\n    done\n    (( i-- ))\n  done\n  echo $max", "    local\
    \ -a arr=(\"$@\")\n    local i=0\n    local j=0\n    local max_index=-1\n    local\
    \ max_value=0\n    local current_value=0\n    local current_index=0\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        current_value=${arr[$i]}\n        current_index=$i\n\
    \        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[$j]} -le\
    \ $current_value ]]; then\n                if [[ $j -gt $max_index ]]; then\n\
    \                    max_index=$j\n                    max_value=${arr[$j]}\n\
    \                fi\n            fi\n        done\n        if [[ $max_index -ne\
    \ -1 ]]; then\n            arr[$max_index]=$current_value\n            arr[$current_index]=$max_value\n\
    \            echo $current_index\n            return\n        fi\n    done\n \
    \   echo -1", "  local -a arr=(\"$@\")\n  local -i len=${#arr[@]}\n  local -i\
    \ i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i current_value=0\n  local -i current_index=0\n  local -i result=-1\n\n  for\
    \ ((i=0; i<len; i++)); do\n    current_value=${arr[i]}\n    current_index=i\n\
    \    for ((j=i+1; j<len; j++)); do\n      if [[ ${arr[j]} -le current_value ]];\
    \ then\n        if [[ ${arr[j]} -gt max_value ]]; then\n          max_value=${arr[j]}\n\
    \          max_index=j\n        fi\n      fi\n    done\n    if [[ max_index -gt\
    \ -1 ]]; then\n      result=$max_index\n      break\n    fi\n  done\n\n  echo\
    \ $result", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=1\n  local\
    \ -i len=${#arr[@]}\n  local -i max_idx=-1\n  local -i max_val=0\n  local -i curr_val=0\n\
    \  local -i curr_idx=0\n\n  while (( i < len )); do\n    curr_val=${arr[i]}\n\
    \    curr_idx=i\n    if (( curr_val > max_val )); then\n      max_val=curr_val\n\
    \      max_idx=i\n    fi\n    (( i++ ))\n  done\n\n  if (( max_idx == -1 )); then\n\
    \    echo \"$max_idx\"\n    return\n  fi\n\n  (( max_idx-- ))\n  while (( max_idx\
    \ >= 0 )); do\n    curr_val=${arr[max_idx]}\n    if (( curr_val < max_val ));\
    \ then\n      echo \"$max_idx\"\n      return\n    fi\n    (( max_idx-- ))\n \
    \ done\n\n  echo \"-1\"", "    local -a arr=($1)\n    local -i i=0\n    local\
    \ -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local -i curr_value=0\n\
    \    local -i curr_index=0\n    local -i len=${#arr[@]}\n    for ((i=0; i<len;\
    \ i++)); do\n        curr_value=${arr[i]}\n        curr_index=$i\n        for\
    \ ((j=i+1; j<len; j++)); do\n            if (( ${arr[j]} <= curr_value )); then\n\
    \                if (( ${arr[j]} > max_value )); then\n                    max_value=${arr[j]}\n\
    \                    max_index=$j\n                fi\n            fi\n      \
    \  done\n        if (( max_index != -1 )); then\n            echo $max_index\n\
    \            return\n        fi\n    done\n    echo $max_index", "  local -a arr\n\
    \  arr=($1)\n  local i\n  local j\n  local max_index\n  local max_value\n  local\
    \ result\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    max_index=$i\n    max_value=${arr[i]}\n\
    \    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -le $max_value ]]; then\n\
    \        max_index=$j\n        max_value=${arr[j]}\n      fi\n    done\n    result=$max_index\n\
    \    break\n  done\n  echo $result", "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n\
    \    local -i j=0\n    local -i k=0\n    while ((i > 0)); do\n        if ((arr[i]\
    \ >= arr[i-1])); then\n            ((i--))\n        else\n            j=i-1\n\
    \            while ((j >= 0)); do\n                if ((arr[j] <= arr[i])); then\n\
    \                    ((j--))\n                else\n                    k=i\n\
    \                    while ((k > j)); do\n                        arr[k]=${arr[k-1]}\n\
    \                        ((k--))\n                    done\n                 \
    \   arr[j]=${arr[i]}\n                    echo \"$j\"\n                    return\n\
    \                fi\n            done\n            echo \"-1\"\n            return\n\
    \        fi\n    done\n    echo \"-1\"", "  local -a arr\n  local -i i\n  local\
    \ -i j\n  local -i max_index\n  local -i max_value\n  local -i max_value_index\n\
    \  local -i n\n  local -i prev_value\n  local -i prev_value_index\n  local -i\
    \ result\n  local -i value\n\n  arr=($1)\n  n=${#arr[@]}\n  if (( n == 1 )); then\n\
    \    echo \"-1\"\n    return\n  fi\n\n  max_index=0\n  max_value=${arr[0]}\n \
    \ max_value_index=0\n  prev_value=${arr[0]}\n  prev_value_index=0\n  result=-1\n\
    \  for (( i = 1; i < n; i++ )); do\n    value=${arr[i]}\n    if (( value > prev_value\
    \ )); then\n      if (( value > max_value )); then\n        max_value=value\n\
    \        max_value_index=i\n      fi\n      prev_value=value\n      prev_value_index=i\n\
    \    else\n      if (( prev_value_index > max_index )); then\n        max_index=prev_value_index\n\
    \      fi\n      for (( j = i - 1; j > max_index; j-- )); do\n        if (( value\
    \ > arr[j] )); then\n          result=j\n          break\n        fi\n      done\n\
    \      if (( result != -1 )); then\n        break\n      fi\n      prev_value=value\n\
    \      prev_value_index=i\n    fi\n  done\n  if (( result == -1 )); then\n   \
    \ if (( prev_value_index > max_index )); then\n      max_index=prev_value_index\n\
    \    fi\n    for (( j = n - 1; j > max_index; j-- )); do\n      if (( value >\
    \ arr[j] )); then\n        result=j\n        break\n      fi\n    done\n  fi\n\
    \  echo \"$result\"", "    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n\
    \    local -i max=0\n    local -i n=${#arr[@]}\n    local -i res=-1\n    local\
    \ -i tmp=0\n\n    for ((i=n-2; i>=0; i--)); do\n        max=i+1\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if ((arr[j]<arr[i] && arr[j]>arr[max])); then\n\
    \                max=j\n            fi\n        done\n        tmp=arr[i]\n   \
    \     arr[i]=arr[max]\n        arr[max]=tmp\n    done\n\n    for ((i=0; i<n-1;\
    \ i++)); do\n        if ((arr[i]<arr[i+1])); then\n            res=i\n       \
    \     break\n        fi\n    done\n\n    echo $res", "    local -a arr\n    arr=($1)\n\
    \    local i\n    local j\n    local max\n    local max_index\n    for ((i=${#arr[@]}-1;\
    \ i>=0; i--)); do\n        max=${arr[i]}\n        max_index=$i\n        for ((j=i-1;\
    \ j>=0; j--)); do\n            if [[ ${arr[j]} -le $max ]]; then\n           \
    \     max=${arr[j]}\n                max_index=$j\n            fi\n        done\n\
    \        arr[i]=$max_index\n    done\n    echo \"${arr[@]}\"", "    local -a arr=(\"\
    $@\")\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n    local\
    \ -i max_value=0\n    local -i curr_value=0\n    local -i curr_index=0\n    local\
    \ -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        curr_value=${arr[i]}\n\
    \        curr_index=$i\n        for ((j=i+1; j<len; j++)); do\n            if\
    \ [[ ${arr[j]} -le curr_value ]]; then\n                if [[ ${arr[j]} -gt max_value\
    \ ]]; then\n                    max_value=${arr[j]}\n                    max_index=$j\n\
    \                fi\n            fi\n        done\n        if [[ $max_index -ne\
    \ -1 ]]; then\n            echo $max_index\n            return\n        fi\n \
    \   done\n    echo $max_index", "    local -a arr=($1)\n    local -i i=0\n   \
    \ local -i j=0\n    local -i n=${#arr[@]}\n    local -i max_index=-1\n    local\
    \ -i max_value=0\n    local -i cur_value=0\n    for ((i=n-1; i>=0; i--)); do\n\
    \        cur_value=${arr[i]}\n        if [ $cur_value -ge $max_value ]; then\n\
    \            max_value=$cur_value\n            max_index=$i\n        fi\n    done\n\
    \    echo $max_index", "    local -a arr=($1)\n    local -i i=0\n    local -i\
    \ j=0\n    local -i n=${#arr[@]}\n    local -i max_index=-1\n    local -i max_value=0\n\
    \    local -i curr_value=0\n    local -i curr_index=0\n    for ((i=0; i<n; i++));\
    \ do\n        curr_value=${arr[i]}\n        curr_index=i\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if [[ ${arr[j]} -le curr_value ]]; then\n      \
    \          if [[ ${arr[j]} -gt max_value ]]; then\n                    max_value=${arr[j]}\n\
    \                    max_index=j\n                fi\n            fi\n       \
    \ done\n        if [[ max_index -ne -1 ]]; then\n            echo $max_index\n\
    \            return\n        fi\n    done\n    echo $max_index", "  local -a arr=(\"\
    $@\")\n  local -i i=0\n  local -i j=0\n  local -i max_i=0\n  local -i max_j=0\n\
    \  local -i max_diff=0\n  local -i diff=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    for ((j=i+1; j<${#arr[@]}; j++)); do\n      diff=${arr[j]}-${arr[i]}\n  \
    \    if ((diff > 0 && diff > max_diff)); then\n        max_diff=$diff\n      \
    \  max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  if ((max_diff > 0));\
    \ then\n    echo $max_j\n  else\n    echo -1\n  fi", "  local -a arr=(\"$@\")\n\
    \  local -i i=0\n  local -i j=0\n  local -i max=0\n  local -i max_index=0\n  local\
    \ -i len=${#arr[@]}\n  local -i result=-1\n\n  for ((i=0; i<len; i++)); do\n \
    \   max=${arr[i]}\n    max_index=$i\n    for ((j=i+1; j<len; j++)); do\n     \
    \ if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n\
    \      fi\n    done\n    if [[ $max_index -gt $i ]]; then\n      result=$i\n \
    \     break\n    fi\n  done\n\n  echo $result", "    local -a arr=($1)\n    local\
    \ -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i curr_value=0\n    local -i curr_index=0\n\
    \    local -i prev_value=0\n    local -i prev_index=0\n    local -i ret_index=-1\n\
    \    local -i ret_value=0\n    local -i ret_prev_value=0\n    local -i ret_prev_index=0\n\
    \    local -i ret_curr_value=0\n    local -i ret_curr_index=0\n    local -i ret_max_value=0\n\
    \    local -i ret_max_index=0\n    for ((i=0; i<n; i++)); do\n        curr_value=${arr[i]}\n\
    \        curr_index=$i\n        if ((curr_value > max_value)); then\n        \
    \    max_value=$curr_value\n            max_index=$i\n        fi\n        if ((curr_value\
    \ < prev_value)); then\n            if ((max_index > prev_index)); then\n    \
    \            ret_index=$prev_index\n                ret_value=$prev_value\n  \
    \              ret_prev_value=$prev_value\n                ret_prev_index=$prev_index\n\
    \                ret_curr_value=$curr_value\n                ret_curr_index=$curr_index\n\
    \                ret_max_value=$max_value\n                ret_max_index=$max_index\n\
    \            fi\n        fi\n        prev_value=$curr_value\n        prev_index=$curr_index\n\
    \    done\n    echo \"$ret_index\"", "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n\
    \    while (( i > 0 )); do\n        if (( arr[i] < arr[i-1] )); then\n       \
    \     (( i-- ))\n        else\n            break\n        fi\n    done\n    echo\
    \ \"${i:--1}\"", "  local -a arr\n  local -i i j\n  arr=($1)\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if ((arr[i] < arr[i-1])); then\n      for ((j=i-1; j>=0;\
    \ j--)); do\n        if ((arr[i] >= arr[j])); then\n          echo $j\n      \
    \    return\n        fi\n      done\n    fi\n  done\n  echo -1", "    local -a\
    \ array\n    local -i i\n    local -i j\n    local -i max_index\n    local -i\
    \ max_value\n    local -i value\n    local -i index\n\n    # Convert the space-separated\
    \ list into an array\n    array=($1)\n\n    # Initialize the max_index and max_value\n\
    \    max_index=-1\n    max_value=${array[0]}\n\n    # Loop through the array\n\
    \    for ((i=1; i<${#array[@]}; i++)); do\n        value=${array[i]}\n       \
    \ index=-1\n\n        # Loop through the array again\n        for ((j=0; j<i;\
    \ j++)); do\n            # If the value is less than or equal to the max_value\n\
    \            # then set the index to the current j\n            if ((value <=\
    \ max_value)); then\n                index=$j\n                break\n       \
    \     fi\n        done\n\n        # If the index is greater than the max_index\
    \ then set the\n        # max_index and max_value\n        if ((index > max_index));\
    \ then\n            max_index=$index\n            max_value=${array[index]}\n\
    \        fi\n    done\n\n    echo $max_index", "  local -a arr\n  local -i i\n\
    \  local -i j\n  local -i max_index\n  local -i max_value\n  local -i max_value_index\n\
    \  local -i n\n  local -i prev_value\n  local -i prev_value_index\n  local -i\
    \ result\n  local -i value\n\n  # Split the input into an array.\n  IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n\n  # Get the length of the array.\n  n=${#arr[@]}\n\n\
    \  # Initialize the result.\n  result=-1\n\n  # Iterate over the array.\n  for\
    \ ((i=0; i<n; i++)); do\n    # Get the current value.\n    value=${arr[i]}\n\n\
    \    # Get the index of the previous value.\n    prev_value_index=$((i - 1))\n\
    \n    # Get the previous value.\n    prev_value=${arr[prev_value_index]}\n\n \
    \   # Check if the current value is less than or equal to the previous value.\n\
    \    if [[ $value -le $prev_value ]]; then\n      # The current value is less\
    \ than or equal to the previous value.\n      # Check if the current value is\
    \ greater than the maximum value.\n      if [[ $value -gt $max_value ]]; then\n\
    \        # The current value is greater than the maximum value.\n        # Set\
    \ the maximum value.\n        max_value=$value\n\n        # Set the maximum value\
    \ index.\n        max_value_index=$i\n      fi\n    else\n      # The current\
    \ value is greater than the previous value.\n      # Check if the maximum value\
    \ is less than or equal to the previous value.\n      if [[ $max_value -le $prev_value\
    \ ]]; then\n        # The maximum value is less than or equal to the previous\
    \ value.\n        # Set the result.\n        result=$max_value_index\n      fi\n\
    \n      # Reset the maximum value.\n      max_value=-1\n\n      # Reset the maximum\
    \ value index.\n      max_value_index=-1\n    fi\n  done\n\n  # Check if the maximum\
    \ value is less than or equal to the previous value.\n  if [[ $max_value -le $prev",
  "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=1\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i temp_index=0\n    local -i temp_value=0\n\
    \    local -i len=${#arr[@]}\n    while (( i < len )); do\n        if (( arr[i]\
    \ < arr[j] )); then\n            temp_index=$i\n            temp_value=${arr[i]}\n\
    \            while (( j < len )); do\n                if (( arr[j] < temp_value\
    \ )); then\n                    temp_index=$j\n                    temp_value=${arr[j]}\n\
    \                fi\n                (( j++ ))\n            done\n           \
    \ if (( temp_value > max_value )); then\n                max_index=$temp_index\n\
    \                max_value=$temp_value\n            fi\n        fi\n        ((\
    \ i++ ))\n        (( j++ ))\n    done\n    echo \"$max_index\"", "  local -a arr=($1)\n\
    \  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n      max_index=$i\n\
    \      break\n    fi\n  done\n  if [[ $max_index -eq -1 ]]; then\n    echo -1\n\
    \    return\n  fi\n  for ((j=0; j<$max_index; j++)); do\n    if [[ ${arr[j]} -gt\
    \ ${arr[max_index]} ]]; then\n      echo $j\n      return\n    fi\n  done\n  echo\
    \ -1", "  local -a array\n  local -i i\n  local -i j\n  local -i max\n  local\
    \ -i max_index\n  local -i n\n  local -i temp\n\n  array=($1)\n  n=${#array[@]}\n\
    \  max=${array[0]}\n  max_index=0\n  for ((i=1; i<n; i++)); do\n    if ((array[i]\
    \ < max)); then\n      temp=${array[i]}\n      for ((j=i-1; j>=max_index; j--));\
    \ do\n        array[j+1]=${array[j]}\n      done\n      array[max_index]=$temp\n\
    \      max_index=$((max_index+1))\n    else\n      max=${array[i]}\n    fi\n \
    \ done\n  echo $max_index", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n\
    \  local -i max_index=-1\n  local -i max_val=0\n  local -i n=${#arr[@]}\n  for\
    \ ((i=n-1; i>=0; i--)); do\n    if ((arr[i] >= max_val)); then\n      max_val=arr[i]\n\
    \      max_index=i\n    fi\n  done\n  echo $max_index", "    local -a arr=($1)\n\
    \    local -i i=${#arr[@]}\n    local -i j=0\n    local -i max=0\n    local -i\
    \ max_i=0\n    local -i max_j=0\n    local -i max_k=0\n    local -i max_l=0\n\
    \    local -i max_m=0\n    local -i max_n=0\n    local -i max_o=0\n    local -i\
    \ max_p=0\n    local -i max_q=0\n    local -i max_r=0\n    local -i max_s=0\n\
    \    local -i max_t=0\n    local -i max_u=0\n    local -i max_v=0\n    local -i\
    \ max_w=0\n    local -i max_x=0\n    local -i max_y=0\n    local -i max_z=0\n\
    \    local -i max_aa=0\n    local -i max_ab=0\n    local -i max_ac=0\n    local\
    \ -i max_ad=0\n    local -i max_ae=0\n    local -i max_af=0\n    local -i max_ag=0\n\
    \    local -i max_ah=0\n    local -i max_ai=0\n    local -i max_aj=0\n    local\
    \ -i max_ak=0\n    local -i max_al=0\n    local -i max_am=0\n    local -i max_an=0\n\
    \    local -i max_ao=0\n    local -i max_ap=0\n    local -i max_aq=0\n    local\
    \ -i max_ar=0\n    local -i max_as=0\n    local -i max_at=0\n    local -i max_au=0\n\
    \    local -i max_av=0\n    local -i max_aw=0\n    local -i max_ax=0\n    local\
    \ -i max_ay=0\n    local -i max_az=0\n    local -i max_ba=0\n    local -i max_bb=0\n\
    \    local -i max_bc=0\n    local", "    local -a arr=($1)\n    local -i i=0\n\
    \    local -i j=0\n    local -i max=0\n    local -i len=${#arr[@]}\n    local\
    \ -i max_index=-1\n    for ((i=0; i<len; i++)); do\n        max=${arr[i]}\n  \
    \      for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[j]} -lt ${arr[i]}\
    \ ]]; then\n                if [[ ${arr[j]} -gt $max ]]; then\n              \
    \      max=${arr[j]}\n                    max_index=$j\n                fi\n \
    \           fi\n        done\n        if [[ $max_index -gt -1 ]]; then\n     \
    \       echo $max_index\n            return\n        fi\n    done\n    echo -1",
  "  local -a arr\n  local -i i\n  local -i len\n  local -i max\n  local -i max_index\n\
    \  local -i min\n  local -i min_index\n  local -i tmp\n  local -i tmp_index\n\
    \  local -i tmp_len\n  local -i tmp_max\n  local -i tmp_max_index\n  local -i\
    \ tmp_min\n  local -i tmp_min_index\n  local -i tmp_sum\n  local -i sum\n  local\
    \ -i sum_index\n  local -i sum_len\n  local -i sum_max\n  local -i sum_max_index\n\
    \  local -i sum_min\n  local -i sum_min_index\n  local -i sum_tmp\n  local -i\
    \ sum_tmp_index\n  local -i sum_tmp_len\n  local -i sum_tmp_max\n  local -i sum_tmp_max_index\n\
    \  local -i sum_tmp_min\n  local -i sum_tmp_min_index\n  local -i sum_tmp_sum\n\
    \  local -i sum_tmp_sum_index\n  local -i sum_tmp_sum_len\n  local -i sum_tmp_sum_max\n\
    \  local -i sum_tmp_sum_max_index\n  local -i sum_tmp_sum_min\n  local -i sum_tmp_sum_min_index\n\
    \  local -i sum_tmp_sum_tmp\n  local -i sum_tmp_sum_tmp_index\n  local -i sum_tmp_sum_tmp_len\n\
    \  local -i sum_tmp_sum_tmp_max\n  local -i sum_tmp_sum_tmp_max_index\n  local\
    \ -i sum_tmp_sum_tmp_min\n  local -i sum_tmp_sum_tmp_min_index\n  local -i sum_tmp_sum_tmp_sum\n\
    \  local -i sum_tmp_sum_tmp_sum_index\n  local -i sum_tmp_sum_tmp_sum_len\n  local\
    \ -i sum_tmp_sum_tmp_sum_max\n  local -i sum_tmp_sum_tmp_sum_max_index\n  local\
    \ -", "  local -a arr\n  local i\n  local -i max_index\n  local -i max_value\n\
    \  local -i prev_value\n  local -i result\n\n  IFS=' ' read -r -a arr <<< \"$1\"\
    \n  max_index=-1\n  max_value=-1\n  prev_value=${arr[0]}\n  result=-1\n\n  for\
    \ ((i=1; i<${#arr[@]}; i++)); do\n    if ((arr[i] > prev_value)); then\n     \
    \ if ((arr[i] > max_value)); then\n        max_value=${arr[i]}\n        max_index=$i\n\
    \      fi\n    else\n      result=$max_index\n      max_value=-1\n      max_index=-1\n\
    \    fi\n    prev_value=${arr[i]}\n  done\n\n  echo \"$result\"", "    local -a\
    \ arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i max=0\n    local\
    \ -i max_i=0\n    local -i n=${#arr[@]}\n    for ((i=n-1; i>=0; i--)); do\n  \
    \      if ((arr[i] >= max)); then\n            max=arr[i]\n            max_i=i\n\
    \        fi\n    done\n    for ((i=n-1; i>=0; i--)); do\n        if ((arr[i] <\
    \ max)); then\n            echo $i\n            return\n        fi\n    done\n\
    \    echo -1", "  local -a arr\n  arr=($1)\n  local i\n  for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n    if [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n      echo $i\n\
    \      return\n    fi\n  done\n  echo -1", "    local -a array=($1)\n    local\
    \ -i i=0\n    local -i j=0\n    local -i index=-1\n    local -i max=0\n    local\
    \ -i len=${#array[@]}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len;\
    \ j++)); do\n            if [[ ${array[j]} -le ${array[i]} ]]; then\n        \
    \        if [[ $j -gt $max ]]; then\n                    max=$j\n            \
    \        index=$i\n                fi\n            fi\n        done\n    done\n\
    \    echo $index", "  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local\
    \ -i len=${#arr[@]}\n  local -i max_index=-1\n  local -i max_value=0\n  local\
    \ -i current_value=0\n  for ((i=0; i<len; i++)); do\n    current_value=${arr[i]}\n\
    \    if ((current_value > max_value)); then\n      max_value=current_value\n \
    \     max_index=i\n    fi\n  done\n  echo $max_index", "    local -a arr\n   \
    \ local -i i j\n    local -i max_index=-1\n    local -i max_value=-1\n    local\
    \ -i cur_value\n    local -i cur_index\n\n    arr=($1)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        cur_value=${arr[i]}\n        if ((cur_value > max_value));\
    \ then\n            max_value=$cur_value\n            max_index=$i\n        fi\n\
    \    done\n\n    for ((i=0; i<${#arr[@]}; i++)); do\n        cur_value=${arr[i]}\n\
    \        if ((cur_value < max_value)); then\n            cur_index=$i\n      \
    \      for ((j=i+1; j<${#arr[@]}; j++)); do\n                if ((cur_value <\
    \ ${arr[j]})); then\n                    cur_index=$j\n                    break\n\
    \                fi\n            done\n            if ((cur_index > max_index));\
    \ then\n                max_index=$cur_index\n            fi\n        fi\n   \
    \ done\n\n    echo $max_index", "  local -a arr\n  local -i i\n  IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n  for ((i=${#arr[@]}-1; i>0; i--)); do\n    if (( arr[i]\
    \ < arr[i-1] )); then\n      echo \"$i\"\n      return\n    fi\n  done\n  echo\
    \ \"-1\"", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i\
    \ max_index=-1\n  local -i max_value=0\n  local -i current_value=0\n  local -i\
    \ current_index=0\n  local -i current_max_index=0\n  local -i current_max_value=0\n\
    \  local -i current_min_value=0\n  local -i current_min_index=0\n  local -i current_min_max_index=0\n\
    \  local -i current_min_max_value=0\n  local -i current_max_min_index=0\n  local\
    \ -i current_max_min_value=0\n  local -i current_max_min_max_index=0\n  local\
    \ -i current_max_min_max_value=0\n  local -i current_min_max_min_index=0\n  local\
    \ -i current_min_max_min_value=0\n  local -i current_max_min_max_min_index=0\n\
    \  local -i current_max_min_max_min_value=0\n  local -i current_min_max_min_max_index=0\n\
    \  local -i current_min_max_min_max_value=0\n  local -i current_max_min_max_min_max_index=0\n\
    \  local -i current_max_min_max_min_max_value=0\n  local -i current_min_max_min_max_min_index=0\n\
    \  local -i current_min_max_min_max_min_value=0\n  local -i current_max_min_max_min_max_min_index=0\n\
    \  local -i current_max_min_max_min_max_min_value=0\n  local -i current_min_max_min_max_min_max_index=0\n\
    \  local -i current_min_max_min_max_min_max_value=0\n  local -i current_max_min_max_min_max_min_max_index=0\n\
    \  local -i current_max_min_max_", "  local -a arr=(\"$@\")\n  local -i i=0\n\
    \  local -i j=0\n  local -i n=${#arr[@]}\n  local -i max_i=-1\n  local -i max_j=-1\n\
    \  local -i max_diff=-1\n  local -i diff=0\n  for ((i=0; i<n; i++)); do\n    for\
    \ ((j=i+1; j<n; j++)); do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff > 0\
    \ && diff > max_diff)); then\n        max_i=$i\n        max_j=$j\n        max_diff=$diff\n\
    \      fi\n    done\n  done\n  echo $max_j", "  local -a arr=($1)\n  local -i\
    \ i=${#arr[@]}\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i cur_value=0\n  for ((i=${#arr[@]}-1; i>=0; i--)); do\n    cur_value=${arr[i]}\n\
    \    if ((cur_value > max_value)); then\n      max_value=$cur_value\n      max_index=$i\n\
    \    fi\n  done\n  echo $max_index", "    local -a arr\n    local -i i\n    local\
    \ -i j\n    local -i max\n    local -i max_index\n    local -i result\n\n    arr=($1)\n\
    \    result=-1\n    for ((i=${#arr[@]}-2; i>=0; i--)); do\n        max=${arr[i+1]}\n\
    \        max_index=$i+1\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n      \
    \      if ((arr[j] > max)); then\n                max=${arr[j]}\n            \
    \    max_index=$j\n            fi\n        done\n        if ((max <= arr[i]));\
    \ then\n            result=$max_index\n            break\n        fi\n    done\n\
    \    echo $result", "  local -a arr\n  local i\n  local -i max_idx\n  local -i\
    \ max_val\n  local -i idx\n  local -i val\n  local -i ret\n  arr=($1)\n  max_idx=0\n\
    \  max_val=${arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    idx=$i\n    val=${arr[$i]}\n\
    \    if ((val > max_val)); then\n      max_idx=$idx\n      max_val=$val\n    fi\n\
    \  done\n  if ((max_idx == 0)); then\n    ret=-1\n  else\n    ret=$((max_idx -\
    \ 1))\n  fi\n  echo $ret", "  local -a arr=(\"$@\")\n  local -i i=0\n  local -i\
    \ j=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_diff=0\n  local\
    \ -i diff=0\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    for\
    \ ((j=i+1; j<len; j++)); do\n      diff=${arr[j]}-${arr[i]}\n      if ((diff >\
    \ 0 && diff > max_diff)); then\n        max_diff=$diff\n        max_i=$i\n   \
    \     max_j=$j\n      fi\n    done\n  done\n  if ((max_diff > 0)); then\n    echo\
    \ \"$max_j\"\n  else\n    echo \"-1\"\n  fi", "    local -a arr\n    local -i\
    \ i\n    local -i j\n    local -i max\n    local -i max_i\n    local -i n\n  \
    \  local -i res\n    arr=($1)\n    n=${#arr[@]}\n    res=-1\n    for ((i=n-2;\
    \ i>=0; i--)); do\n        max=${arr[i+1]}\n        max_i=$i+1\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if [[ ${arr[j]} -lt max ]]; then\n             \
    \   max=${arr[j]}\n                max_i=$j\n            fi\n        done\n  \
    \      if [[ ${arr[i]} -ge max ]]; then\n            res=$max_i\n        fi\n\
    \    done\n    echo $res", "  local -a arr=($1)\n  local i=0\n  local j=0\n  local\
    \ max_index=-1\n  local max_value=0\n  local cur_value=0\n  for ((i=${#arr[@]}-1;\
    \ i>=0; i--)); do\n    cur_value=${arr[i]}\n    if ((cur_value < max_value));\
    \ then\n      max_index=$i\n      max_value=$cur_value\n    fi\n  done\n  echo\
    \ $max_index", "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n\
    \    local -i max_index=-1\n    local -i max_value=0\n    for ((i=${#arr[@]}-1;\
    \ i>=0; i--)); do\n        if ((arr[i] <= max_value)); then\n            echo\
    \ \"$max_index\"\n            return\n        fi\n        if ((arr[i] > max_value));\
    \ then\n            max_value=arr[i]\n            max_index=i\n        fi\n  \
    \  done\n    echo \"$max_index\"", "    local -a arr\n    local i\n    local j\n\
    \    local max\n    local max_index\n    local -i result=-1\n    IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n        max=${arr[i]}\n\
    \        max_index=$i\n        for ((j=i-1; j>=0; j--)); do\n            if ((arr[j]<=max));\
    \ then\n                max=${arr[j]}\n                max_index=$j\n        \
    \    fi\n        done\n        if ((max_index!=i)); then\n            result=$max_index\n\
    \            break\n        fi\n    done\n    echo \"$result\"", "    local -a\
    \ arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n\
    \    local -i max_i=0\n    local -i max_j=0\n    local -i max_diff=0\n    local\
    \ -i diff=0\n    local -i max_index=-1\n\n    for ((i=0; i<n; i++)); do\n    \
    \    for ((j=i+1; j<n; j++)); do\n            if ((arr[j] < arr[i])); then\n \
    \               diff=$((j-i))\n                if ((diff > max_diff)); then\n\
    \                    max_diff=$diff\n                    max_index=$j\n      \
    \          fi\n            fi\n        done\n    done\n\n    echo \"$max_index\"",
  "    local -a arr\n    local -i i j\n    arr=($1)\n    for ((i=${#arr[@]}-1; i>0;\
    \ i--)); do\n        if (( arr[i] < arr[i-1] )); then\n            for ((j=i-1;\
    \ j>=0; j--)); do\n                if (( arr[i] >= arr[j] )); then\n         \
    \           echo $j\n                    return\n                fi\n        \
    \    done\n            echo -1\n            return\n        fi\n    done\n   \
    \ echo -1", "  local -a arr\n  local i\n  local j\n  local max\n  local max_idx\n\
    \  local -i len\n  local -i res\n\n  arr=($1)\n  len=${#arr[@]}\n  res=-1\n\n\
    \  for ((i=len-1; i>=0; i--)); do\n    max=${arr[i]}\n    max_idx=$i\n    for\
    \ ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[j]} -le $max ]]; then\n        max=${arr[j]}\n\
    \        max_idx=$j\n      fi\n    done\n    if [[ $max_idx -lt $i ]]; then\n\
    \      res=$max_idx\n      break\n    fi\n  done\n\n  echo $res", "  local -a\
    \ arr\n  local -i i=0\n  local -i j=0\n  local -i max_idx=-1\n  local -i max_val=0\n\
    \  local -i val=0\n  local -i len=0\n  local -i idx=0\n\n  arr=($1)\n  len=${#arr[@]}\n\
    \n  for ((i=0; i<len; i++)); do\n    val=${arr[i]}\n    if ((val > max_val));\
    \ then\n      max_val=$val\n      max_idx=$i\n    fi\n  done\n\n  for ((i=0; i<len;\
    \ i++)); do\n    val=${arr[i]}\n    if ((val < max_val)); then\n      for ((j=i+1;\
    \ j<len; j++)); do\n        if ((val < arr[j] && arr[j] < max_val)); then\n  \
    \        max_val=${arr[j]}\n          max_idx=$j\n        fi\n      done\n   \
    \ fi\n  done\n\n  echo $max_idx", "    local -a arr=(\"$@\")\n    local -i i=0\n\
    \    local -i j=0\n    local -i max=0\n    local -i max_index=0\n    local -i\
    \ n=${#arr[@]}\n    for ((i=n-1; i>=0; i--)); do\n        if ((arr[i] >= max));\
    \ then\n            max=arr[i]\n            max_index=i\n        fi\n    done\n\
    \    echo \"$max_index\"", "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n    local -i max_value=0\n\
    \    local -i curr_value=0\n    for ((i=0; i<len; i++)); do\n        curr_value=${arr[i]}\n\
    \        if ((curr_value > max_value)); then\n            max_value=$curr_value\n\
    \            max_index=$i\n        fi\n    done\n    for ((i=0; i<len; i++));\
    \ do\n        curr_value=${arr[i]}\n        if ((curr_value < max_value)); then\n\
    \            max_value=$curr_value\n            max_index=$i\n        fi\n   \
    \ done\n    echo $max_index", "  local -a arr=($1)\n  local -i i=0\n  local -i\
    \ j=0\n  local -i max_i=0\n  local -i max_j=0\n  local -i max_diff=0\n  local\
    \ -i diff=0\n  local -i len=${#arr[@]}\n  local -i max_len=0\n  local -i max_len_i=0\n\
    \  local -i max_len_j=0\n  local -i max_len_diff=0\n  local -i len_diff=0\n  local\
    \ -i len_i=0\n  local -i len_j=0\n  local -i len_diff=0\n  local -i max_len_diff=0\n\
    \  local -i max_len_i=0\n  local -i max_len_j=0\n  local -i max_len=0\n  local\
    \ -i len=0\n  local -i max_diff=0\n  local -i diff=0\n  local -i max_j=0\n  local\
    \ -i max_i=0\n  local -i j=0\n  local -i i=0\n  local -a arr=($1)\n  local -i\
    \ len=${#arr[@]}\n  local -i max_len=0\n  local -i max_len_i=0\n  local -i max_len_j=0\n\
    \  local -i max_len_diff=0\n  local -i len_diff=0\n  local -i len_i=0\n  local\
    \ -i len_j=0\n  local -i len_diff=0\n  local -i max_len_diff=0\n  local -i max_len_i=0\n\
    \  local -i max_len_j=0\n  local -i max_len=0\n  local -i len=0\n  local -i max_diff=0\n\
    \  local -i diff=0\n  local -i max_j=0\n  local -i max_i=0\n  local -i j=0\n \
    \ local -i i=0\n  local -a arr=($1)\n  local -i len=${#arr[@]}\n", "    local\
    \ -a arr\n    local -i i j\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=${#arr[@]}-1;\
    \ i>0; i--)); do\n        if ((arr[i]<arr[i-1])); then\n            for ((j=i-1;\
    \ j>=0; j--)); do\n                if ((arr[i]>=arr[j])); then\n             \
    \       echo \"$j\"\n                    return\n                fi\n        \
    \    done\n            echo \"-1\"\n            return\n        fi\n    done\n\
    \    echo \"-1\"", "    local -a arr=($1)\n    local -i i\n    local -i max_index=-1\n\
    \    local -i max_value=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n  \
    \      if ((arr[i] < max_value)); then\n            max_index=$i\n           \
    \ max_value=${arr[i]}\n        fi\n    done\n    echo $max_index", "  local -a\
    \ arr=($1)\n  local -i i=${#arr[@]}-1\n  local -i j=0\n  while (( i > 0 )); do\n\
    \    (( j = i - 1 ))\n    while (( j >= 0 )); do\n      if (( arr[j] <= arr[i]\
    \ )); then\n        (( j-- ))\n      else\n        echo $j\n        return\n \
    \     fi\n    done\n    (( i-- ))\n  done\n  echo -1", "  local -a arr=($1)\n\
    \  local -i i=0\n  local -i j=0\n  local -i max_i=0\n  local -i max_j=0\n  local\
    \ -i max_diff=0\n  local -i diff=0\n  local -i len=${#arr[@]}\n  local -i ret=-1\n\
    \n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      diff=${arr[j]}-${arr[i]}\n\
    \      if ((diff > 0 && diff > max_diff)); then\n        max_diff=$diff\n    \
    \    max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  if ((max_diff\
    \ > 0)); then\n    ret=$max_i\n  fi\n\n  echo $ret", "    local -a arr\n    local\
    \ -i i j\n    IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=${#arr[@]}-1; i>0;\
    \ i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if (( arr[i] >=\
    \ arr[j] )); then\n                echo \"$j\"\n                return\n     \
    \       fi\n        done\n    done\n    echo \"-1\"", "  local -a arr=(\"$@\"\
    )\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  local -i n=${#arr[@]}\n  local -i tmp=0\n\n  for ((i=n-1; i>=0; i--)); do\n\
    \    if [[ ${arr[i]} -ge $max_value ]]; then\n      max_value=${arr[i]}\n    \
    \  max_index=$i\n    fi\n  done\n\n  echo \"$max_index\"", "    local -a arr=($1)\n\
    \    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i\
    \ k=0\n    local -i max_index=-1\n    local -i max_value=0\n    for ((i=len-1;\
    \ i>=0; i--)); do\n        if ((arr[i] >= max_value)); then\n            max_value=arr[i]\n\
    \            max_index=i\n        fi\n    done\n    echo $max_index", "  local\
    \ -a arr=($1)\n  local len=${#arr[@]}\n  local i=0\n  local j=0\n  local max_index=-1\n\
    \  local max_value=0\n  local curr_value=0\n  while [ $i -lt $len ]; do\n    curr_value=${arr[$i]}\n\
    \    if [ $curr_value -gt $max_value ]; then\n      max_value=$curr_value\n  \
    \    max_index=$i\n    fi\n    i=$((i+1))\n  done\n  echo $max_index", "    local\
    \ -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i max_index=-1\n\
    \    local -i max_value=0\n    local -i cur_value=0\n    local -i cur_index=0\n\
    \    local -i len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        cur_value=${arr[i]}\n\
    \        cur_index=$i\n        for ((j=i+1; j<len; j++)); do\n            if [[\
    \ ${arr[j]} -lt $cur_value ]]; then\n                if [[ $j -gt $max_index ]];\
    \ then\n                    max_index=$j\n                    max_value=${arr[j]}\n\
    \                fi\n            fi\n        done\n        if [[ $max_index -ne\
    \ -1 ]]; then\n            echo $max_index\n            return\n        fi\n \
    \   done\n    echo -1", "    local arr=($1)\n    local i=0\n    local j=0\n  \
    \  local max_index=-1\n    local max_value=-1\n    local result=-1\n    for i\
    \ in \"${!arr[@]}\"; do\n        if [[ ${arr[$i]} -gt $max_value ]]; then\n  \
    \          max_value=${arr[$i]}\n            max_index=$i\n        fi\n      \
    \  if [[ $i -gt 0 ]]; then\n            if [[ ${arr[$i]} -le ${arr[$i-1]} ]];\
    \ then\n                if [[ $max_index -lt $i ]]; then\n                   \
    \ result=$i\n                    break\n                fi\n            fi\n \
    \       fi\n    done\n    echo $result", "  local -a arr=($1)\n  local -i len=${#arr[@]}\n\
    \  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n  local -i max_value=0\n\
    \  for ((i=0; i<len; i++)); do\n    if ((arr[i] < max_value)); then\n      if\
    \ ((arr[i] > arr[max_index])); then\n        max_index=i\n      fi\n    else\n\
    \      max_value=arr[i]\n      max_index=i\n    fi\n  done\n  echo $max_index",
  "  local -a arr=(\"$@\")\n  local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\" |\
    \ sort -n))\n  local -a indices=()\n  local i=0\n  local j=0\n  local index=-1\n\
    \  local found=false\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=0; j<${#sorted[@]};\
    \ j++)); do\n      if [[ \"${arr[$i]}\" == \"${sorted[$j]}\" ]]; then\n      \
    \  indices+=(\"$j\")\n        break\n      fi\n    done\n  done\n\n  for ((i=0;\
    \ i<${#indices[@]}; i++)); do\n    if [[ \"${indices[$i]}\" -lt \"${indices[$((i+1))]}\"\
    \ ]]; then\n      index=$i\n      found=true\n      break\n    fi\n  done\n\n\
    \  if ! $found; then\n    echo \"-1\"\n  else\n    echo \"$index\"\n  fi", " \
    \   local -a arr\n    local i\n    local j\n    local max\n    local max_index\n\
    \    local -i result=-1\n    arr=($1)\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n\
    \        max=${arr[i]}\n        max_index=$i\n        for ((j=i-1; j>=0; j--));\
    \ do\n            if [[ ${arr[j]} -lt $max ]]; then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if [[ $max_index\
    \ -gt $i ]]; then\n            result=$max_index\n            break\n        fi\n\
    \    done\n    echo $result", "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n\
    \  local -i j=i-1\n  while ((i > 0)); do\n    if ((arr[i] >= arr[j])); then\n\
    \      ((i--))\n      ((j--))\n    else\n      echo $i\n      return\n    fi\n\
    \  done\n  echo -1", "  local -a arr=($1)\n  local -i i=${#arr[@]}-1\n  local\
    \ -i j=i-1\n  while ((i>0)) && ((arr[i]>=arr[j])); do\n    ((i--))\n    ((j--))\n\
    \  done\n  echo $i", "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i\
    \ j=0\n    local -i max_index=-1\n    local -i max_value=0\n    local -i current_value=0\n\
    \    for ((i=${#arr[@]}-1; i>=0; i--)); do\n        current_value=${arr[i]}\n\
    \        if ((current_value > max_value)); then\n            max_value=$current_value\n\
    \            max_index=$i\n        fi\n    done\n    echo $max_index", "  local\
    \ -a arr=($1)\n  local -i i=${#arr[@]}\n  local -i j=0\n  local -i max=0\n  local\
    \ -i max_idx=0\n  local -i idx=0\n  local -i res=-1\n\n  while (( i > 0 )); do\n\
    \    (( i-- ))\n    (( j = i - 1 ))\n    (( max = arr[i] ))\n    (( max_idx =\
    \ i ))\n    while (( j >= 0 )); do\n      (( j-- ))\n      if (( arr[j] <= max\
    \ )); then\n        (( max = arr[j] ))\n        (( max_idx = j ))\n      fi\n\
    \    done\n    if (( max_idx > idx )); then\n      (( res = max_idx ))\n     \
    \ (( idx = max_idx ))\n    fi\n  done\n\n  echo \"$res\"", "    local -a arr\n\
    \    local i\n    local j\n    local max\n    local max_index\n    local -i index\n\
    \    index=-1\n    arr=($1)\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n      \
    \  max=${arr[i]}\n        max_index=$i\n        for ((j=i-1; j>=0; j--)); do\n\
    \            if [[ ${arr[j]} -lt $max ]]; then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if [[ $max_index\
    \ -ne $i ]]; then\n            index=$max_index\n            break\n        fi\n\
    \    done\n    echo $index", "    local -a arr=($1)\n    local -i i=${#arr[@]}-1\n\
    \    local -i j=0\n    while (( i > 0 )); do\n        (( j = i - 1 ))\n      \
    \  while (( j >= 0 )); do\n            if (( arr[j] <= arr[i] )); then\n     \
    \           (( j-- ))\n            else\n                echo $j\n           \
    \     return\n            fi\n        done\n        (( i-- ))\n    done\n    echo\
    \ -1", "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local\
    \ -i max_index=-1\n    local -i max_value=0\n    for ((i=${#arr[@]}-1; i>=0; i--));\
    \ do\n        if [[ ${arr[i]} -ge $max_value ]]; then\n            max_value=${arr[i]}\n\
    \            max_index=$i\n        fi\n    done\n    echo $max_index", "  local\
    \ -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i max_index=-1\n \
    \ local -i max_value=-1\n  local -i len=${#arr[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    if ((arr[i] > max_value)); then\n      max_value=${arr[i]}\n      max_index=i\n\
    \    fi\n  done\n  for ((i=0; i<len; i++)); do\n    if ((arr[i] < max_value));\
    \ then\n      for ((j=i+1; j<len; j++)); do\n        if ((arr[j] < max_value));\
    \ then\n          if ((arr[j] > arr[i])); then\n            max_value=${arr[j]}\n\
    \            max_index=j\n          fi\n        fi\n      done\n    fi\n  done\n\
    \  echo \"$max_index\"", "    local -a arr=($1)\n    local -i i=${#arr[@]}\n \
    \   local -i j=0\n    local -i k=0\n    local -i max=0\n    local -i max_index=0\n\
    \    local -i index=0\n    local -i result=-1\n    local -i temp=0\n    local\
    \ -i temp_index=0\n    local -i temp_max=0\n    local -i temp_max_index=0\n  \
    \  local -i temp_index=0\n    local -i temp_result=-1\n    local -i temp_result_index=0\n\
    \    local -i temp_result_max=0\n    local -i temp_result_max_index=0\n    local\
    \ -i temp_result_index=0\n    local -i temp_result_result=-1\n    local -i temp_result_result_index=0\n\
    \    local -i temp_result_result_max=0\n    local -i temp_result_result_max_index=0\n\
    \    local -i temp_result_result_index=0\n    local -i temp_result_result_result=-1\n\
    \    local -i temp_result_result_result_index=0\n    local -i temp_result_result_result_max=0\n\
    \    local -i temp_result_result_result_max_index=0\n    local -i temp_result_result_result_index=0\n\
    \    local -i temp_result_result_result_result=-1\n    local -i temp_result_result_result_result_index=0\n\
    \    local -i temp_result_result_result_result_max=0\n    local -i temp_result_result_result_result_max_index=0\n\
    \    local -i temp_result_result_result_result_index=0\n    local -i temp_result_result_result_result_result=-1\n\
    \    local -i temp_result_result_result_result_result_index=0\n    local -i temp_result_result_result_result_result_max=0\n\
    \    local -i temp_result_result_result_result_result_max_index=0\n    local -i\
    \ temp_result_", "    local -a arr\n    arr=($1)\n    local len=${#arr[@]}\n \
    \   local i\n    for ((i=len-1; i>0; i--)); do\n        if [[ ${arr[i]} -ge ${arr[i-1]}\
    \ ]]; then\n            continue\n        else\n            echo $i\n        \
    \    return\n        fi\n    done\n    echo -1"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_76_is_simple_power
results:
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 == $2 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1%$2 == 0 ]]; then\n    is_simple_power\
    \ $(( $1/$2 )) $2\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ]\
    \ || [ $2 -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n    if [\
    \ $2 -eq 1 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $1\
    \ -eq $2 ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -gt\
    \ $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n            is_simple_power\
    \ $(($1 / $2)) $2\n        else\n            echo \"false\"\n        fi\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1/$2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  if [ $n -eq 1 ]; then\n    echo \"false\"\n    return\n  fi\n  local\
    \ i=0\n  while [ $((n**i)) -le $x ]; do\n    if [ $((n**i)) -eq $x ]; then\n \
    \     echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"\
    \n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -eq $(($2 * $2)) ]]; then\n    echo \"true\"\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1/$2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power\
    \ $(($1/$2)) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp37v0k7t_.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmp37v0k7t_.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $1%$2 -eq 0 ]]; then\n \
    \           is_simple_power $(( $1/$2 )) $2\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo \"true\"\n    elif [ $1 -eq $2 ]\n    then\n        echo\
    \ \"true\"\n    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq\
    \ 0 ]\n        then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  if [ $1 -eq 1 ]; then\n    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -gt $2 ]; then\n    is_simple_power $(( $1 / $2\
    \ )) $2\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq 1 ]; then\n        echo \"false\"\
    \n    elif [ $1 -eq 0 ]; then\n        echo \"false\"\n    elif [ $1 -lt $2 ];\
    \ then\n        echo \"false\"\n    elif [ $1 -gt $2 ]; then\n        is_simple_power\
    \ $(($1/$2)) $2\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == $2 ]];\
    \ then\n        echo true\n    elif [[ $1 == $(( $2 * $2 )) ]]; then\n       \
    \ echo true\n    elif [[ $1 == $(( $2 * $2 * $2 )) ]]; then\n        echo true\n\
    \    elif [[ $1 == $(( $2 * $2 * $2 * $2 )) ]]; then\n        echo true\n    elif\
    \ [[ $1 == $(( $2 * $2 * $2 * $2 * $2 )) ]]; then\n        echo true\n    elif\
    \ [[ $1 == $(( $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n        echo true\n  \
    \  elif [[ $1 == $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n        echo\
    \ true\n    elif [[ $1 == $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n\
    \        echo true\n    elif [[ $1 == $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2\
    \ * $2 )) ]]; then\n        echo true\n    elif [[ $1 == $(( $2 * $2 * $2 * $2\
    \ * $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n        echo true\n    elif [[ $1\
    \ == $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n  \
    \      echo true\n    elif [[ $1 == $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2\
    \ * $2 * $2 * $2 * $2 )) ]]; then\n        echo true\n    elif [[ $1 == $(( $2\
    \ * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n  \
    \      echo true\n    elif [[ $1 == $(( $2 * $2 * $2 * $2 *\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkbagjzn_.sh: line 48: unexpected EOF while looking for matching
    `)''

    /tmp/tmpkbagjzn_.sh: line 70: unexpected argument to conditional binary operator

    /tmp/tmpkbagjzn_.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq $2 ]\n  then\n    echo true\n  elif [\
    \ $1 -gt $2 ]\n  then\n    if [ $(( $1 % $2 )) -eq 0 ]\n    then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $2 -eq 1 ]; then\n        echo \"false\"\
    \n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\n    elif [ $1 -gt $2 ];\
    \ then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n            is_simple_power\
    \ $(( $1 / $2 )) $2\n        else\n            echo \"false\"\n        fi\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo \"true\"\n  elif [ $1 -eq 1 ]\n  then\n    echo \"false\"\n\
    \  elif [ $1 -eq 0 ]\n  then\n    echo \"false\"\n  elif [ $1 -lt $2 ]\n  then\n\
    \    echo \"false\"\n  elif [ $1 -gt $2 ]\n  then\n    is_simple_power $(($1/$2))\
    \ $2\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$1\" -eq\
    \ \"1\" ]; then\n        echo \"true\"\n    elif [ \"$1\" -eq \"$2\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$1\" -gt \"$2\" ]; then\n        if [ \"\
    $(($1 % $2))\" -eq \"0\" ]; then\n            is_simple_power \"$(($1 / $2))\"\
    \ \"$2\"\n        else\n            echo \"false\"\n        fi\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | awk '{print int($1)}')\n  if [ \"$result\" == \"$int_result\" ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $2 -eq 1 ]]; then\n\
    \        echo false\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n  \
    \      echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n     \
    \   if [[ $(( $1 % $2 )) -eq 0 ]]; then\n            is_simple_power $(( $1 /\
    \ $2 )) $2\n        else\n            echo false\n        fi\n    else\n     \
    \   echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -eq $(($2**2))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**3)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**4)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**5))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**6)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**7)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**8))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**9)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**10)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**11))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**12)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**13)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**14))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**15)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**16)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**17))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**18)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**19)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**20))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**21)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**22)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**23))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**24)) ]; then\n\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3850n3ev.sh: line 72: syntax error near unexpected token `}''

    /tmp/tmp3850n3ev.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    if [ $2 -eq 1 ]; then\n   \
    \     echo \"true\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n    \
    \    echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(( $2 * $2 )) ];\
    \ then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(( $2\
    \ * $2 * $2 )) ]; then\n        echo \"true\"\n        return\n    fi\n    if\
    \ [ $1 -eq $(( $2 * $2 * $2 * $2 )) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 )) ]; then\n        echo \"\
    true\"\n        return\n    fi\n    if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2\
    \ )) ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $((\
    \ $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n        echo \"true\"\n       \
    \ return\n    fi\n    if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 ))\
    \ ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $((\
    \ $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n        echo \"true\"\
    \n        return\n    fi\n    if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 * $2\
    \ * $2 * $2 * $2 )) ]; then\n        echo \"true\"\n        return\n    fi\n \
    \   if [ $1 -eq $(( $2 * $2 * $2\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo6lbw_jv.sh: line 78: unexpected EOF while looking for matching
    `)''

    /tmp/tmpo6lbw_jv.sh: line 100: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -eq $(($2**2)) ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**3))\
    \ ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**4)) ]]; then\n    echo\
    \ \"true\"\n  elif [[ $1 -eq $(($2**5)) ]]; then\n    echo \"true\"\n  elif [[\
    \ $1 -eq $(($2**6)) ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**7)) ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**8)) ]]; then\n    echo \"true\"\
    \n  elif [[ $1 -eq $(($2**9)) ]]; then\n    echo \"true\"\n  elif [[ $1 -eq $(($2**10))\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local result=$(echo \"$1/$2\" |\
    \ bc -l)\n    if [[ $result -eq $(echo \"$result/1\" | bc -l) ]]; then\n     \
    \   is_simple_power $result $2\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsw36i1hu.sh: line 35: [[: 8.00000000000000000000: syntax error:
    invalid arithmetic operator (error token is ".00000000000000000000")

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x/$n\" | bc -l)\n    local int_result=$(echo\
    \ \"$result\" | awk '{print int($1)}')\n    if [ \"$result\" == \"$int_result\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo true\n  elif [ $1 -eq 1 ]; then\n    echo false\n  elif [ $1\
    \ -eq 0 ]; then\n    echo false\n  elif [ $1 -gt $2 ]; then\n    if [ $(( $1 %\
    \ $2 )) -eq 0 ]; then\n      is_simple_power $(( $1 / $2 )) $2\n    else\n   \
    \   echo false\n    fi\n  else\n    echo false\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq 1 ]\n  then\n    echo false\n  elif [\
    \ $1 -eq 0 ]\n  then\n    echo false\n  elif [ $1 -lt $2 ]\n  then\n    echo false\n\
    \  elif [ $1 -gt $2 ]\n  then\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local res=$(echo \"$1/$2\" | bc\
    \ -l)\n    if [[ $res -eq $(echo \"$res\" | bc -l | cut -d '.' -f 1) ]]; then\n\
    \        is_simple_power $res $2\n    else\n        echo false\n    fi\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6o25p9yk.sh: line 35: [[: 8.00000000000000000000: syntax error:
    invalid arithmetic operator (error token is ".00000000000000000000")

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp37v0k7t_.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmp37v0k7t_.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\
    \n    else\n        is_simple_power $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\n\
    \    then\n        echo \"true\"\n    elif [ $1 -eq 1 ]\n    then\n        echo\
    \ \"false\"\n    elif [ $1 -eq 0 ]\n    then\n        echo \"false\"\n    elif\
    \ [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n        then\n\
    \            is_simple_power $(( $1 / $2 )) $2\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n  \
    \          is_simple_power $(( $1 / $2 )) $2\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n      \
    \      is_simple_power $(($1 / $2)) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(($2 * $2)) ]]; then\n    echo true\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 == 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 == $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1%$2 == 0 ]]; then\n  \
    \      is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"scale=0; $x/$n\" | bc)\n  if [ $result -eq $n\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(( $1 / $2\
    \ )) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo true\n    elif [ $1 -eq 1 ]; then\n        echo false\n \
    \   elif [ $1 -eq 0 ]; then\n        echo false\n    elif [ $1 -lt $2 ]; then\n\
    \        echo false\n    elif [ $(( $1 % $2 )) -eq 0 ]; then\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  else\n    if [ $1 -eq $2 ]; then\n      echo true\n    else\n\
    \      if [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n     \
    \     is_simple_power $(($1 / $2)) $2\n        else\n          echo false\n  \
    \      fi\n      else\n        echo false\n      fi\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -eq $(($2**2))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**3)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**4)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**5))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**6)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**7)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**8))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**9)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**10)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**11))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**12)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**13)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**14))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**15)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**16)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**17))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**18)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**19)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**20))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**21)) ]; then\n    echo true\n\
    \  elif [ $1 -eq $(($2**22)) ]; then\n    echo true\n  elif [ $1 -eq $(($2**23))\
    \ ]; then\n    echo true\n  elif [ $1 -eq $(($2**24)) ]; then\n\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3850n3ev.sh: line 72: syntax error near unexpected token `}''

    /tmp/tmp3850n3ev.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $(bc\
    \ <<< \"scale=0; $2^$(bc <<< \"scale=0; l($1)/l($2)\")\") ]; then\n        echo\
    \ true\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    (standard_in) 2: syntax error

    /tmp/tmp3bgw0539.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write your code\
    \ here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp85bt6v0g.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmp85bt6v0g.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x/$n\" | bc -l)\n    local int=$(echo\
    \ \"$result\" | cut -d '.' -f 1)\n    local decimal=$(echo \"$result\" | cut -d\
    \ '.' -f 2)\n    if [ \"$decimal\" = \"0\" ]; then\n        echo \"$n^$int\" |\
    \ bc -l | grep -q \"$x\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $(bc <<< \"$2**$(bc <<< \"l($1)/l($2)\"\
    )\") ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=6): Function l not defined.

    (standard_in) 1: syntax error

    /tmp/tmpu5flw19k.sh: line 24: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    if [ $2 -eq 1 ]; then\n   \
    \     echo \"true\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n    \
    \    echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(( $2 * $2 )) ];\
    \ then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(( $2\
    \ * $2 * $2 )) ]; then\n        echo \"true\"\n        return\n    fi\n    echo\
    \ \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local result=$(bc <<< \"$1/$2\"\
    )\n    if [[ $result -eq $2 ]]; then\n        echo true\n        return\n    fi\n\
    \    is_simple_power $result $2\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo true\n    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 %\
    \ $2 )) -eq 0 ]; then\n            is_simple_power $(( $1 / $2 )) $2\n       \
    \ else\n            echo false\n        fi\n    else\n        echo false\n   \
    \ fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ]\
    \ || [ $2 -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n    if [\
    \ $1 -eq $2 ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $1\
    \ -lt $2 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $1\
    \ -eq $(($2 * $2)) ]; then\n        echo \"true\"\n        return\n    fi\n  \
    \  if [ $1 -eq $(($2 * $2 * $2)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2)) ]; then\n        echo \"true\"\
    \n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2)) ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2\
    \ * $2 * $2 * $2)) ]; then\n        echo \"true\"\n        return\n    fi\n  \
    \  if [ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2 * $2)) ]; then\n        echo \"\
    true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2\
    \ * $2 * $2)) ]; then\n        echo \"true\"\n        return\n    fi\n    if [\
    \ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2)) ]; then\n        echo\
    \ \"true\"\n        return\n    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2\
    \ * $2 * $2 * $2 * $2 * $2)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 *\
    \ $2\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz15k2gjh.sh: line 74: unexpected EOF while looking for matching
    `)''

    /tmp/tmpz15k2gjh.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n      \
    \      is_simple_power $(($1 / $2)) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq 1 ]\n    then\n        echo false\n\
    \    elif [ $1 -eq 0 ]\n    then\n        echo false\n    elif [ $1 -lt $2 ]\n\
    \    then\n        echo false\n    elif [ $(( $1 % $2 )) -eq 0 ]\n    then\n \
    \       is_simple_power $(( $1 / $2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ $2 -eq 0 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ $2 -eq 1 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1\
    \ -eq $2 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2)) ];\
    \ then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2)) ];\
    \ then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(($2*$2*$2*$2*$2*$2*\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpikmqcxdu.sh: line 78: unexpected EOF while looking for matching
    `)''

    /tmp/tmpikmqcxdu.sh: line 100: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $(($1 % $2)) -eq 0 ]; then\n        is_simple_power\
    \ $(($1 / $2)) $2\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | cut -d \".\" -f 1)\n  local decimal_result=$(echo \"$result\" | cut\
    \ -d \".\" -f 2)\n  if [[ \"$decimal_result\" == \"0\" ]]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1 / $2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x/$n\" | bc -l)\n    local int=$(echo\
    \ \"$result\" | awk '{print int($1)}')\n    local float=$(echo \"$result\" | awk\
    \ '{print $1-int($1)}')\n    if [ \"$float\" == \"0\" ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n   \
    \     if [[ $1%$2 -eq 0 ]]; then\n            is_simple_power $(( $1/$2 )) $2\n\
    \        else\n            echo false\n        fi\n    else\n        echo false\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"scale=0; $x / $n\" | bc)\n  if [[ $result -eq\
    \ $(echo \"scale=0; $n ^ $result\" | bc) ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(($2*$2)) ]]; then\n    echo true\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(( $1 / $2\
    \ )) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | cut -d. -f1)\n  local float_result=$(echo \"$result\" | cut -d. -f2)\n\
    \  if [[ $float_result == 0 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -eq 0 ]; then\n        echo false\n    elif [ $1 -lt $2 ]; then\n\
    \        echo false\n    else\n        is_simple_power $(($1/$2)) $2\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$1\" -eq\
    \ \"1\" ]; then\n        echo \"true\"\n    elif [ \"$1\" -eq \"$2\" ]; then\n\
    \        echo \"true\"\n    elif [ \"$1\" -eq \"0\" ]; then\n        echo \"false\"\
    \n    elif [ \"$1\" -lt \"$2\" ]; then\n        echo \"false\"\n    else\n   \
    \     is_simple_power \"$(($1 / $2))\" \"$2\"\n    fi\n}\n\ncandidate() {\n  \
    \  is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $(( $1 % $2 )) -eq 0 ]];\
    \ then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 0 ]];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n        return\n    fi\n    if [[ $2 -eq 0 ]];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [[ $2 -eq 1 ]];\
    \ then\n        echo \"true\"\n        return\n    fi\n    if [[ $1 -eq $2 ]];\
    \ then\n        echo \"true\"\n        return\n    fi\n    if [[ $1 -lt $2 ]];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq $(( $2\
    \ * $2 )) ]]; then\n        echo \"true\"\n        return\n    fi\n    if [[ $1\
    \ -gt $(( $2 * $2 )) ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    if [[ $1 -eq $(( $2 * $2 * $2 )) ]]; then\n        echo \"true\"\n      \
    \  return\n    fi\n    if [[ $1 -gt $(( $2 * $2 * $2 )) ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $(( $2 * $2 * $2 * $2 ))\
    \ ]]; then\n        echo \"true\"\n        return\n    fi\n    if [[ $1 -gt $((\
    \ $2 * $2 * $2 * $2 )) ]]; then\n        echo \"false\"\n        return\n    fi\n\
    \    if [[ $1 -eq $(( $2 * $2 * $2 * $2 * $2 )) ]]; then\n        echo \"true\"\
    \n        return\n    fi\n    if [[ $1 -gt $(( $2 * $2 * $2 * $2 * $2 )) ]]; then\n\
    \        echo \"false\"\n        return\n    fi\n    if [[ $1 -eq $(( $2 * $2\
    \ * $2 * $2 * $2 * $2 )) ]]; then\n        echo \"true\"\n        return\n   \
    \ fi\n    if [[ $1 -gt $(( $2 * $2 * $2 * $2 * $2 * $2 )) ]]; then\n        echo\
    \ \"false\"\n       \n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvxah1w6n.sh: line 85: syntax error near unexpected token `}''

    /tmp/tmpvxah1w6n.sh: line 85: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $# -ne 2 ];\
    \ then\n        echo \"Usage: $0 <integer> <integer>\"\n        exit 1\n    fi\n\
    \    local x=$1\n    local n=$2\n    local result=$(echo \"$x $n\" | awk '{print\
    \ log($1)/log($2)}')\n    if [ $(echo \"$result % 1\" | bc) -eq 0 ]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkto7sbd7.sh: line 29: [: .28195: integer expression expected

    /tmp/tmpkto7sbd7.sh: line 29: [: .58496: integer expression expected

    /tmp/tmpkto7sbd7.sh: line 29: [: .5: integer expression expected

    /tmp/tmpkto7sbd7.sh: line 29: [: .38685: integer expression expected

    awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    (standard_in) 1: syntax error

    /tmp/tmpkto7sbd7.sh: line 29: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(($1 / $2)) $2\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  # Write your code\
    \ here\n  # $1 is an integer\n  # $2 is an integer\n  # return true if $1 is a\
    \ simple power of $2\n  # return false otherwise\n  #\n  # Example:\n  # >>> $(is_simple_power\
    \ \"1\" \"4\")\n  # true\n  # >>> $(is_simple_power \"2\" \"2\")\n  # true\n \
    \ # >>> $(is_simple_power \"8\" \"2\")\n  # true\n  # >>> $(is_simple_power \"\
    3\" \"2\")\n  # false\n  # >>> $(is_simple_power \"3\" \"1\")\n  # false\n  #\
    \ >>> $(is_simple_power \"5\" \"3\")\n  # false\n  #\n  # Hint:\n  # You can use\
    \ bc to do floating point arithmetic.\n  # For example:\n  # >>> echo \"1/3\"\
    \ | bc -l\n  # 0.333333333333333333333333333333333333333333333333333333333333\n\
    \  # >>> echo \"1/3\" | bc -l | awk '{printf(\"%.0f\\n\", $1)}'\n  # 0\n  # >>>\
    \ echo \"1/3\" | bc -l | awk '{printf(\"%.0f\\n\", $1+1)}'\n  # 1\n  # >>> echo\
    \ \"1/3\" | bc -l | awk '{printf(\"%.0f\\n\", $1+2)}'\n  # 1\n  # >>> echo \"\
    1/3\" | bc -l | awk '{printf(\"%.0f\\n\", $1+3)}'\n  # 1\n  # >>> echo \"1/3\"\
    \ | bc -l | awk '{printf(\"%.0f\\n\", $1+4)}'\n  # 2\n  # >>> echo \"1/3\" | bc\
    \ -l | awk '{printf(\"%.0f\\n\", $1+5)}'\n  # 2\n  # >>> echo \"1/3\" | bc -l\
    \ | awk '{printf(\"%.0f\\n\", $1+6)}'\n  # 2\n  # >>> echo \"1/3\" | bc -l | awk\
    \ '{printf(\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn61gda5o.sh: line 62: syntax error near unexpected token `}''

    /tmp/tmpn61gda5o.sh: line 62: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local res=$(echo \"$1/$2\" | bc\
    \ -l)\n    if [[ $res -eq $2 ]]; then\n        echo true\n        return\n   \
    \ fi\n    is_simple_power $res $2\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnf3qjhv8.sh: line 35: [[: 8.00000000000000000000: syntax error:
    invalid arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 22: [[: 8.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 26: [[: 8.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 30: [[: 8.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 35: [[: 4.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 22: [[: 4.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 26: [[: 4.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 30: [[: 4.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 35: [[: 2.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 22: [[: 2.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 26: [[: 2.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 30: [[: 2.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 35: [[: 1.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 22: [[: 1.00000000000000000000: syntax error: invalid
    arithmetic operator (error token is ".00000000000000000000")

    /tmp/tmpnf3qjhv8.sh: line 26: [[: 1.00000000000000000000: syntax error: in'
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $(bc <<<\
    \ \"scale=0; $2 ^ ($(bc <<< \"scale=0; l($1)/l($2)\"))\") ]; then\n    echo true\n\
    \  else\n    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'Runtime error (func=(main), adr=10): Function l not defined.

    (standard_in) 1: syntax error

    /tmp/tmpyrqim26u.sh: line 22: [: 16: unary operator expected

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ]\
    \ || [ $2 -eq 0 ]; then\n        echo \"false\"\n        return\n    fi\n    if\
    \ [ $1 -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n    if [\
    \ $1 -eq $2 ]; then\n        echo \"true\"\n        return\n    fi\n    if [ $2\
    \ -eq 1 ]; then\n        echo \"false\"\n        return\n    fi\n    if [ $1 -eq\
    \ $(($2**2)) ]; then\n        echo \"true\"\n        return\n    fi\n    if [\
    \ $1 -eq $(($2**3)) ]; then\n        echo \"true\"\n        return\n    fi\n \
    \   if [ $1 -eq $(($2**4)) ]; then\n        echo \"true\"\n        return\n  \
    \  fi\n    if [ $1 -eq $(($2**5)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**6)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**7)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**8)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**9)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**10)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**11)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**12)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**13)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**14)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**15)) ]; then\n        echo \"true\"\n        return\n\
    \    fi\n    if [ $1 -eq $(($2**16)) ]; then\n        echo\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp98jwhyie.sh: line 96: syntax error near unexpected token `}''

    /tmp/tmp98jwhyie.sh: line 96: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq $2**${1//$2/}\
    \ ]]; then\n        echo true\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n  \
    \          is_simple_power $(( $1 / $2 )) $2\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2)) ]; then\n        echo\
    \ \"true\"\n    elif [ $1 -eq $(($2*$2*$2)) ]; then\n        echo \"true\"\n \
    \   elif [ $1 -eq $(($2*$2*$2*$2)) ]; then\n        echo \"true\"\n    elif [\
    \ $1 -eq $(($2*$2*$2*$2*$2)) ]; then\n        echo \"true\"\n    elif [ $1 -eq\
    \ $(($2*$2*$2*$2*$2*$2)) ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -eq $(($2*$2*$2*$2*$2*$2*$2*$2*$2*$2*$2*$2*$2))\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpme7vtsjv.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmpme7vtsjv.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $1%$2 -eq 0 ]]; then\n \
    \           is_simple_power $(($1/$2)) $2\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        is_simple_power $(( $1 / $2 ))\
    \ $2\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -lt $2 ]; then\n    echo \"false\"\n  else\n    is_simple_power $(($1/$2)) $2\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1 / $2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    n=$1\n    x=$2\n\
    \    if [ $n -eq 1 ]; then\n        echo \"false\"\n    elif [ $n -eq $x ]; then\n\
    \        echo \"true\"\n    elif [ $n -gt $x ]; then\n        echo \"false\"\n\
    \    else\n        is_simple_power $(($n * $n)) $x\n    fi\n}\n\ncandidate() {\n\
    \    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 0 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ $2 -eq 0 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ $2 -eq 1 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1\
    \ -eq $2 ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 *\
    \ $2 )) ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 * $2\
    \ * $2 )) ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 *\
    \ $2 * $2 * $2 )) ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq\
    \ $(( $2 * $2 * $2 * $2 * $2 )) ]; then\n    echo \"true\"\n    return\n  fi\n\
    \  if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n    echo \"true\"\n\
    \    return\n  fi\n  if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n\
    \    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2\
    \ * $2 * $2 * $2 )) ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq\
    \ $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 )) ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ $1 -eq $(( $2 * $2 * $2 * $2 * $2 * $2 * $2 * $2 *\
    \ $2 * $2 )) ]; then\n    echo \"true\"\n    return\n  fi\n  if [ $1 -eq $(( $2\
    \ * $2 * $2\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp871tcmr5.sh: line 78: unexpected EOF while looking for matching
    `)''

    /tmp/tmp871tcmr5.sh: line 100: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"scale=0; $x/$n\" | bc)\n  local result2=$(echo\
    \ \"scale=0; $result/$n\" | bc)\n  if [ \"$result\" -eq \"$result2\" ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq $2 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -gt $2 ]; then\n        if [ $((\
    \ $1 % $2 )) -eq 0 ]; then\n            is_simple_power $(( $1 / $2 )) $2\n  \
    \      else\n            echo \"false\"\n        fi\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  else\n    if [ $1 -eq $2 ]; then\n      echo true\n    else\n\
    \      if [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n   \
    \       is_simple_power $(( $1 / $2 )) $2\n        else\n          echo false\n\
    \        fi\n      else\n        echo false\n      fi\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local x=$1\n    local n=$2\n   \
    \ local result=$(echo \"$x/$n\" | bc)\n    if [[ $result -eq $n ]]; then\n   \
    \     echo true\n        return\n    fi\n    is_simple_power $result $n\n}\n\n\
    candidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $(($1 % $2)) -eq 0 ]; then\n       \
    \ is_simple_power $(($1 / $2)) $2\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"scale=0; $x/$n\" | bc)\n    if [ \"$result\"\
    \ == \"$n\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n\
    \    local int_result=$(echo \"$result\" | awk '{print int($1)}')\n    if [ \"\
    $result\" = \"$int_result\" ]; then\n        echo true\n    else\n        echo\
    \ false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq 1 ]\n  then\n    echo false\n  elif [\
    \ $1 -lt $2 ]\n  then\n    echo false\n  elif [ $1 -gt $2 ]\n  then\n    is_simple_power\
    \ $(( $1 / $2 )) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    is_simple_power $(( $1 / $2 )) $2\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(bc <<< \"$x == $n^(($x/$n))\")\n    if [[ $result\
    \ -eq 1 ]]; then\n        echo true\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n    elif [[ $1 -eq $2 ]]; then\n        echo true\n\
    \    elif [[ $1 -gt $2 ]]; then\n        if [[ $1 -eq $(( $2 * $2 )) ]]; then\n\
    \            echo true\n        else\n            echo false\n        fi\n   \
    \ else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo \"true\"\n  elif [ $1 -eq 1 ]\n  then\n    echo \"false\"\n\
    \  elif [ $1 -gt $2 ]\n  then\n    is_simple_power $(($1 / $2)) $2\n  else\n \
    \   echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: -1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x / $n\" | bc)\n  if [ \"$result\" -eq \"$result\"\
    \ ] 2>/dev/null; then\n    if [ \"$result\" -eq \"1\" ]; then\n      echo \"true\"\
    \n    else\n      is_simple_power \"$result\" \"$n\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=49 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=47 encoding='utf-8'>
  timestamp: 1660019904
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo \"true\"\n  elif [[ $1 -eq $2 ]]; then\n    echo \"true\"\n \
    \ elif [[ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1/$2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1 / $2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(($2**2)) ]]; then\n    echo true\n  elif [[ $1 -eq $(($2**3)) ]]; then\n\
    \    echo true\n  elif [[ $1 -eq $(($2**4)) ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(($2**5)) ]]; then\n    echo true\n  elif [[ $1 -eq $(($2**6)) ]]; then\n\
    \    echo true\n  elif [[ $1 -eq $(($2**7)) ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(($2**8)) ]]; then\n    echo true\n  elif [[ $1 -eq $(($2**9)) ]]; then\n\
    \    echo true\n  elif [[ $1 -eq $(($2**10)) ]]; then\n    echo true\n  else\n\
    \    echo false\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n  if\
    \ [[ $result =~ ^[0-9]+$ ]]; then\n    echo true\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo \"true\"\n  elif [ $1 -eq $2 ]; then\n    echo \"true\"\n  elif [ $1\
    \ -gt $2 ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n     \
    \   is_simple_power $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -lt $2 ]; then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -eq $(($2**2)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**3))\
    \ ]; then\n        echo true\n    elif [ $1 -eq $(($2**4)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**5)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**6)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**7)) ]; then\n\
    \        echo true\n    elif [ $1 -eq $(($2**8)) ]; then\n        echo true\n\
    \    elif [ $1 -eq $(($2**9)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**10))\
    \ ]; then\n        echo true\n    elif [ $1 -eq $(($2**11)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**12)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**13)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**14)) ];\
    \ then\n        echo true\n    elif [ $1 -eq $(($2**15)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**16)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**17)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**18)) ];\
    \ then\n        echo true\n    elif [ $1 -eq $(($2**19)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**20)) ]; then\n        echo true\n    elif [ $1\
    \ -eq $(($2**21)) ]; then\n        echo true\n    elif [ $1 -eq $(($2**22)) ];\
    \ then\n        echo true\n    elif [ $1 -eq $(($2**23)) ]; then\n        echo\
    \ true\n    elif [ $1 -eq $(($2**24)) ]; then\n\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6l2paht0.sh: line 72: syntax error near unexpected token `}''

    /tmp/tmp6l2paht0.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(( $1/$2 )) $2\n    else\n        echo false\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    # Write your code\
    \ here\n    if [ $1 -eq 1 ]; then\n        echo \"true\"\n    elif [ $1 -eq $2\
    \ ]; then\n        echo \"true\"\n    elif [ $1 -gt $2 ]; then\n        if [ $((\
    \ $1 % $2 )) -eq 0 ]; then\n            is_simple_power $(( $1 / $2 )) $2\n  \
    \      else\n            echo \"false\"\n        fi\n    else\n        echo \"\
    false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 0 ]];\
    \ then\n    echo \"false\"\n    return\n  fi\n  if [[ $1 -eq 1 ]]; then\n    echo\
    \ \"true\"\n    return\n  fi\n  if [[ $2 -eq 0 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ $2 -eq 1 ]]; then\n    echo \"true\"\n    return\n\
    \  fi\n  if [[ $1 -eq $2 ]]; then\n    echo \"true\"\n    return\n  fi\n  if [[\
    \ $1 -gt $2 ]]; then\n    if [[ $1%$2 -eq 0 ]]; then\n      is_simple_power $((\
    \ $1/$2 )) $2\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n    \
    \        is_simple_power $(($1 / $2)) $2\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local result_int=$(echo \"\
    $result\" | awk '{print int($0)}')\n  local result_float=$(echo \"$result\" |\
    \ awk '{print $0-int($0)}')\n  if [ $result_float -eq 0 ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgu9z3928.sh: line 27: [: 0.875: integer expression expected

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo \"true\"\n    elif [ $1 -eq $2 ]\n    then\n        echo\
    \ \"true\"\n    elif [ $1 -gt $2 ]\n    then\n        local result=$(($1/$2))\n\
    \        is_simple_power $result $2\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n   \
    \     is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | cut -d '.' -f 1)\n  local float_result=$(echo \"$result\" | cut -d\
    \ '.' -f 2)\n  if [[ $float_result == 0 ]]; then\n    echo \"$n^$int_result\"\
    \ | bc -l | grep -q \"$x\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ];\
    \ then\n    echo \"true\"\n  elif [ $1 -eq $(( $2 ** 2 )) ]; then\n    echo \"\
    true\"\n  elif [ $1 -eq $(( $2 ** 3 )) ]; then\n    echo \"true\"\n  elif [ $1\
    \ -eq $(( $2 ** 4 )) ]; then\n    echo \"true\"\n  elif [ $1 -eq $(( $2 ** 5 ))\
    \ ]; then\n    echo \"true\"\n  elif [ $1 -eq $(( $2 ** 6 )) ]; then\n    echo\
    \ \"true\"\n  elif [ $1 -eq $(( $2 ** 7 )) ]; then\n    echo \"true\"\n  elif\
    \ [ $1 -eq $(( $2 ** 8 )) ]; then\n    echo \"true\"\n  elif [ $1 -eq $(( $2 **\
    \ 9 )) ]; then\n    echo \"true\"\n  elif [ $1 -eq $(( $2 ** 10 )) ]; then\n \
    \   echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n  local\
    \ int_result=$(echo \"$result\" | awk '{print int($1)}')\n  if [ \"$result\" ==\
    \ \"$int_result\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -eq 0 ];\
    \ then\n    echo false\n  elif [ $1 -lt $2 ]; then\n    echo false\n  else\n \
    \   is_simple_power $(($1/$2)) $2\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ \"$1\" -eq\
    \ \"$2\" ]; then\n        echo true\n    elif [ \"$1\" -eq \"1\" ]; then\n   \
    \     echo false\n    elif [ \"$1\" -eq \"0\" ]; then\n        echo false\n  \
    \  elif [ \"$1\" -lt \"0\" ]; then\n        echo false\n    elif [ \"$2\" -lt\
    \ \"0\" ]; then\n        echo false\n    elif [ \"$1\" -eq \"$(($2**$(echo \"\
    $1/$2\" | bc)))\" ]; then\n        echo true\n    else\n        echo false\n \
    \   fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -lt $2 ]\n    then\n        echo false\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -lt $2 ]; then\n        echo \"false\"\n    else\n        is_simple_power\
    \ $(($1/$2)) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 2
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq $2 ]\n\
    \  then\n    echo true\n  elif [ $1 -eq 1 ]\n  then\n    echo false\n  elif [\
    \ $1 -eq 0 ]\n  then\n    echo false\n  elif [ $1 -eq $(( $2 ** 2 )) ]\n  then\n\
    \    echo true\n  elif [ $1 -eq $(( $2 ** 3 )) ]\n  then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 4 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 **\
    \ 5 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 ** 6 )) ]\n  then\n  \
    \  echo true\n  elif [ $1 -eq $(( $2 ** 7 )) ]\n  then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 8 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 **\
    \ 9 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 ** 10 )) ]\n  then\n \
    \   echo true\n  elif [ $1 -eq $(( $2 ** 11 )) ]\n  then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 12 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 **\
    \ 13 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 ** 14 )) ]\n  then\n\
    \    echo true\n  elif [ $1 -eq $(( $2 ** 15 )) ]\n  then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 16 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 **\
    \ 17 )) ]\n  then\n    echo true\n  elif [ $1 -eq $(( $2 ** 18 )) ]\n  then\n\
    \    echo true\n  elif [ $1 -eq $(( $2 ** 19 )) ]\n  then\n    echo true\n  elif\
    \ [ $1 -eq $(( $2 ** 20 )) ]\n  then\n    echo true\n \n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpf4i9hsl3.sh: line 89: syntax error near unexpected token `}''

    /tmp/tmpf4i9hsl3.sh: line 89: `}''

    '
  stdout: ''
  timestamp: 1660019900
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(bc <<< \"$x == $n ^ (l($x)/l($n))\")\n  if [[ $result\
    \ -eq 1 ]]; then\n    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'Runtime error (func=(main), adr=13): Function l not defined.

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n\
    \    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -eq $(( $2 * $2 )) ]]; then\n    echo true\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(($1/$2)) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n  \
    \          is_simple_power $(( $1 / $2 )) $2\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    if [ $(( $1 % $2 )) -eq 0 ]; then\n      is_simple_power $(( $1\
    \ / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(( $1 % $2 )) -eq 0 ]\n     \
    \   then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n      \
    \      echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1%$2 -eq 0 ]]; then\n   \
    \     is_simple_power $(($1/$2)) $2\n    else\n        echo false\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -eq 0 ]]; then\n    \
    \    echo false\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n      \
    \  echo false\n        return\n    fi\n    if [[ $1 -eq $(($2 * $2)) ]]; then\n\
    \        echo true\n        return\n    fi\n    is_simple_power $(($1 / $2)) $2\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo \"true\"\n    elif [[ $1 -eq $2 ]]; then\n        echo \"\
    true\"\n    elif [[ $1 -gt $2 ]]; then\n        if [[ $(( $1 % $2 )) -eq 0 ]];\
    \ then\n            is_simple_power $(( $1 / $2 )) $2\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [[ $1 -eq 1 ]];\
    \ then\n    echo true\n  elif [[ $1 -eq $2 ]]; then\n    echo true\n  elif [[\
    \ $1 -gt $2 ]]; then\n    if [[ $(( $1 % $2 )) -eq 0 ]]; then\n      is_simple_power\
    \ $(( $1 / $2 )) $2\n    else\n      echo false\n    fi\n  else\n    echo false\n\
    \  fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ]\n\
    \    then\n        echo true\n    elif [ $1 -eq $2 ]\n    then\n        echo true\n\
    \    elif [ $1 -gt $2 ]\n    then\n        if [ $(($1 % $2)) -eq 0 ]\n       \
    \ then\n            is_simple_power $(($1 / $2)) $2\n        else\n          \
    \  echo false\n        fi\n    else\n        echo false\n    fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print $1**(1/$2)}')\n  if [[ $result\
    \ =~ ^[0-9]+$ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n\
    \    if [[ $result == *.* ]]; then\n        echo \"false\"\n    else\n       \
    \ echo \"true\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 0 ];\
    \ then\n        echo \"false\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n\
    \        echo \"true\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n  \
    \      echo \"false\"\n        return\n    fi\n    if [ $2 -eq 1 ]; then\n   \
    \     echo \"true\"\n        return\n    fi\n    if [ $1 -eq $2 ]; then\n    \
    \    echo \"true\"\n        return\n    fi\n    if [ $1 -lt $2 ]; then\n     \
    \   echo \"false\"\n        return\n    fi\n    if [ $1 -eq $(( $2 * $2 )) ];\
    \ then\n        echo \"true\"\n        return\n    fi\n    if [ $1 -eq $(( $2\
    \ * $2 * $2 )) ]; then\n        echo \"true\"\n        return\n    fi\n    echo\
    \ \"false\"\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\"\
    \ \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"\
    true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(bc <<< \"scale=0; $x/$n\")\n  if [ \"$result\" -eq \"\
    $result\" ] 2>/dev/null; then\n    if [ \"$result\" -eq \"$(bc <<< \"scale=0;\
    \ $result^$n\")\" ]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local res=$(bc <<< \"$1 % $2\")\n\
    \    if [[ $res -eq 0 ]]; then\n        is_simple_power $(bc <<< \"$1 / $2\")\
    \ $2\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x/$n\" | bc -l)\n  local int_result=$(echo \"\
    $result\" | sed 's/\\..*//')\n  local float_result=$(echo \"$result\" | sed 's/^[^.]*\\\
    .//')\n  if [ \"$float_result\" == \"0\" ] && [ \"$x\" == \"$(echo \"$n^$int_result\"\
    \ | bc -l)\" ]; then\n    echo true\n  else\n    echo false\n  fi\n}\n\ncandidate()\
    \ {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\"\
    \ \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[\
    \ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\")\
    \ = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  local x=$1\n  local\
    \ n=$2\n  local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n  local\
    \ int_result=$(echo \"$result\" | awk '{print int($1)}')\n  if [ \"$result\" ==\
    \ \"$int_result\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"\
    16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        if [ $(( $1 % $2 )) -eq 0 ]; then\n    \
    \        is_simple_power $(( $1 / $2 )) $2\n        else\n            echo false\n\
    \        fi\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n     \
    \   is_simple_power $(( $1 / $2 )) $2\n    fi\n}\n\ncandidate() {\n    is_simple_power\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n\
    \    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"\
    2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[\
    \ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") =\
    \ \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -gt $2 ]]; then\n   \
    \     local result=$(is_simple_power $(($1 / $2)) $2)\n        if [[ $result ==\
    \ true ]]; then\n            echo true\n            return\n        fi\n    fi\n\
    \    echo false\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -gt $2\
    \ ]; then\n    is_simple_power $(($1/$2)) $2\n  else\n    echo false\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [[ $1 -eq 1 ]];\
    \ then\n        echo true\n        return\n    fi\n    if [[ $1 -eq $2 ]]; then\n\
    \        echo true\n        return\n    fi\n    if [[ $1 -lt $2 ]]; then\n   \
    \     echo false\n        return\n    fi\n    local x=$1\n    local n=$2\n   \
    \ local res=$(bc <<< \"$x % $n\")\n    if [[ $res -eq 0 ]]; then\n        local\
    \ x=$(bc <<< \"$x / $n\")\n        is_simple_power $x $n\n    else\n        echo\
    \ false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\"\
    \ \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\")\
    \ = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo true\n    elif [ $1 -eq $2 ]; then\n        echo true\n \
    \   elif [ $1 -gt $2 ]; then\n        is_simple_power $(( $1 / $2 )) $2\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n  \
    \  [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[\
    \ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") =\
    \ \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate\
    \ \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019900
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n  if [ $1 -eq 1 ]; then\n\
    \    echo true\n  elif [ $1 -eq $2 ]; then\n    echo true\n  elif [ $1 -lt $2\
    \ ]; then\n    echo false\n  else\n    is_simple_power $(($1/$2)) $2\n  fi\n}\n\
    \ncandidate() {\n    is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n\
    \    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"\
    4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019899
- exit_code: 1
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    local x=$1\n   \
    \ local n=$2\n    local result=$(echo \"$x $n\" | awk '{print log($1)/log($2)}')\n\
    \    local int_result=$(echo \"$result\" | awk '{print int($1)}')\n    if [ \"\
    $result\" == \"$int_result\" ]; then\n        echo \"true\"\n    else\n      \
    \  echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_simple_power \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"16\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"143214\" \"16\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\"\
    ) = \"true\" ]]\n    [[ $(candidate \"9\" \"3\") = \"true\" ]]\n    [[ $(candidate\
    \ \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate \"24\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"128\" \"4\") = \"false\" ]]\n    [[ $(candidate \"12\" \"\
    6\") = \"false\" ]]\n    [[ $(candidate \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"12\") = \"true\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: division by zero attempted

    '
  stdout: ''
  timestamp: 1660019900
- exit_code: 0
  program: "#!/bin/bash\n# Your task is to write a function that returns true if a\
    \ number x is a simple\n# power of n and false in other cases.\n# x is a simple\
    \ power of n if n**int=x\n# For example:\n# >>> $(is_simple_power \"1\" \"4\"\
    )\n# true\n# >>> $(is_simple_power \"2\" \"2\")\n# true\n# >>> $(is_simple_power\
    \ \"8\" \"2\")\n# true\n# >>> $(is_simple_power \"3\" \"2\")\n# false\n# >>> $(is_simple_power\
    \ \"3\" \"1\")\n# false\n# >>> $(is_simple_power \"5\" \"3\")\n# false\n#\n# $1\
    \ is an integer\n# $2 is an integer\nis_simple_power() {\n    if [ $1 -eq 1 ];\
    \ then\n        echo \"true\"\n    elif [ $1 -eq $2 ]; then\n        echo \"true\"\
    \n    elif [ $1 -gt $2 ]; then\n        if [ $(($1 % $2)) -eq 0 ]; then\n    \
    \        is_simple_power $(($1 / $2)) $2\n        else\n            echo \"false\"\
    \n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n \
    \   is_simple_power \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"16\"\
    \ \"2\") = \"true\" ]]\n    [[ $(candidate \"143214\" \"16\") = \"false\" ]]\n\
    \    [[ $(candidate \"4\" \"2\") = \"true\" ]]\n    [[ $(candidate \"9\" \"3\"\
    ) = \"true\" ]]\n    [[ $(candidate \"16\" \"4\") = \"true\" ]]\n    [[ $(candidate\
    \ \"24\" \"2\") = \"false\" ]]\n    [[ $(candidate \"128\" \"4\") = \"false\"\
    \ ]]\n    [[ $(candidate \"12\" \"6\") = \"false\" ]]\n    [[ $(candidate \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"1\" \"12\") = \"true\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019899

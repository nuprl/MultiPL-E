language: sh
name: HumanEval_121_solution
results:
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if [ $((i%2)) -eq 0 ] && [ $((arr[i]%2)) -ne 0 ]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    if [[ $((i % 2)) -eq 0 && $((list[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + list[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  local i=0\n  for element in \"${array[@]}\"\
    ; do\n    if [[ $((i % 2)) -eq 0 && $((element % 2)) -eq 1 ]]; then\n      sum=$((sum\
    \ + element))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if\
    \ [ $((i%2)) -eq 0 ] && [ $((a[i]%2)) -ne 0 ]; then\n      sum=$((sum+a[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local sum=0\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    if ((i%2==0)) && ((arr[i]%2!=0)); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if [[ $((${arr[$i]} % 2)) -eq 1 ]]; then\n      sum=$(($sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a array=($1)\n    local sum=0\n    for ((i=0; i<${#array[@]}; i+=2));\
    \ do\n        if [[ $((${array[$i]} % 2)) -ne 0 ]]; then\n            sum=$(($sum\
    \ + ${array[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n    fi\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphcou_4k5.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for (( i=0; i<${#list[@]}; i+=2 )); do\n\
    \    if [[ ${list[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${list[$i]}))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ \"${arr[$i]}\" =~ ^[0-9]+$ ]]; then\n      if [[ \"${arr[$i]}\" -gt\
    \ 0 ]]; then\n        if [[ \"${arr[$i]}\"%2 -eq 1 ]]; then\n          sum=$((sum+${arr[$i]}))\n\
    \        fi\n      fi\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [ $((i%2)) -eq 0 ] && [ $((arr[i]%2)) -ne 0 ]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqg60pznk.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((list[i] % 2 == 1)); then\n      ((sum += list[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    ((arr[i] % 2)) && ((sum+=arr[i]))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -ne 0 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp17utt_uu.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i+=2)); do\n  \
    \  if [[ ${list[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${list[$i]}))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ \"${arr[$i]}\" -gt 0 ]]; then\n      sum=$((sum + arr[$i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp405r3abq.sh: line 16: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn_75f8na.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${arr[$i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu_b773nk.sh: line 16: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local i=0\n  for n in $1; do\n    if [ $((i % 2)) -eq 0 ] &&\
    \ [ $((n % 2)) -ne 0 ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i+=2)); do\n\
    \    if [[ $((${array[$i]} % 2)) -eq 1 ]]; then\n      sum=$(($sum + ${array[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local i=0\n  for n in $1; do\n    if (( i % 2 == 0 )) && ((\
    \ n % 2 == 1 )); then\n      (( sum += n ))\n    fi\n    (( i++ ))\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local i=0\n  for n in $1; do\n    if (( i % 2 == 0 )) && ((\
    \ n % 2 == 1 )); then\n      (( sum += n ))\n    fi\n    (( i++ ))\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for (( i=0; i<${#arr[@]}; i+=2 ));\
    \ do\n    if [[ $((${arr[$i]} % 2)) -eq 1 ]]; then\n      sum=$((sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnn3x2kag.sh: line 16: 5 8 7 1 % 2: syntax error in expression (error
    token is "8 7 1 % 2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5o9iqbtm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local sum=0\n  local i=0\n  for num in $list; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + num))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [ $((i%2)) -eq 0 ] && [ $((array[i]%2)) -ne 0 ]; then\n      sum=$((sum+array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0 && arr[i]%2!=0)); then\n      ((sum+=arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph2nqkynx.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]}; i+=2)); do\n\
    \    if [[ ${nums[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+nums[$i]))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if (( arr[i] % 2 == 1 )); then\n      (( sum += arr[i] ))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4wnn1esi.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw1swy5i2.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if (( i % 2 == 0 && array[i] % 2 != 0 )); then\n      (( sum += array[i]\
    \ ))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw1swy5i2.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local sum=0\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n\
    \      ((sum += arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((list[i] % 2 == 1)); then\n      sum=$((sum + list[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0)) && ((arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph5s8xcl4.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ $((${arr[$i]} % 2)) -eq 1 ]]; then\n      sum=$(($sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzgprnzpc.sh: line 16: 5 8 7 1 % 2: syntax error in expression (error
    token is "8 7 1 % 2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if (( arr[i] % 2 == 1 )); then\n      (( sum += arr[i] ))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for (( i=0; i<${#list[@]}; i+=2 )); do\n\
    \    if [[ ${list[$i]}%2 -ne 0 ]]; then\n      (( sum+=${list[$i]} ))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [[ $((i%2)) -eq 0 && $((array[i]%2)) -ne 0 ]]; then\n      ((sum+=array[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for num in $input; do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + num))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Your solution here\n  echo \"$1\" | awk '{for(i=1;i<=NF;i++) if(i%2==0 &&\
    \ $i%2==1) sum+=$i} END {print sum}'\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local sum=0\n  for ((i=0;\
    \ i<${#arr[@]}; i+=2)); do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a a=($1)\n    local -i sum=0\n    for ((i=0; i<${#a[@]}; i+=2)); do\n\
    \        ((a[i]%2)) && ((sum+=a[i]))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i+=2)); do\n\
    \    if [[ $((${array[$i]} % 2)) -eq 1 ]]; then\n      sum=$(($sum + ${array[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0)) && ((arr[i]%2==1)); then\n      ((sum+=arr[i]))\n    fi\n \
    \ done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9feycys7.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local sum=0\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    if ((i%2==0)) && ((arr[i]%2==1)); then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for (( i=0; i<${#array[@]}; i++ )); do\n\
    \    if (( i % 2 == 0 )) && (( array[i] % 2 != 0 )); then\n      (( sum += array[i]\
    \ ))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 != 0)); then\n      ((sum += array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for (( i=0; i<${#arr[@]}; i+=2 )); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      (( sum+=${arr[$i]} ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 != 0)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    if\
    \ [[ ${a[i]}%2 -ne 0 ]]; then\n      sum=$((sum+${a[i]}))\n    fi\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if [ $((i%2)) -eq 0 ] && [ $((arr[i]%2)) -ne 0 ]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for num in $input; do\n    if\
    \ (( i % 2 == 0 && num % 2 == 1 )); then\n      (( sum += num ))\n    fi\n   \
    \ (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if (( arr[i] % 2 == 1 )); then\n      (( sum += arr[i] ))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local i=0\n  for x in $1; do\n    if [ $((i % 2)) -eq 0 ] &&\
    \ [ $((x % 2)) -ne 0 ]; then\n      sum=$((sum + x))\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [ $((i%2)) -eq 0 ] && [ $((array[i]%2)) -ne 0 ]; then\n      sum=$((sum+array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${arr[$i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu_b773nk.sh: line 16: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9e5a7l4e.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if (( $((i%2)) == 0 )) && (( $((arr[i]%2)) == 1 )); then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm6somwin.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp23ny1twt.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Your solution here\n  echo $1 | tr ' ' '\\n' | awk 'NR%2==0 && $1%2==1 {sum+=$1}\
    \ END {print sum}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5o9iqbtm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i+=2)); do\n\
    \    if [[ ${array[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${array[$i]}))\n  \
    \  fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp23ny1twt.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   ((arr[i] % 2 == 1)) && ((sum += arr[i]))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0)) && ((arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph5s8xcl4.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for number in $input; do\n  \
    \  if [ $((i % 2)) -eq 0 ] && [ $((number % 2)) -ne 0 ]; then\n      sum=$((sum\
    \ + number))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local -i sum=0\n  for (( i=0; i<${#arr[@]}; i+=2 ));\
    \ do\n    (( arr[i] % 2 == 1 )) && (( sum += arr[i] ))\n  done\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkf8bicfi.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ku6duvj.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      ((sum+=${arr[$i]}))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpytfmz3um.sh: line 16: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local i=0\n  for num in $1; do\n    if (( i % 2 == 0 )) && ((\
    \ num % 2 != 0 )); then\n      sum=$(( sum + num ))\n    fi\n    i=$(( i + 1 ))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i+=2)); do\n\
    \    if ((list[i] % 2 != 0)); then\n      ((sum+=list[i]))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for (( i=0; i<${#arr[@]}; i+=2 )); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      (( sum+=${arr[$i]} ))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 != 0)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i+=2)); do\n\
    \    if [[ $((${list[$i]} % 2)) -eq 1 ]]; then\n      sum=$(($sum + ${list[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp23ny1twt.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if ((arr[i] % 2 != 0)); then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0 && arr[i]%2!=0)); then\n      ((sum+=arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph2nqkynx.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local sum=0\n  local i=0\n  for num in $list; do\n    if [\
    \ $((i % 2)) -eq 0 ] && [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + num))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i+=2)); do\n\
    \    if ((list[i] % 2 == 1)); then\n      sum=$((sum + list[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  local -i i\n  local -i sum=0\n  arr=($1)\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if ((i%2==0)) && ((arr[i]%2==1)); then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${arr[$i]}))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [[ $((i % 2)) -eq 0 && $((array[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 != 0)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    if ((i%2==0 && arr[i]%2==1)); then\n      ((sum+=arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq738jtlq.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if [[ $((arr[i] % 2)) -eq 1 ]]; then\n      sum=$((sum + arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ku6duvj.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -ne 0 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp17utt_uu.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for num in $input; do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + num))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if (( arr[i] % 2 == 1 )); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaxpxkk40.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5o9iqbtm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$1\" | awk '{\n    for (i = 1; i <= NF; i++) {\n      if (i % 2 == 0\
    \ && $i % 2 == 1) {\n        sum += $i\n      }\n    }\n    print sum\n  }'\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for (( i=0; i<${#array[@]}; i++ )); do\n\
    \    if (( i % 2 == 0 )) && (( array[i] % 2 != 0 )); then\n      (( sum += array[i]\
    \ ))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [ $((i%2)) -eq 0 ] && [ $((arr[i]%2)) -ne 0 ]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqg60pznk.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for ((i=1; i<=$#; i+=2)); do\n    if [ $(( $i % 2 )) -eq 0 ];\
    \ then\n      sum=$(( sum + ${!i} ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    if\
    \ ((a[i] % 2)); then\n      ((sum+=a[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw1swy5i2.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5o9iqbtm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for num in $input; do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + num))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps_yypygp.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for num in $input; do\n    if\
    \ (( i % 2 == 0 )) && (( num % 2 == 1 )); then\n      (( sum += num ))\n    fi\n\
    \    (( i++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${arr[$i]}))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i+=2)); do\n\
    \    if [[ ${list[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${list[$i]}))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local -i sum=0\n  for ((i=0; i<${#list[@]}; i+=2)); do\n\
    \    ((list[i] % 2 == 1)) && ((sum += list[i]))\n  done\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((list[i] % 2 == 1)); then\n      ((sum += list[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [ $((i % 2)) -eq 0 ] && [ $((array[i] % 2)) -ne 0 ]; then\n      sum=$((sum\
    \ + array[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ku6duvj.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=()\n  local -i sum=0\n  IFS=' ' read -r -a arr <<< \"$1\"\n  for\
    \ (( i=0; i<${#arr[@]}; i+=2 )); do\n    if (( arr[i] % 2 != 0 )); then\n    \
    \  (( sum += arr[i] ))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [[ $((i%2)) -eq 0 && $((array[i]%2)) -ne 0 ]]; then\n      sum=$((sum+array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    if\
    \ ((a[i]%2)); then\n      ((sum+=a[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if [[ $((i % 2)) -eq 0 && $((arr[i] % 2)) -ne 0 ]]; then\n      sum=$((sum\
    \ + arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp23ny1twt.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7ku6duvj.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 == 1)); then\n      ((sum += array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i+=2));\
    \ do\n    if ((arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo2fo21kz.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      ((sum+=${arr[$i]}))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpytfmz3um.sh: line 16: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0)) && ((arr[i]%2==1)); then\n      ((sum+=arr[i]))\n    fi\n \
    \ done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 != 0)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n  local i=0\n  for num in $input; do\n    if\
    \ [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + num))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n    fi\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphcou_4k5.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#array[@]}; i+=2));\
    \ do\n    if [[ $((array[i] % 2)) -eq 1 ]]; then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu8bkbugg.sh: line 16: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  for (( i=0; i<${#1}; i++ )); do\n    if (( i % 2 == 0 )) &&\
    \ (( ${1:i:1} % 2 != 0 )); then\n      sum=$(( sum + ${1:i:1} ))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn_75f8na.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local sum=0\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -ne 0 ]];\
    \ then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9__r48cy.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if\
    \ ((i%2==0 && a[i]%2==1)); then\n      ((sum+=a[i]))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if [ $((i%2)) -eq 0 ] && [ $((array[i]%2)) -ne 0 ]; then\n      sum=$((sum+array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i%2==0)) && ((arr[i]%2==1)); then\n      sum=$((sum+arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph5s8xcl4.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n \
    \   if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv_b7g51n.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((array[i] % 2 == 1)); then\n      ((sum += array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if (( arr[i] % 2 == 1 )); then\n      (( sum += arr[i] ))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4wnn1esi.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    ((i%2==0))\
    \ && ((a[i]%2==1)) && ((sum+=a[i]))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5o9iqbtm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if [[ $((i%2)) -eq 0 && $((arr[i]%2)) -ne 0 ]]; then\n      sum=$((sum+arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    ((a[i]%2==1))\
    \ && ((sum+=a[i]))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if (( arr[i] % 2 != 0 )); then\n      (( sum += arr[i] ))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5ek894pd.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5o9iqbtm.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array\n  IFS=' ' read -r -a array <<< \"$1\"\n  local sum=0\n  for\
    \ ((i=0; i<${#array[@]}; i++)); do\n    if ((i % 2 == 0 && array[i] % 2 == 1));\
    \ then\n      ((sum += array[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array\n  array=($1)\n  local sum=0\n  for ((i=0; i<${#array[@]}; i++));\
    \ do\n    if ((i % 2 == 0 && array[i] % 2 == 1)); then\n      sum=$((sum + array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0)) && ((arr[i] % 2 != 0)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if [[ ${arr[$i]}%2 -ne 0 ]]; then\n      sum=$((sum+${arr[$i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu_b773nk.sh: line 16: [[: 5 8 7 1%2: syntax error in expression
    (error token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((arr[i] % 2 == 1)); then\n      sum=$((sum + arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb6n5yq70.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  local i=0\n  for n in \"${arr[@]}\"\
    ; do\n    if ((i % 2 == 0)) && ((n % 2 == 1)); then\n      ((sum += n))\n    fi\n\
    \    ((i++))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj7epbp16.sh: line 17: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i++)); do\n  \
    \  if ((i % 2 == 0 && arr[i] % 2 == 1)); then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  local i=0\n  for n in $1; do\n    if [ $((i % 2)) -eq 0 ] &&\
    \ [ $((n % 2)) -ne 0 ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a list=($1)\n  local sum=0\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    if [[ $((i%2)) -eq 0 && $((list[i]%2)) -ne 0 ]]; then\n      sum=$((sum+list[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a nums=($1)\n  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n\
    \    if ((i % 2 == 0)) && ((nums[i] % 2 == 1)); then\n      sum=$((sum + nums[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a a=($1)\n  local sum=0\n  for ((i=0; i<${#a[@]}; i+=2)); do\n    if\
    \ ((a[i] % 2)); then\n      ((sum+=a[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Write your solution here\n  echo $1 | tr ' ' '\\n' | awk 'NR%2==0' | awk\
    \ '$1%2==1' | paste -sd+ | bc\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array\n  IFS=' ' read -r -a array <<< \"$1\"\n  local sum=0\n  for\
    \ ((i=0; i<${#array[@]}; i+=2)); do\n    if [[ ${array[i]}%2 -ne 0 ]]; then\n\
    \      sum=$((sum+array[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local sum=0\n  for (( i=0; i<${#arr[@]}; i+=2 )); do\n\
    \    if (( arr[i] % 2 != 0 )); then\n      sum=$(( sum + arr[i] ))\n    fi\n \
    \ done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=($1)\n  local -i sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    if ((arr[i]%2)); then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a array=($1)\n  local -i sum=0\n  local -i i=0\n  for i in \"${!array[@]}\"\
    ; do\n    if ((i % 2 == 0)) && ((array[i] % 2 != 0)); then\n      ((sum += array[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018243
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<${#arr[@]}; i+=2)); do\n\
    \    ((arr[i] % 2)) && ((sum+=arr[i]))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu6_mdzhv.sh: line 16: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660018243

name: HumanEval_136_largest_smallest_integers
language: sh
prompt: "#!/bin/bash\n# Create a function that returns a tuple (a, b), where 'a' is\n\
  # the largest of negative integers, and 'b' is the smallest\n# of positive integers\
  \ in a list.\n# If there is no negative or positive integers, return them as None.\n\
  # Examples:\n# >>> $(largest_smallest_integers \"2 4 1 3 5 7\")\n# ['\"None\"',\
  \ '\"1\"']\n# >>> $(largest_smallest_integers \"\")\n# ['\"None\"', '\"None\"']\n\
  # >>> $(largest_smallest_integers \"0\")\n# ['\"None\"', '\"None\"']\n#\n# $1 is\
  \ a space-separated list\nlargest_smallest_integers() {\n"
tests: "}\n\ncandidate() {\n    largest_smallest_integers \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"2 4 1 3 5 7\") = \"None 1\" ]]\n    [[ $(candidate \"\
  2 4 1 3 5 7 0\") = \"None 1\" ]]\n    [[ $(candidate \"1 3 2 4 5 6 -2\") = \"-2\
  \ 1\" ]]\n    [[ $(candidate \"4 5 3 6 2 7 -7\") = \"-7 2\" ]]\n    [[ $(candidate\
  \ \"7 3 8 4 9 2 5 -9\") = \"-9 2\" ]]\n    [[ $(candidate \"\") = \"None None\"\
  \ ]]\n    [[ $(candidate \"0\") = \"None None\" ]]\n    [[ $(candidate \"-1 -3 -5\
  \ -6\") = \"-1 None\" ]]\n    [[ $(candidate \"-1 -3 -5 -6 0\") = \"-1 None\" ]]\n\
  \    [[ $(candidate \"-6 -4 -4 -3 1\") = \"-3 1\" ]]\n    [[ $(candidate \"-6 -4\
  \ -4 -3 -100 1\") = \"-3 1\" ]]\n}\n\nrun_test"
completions: ["  local -a array=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n  local -i len=${#array[@]}\n  local -i is_negative=0\n  local\
    \ -i is_positive=0\n  local -i is_zero=0\n  local -i is_non_zero=0\n  local -i\
    \ is_non_positive=0\n  local -i is_non_negative=0\n  local -i is_positive_found=0\n\
    \  local -i is_negative_found=0\n  local -i is_zero_found=0\n  local -i is_non_zero_found=0\n\
    \  local -i is_non_positive_found=0\n  local -i is_non_negative_found=0\n  local\
    \ -i is_positive_not_found=0\n  local -i is_negative_not_found=0\n  local -i is_zero_not_found=0\n\
    \  local -i is_non_zero_not_found=0\n  local -i is_non_positive_not_found=0\n\
    \  local -i is_non_negative_not_found=0\n  local -i is_positive_not_found_yet=0\n\
    \  local -i is_negative_not_found_yet=0\n  local -i is_zero_not_found_yet=0\n\
    \  local -i is_non_zero_not_found_yet=0\n  local -i is_non_positive_not_found_yet=0\n\
    \  local -i is_non_negative_not_found_yet=0\n  local -i is_positive_found_yet=0\n\
    \  local -i is_negative_found_yet=0\n  local -i is_zero_found_yet=0\n  local -i\
    \ is_non_zero_found_yet=0\n  local -i is_non_positive_found_yet=0\n  local -i\
    \ is_non_negative_found_yet=0\n  local -i is_positive_not_found_yet=0\n  local\
    \ -i is_negative_not_found_yet=0\n  local", "    # Write your code here\n    #\
    \ You can use the following command to return a tuple:\n    # echo \"[\\\"$a\\\
    \", \\\"$b\\\"]\"\n    # where 'a' and 'b' are your results\n    #\n    # Hint:\n\
    \    # You can use the following command to get the absolute value of a number:\n\
    \    # abs_value=$(echo \"$number\" | awk '{print ($0 < 0) ? -$0 : $0}')\n   \
    \ #\n    # Hint:\n    # You can use the following command to sort a list:\n  \
    \  # sorted_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n \
    \   #\n    # Hint:\n    # You can use the following command to get the last element\
    \ of a list:\n    # last_element=$(echo \"$list\" | awk '{print $NF}')\n    #\n\
    \    # Hint:\n    # You can use the following command to get the first element\
    \ of a list:\n    # first_element=$(echo \"$list\" | awk '{print $1}')\n    #\n\
    \    # Hint:\n    # You can use the following command to get the length of a list:\n\
    \    # length=$(echo \"$list\" | wc -w)\n    #\n    # Hint:\n    # You can use\
    \ the following command to check if a number is negative:\n    # if [ $(echo \"\
    $number < 0\" | bc) -eq 1 ]; then\n    #     echo \"negative\"\n    # fi\n   \
    \ #\n    # Hint:\n    # You can use the following command to check if a number\
    \ is positive:\n    # if [ $(echo \"$number > 0\" | bc) -eq 1 ]; then\n    # \
    \    echo \"positive\"\n    # fi\n    #\n    # Hint:\n    # You can use the following\
    \ command to check if a number is zero:\n    # if [ $(echo \"$number == 0\" |\
    \ bc) -eq 1 ]; then\n    #     echo \"zero\"\n    # fi\n    #\n    # Hint:\n \
    \   # You can use the following command to check if a number is not zero:\n  \
    \  # if [ $(echo", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a a=($1)\n    local max_neg=0\n    local min_pos=0\n    local\
    \ i=0\n    local len=${#a[@]}\n    local max_neg_found=false\n    local min_pos_found=false\n\
    \    while [ $i -lt $len ]; do\n        if [ ${a[$i]} -lt 0 ]; then\n        \
    \    if [ $max_neg_found == false ]; then\n                max_neg=${a[$i]}\n\
    \                max_neg_found=true\n            elif [ ${a[$i]} -gt $max_neg\
    \ ]; then\n                max_neg=${a[$i]}\n            fi\n        elif [ ${a[$i]}\
    \ -gt 0 ]; then\n            if [ $min_pos_found == false ]; then\n          \
    \      min_pos=${a[$i]}\n                min_pos_found=true\n            elif\
    \ [ ${a[$i]} -lt $min_pos ]; then\n                min_pos=${a[$i]}\n        \
    \    fi\n        fi\n        i=$((i+1))\n    done\n    if [ $max_neg_found ==\
    \ false ]; then\n        max_neg=\"None\"\n    fi\n    if [ $min_pos_found ==\
    \ false ]; then\n        min_pos=\"None\"\n    fi\n    echo \"[\\\"$max_neg\\\"\
    , \\\"$min_pos\\\"]\"", "  local list=$1\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  local number\n  for number in $list; do\n    if [[\
    \ $number -lt 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $number\
    \ -gt $largest_negative ]]; then\n        largest_negative=$number\n      fi\n\
    \    elif [[ $number -gt 0 ]]; then\n      if [[ $smallest_positive == None ]]\
    \ || [[ $number -lt $smallest_positive ]]; then\n        smallest_positive=$number\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local largest_negative smallest_positive\n  local -a negative_integers\
    \ positive_integers\n  local -a integers=($1)\n  for integer in \"${integers[@]}\"\
    ; do\n    if [[ $integer -lt 0 ]]; then\n      negative_integers+=($integer)\n\
    \    elif [[ $integer -gt 0 ]]; then\n      positive_integers+=($integer)\n  \
    \  fi\n  done\n  if [[ ${#negative_integers[@]} -gt 0 ]]; then\n    largest_negative=$(printf\
    \ '%s\\n' \"${negative_integers[@]}\" | sort -nr | head -n1)\n  else\n    largest_negative='None'\n\
    \  fi\n  if [[ ${#positive_integers[@]} -gt 0 ]]; then\n    smallest_positive=$(printf\
    \ '%s\\n' \"${positive_integers[@]}\" | sort -n | head -n1)\n  else\n    smallest_positive='None'\n\
    \  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", " \
    \ local -a a=($1)\n  local -i n=${#a[@]}\n  local -i i\n  local -i max_neg=0\n\
    \  local -i min_pos=0\n  local -i is_neg=0\n  local -i is_pos=0\n  local -i val\n\
    \n  for ((i=0; i<n; i++)); do\n    val=${a[i]}\n    if [[ $val -lt 0 ]]; then\n\
    \      is_neg=1\n      if [[ $val -gt $max_neg ]]; then\n        max_neg=$val\n\
    \      fi\n    elif [[ $val -gt 0 ]]; then\n      is_pos=1\n      if [[ $val -lt\
    \ $min_pos ]]; then\n        min_pos=$val\n      fi\n    fi\n  done\n\n  if [[\
    \ $is_neg -eq 0 ]]; then\n    max_neg=None\n  fi\n  if [[ $is_pos -eq 0 ]]; then\n\
    \    min_pos=None\n  fi\n\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", " \
    \   local -a list=($1)\n    local -a positive\n    local -a negative\n    local\
    \ -a result\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negative+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive+=($i)\n\
    \        fi\n    done\n    if [[ ${#negative[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${negative[@]}\" | sort -nr |\
    \ head -n 1))\n    fi\n    if [[ ${#positive[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${positive[@]}\" | sort -n |\
    \ head -n 1))\n    fi\n    echo \"${result[@]}\"", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [[ $i -lt 0 ]];\
    \ then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local list=$1\n  \
    \  local largest_negative=None\n    local smallest_positive=None\n    for i in\
    \ $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local list=($1)\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local a b\n  local -a\
    \ arr=($1)\n  local -a neg=()\n  local -a pos=()\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n\
    \      pos+=(\"$i\")\n    fi\n  done\n  if [[ ${#neg[@]} -gt 0 ]]; then\n    a=$(printf\
    \ \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n1)\n  else\n    a=\"None\"\n  fi\n\
    \  if [[ ${#pos[@]} -gt 0 ]]; then\n    b=$(printf \"%s\\n\" \"${pos[@]}\" | sort\
    \ -n | head -n1)\n  else\n    b=\"None\"\n  fi\n  echo \"[\\\"$a\\\", \\\"$b\\\
    \"]\"", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local p=0\n  local t=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  # Split the string into an array.\n\
    \  arr=($1)\n  # Find the largest negative integer.\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ ${arr[$i]} -lt 0 ]]; then\n      neg[$j]=${arr[$i]}\n \
    \     ((j++))\n    fi\n  done\n  if [[ ${#neg[@]} -gt 0 ]]; then\n    for ((k=0;\
    \ k<${#neg[@]}; k++)); do\n      if [[ ${neg[$k]} -gt $n ]]; then\n        n=${neg[$k]}\n\
    \      fi\n    done\n  else\n    n=\"None\"\n  fi\n  # Find the smallest positive\
    \ integer.\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[$i]} -gt 0 ]];\
    \ then\n      pos[$j]=${arr[$i]}\n      ((j++))\n    fi\n  done\n  if [[ ${#pos[@]}\
    \ -gt 0 ]]; then\n    for ((k=0; k<${#pos[@]}; k++)); do\n      if [[ ${pos[$k]}\
    \ -lt $p ]]; then\n        p=${pos[$k]}\n      fi\n    done\n  else\n    p=\"\
    None\"\n  fi\n  # Return the tuple.\n  res[0]=\"\\\"$n\\\"\"\n  res[1]=\"\\\"\
    $p\\\"\"\n  echo \"${res[@]}\"", "  local -a numbers=($1)\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for number in \"${numbers[@]}\"; do\n    if\
    \ [[ \"$number\" -lt 0 ]]; then\n      if [[ \"$largest_negative\" == None ]]\
    \ || [[ \"$number\" -gt \"$largest_negative\" ]]; then\n        largest_negative=\"\
    $number\"\n      fi\n    elif [[ \"$number\" -gt 0 ]]; then\n      if [[ \"$smallest_positive\"\
    \ == None ]] || [[ \"$number\" -lt \"$smallest_positive\" ]]; then\n        smallest_positive=\"\
    $number\"\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"\
    $smallest_positive\\\"]\"", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negatives\n\
    \  local -a positives\n  local -a result\n  local i\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n      negatives+=(${list[$i]})\n\
    \    elif [[ ${list[$i]} -gt 0 ]]; then\n      positives+=(${list[$i]})\n    fi\n\
    \  done\n  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n\
    \    result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n\
    \  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n \
    \   result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n\
    \  fi\n  echo \"${result[@]}\"", "    local -a list=($1)\n    local -a negative_list=()\n\
    \    local -a positive_list=()\n    local largest_negative\n    local smallest_positive\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n       \
    \ largest_negative=$(echo \"${negative_list[@]}\" | tr ' ' '\\n' | sort -nr |\
    \ head -n 1)\n    else\n        largest_negative=\"None\"\n    fi\n    if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n        smallest_positive=$(echo \"${positive_list[@]}\" | tr\
    \ ' ' '\\n' | sort -n | head -n 1)\n    else\n        smallest_positive=\"None\"\
    \n    fi\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local -a list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n  local -i len=${#list[@]}\n  local -i is_positive=0\n  local\
    \ -i is_negative=0\n  local -i is_zero=0\n  local -i is_first=1\n  local -i is_first_positive=1\n\
    \  local -i is_first_negative=1\n  local -i is_first_zero=1\n  local -i is_first_positive_or_zero=1\n\
    \  local -i is_first_negative_or_zero=1\n  local -i is_first_positive_or_negative=1\n\
    \  local -i is_first_positive_or_negative_or_zero=1\n  local -i is_first_negative_or_positive=1\n\
    \  local -i is_first_negative_or_positive_or_zero=1\n  local -i is_first_zero_or_positive=1\n\
    \  local -i is_first_zero_or_negative=1\n  local -i is_first_zero_or_positive_or_negative=1\n\
    \  local -i is_first_positive_or_zero_or_negative=1\n  local -i is_first_negative_or_zero_or_positive=1\n\
    \  local -i is_first_negative_or_positive_or_zero=1\n  local -i is_first_positive_or_negative_or_zero=1\n\
    \  local -i is_first_zero_or_negative_or_positive=1\n  local -i is_first_zero_or_positive_or_negative=1\n\
    \  local -i is_first_negative_or_zero_or_positive=1\n  local -i is_first_positive_or_zero_or_negative=1\n\
    \  local -i is_first_zero_or_negative_or_positive=1\n  local -i is_first_zero_or_positive_or_negative=1\n\
    \  local -i is_first_negative_or_positive_or_zero=1\n  local -i is_first_", " \
    \   local -a arr=()\n    local -a pos=()\n    local -a neg=()\n    local -a res=()\n\
    \    local i\n    local n\n    local p\n    local l\n    local s\n\n    for i\
    \ in $1; do\n        if [[ $i -lt 0 ]]; then\n            neg+=($i)\n        elif\
    \ [[ $i -gt 0 ]]; then\n            pos+=($i)\n        fi\n    done\n\n    if\
    \ [[ ${#neg[@]} -gt 0 ]]; then\n        n=$(printf \"%s\\n\" \"${neg[@]}\" | sort\
    \ -n | tail -n 1)\n    else\n        n=\"None\"\n    fi\n\n    if [[ ${#pos[@]}\
    \ -gt 0 ]]; then\n        p=$(printf \"%s\\n\" \"${pos[@]}\" | sort -n | head\
    \ -n 1)\n    else\n        p=\"None\"\n    fi\n\n    echo \"[\\\"$n\\\", \\\"\
    $p\\\"]\"", "  local min=0\n  local max=0\n  local first=1\n  for i in $1; do\n\
    \    if [ $i -lt 0 ]; then\n      if [ $first -eq 1 ]; then\n        max=$i\n\
    \        first=0\n      elif [ $i -gt $max ]; then\n        max=$i\n      fi\n\
    \    elif [ $i -gt 0 ]; then\n      if [ $first -eq 1 ]; then\n        min=$i\n\
    \        first=0\n      elif [ $i -lt $min ]; then\n        min=$i\n      fi\n\
    \    fi\n  done\n  if [ $first -eq 1 ]; then\n    echo \"[\\\"None\\\", \\\"None\\\
    \"]\"\n  else\n    echo \"[\\\"$max\\\", \\\"$min\\\"]\"\n  fi", "  local -a negative_integers\n\
    \  local -a positive_integers\n  local -a integers\n  local -a result\n  local\
    \ integer\n  local largest_negative_integer\n  local smallest_positive_integer\n\
    \n  integers=($1)\n  for integer in \"${integers[@]}\"; do\n    if [[ \"$integer\"\
    \ -lt 0 ]]; then\n      negative_integers+=(\"$integer\")\n    elif [[ \"$integer\"\
    \ -gt 0 ]]; then\n      positive_integers+=(\"$integer\")\n    fi\n  done\n\n\
    \  if [[ \"${#negative_integers[@]}\" -gt 0 ]]; then\n    largest_negative_integer=$(printf\
    \ \"%s\\n\" \"${negative_integers[@]}\" | sort -nr | head -n 1)\n  else\n    largest_negative_integer=\"\
    None\"\n  fi\n\n  if [[ \"${#positive_integers[@]}\" -gt 0 ]]; then\n    smallest_positive_integer=$(printf\
    \ \"%s\\n\" \"${positive_integers[@]}\" | sort -n | head -n 1)\n  else\n    smallest_positive_integer=\"\
    None\"\n  fi\n\n  result=(\"$largest_negative_integer\" \"$smallest_positive_integer\"\
    )\n  printf '\"%s\"\\n' \"${result[@]}\"", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [[ $i -lt 0 ]];\
    \ then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negatives=()\n  local -a positives=()\n  for i in \"${list[@]}\";\
    \ do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      positives+=($i)\n    fi\n  done\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  if [[ ${#negatives[@]} -gt 0 ]]; then\n   \
    \ largest_negative=$(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n\
    \ 1)\n  fi\n  if [[ ${#positives[@]} -gt 0 ]]; then\n    smallest_positive=$(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1)\n  fi\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a arr=($1)\n  local -a negs=()\n\
    \  local -a poss=()\n  local -i i\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if\
    \ [[ ${arr[$i]} -lt 0 ]]; then\n      negs+=(${arr[$i]})\n    elif [[ ${arr[$i]}\
    \ -gt 0 ]]; then\n      poss+=(${arr[$i]})\n    fi\n  done\n  if [[ ${#negs[@]}\
    \ -eq 0 ]]; then\n    negs=(None)\n  fi\n  if [[ ${#poss[@]} -eq 0 ]]; then\n\
    \    poss=(None)\n  fi\n  echo \"[\\\"$(printf '%s\\n' \"${negs[@]}\" | sort -nr\
    \ | head -n 1)\\\", \\\"$(printf '%s\\n' \"${poss[@]}\" | sort -n | head -n 1)\\\
    \"]\"", "  local -a list=($1)\n  local -a negative_integers=()\n  local -a positive_integers=()\n\
    \  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \n  for item in \"${list[@]}\"; do\n    if [[ $item -lt 0 ]]; then\n      negative_integers+=($item)\n\
    \    elif [[ $item -gt 0 ]]; then\n      positive_integers+=($item)\n    fi\n\
    \  done\n\n  if [[ ${#negative_integers[@]} -gt 0 ]]; then\n    largest_negative_integer=$(printf\
    \ \"%s\\n\" \"${negative_integers[@]}\" | sort -nr | head -n 1)\n  fi\n\n  if\
    \ [[ ${#positive_integers[@]} -gt 0 ]]; then\n    smallest_positive_integer=$(printf\
    \ \"%s\\n\" \"${positive_integers[@]}\" | sort -n | head -n 1)\n  fi\n\n  echo\
    \ \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\"]\"",
  "    local -a list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local a b\n    a=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$' | sort -n\
    \ | tail -n 1)\n    b=$(echo \"$1\" | tr ' ' '\\n' | grep -v '^[0-9]*$' | sort\
    \ -n | head -n 1)\n    echo \"[\\\"${a:-None}\\\", \\\"${b:-None}\\\"]\"", " \
    \   local list=\"$1\"\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a numbers\n    local -i largest_negative_number=0\n\
    \    local -i smallest_positive_number=0\n    local -i number\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0", "    local -a list=($1)\n    local max_neg=0\n    local\
    \ min_pos=0\n    local -a result=(\"None\" \"None\")\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $max_neg ]]; then\n\
    \                max_neg=$i\n            fi\n        elif [[ $i -gt 0 ]]; then\n\
    \            if [[ $i -lt $min_pos ]]; then\n                min_pos=$i\n    \
    \        fi\n        fi\n    done\n    if [[ $max_neg -lt 0 ]]; then\n       \
    \ result[0]=$max_neg\n    fi\n    if [[ $min_pos -gt 0 ]]; then\n        result[1]=$min_pos\n\
    \    fi\n    echo \"${result[@]}\"", "  local -a list=(${1})\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local largest_negative=None\n  local smallest_positive=None\n\
    \n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n\
    \  if [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=$(printf \"\
    %s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n\
    \  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n\
    \  local c", "  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list=($1)\n    local -a negative\n    local -a positive\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  negative+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n            positive+=(\"\
    $i\")\n        fi\n    done\n    if [[ ${#negative[@]} -eq 0 ]]; then\n      \
    \  negative=(\"None\")\n    else\n        negative=($(printf \"%s\\n\" \"${negative[@]}\"\
    \ | sort -nr | head -n1))\n    fi\n    if [[ ${#positive[@]} -eq 0 ]]; then\n\
    \        positive=(\"None\")\n    else\n        positive=($(printf \"%s\\n\" \"\
    ${positive[@]}\" | sort -n | head -n1))\n    fi\n    echo \"[\\\"${negative[0]}\\\
    \", \\\"${positive[0]}\\\"]\"", "  local -a arr=()\n  local -a neg=()\n  local\
    \ -a pos=()\n  local -a res=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local c", "  local -a a=($1)\n  local -a b=()\n\
    \  local -a c=()\n  for i in ${a[@]}; do\n    if [ $i -lt 0 ]; then\n      b+=($i)\n\
    \    elif [ $i -gt 0 ]; then\n      c+=($i)\n    fi\n  done\n  if [ ${#b[@]} -eq\
    \ 0 ]; then\n    echo '\"None\"'\n  else\n    echo \"\\\"$(printf '%s ' \"${b[@]}\"\
    \ | sort -nr | head -n 1)\\\"\"\n  fi\n  if [ ${#c[@]} -eq 0 ]; then\n    echo\
    \ '\"None\"'\n  else\n    echo \"\\\"$(printf '%s ' \"${c[@]}\" | sort -n | head\
    \ -n 1)\\\"\"\n  fi", "    local -a arr=(\"$@\")\n    local max_neg=0\n    local\
    \ min_pos=0\n    local max_neg_set=0\n    local min_pos_set=0\n    local i=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ if [[ $max_neg_set -eq 0 ]]; then\n                max_neg=$i\n            \
    \    max_neg_set=1\n            elif [[ $i -gt $max_neg ]]; then\n           \
    \     max_neg=$i\n            fi\n        elif [[ $i -gt 0 ]]; then\n        \
    \    if [[ $min_pos_set -eq 0 ]]; then\n                min_pos=$i\n         \
    \       min_pos_set=1\n            elif [[ $i -lt $min_pos ]]; then\n        \
    \        min_pos=$i\n            fi\n        fi\n    done\n    if [[ $max_neg_set\
    \ -eq 0 ]]; then\n        max_neg=\"None\"\n    fi\n    if [[ $min_pos_set -eq\
    \ 0 ]]; then\n        min_pos=\"None\"\n    fi\n    echo \"[\\\"$max_neg\\\",\
    \ \\\"$min_pos\\\"]\"", "  local -a arr=($1)\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local -a negative_list\n    local -a positive_list\n    local largest_negative\n\
    \    local smallest_positive\n    local i\n    for i in \"${list[@]}\"; do\n \
    \       if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n        elif\
    \ [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n    done\n\
    \    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    else\n      \
    \  largest_negative=\"None\"\n    fi\n    if [[ ${#positive_list[@]} -gt 0 ]];\
    \ then\n        smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\" |\
    \ sort -n | head -n 1)\n    else\n        smallest_positive=\"None\"\n    fi\n\
    \    printf \"[\\\"%s\\\", \\\"%s\\\"]\" \"$largest_negative\" \"$smallest_positive\"",
  "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n  local\
    \ i\n  local n\n  local p\n  local x\n  local y\n  if [[ -z \"$1\" ]]; then\n\
    \    echo '[\"None\", \"None\"]'\n    return\n  fi\n  IFS=' ' read -r -a arr <<<\
    \ \"$1\"\n  for i in \"${arr[@]}\"; do\n    if [[ \"$i\" -lt 0 ]]; then\n    \
    \  neg+=(\"$i\")\n    elif [[ \"$i\" -gt 0 ]]; then\n      pos+=(\"$i\")\n   \
    \ fi\n  done\n  if [[ ${#neg[@]} -eq 0 ]]; then\n    n='None'\n  else\n    n=\"\
    $(printf '%s\\n' \"${neg[@]}\" | sort -n | tail -n 1)\"\n  fi\n  if [[ ${#pos[@]}\
    \ -eq 0 ]]; then\n    p='None'\n  else\n    p=\"$(printf '%s\\n' \"${pos[@]}\"\
    \ | sort -n | head -n 1)\"\n  fi\n  res+=(\"$n\")\n  res+=(\"$p\")\n  x=\"$(printf\
    \ '%s' \"${res[@]}\" | sed 's/ /\", \"/g')\"\n  y=\"[\\\"$x\\\"]\"\n  echo \"\
    $y\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n    if [[\
    \ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"%s\\\
    n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n    echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a a=($1)\n  local max_neg=0\n  local\
    \ min_pos=0\n  local i=0\n  local is_neg=0\n  local is_pos=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if [[ ${a[$i]} -lt 0 ]]; then\n      is_neg=1\n      if [[ ${a[$i]}\
    \ -gt $max_neg ]]; then\n        max_neg=${a[$i]}\n      fi\n    elif [[ ${a[$i]}\
    \ -gt 0 ]]; then\n      is_pos=1\n      if [[ $min_pos -eq 0 ]] || [[ ${a[$i]}\
    \ -lt $min_pos ]]; then\n        min_pos=${a[$i]}\n      fi\n    fi\n  done\n\
    \  if [[ $is_neg -eq 0 ]]; then\n    max_neg=\"None\"\n  fi\n  if [[ $is_pos -eq\
    \ 0 ]]; then\n    min_pos=\"None\"\n  fi\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\
    \"]\"", "    local -a list=($1)\n    local -i largest_negative=0\n    local -i\
    \ smallest_positive=0\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i largest_negative_found=0\n    local -i smallest_positive_found=0\n\n    while\
    \ [ $i -lt $len ]; do\n        local -i current_number=${list[$i]}\n        if\
    \ [ $current_number -lt 0 ]; then\n            if [ $current_number -gt $largest_negative\
    \ ]; then\n                largest_negative=$current_number\n                largest_negative_found=1\n\
    \            fi\n        elif [ $current_number -gt 0 ]; then\n            if\
    \ [ $smallest_positive_found -eq 0 ]; then\n                smallest_positive=$current_number\n\
    \                smallest_positive_found=1\n            elif [ $current_number\
    \ -lt $smallest_positive ]; then\n                smallest_positive=$current_number\n\
    \            fi\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $largest_negative_found\
    \ -eq 0 ]; then\n        largest_negative=\"None\"\n    fi\n    if [ $smallest_positive_found\
    \ -eq 0 ]; then\n        smallest_positive=\"None\"\n    fi\n\n    echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list\n  \
    \  local -i i\n    local -i max_neg\n    local -i min_pos\n    local -i max_neg_set\n\
    \    local -i min_pos_set\n    local -i n\n\n    list=($1)\n    max_neg_set=0\n\
    \    min_pos_set=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        n=${list[i]}\n\
    \        if ((n < 0)); then\n            if ((max_neg_set == 0 || n > max_neg));\
    \ then\n                max_neg=$n\n                max_neg_set=1\n          \
    \  fi\n        elif ((n > 0)); then\n            if ((min_pos_set == 0 || n <\
    \ min_pos)); then\n                min_pos=$n\n                min_pos_set=1\n\
    \            fi\n        fi\n    done\n\n    if ((max_neg_set == 0)); then\n \
    \       max_neg=\"None\"\n    fi\n    if ((min_pos_set == 0)); then\n        min_pos=\"\
    None\"\n    fi\n\n    echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", "  local\
    \ largest_negative=None\n  local smallest_positive=None\n  for i in $1; do\n \
    \   if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative = None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n    elif\
    \ [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive = None ]] || [[ $i -lt\
    \ $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a arr\n    arr=($1)\n    local -a neg\n    local -a pos\n    for i in\
    \ \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            neg+=(\"$i\"\
    )\n        elif [[ $i -gt 0 ]]; then\n            pos+=(\"$i\")\n        fi\n\
    \    done\n    local neg_max\n    local pos_min\n    if [[ ${#neg[@]} -gt 0 ]];\
    \ then\n        neg_max=$(printf \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n\
    \ 1)\n    else\n        neg_max=None\n    fi\n    if [[ ${#pos[@]} -gt 0 ]]; then\n\
    \        pos_min=$(printf \"%s\\n\" \"${pos[@]}\" | sort -n | head -n 1)\n   \
    \ else\n        pos_min=None\n    fi\n    echo \"[\\\"$neg_max\\\", \\\"$pos_min\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=None\n    local smallest_positive=None\n\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n\
    \    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n    fi\n\n    if\
    \ [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf \"\
    %s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo \"\
    [\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n\
    \    local -a negatives\n    local -a positives\n    local -a result=(\"None\"\
    \ \"None\")\n\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negatives+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n        \
    \    positives+=(\"$i\")\n        fi\n    done\n\n    if [[ ${#negatives[@]} -gt\
    \ 0 ]]; then\n        result[0]=\"$(printf '%s\\n' \"${negatives[@]}\" | sort\
    \ -nr | head -n 1)\"\n    fi\n\n    if [[ ${#positives[@]} -gt 0 ]]; then\n  \
    \      result[1]=\"$(printf '%s\\n' \"${positives[@]}\" | sort -n | head -n 1)\"\
    \n    fi\n\n    echo \"${result[@]}\"", "    local -a a=($1)\n    local -a b=()\n\
    \    local -a c=()\n    local -a d=()\n    local -a e=()\n    local -a f=()\n\
    \    local -a g=()\n    local -a h=()\n    local -a i=()\n    local -a j=()\n\
    \    local -a k=()\n    local -a l=()\n    local -a m=()\n    local -a n=()\n\
    \    local -a o=()\n    local -a p=()\n    local -a q=()\n    local -a r=()\n\
    \    local -a s=()\n    local -a t=()\n    local -a u=()\n    local -a v=()\n\
    \    local -a w=()\n    local -a x=()\n    local -a y=()\n    local -a z=()\n\
    \    local -a aa=()\n    local -a bb=()\n    local -a cc=()\n    local -a dd=()\n\
    \    local -a ee=()\n    local -a ff=()\n    local -a gg=()\n    local -a hh=()\n\
    \    local -a ii=()\n    local -a jj=()\n    local -a kk=()\n    local -a ll=()\n\
    \    local -a mm=()\n    local -a nn=()\n    local -a oo=()\n    local -a pp=()\n\
    \    local -a qq=()\n    local -a rr=()\n    local -a ss=()\n    local -a tt=()\n\
    \    local -a uu=()\n    local -a vv=()\n    local -a ww=()\n    local -a xx=()\n\
    \    local -a yy=()\n    local -a zz=()\n    local -a aaa=()\n    local -a bbb=()\n\
    \    local -a ccc=()\n    local -a ddd=()\n    local -a eee=()\n    local -a fff=()\n\
    \    local -a ggg=()\n    local -a hhh=()\n    local -a", "    local -a arr=()\n\
    \    local -a neg=()\n    local -a pos=()\n    local -a res=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local c", " \
    \ local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local largest_negative=None\n\
    \  local smallest_positive=None\n\n  for i in \"${list[@]}\"; do\n    if [ \"\
    $i\" -lt 0 ]; then\n      negative_list+=($i)\n    elif [ \"$i\" -gt 0 ]; then\n\
    \      positive_list+=($i)\n    fi\n  done\n\n  if [ \"${#negative_list[@]}\"\
    \ -gt 0 ]; then\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\"\
    \ | sort -nr | head -n 1)\n  fi\n\n  if [ \"${#positive_list[@]}\" -gt 0 ]; then\n\
    \    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\" | sort -n |\
    \ head -n 1)\n  fi\n\n  result+=(\"$largest_negative\")\n  result+=(\"$smallest_positive\"\
    )\n\n  echo \"${result[@]}\"", "  local -a array=($1)\n  local max_neg=0\n  local\
    \ min_pos=0\n  local max_neg_found=false\n  local min_pos_found=false\n  for i\
    \ in \"${array[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $i -gt $max_neg\
    \ ]]; then\n        max_neg=$i\n        max_neg_found=true\n      fi\n    elif\
    \ [[ $i -gt 0 ]]; then\n      if [[ $min_pos_found == false ]]; then\n       \
    \ min_pos=$i\n        min_pos_found=true\n      elif [[ $i -lt $min_pos ]]; then\n\
    \        min_pos=$i\n      fi\n    fi\n  done\n  if [[ $max_neg_found == false\
    \ ]]; then\n    max_neg=\"None\"\n  fi\n  if [[ $min_pos_found == false ]]; then\n\
    \    min_pos=\"None\"\n  fi\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"",
  "    local -a numbers=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for number in \"${numbers[@]}\"; do\n        if [[ $number -lt 0 ]]; then\n\
    \            if [[ $largest_negative == None ]] || [[ $number -gt $largest_negative\
    \ ]]; then\n                largest_negative=$number\n            fi\n       \
    \ elif [[ $number -gt 0 ]]; then\n            if [[ $smallest_positive == None\
    \ ]] || [[ $number -lt $smallest_positive ]]; then\n                smallest_positive=$number\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negatives=()\n\
    \  local -a positives=()\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positives+=($i)\n    fi\n  done\n  if [[\
    \ ${#negatives[@]} -gt 0 ]]; then\n    largest_negative=$(printf '%s\\n' \"${negatives[@]}\"\
    \ | sort -nr | head -n1)\n  fi\n  if [[ ${#positives[@]} -gt 0 ]]; then\n    smallest_positive=$(printf\
    \ '%s\\n' \"${positives[@]}\" | sort -n | head -n1)\n  fi\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a array=()\n  local -a positive=()\n\
    \  local -a negative=()\n  local -a result=()\n  local i\n  local -i j\n  local\
    \ -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n\
    \  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n \
    \ local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local\
    \ -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i\
    \ qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n\
    \  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n\
    \  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n\
    \  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n\
    \  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n\
    \  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n\
    \  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n\
    \  local -i aaaa\n  local -i bbbb\n  local -i c", "  local -a array=($1)\n  local\
    \ -i largest_negative=0\n  local -i smallest_positive=0\n  local -i i=0\n  local\
    \ -i len=${#array[@]}\n  local -i is_negative=0\n  local -i is_positive=0\n  local\
    \ -i is_zero=0\n  local -i is_none=0\n  local -i is_first=1\n  local -i is_second=1\n\
    \  local -i is_third=1\n  local -i is_fourth=1\n  local -i is_fifth=1\n  local\
    \ -i is_sixth=1\n  local -i is_seventh=1\n  local -i is_eighth=1\n  local -i is_ninth=1\n\
    \  local -i is_tenth=1\n  local -i is_eleventh=1\n  local -i is_twelfth=1\n  local\
    \ -i is_thirteenth=1\n  local -i is_fourteenth=1\n  local -i is_fifteenth=1\n\
    \  local -i is_sixteenth=1\n  local -i is_seventeenth=1\n  local -i is_eighteenth=1\n\
    \  local -i is_nineteenth=1\n  local -i is_twentieth=1\n  local -i is_twenty_first=1\n\
    \  local -i is_twenty_second=1\n  local -i is_twenty_third=1\n  local -i is_twenty_fourth=1\n\
    \  local -i is_twenty_fifth=1\n  local -i is_twenty_sixth=1\n  local -i is_twenty_seventh=1\n\
    \  local -i is_twenty_eighth=1\n  local -i is_twenty_ninth=1\n  local -i is_thirtieth=1\n\
    \  local -i is_thirty_first=1\n  local -i is_thirty_second=1\n  local -i is_thirty_third=1\n\
    \  local -i is_thirty_fourth=1\n  local -i is_thirty_fifth=1\n  local -i", " \
    \ local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n \
    \ local i\n  local n\n  local p\n  local -i cnt=0\n  local -i neg_cnt=0\n  local\
    \ -i pos_cnt=0\n  local -i neg_max=0\n  local -i pos_min=0\n  local -i neg_max_idx=0\n\
    \  local -i pos_min_idx=0\n  local -i neg_max_cnt=0\n  local -i pos_min_cnt=0\n\
    \  local -i neg_max_idx_cnt=0\n  local -i pos_min_idx_cnt=0\n  local -i neg_max_idx_cnt_prev=0\n\
    \  local -i pos_min_idx_cnt_prev=0\n  local -i neg_max_idx_cnt_curr=0\n  local\
    \ -i pos_min_idx_cnt_curr=0\n  local -i neg_max_idx_cnt_next=0\n  local -i pos_min_idx_cnt_next=0\n\
    \  local -i neg_max_idx_cnt_next_prev=0\n  local -i pos_min_idx_cnt_next_prev=0\n\
    \  local -i neg_max_idx_cnt_next_curr=0\n  local -i pos_min_idx_cnt_next_curr=0\n\
    \  local -i neg_max_idx_cnt_next_next=0\n  local -i pos_min_idx_cnt_next_next=0\n\
    \  local -i neg_max_idx_cnt_next_next_prev=0\n  local -i pos_min_idx_cnt_next_next_prev=0\n\
    \  local -i neg_max_idx_cnt_next_next_curr=0\n  local -i pos_min_idx_cnt_next_next_curr=0\n\
    \  local -i neg_max_idx", "    local -a list=($1)\n    local -a negative_list=()\n\
    \    local -a positive_list=()\n    local largest_negative=None\n    local smallest_positive=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head\
    \ -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a arr=(\"\
    $@\")\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif [[\
    \ $i -gt 0 ]]; then\n      pos+=(\"$i\")\n    fi\n  done\n  if [[ ${#neg[@]} -eq\
    \ 0 ]]; then\n    res+=(\"None\")\n  else\n    res+=(\"$(printf \"%s\\n\" \"${neg[@]}\"\
    \ | sort -nr | head -n 1)\")\n  fi\n  if [[ ${#pos[@]} -eq 0 ]]; then\n    res+=(\"\
    None\")\n  else\n    res+=(\"$(printf \"%s\\n\" \"${pos[@]}\" | sort -n | head\
    \ -n 1)\")\n  fi\n  printf '[\"%s\", \"%s\"]' \"${res[@]}\"", "  local -a arr=($1)\n\
    \  local max_neg=0\n  local min_pos=0\n  local -i i=0\n  local -i len=${#arr[@]}\n\
    \  local -i neg_found=0\n  local -i pos_found=0\n\n  for ((i=0; i<len; i++));\
    \ do\n    if [[ ${arr[i]} -lt 0 ]]; then\n      if [[ ${arr[i]} -gt $max_neg ]];\
    \ then\n        max_neg=${arr[i]}\n      fi\n      neg_found=1\n    elif [[ ${arr[i]}\
    \ -gt 0 ]]; then\n      if [[ ${arr[i]} -lt $min_pos ]]; then\n        min_pos=${arr[i]}\n\
    \      fi\n      pos_found=1\n    fi\n  done\n\n  if [[ $neg_found -eq 0 ]]; then\n\
    \    max_neg=\"None\"\n  fi\n\n  if [[ $pos_found -eq 0 ]]; then\n    min_pos=\"\
    None\"\n  fi\n\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", "  local -a\
    \ arr=(\"$@\")\n  local -a neg\n  local -a pos\n  local i\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif [[ $i -gt 0 ]];\
    \ then\n      pos+=(\"$i\")\n    fi\n  done\n  if [[ ${#neg[@]} -eq 0 ]]; then\n\
    \    neg=(\"None\")\n  else\n    neg=(\"$(printf '%s\\n' \"${neg[@]}\" | sort\
    \ -nr | head -n 1)\")\n  fi\n  if [[ ${#pos[@]} -eq 0 ]]; then\n    pos=(\"None\"\
    )\n  else\n    pos=(\"$(printf '%s\\n' \"${pos[@]}\" | sort -n | head -n 1)\"\
    )\n  fi\n  printf '[\"%s\", \"%s\"]' \"${neg[0]}\" \"${pos[0]}\"", "  local -a\
    \ list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n \
    \ local -i i=0\n  local -i len=${#list[@]}\n  local -i is_first_positive=1\n \
    \ local -i is_first_negative=1\n  local -i is_first_zero=1\n  local -i is_first_non_zero=1\n\
    \  local -i is_first_non_zero_negative=1\n  local -i is_first_non_zero_positive=1\n\
    \  local -i is_first_non_zero_positive_or_negative=1\n  local -i is_first_non_zero_positive_and_negative=1\n\
    \  local -i is_first_non_zero_positive_and_negative_and_zero=1\n  local -i is_first_non_zero_positive_or_negative_and_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero=1\n  local -i is_first_non_zero_positive_and_negative_or_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_and_zero=1\n  local -i is_first_non_zero_positive_and_negative_or_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_and_zero=1\n  local -i is_first_non_zero_positive_and_negative_or_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_and_zero=1\n  local -i is_first_non_zero_positive_and_negative_or_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_and_zero=1\n  local -i is_first_non_zero_positive_and_negative_or_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_and_zero=1\n  local -i is_first_non_zero_positive_and_negative_or_zero=1\n\
    \  local", "    local -a arr=($1)\n    local max_neg=0\n    local min_pos=0\n\
    \    local -a res=(\"None\" \"None\")\n    for i in \"${arr[@]}\"; do\n      \
    \  if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $max_neg ]]; then\n     \
    \           max_neg=$i\n                res[0]=$i\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $i -lt $min_pos ]]; then\n         \
    \       min_pos=$i\n                res[1]=$i\n            fi\n        fi\n  \
    \  done\n    echo \"${res[@]}\"", "  local -a list=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i i\n  local -i n=${#list[@]}\n  local\
    \ -i is_positive\n  local -i is_negative\n  local -i is_zero\n  local -i is_first_positive=1\n\
    \  local -i is_first_negative=1\n  for ((i=0; i<n; i++)); do\n    is_positive=$(echo\
    \ \"${list[i]} > 0\" | bc)\n    is_negative=$(echo \"${list[i]} < 0\" | bc)\n\
    \    is_zero=$(echo \"${list[i]} == 0\" | bc)\n    if [[ $is_positive -eq 1 ]];\
    \ then\n      if [[ $is_first_positive -eq 1 ]]; then\n        smallest_positive=${list[i]}\n\
    \        is_first_positive=0\n      else\n        if [[ ${list[i]} -lt $smallest_positive\
    \ ]]; then\n          smallest_positive=${list[i]}\n        fi\n      fi\n   \
    \ elif [[ $is_negative -eq 1 ]]; then\n      if [[ $is_first_negative -eq 1 ]];\
    \ then\n        largest_negative=${list[i]}\n        is_first_negative=0\n   \
    \   else\n        if [[ ${list[i]} -gt $largest_negative ]]; then\n          largest_negative=${list[i]}\n\
    \        fi\n      fi\n    fi\n  done\n  if [[ $is_first_positive -eq 1 ]]; then\n\
    \    smallest_positive=\"None\"\n  fi\n  if [[ $is_first_negative -eq 1 ]]; then\n\
    \    largest_negative=\"None\"\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"\
    $smallest_positive\\\"]\"", "  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \  for integer in $1; do\n    if [[ $integer -lt 0 ]]; then\n      if [[ $largest_negative_integer\
    \ == None ]]; then\n        largest_negative_integer=$integer\n      elif [[ $integer\
    \ -gt $largest_negative_integer ]]; then\n        largest_negative_integer=$integer\n\
    \      fi\n    elif [[ $integer -gt 0 ]]; then\n      if [[ $smallest_positive_integer\
    \ == None ]]; then\n        smallest_positive_integer=$integer\n      elif [[\
    \ $integer -lt $smallest_positive_integer ]]; then\n        smallest_positive_integer=$integer\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [ $i -lt 0 ] && [ $i -gt $largest_negative ]; then\n\
    \      largest_negative=$i\n    elif [ $i -gt 0 ] && [ $i -lt $smallest_positive\
    \ ]; then\n      smallest_positive=$i\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a a=()\n  local -a b=()\n  for i\
    \ in $1; do\n    if [[ $i -lt 0 ]]; then\n      a+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      b+=($i)\n    fi\n  done\n  if [[ ${#a[@]} -eq 0 ]]; then\n \
    \   echo '\"None\"'\n  else\n    echo '\"'$(printf '%s\\n' \"${a[@]}\" | sort\
    \ -nr | head -n1)'\"'\n  fi\n  if [[ ${#b[@]} -eq 0 ]]; then\n    echo '\"None\"\
    '\n  else\n    echo '\"'$(printf '%s\\n' \"${b[@]}\" | sort -n | head -n1)'\"\
    '\n  fi", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a\
    \ res=()\n  local i\n  local j\n  local k\n\n  # Split the string into an array\n\
    \  IFS=' ' read -r -a arr <<< \"$1\"\n\n  # Loop through the array and sort the\
    \ numbers into negative and positive\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n    \
    \  pos+=(\"$i\")\n    fi\n  done\n\n  # Sort the negative numbers in descending\
    \ order\n  for (( i=0; i<${#neg[@]}-1; i++ )); do\n    for (( j=i+1; j<${#neg[@]};\
    \ j++ )); do\n      if [[ ${neg[i]} -lt ${neg[j]} ]]; then\n        k=${neg[i]}\n\
    \        neg[i]=${neg[j]}\n        neg[j]=$k\n      fi\n    done\n  done\n\n \
    \ # Sort the positive numbers in ascending order\n  for (( i=0; i<${#pos[@]}-1;\
    \ i++ )); do\n    for (( j=i+1; j<${#pos[@]}; j++ )); do\n      if [[ ${pos[i]}\
    \ -gt ${pos[j]} ]]; then\n        k=${pos[i]}\n        pos[i]=${pos[j]}\n    \
    \    pos[j]=$k\n      fi\n    done\n  done\n\n  # Return the largest negative\
    \ number\n  if [[ ${#neg[@]} -gt 0 ]]; then\n    res+=(\"${neg[0]}\")\n  else\n\
    \    res+=(\"None\")\n  fi\n\n  # Return the smallest positive number\n  if [[\
    \ ${#pos[@]} -gt 0 ]]; then\n    res+=(\"${pos[0]}\")\n  else\n    res+=(\"None\"\
    )\n  fi\n\n  # Return the result as a tuple\n  echo \"${res[@]}\"", "  local -a\
    \ arr=()\n  local -a neg=()\n  local -a pos=()\n  local -a res=()\n  local i\n\
    \  local n\n  local p\n  local x\n  local y\n  IFS=' ' read -r -a arr <<< \"$1\"\
    \n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      neg+=(\"$i\"\
    )\n    elif [[ $i -gt 0 ]]; then\n      pos+=(\"$i\")\n    fi\n  done\n  if [[\
    \ ${#neg[@]} -eq 0 ]]; then\n    n='None'\n  else\n    n=\"$(printf '%s\\n' \"\
    ${neg[@]}\" | sort -nr | head -n 1)\"\n  fi\n  if [[ ${#pos[@]} -eq 0 ]]; then\n\
    \    p='None'\n  else\n    p=\"$(printf '%s\\n' \"${pos[@]}\" | sort -n | head\
    \ -n 1)\"\n  fi\n  res+=(\"$n\")\n  res+=(\"$p\")\n  printf '[\"%s\", \"%s\"]'\
    \ \"${res[@]}\"", "    local -a list=($1)\n    local largest_negative=None\n \
    \   local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative = None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ = None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  # Write your code here\n  # Use echo to return\
    \ the result\n  echo \"Not yet implemented\"", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [[ $i -lt 0 ]];\
    \ then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local list=\"$1\"\n\
    \  local largest_negative=\"None\"\n  local smallest_positive=\"None\"\n  for\
    \ i in $list; do\n    if [ $i -lt 0 ] && [ $i -gt $largest_negative ]; then\n\
    \      largest_negative=$i\n    elif [ $i -gt 0 ] && [ $i -lt $smallest_positive\
    \ ]; then\n      smallest_positive=$i\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i i=0\n  local -i len=${#list[@]}\n\
    \  local -i is_negative=0\n  local -i is_positive=0\n  local -i is_zero=0\n  local\
    \ -i is_first=1\n  local -i is_first_negative=1\n  local -i is_first_positive=1\n\
    \  local -i is_first_zero=1\n  local -i is_first_non_zero=1\n  local -i is_first_non_zero_negative=1\n\
    \  local -i is_first_non_zero_positive=1\n  local -i is_first_non_zero_negative_positive=1\n\
    \  local -i is_first_non_zero_negative_positive_zero=1\n  local -i is_first_non_zero_negative_positive_zero_non_zero=1\n\
    \  local -i is_first_non_zero_negative_positive_zero_non_zero_negative=1\n  local\
    \ -i is_first_non_zero_negative_positive_zero_non_zero_positive=1\n  local -i\
    \ is_first_non_zero_negative_positive_zero_non_zero_negative_positive=1\n  local\
    \ -i is_first_non_zero_negative_positive_zero_non_zero_negative_positive_zero=1\n\
    \  local -i is_first_non_zero_negative_positive_zero_non_zero_negative_positive_zero_non_zero=1\n\
    \  local -i is_first_non_zero_negative_positive_zero_non_zero_negative_positive_zero_non_zero_negative=1\n\
    \  local -i is_first_non_zero_negative_positive_zero_non_zero_negative_positive_zero_non_zero_positive=1\n\
    \  local -i is_first_non_zero_negative_positive_zero_non_zero_negative_positive_zero_non_zero_negative_positive=1\n\
    \  local -i is_first_non_zero_negative_positive_zero_non_zero_", "  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $1; do\n    if [ $i -lt 0 ] && [ $i\
    \ -gt $largest_negative ]; then\n      largest_negative=$i\n    elif [ $i -gt\
    \ 0 ] && [ $i -lt $smallest_positive ]; then\n      smallest_positive=$i\n   \
    \ fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "  local -a arr=($1)\n  local -i max=0\n  local -i min=0\n  local -i i=0\n\
    \  local -i len=${#arr[@]}\n  local -i is_positive=0\n  local -i is_negative=0\n\
    \  local -i is_zero=0\n  local -i is_first=1\n  local -i is_positive_first=1\n\
    \  local -i is_negative_first=1\n  local -i is_zero_first=1\n  local -i is_positive_second=1\n\
    \  local -i is_negative_second=1\n  local -i is_zero_second=1\n  local -i is_positive_third=1\n\
    \  local -i is_negative_third=1\n  local -i is_zero_third=1\n  local -i is_positive_fourth=1\n\
    \  local -i is_negative_fourth=1\n  local -i is_zero_fourth=1\n  local -i is_positive_fifth=1\n\
    \  local -i is_negative_fifth=1\n  local -i is_zero_fifth=1\n  local -i is_positive_sixth=1\n\
    \  local -i is_negative_sixth=1\n  local -i is_zero_sixth=1\n  local -i is_positive_seventh=1\n\
    \  local -i is_negative_seventh=1\n  local -i is_zero_seventh=1\n  local -i is_positive_eighth=1\n\
    \  local -i is_negative_eighth=1\n  local -i is_zero_eighth=1\n  local -i is_positive_ninth=1\n\
    \  local -i is_negative_ninth=1\n  local -i is_zero_ninth=1\n  local -i is_positive_tenth=1\n\
    \  local -i is_negative_tenth=1\n  local -i is_zero_tenth=1\n  local -i is_positive_eleventh=1\n\
    \  local -i is_negative_eleventh=1\n  local -i is_zero_eleventh=1\n  local -i\
    \ is_positive_twelfth", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a numbers=($1)\n  local -a negatives\n\
    \  local -a positives\n  local -a result\n  local i\n\n  for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n    if ((numbers[i] < 0)); then\n      negatives+=(${numbers[i]})\n\
    \    elif ((numbers[i] > 0)); then\n      positives+=(${numbers[i]})\n    fi\n\
    \  done\n\n  if ((${#negatives[@]} > 0)); then\n    result+=($(printf \"%s\\n\"\
    \ \"${negatives[@]}\" | sort -nr | head -n 1))\n  else\n    result+=(\"None\"\
    )\n  fi\n\n  if ((${#positives[@]} > 0)); then\n    result+=($(printf \"%s\\n\"\
    \ \"${positives[@]}\" | sort -n | head -n 1))\n  else\n    result+=(\"None\")\n\
    \  fi\n\n  echo \"${result[@]}\"", "    local -a arr=($1)\n    local -i max=0\n\
    \    local -i min=0\n    local -i i=0\n    local -i len=${#arr[@]}\n    local\
    \ -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len; i++)); do\n        if\
    \ [[ ${arr[i]} -lt 0 ]]; then\n            if [[ ${arr[i]} -gt $max ]]; then\n\
    \                max=${arr[i]}\n                flag=1\n            fi\n     \
    \   fi\n        if [[ ${arr[i]} -gt 0 ]]; then\n            if [[ $flag2 -eq 0\
    \ ]]; then\n                min=${arr[i]}\n                flag2=1\n         \
    \   fi\n            if [[ ${arr[i]} -lt $min ]]; then\n                min=${arr[i]}\n\
    \            fi\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n      \
    \  max=\"None\"\n    fi\n    if [[ $flag2 -eq 0 ]]; then\n        min=\"None\"\
    \n    fi\n    echo \"[\\\"$max\\\", \\\"$min\\\"]\"", "  local -a list=($1)\n\
    \  local -a negatives\n  local -a positives\n  local -a result\n  local i\n  for\
    \ ((i=0; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n    \
    \  negatives+=(${list[$i]})\n    elif [[ ${list[$i]} -gt 0 ]]; then\n      positives+=(${list[$i]})\n\
    \    fi\n  done\n  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(None)\n\
    \  else\n    result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr | head\
    \ -n 1))\n  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n    result+=(None)\n\
    \  else\n    result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort -n | head\
    \ -n 1))\n  fi\n  echo \"${result[@]}\"", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [[ $i -lt 0 ]];\
    \ then\n      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"\
    $largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negative\n  local -a positive\n  local -a result\n  local i\n  for\
    \ i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive+=($i)\n    fi\n  done\n  if [[\
    \ ${#negative[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf\
    \ \"%s\\n\" \"${negative[@]}\" | sort -n | tail -n 1))\n  fi\n  if [[ ${#positive[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local -a negative_list=()\n\
    \    local -a positive_list=()\n    local largest_negative=None\n    local smallest_positive=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head\
    \ -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n\
    \  local -a negatives=()\n  local -a positives=()\n  for i in \"${list[@]}\";\
    \ do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n    elif [[ $i -gt 0\
    \ ]]; then\n      positives+=($i)\n    fi\n  done\n  if [[ ${#negatives[@]} -eq\
    \ 0 ]]; then\n    echo '\"None\"'\n  else\n    echo \"\\\"$(printf '%s\\n' \"\
    ${negatives[@]}\" | sort -nr | head -n 1)\\\"\"\n  fi\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    echo '\"None\"'\n  else\n    echo \"\\\"$(printf '%s\\n'\
    \ \"${positives[@]}\" | sort -n | head -n 1)\\\"\"\n  fi", "  local -a arr=($1)\n\
    \  local -a neg=()\n  local -a pos=()\n  local -i i=0\n  local -i len=${#arr[@]}\n\
    \  local -i neg_max=0\n  local -i pos_min=0\n  local -i tmp=0\n\n  while [ $i\
    \ -lt $len ]; do\n    tmp=${arr[$i]}\n    if [ $tmp -lt 0 ]; then\n      neg+=($tmp)\n\
    \    elif [ $tmp -gt 0 ]; then\n      pos+=($tmp)\n    fi\n    i=$((i + 1))\n\
    \  done\n\n  if [ ${#neg[@]} -gt 0 ]; then\n    neg_max=${neg[0]}\n    for i in\
    \ ${neg[@]}; do\n      if [ $i -gt $neg_max ]; then\n        neg_max=$i\n    \
    \  fi\n    done\n  fi\n\n  if [ ${#pos[@]} -gt 0 ]; then\n    pos_min=${pos[0]}\n\
    \    for i in ${pos[@]}; do\n      if [ $i -lt $pos_min ]; then\n        pos_min=$i\n\
    \      fi\n    done\n  fi\n\n  echo \"[\\\"${neg_max:-None}\\\", \\\"${pos_min:-None}\\\
    \"]\"", "  local -a numbers=($1)\n  local -a negatives\n  local -a positives\n\
    \  local -a result=(\"None\" \"None\")\n\n  for number in \"${numbers[@]}\"; do\n\
    \    if [[ $number -lt 0 ]]; then\n      negatives+=($number)\n    elif [[ $number\
    \ -gt 0 ]]; then\n      positives+=($number)\n    fi\n  done\n\n  if [[ ${#negatives[@]}\
    \ -gt 0 ]]; then\n    result[0]=$(printf \"%s\\n\" \"${negatives[@]}\" | sort\
    \ -nr | head -n 1)\n  fi\n\n  if [[ ${#positives[@]} -gt 0 ]]; then\n    result[1]=$(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1)\n  fi\n\n  echo \"${result[@]}\"",
  "    local -a array=($1)\n    local -i max=0\n    local -i min=0\n    local -i i=0\n\
    \    local -i len=${#array[@]}\n    local -i max_set=0\n    local -i min_set=0\n\
    \n    while [ $i -lt $len ]; do\n        if [ ${array[$i]} -lt 0 ]; then\n   \
    \         if [ $max_set -eq 0 ]; then\n                max=${array[$i]}\n    \
    \            max_set=1\n            elif [ ${array[$i]} -gt $max ]; then\n   \
    \             max=${array[$i]}\n            fi\n        elif [ ${array[$i]} -gt\
    \ 0 ]; then\n            if [ $min_set -eq 0 ]; then\n                min=${array[$i]}\n\
    \                min_set=1\n            elif [ ${array[$i]} -lt $min ]; then\n\
    \                min=${array[$i]}\n            fi\n        fi\n        i=$i+1\n\
    \    done\n\n    if [ $max_set -eq 0 ]; then\n        max=\"None\"\n    fi\n \
    \   if [ $min_set -eq 0 ]; then\n        min=\"None\"\n    fi\n\n    echo \"[\\\
    \"$max\\\", \\\"$min\\\"]\"", "  local -a a=()\n  local -a b=()\n  for i in $1;\
    \ do\n    if [[ $i -lt 0 ]]; then\n      a+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      b+=($i)\n    fi\n  done\n  if [[ ${#a[@]} -eq 0 ]]; then\n    echo '\"\
    None\"'\n  else\n    echo \"\\\"$(printf '%s\\n' \"${a[@]}\" | sort -nr | head\
    \ -n 1)\\\"\"\n  fi\n  if [[ ${#b[@]} -eq 0 ]]; then\n    echo '\"None\"'\n  else\n\
    \    echo \"\\\"$(printf '%s\\n' \"${b[@]}\" | sort -n | head -n 1)\\\"\"\n  fi",
  "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n   \
    \ elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if\
    \ [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=$(printf \"%s\\\
    n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    # Write your code here\n    # You can use the following function\
    \ to return a tuple:\n    # return_tuple \"$a\" \"$b\"\n    # Note: You can use\
    \ the following function to check if a\n    # variable is a number:\n    # is_number\
    \ \"$var\"\n    # It returns 0 if it is a number, 1 otherwise.\n    #\n    # Hint:\
    \ You can use the following function to sort a list:\n    # sorted_list=$(sort_list\
    \ \"$list\")\n    #\n    # Hint: You can use the following function to get the\
    \ first\n    # element of a list:\n    # first_element=$(get_first_element \"\
    $list\")\n    #\n    # Hint: You can use the following function to get the last\n\
    \    # element of a list:\n    # last_element=$(get_last_element \"$list\")\n\
    \    #\n    # Hint: You can use the following function to get the length\n   \
    \ # of a list:\n    # length=$(get_length \"$list\")\n    #\n    # Hint: You can\
    \ use the following function to get the first\n    # n elements of a list:\n \
    \   # first_n_elements=$(get_first_n_elements \"$list\" \"$n\")\n    #\n    #\
    \ Hint: You can use the following function to get the last\n    # n elements of\
    \ a list:\n    # last_n_elements=$(get_last_n_elements \"$list\" \"$n\")\n   \
    \ #\n    # Hint: You can use the following function to remove the first\n    #\
    \ element of a list:\n    # rest_list=$(remove_first_element \"$list\")\n    #\n\
    \    # Hint: You can use the following function to remove the last\n    # element\
    \ of a list:\n    # rest_list=$(remove_last_element \"$list\")\n    #\n    # Hint:\
    \ You can use the following function to remove the first\n    # n elements of\
    \ a list:\n    # rest_list=$(remove_first_n_elements \"$list\" \"$n\")\n    #\n\
    \    # Hint: You can use the following function to remove the last\n    # n elements\
    \ of a list:\n    #", "    # Write your code here\n    # You can use the following\
    \ command to create a tuple:\n    # echo \"[\\\"$a\\\", \\\"$b\\\"]\"\n    echo\
    \ \"[\\\"None\\\", \\\"None\\\"]\"", "  local -a a=($1)\n  local -i n=${#a[@]}\n\
    \  local -i i\n  local -i max_neg=0\n  local -i min_pos=0\n  local -i is_neg=0\n\
    \  local -i is_pos=0\n  for ((i=0; i<n; i++)); do\n    if [[ ${a[i]} -lt 0 ]];\
    \ then\n      is_neg=1\n      if [[ ${a[i]} -gt $max_neg ]]; then\n        max_neg=${a[i]}\n\
    \      fi\n    elif [[ ${a[i]} -gt 0 ]]; then\n      is_pos=1\n      if [[ $min_pos\
    \ -eq 0 ]] || [[ ${a[i]} -lt $min_pos ]]; then\n        min_pos=${a[i]}\n    \
    \  fi\n    fi\n  done\n  if [[ $is_neg -eq 0 ]]; then\n    max_neg=None\n  fi\n\
    \  if [[ $is_pos -eq 0 ]]; then\n    min_pos=None\n  fi\n  echo \"[\\\"$max_neg\\\
    \", \\\"$min_pos\\\"]\"", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n\
    \  local -a res=()\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local\
    \ bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n\
    \  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local\
    \ oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n\
    \  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local\
    \ bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local\
    \ hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local\
    \ nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local\
    \ ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local\
    \ zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n\
    \  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local\
    \ kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n\
    \  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local\
    \ vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n\
    \  local bbbbb\n", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a arr=(\"$@\")\n  local -a negs=()\n\
    \  local -a poss=()\n  local -a res=()\n  local i\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt 0 ]]; then\n      negs+=($i)\n    elif [[ $i -gt 0 ]]; then\n\
    \      poss+=($i)\n    fi\n  done\n  if [[ ${#negs[@]} -eq 0 ]]; then\n    res+=(\"\
    None\")\n  else\n    res+=(\"$(printf \"%s\\n\" \"${negs[@]}\" | sort -nr | head\
    \ -n 1)\")\n  fi\n  if [[ ${#poss[@]} -eq 0 ]]; then\n    res+=(\"None\")\n  else\n\
    \    res+=(\"$(printf \"%s\\n\" \"${poss[@]}\" | sort -n | head -n 1)\")\n  fi\n\
    \  printf '[\"%s\", \"%s\"]' \"${res[@]}\"", "    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in $1; do\n        if [[ $i -lt 0\
    \ ]]; then\n            if [[ $largest_negative = None ]] || [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive = None ]] || [[ $i\
    \ -lt $smallest_positive ]]; then\n                smallest_positive=$i\n    \
    \        fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\", \\\"\
    $smallest_positive\\\"]\"", "    local -a list=($1)\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n                largest_negative=$i\n      \
    \      fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local -a list=($1)\n    local -a negative_list=()\n\
    \    local -a positive_list=()\n    local largest_negative=None\n    local smallest_positive=None\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head\
    \ -n 1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n    fi\n\n    echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n\
    \      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]]; then\n\
    \        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local list=\"$1\"\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local list=\"$1\"\n  local largest_negative_integer=None\n\
    \  local smallest_positive_integer=None\n  for i in $list; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      if [[ $largest_negative_integer == None ]]; then\n       \
    \ largest_negative_integer=$i\n      elif [[ $i -gt $largest_negative_integer\
    \ ]]; then\n        largest_negative_integer=$i\n      fi\n    elif [[ $i -gt\
    \ 0 ]]; then\n      if [[ $smallest_positive_integer == None ]]; then\n      \
    \  smallest_positive_integer=$i\n      elif [[ $i -lt $smallest_positive_integer\
    \ ]]; then\n        smallest_positive_integer=$i\n      fi\n    fi\n  done\n \
    \ echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\"\
    ]\"", "    local -a list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local list=$1\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n  local -i len=${#list[@]}\n  local -i is_first_positive=1\n\
    \  local -i is_first_negative=1\n  local -i is_first_zero=1\n  local -i is_first_non_zero=1\n\
    \  local -i is_first_non_zero_positive=1\n  local -i is_first_non_zero_negative=1\n\
    \  local -i is_first_non_zero_positive_or_negative=1\n  local -i is_first_non_zero_positive_or_negative_or_zero=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero_or_null=1\n  local\
    \ -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty=1\n  local\
    \ -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty_or_space=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty_or_space_or_newline=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty_or_space_or_newline_or_tab=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty_or_space_or_newline_or_tab_or_carriage_return=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty_or_space_or_newline_or_tab_or_carriage_return_or_form_feed=1\n\
    \  local -i is_first_non_zero_positive_or_negative_or_zero_or_null_or_empty_or_space_or_newline_or_tab",
  "  local -a list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n  local -i len=${#list[@]}\n  local -i is_negative=0\n  local\
    \ -i is_positive=0\n  local -i is_zero=0\n  local -i is_non_zero=0\n  local -i\
    \ is_non_positive=0\n  local -i is_non_negative=0\n  local -i is_positive_or_zero=0\n\
    \  local -i is_negative_or_zero=0\n  local -i is_positive_and_non_zero=0\n  local\
    \ -i is_negative_and_non_zero=0\n  local -i is_positive_and_negative=0\n  local\
    \ -i is_positive_and_non_negative=0\n  local -i is_negative_and_non_positive=0\n\
    \  local -i is_negative_and_positive=0\n  local -i is_non_positive_and_non_negative=0\n\
    \  local -i is_non_positive_and_negative=0\n  local -i is_non_negative_and_non_positive=0\n\
    \  local -i is_non_negative_and_positive=0\n  local -i is_non_positive_and_positive=0\n\
    \  local -i is_non_negative_and_negative=0\n  local -i is_positive_or_negative=0\n\
    \  local -i is_positive_or_non_negative=0\n  local -i is_negative_or_non_positive=0\n\
    \  local -i is_negative_or_positive=0\n  local -i is_non_positive_or_non_negative=0\n\
    \  local -i is_non_positive_or_negative=0\n  local -i is_non_negative_or_non_positive=0\n\
    \  local -i is_non_negative_or_positive=0\n  local -i is_non_positive_or_positive=0\n\
    \  local -i is_non_negative_or_negative=0\n  local -i is_positive_and_zero=0\n",
  "    local largest_negative=None\n    local smallest_positive=None\n    for i in\
    \ $1; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $1; do\n    if [ $i -lt 0 ]; then\n      if [ $largest_negative =\
    \ None ] || [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n\
    \      fi\n    elif [ $i -gt 0 ]; then\n      if [ $smallest_positive = None ]\
    \ || [ $i -lt $smallest_positive ]; then\n        smallest_positive=$i\n     \
    \ fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a negative_integers=()\n  local -a positive_integers=()\n\
    \  local -a result=()\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n\
    \      negative_integers+=($i)\n    elif [[ $i -gt 0 ]]; then\n      positive_integers+=($i)\n\
    \    fi\n  done\n  if [[ ${#negative_integers[@]} -eq 0 ]]; then\n    result+=(None)\n\
    \  else\n    result+=($(printf \"%s\\n\" \"${negative_integers[@]}\" | sort -nr\
    \ | head -n 1))\n  fi\n  if [[ ${#positive_integers[@]} -eq 0 ]]; then\n    result+=(None)\n\
    \  else\n    result+=($(printf \"%s\\n\" \"${positive_integers[@]}\" | sort -n\
    \ | head -n 1))\n  fi\n  echo \"${result[@]}\"", "    local -a a=()\n    local\
    \ -a b=()\n    local -a c=()\n    local -a d=()\n    local -a e=()\n    local\
    \ -a f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n    local\
    \ -a j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n    local\
    \ -a n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n    local\
    \ -a r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n    local\
    \ -a v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n    local\
    \ -a z=()\n    local -a aa=()\n    local -a ab=()\n    local -a ac=()\n    local\
    \ -a ad=()\n    local -a ae=()\n    local -a af=()\n    local -a ag=()\n    local\
    \ -a ah=()\n    local -a ai=()\n    local -a aj=()\n    local -a ak=()\n    local\
    \ -a al=()\n    local -a am=()\n    local -a an=()\n    local -a ao=()\n    local\
    \ -a ap=()\n    local -a aq=()\n    local -a ar=()\n    local -a as=()\n    local\
    \ -a at=()\n    local -a au=()\n    local -a av=()\n    local -a aw=()\n    local\
    \ -a ax=()\n    local -a ay=()\n    local -a az=()\n    local -a aaa=()\n    local\
    \ -a aab=()\n    local -a aac=()\n    local -a aad=()\n    local -a aae=()\n \
    \   local -a aaf=()\n    local -a aag=()\n    local -a aah=()\n    local -a aai=()\n\
    \    local -a aaj=()", "  local list=$1\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  for n in $list; do\n    if [[ $n -lt 0 ]]; then\n\
    \      if [[ $largest_negative == None ]] || [[ $n -gt $largest_negative ]]; then\n\
    \        largest_negative=$n\n      fi\n    elif [[ $n -gt 0 ]]; then\n      if\
    \ [[ $smallest_positive == None ]] || [[ $n -lt $smallest_positive ]]; then\n\
    \        smallest_positive=$n\n      fi\n    fi\n  done\n  echo [\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]", "  local -a arr=($1)\n  local -a neg_arr=()\n\
    \  local -a pos_arr=()\n  local -a result=()\n  local max_neg=0\n  local min_pos=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [ $i -lt 0 ]; then\n      neg_arr+=($i)\n\
    \    elif [ $i -gt 0 ]; then\n      pos_arr+=($i)\n    fi\n  done\n  if [ ${#neg_arr[@]}\
    \ -eq 0 ]; then\n    result+=(None)\n  else\n    max_neg=$(printf \"%s\\n\" \"\
    ${neg_arr[@]}\" | sort -nr | head -n1)\n    result+=($max_neg)\n  fi\n  if [ ${#pos_arr[@]}\
    \ -eq 0 ]; then\n    result+=(None)\n  else\n    min_pos=$(printf \"%s\\n\" \"\
    ${pos_arr[@]}\" | sort -n | head -n1)\n    result+=($min_pos)\n  fi\n  echo \"\
    ${result[@]}\"", "  local -a a=($1)\n  local -i i\n  local -i max_neg=0\n  local\
    \ -i min_pos=0\n  local -i neg_count=0\n  local -i pos_count=0\n  for ((i=0; i<${#a[@]};\
    \ i++)); do\n    if [[ ${a[i]} -lt 0 ]]; then\n      (( neg_count++ ))\n     \
    \ if [[ ${a[i]} -gt $max_neg ]]; then\n        max_neg=${a[i]}\n      fi\n   \
    \ elif [[ ${a[i]} -gt 0 ]]; then\n      (( pos_count++ ))\n      if [[ ${a[i]}\
    \ -lt $min_pos ]]; then\n        min_pos=${a[i]}\n      fi\n    fi\n  done\n \
    \ if [[ $neg_count -eq 0 ]]; then\n    max_neg=None\n  fi\n  if [[ $pos_count\
    \ -eq 0 ]]; then\n    min_pos=None\n  fi\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\
    \"]\"", "    local largest_negative=None\n    local smallest_positive=None\n \
    \   for i in $1; do\n        if [ $i -lt 0 ] && [ $i -gt $largest_negative ];\
    \ then\n            largest_negative=$i\n        elif [ $i -gt 0 ] && [ $i -lt\
    \ $smallest_positive ]; then\n            smallest_positive=$i\n        fi\n \
    \   done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local -a list\n  local -i i\n  local -i n\n  local -i largest_negative\n  local\
    \ -i smallest_positive\n  local -i first_positive_index\n  local -i first_negative_index\n\
    \  local -i first_zero_index\n  local -i first_non_zero_index\n  local -i first_non_zero_value\n\
    \  local -i first_zero_value\n  local -i first_positive_value\n  local -i first_negative_value\n\
    \  local -i first_non_zero_value\n  local -i first_zero_value\n  local -i first_positive_value\n\
    \  local -i first_negative_value\n  local -i first_non_zero_index\n  local -i\
    \ first_zero_index\n  local -i first_positive_index\n  local -i first_negative_index\n\
    \  local -i first_non_zero_index\n  local -i first_zero_index\n  local -i first_positive_index\n\
    \  local -i first_negative_index\n  local -i first_non_zero_index\n  local -i\
    \ first_zero_index\n  local -i first_positive_index\n  local -i first_negative_index\n\
    \  local -i first_non_zero_index\n  local -i first_zero_index\n  local -i first_positive_index\n\
    \  local -i first_negative_index\n  local -i first_non_zero_index\n  local -i\
    \ first_zero_index\n  local -i first_positive_index\n  local -i first_negative_index\n\
    \  local -i first_non_zero_index\n  local -i first_zero_index\n  local -i first_positive_index\n\
    \  local -i first_negative_index\n  local -i first_non_zero_index\n  local -i\
    \ first_zero_index\n  local -i first_positive_index\n  local -i first_negative_index\n\
    \  local -i first_non_zero_index\n  local -i first_zero_index\n  local -i first_positive_index\n\
    \  local -i first_negative_index\n  local -i first_non_zero_index\n  local -",
  "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n   \
    \ elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if\
    \ [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=$(printf \"%s\\\
    n\" \"${negative_list[@]}\" | sort -n | tail -1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a array=()\n  local -a negative_array=()\n  local -a positive_array=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  local i=0\n\
    \  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n\
    \  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n\
    \  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n\
    \  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local\
    \ gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n\
    \  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local\
    \ rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n\
    \  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local\
    \ ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n\
    \  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n \
    \ local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local\
    \ sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n\
    \  local yyy=0\n  local zzz=0\n  local aaaa=0", "  local -a list=($1)\n  local\
    \ -i largest_negative=0\n  local -i smallest_positive=0\n  local -i is_negative=0\n\
    \  local -i is_positive=0\n  local -i i=0\n  local -i n=${#list[@]}\n  for ((i=0;\
    \ i<n; i++)); do\n    if [[ ${list[i]} -lt 0 ]]; then\n      is_negative=1\n \
    \     if [[ ${list[i]} -gt $largest_negative ]]; then\n        largest_negative=${list[i]}\n\
    \      fi\n    elif [[ ${list[i]} -gt 0 ]]; then\n      is_positive=1\n      if\
    \ [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=${list[i]}\n\
    \      elif [[ ${list[i]} -lt $smallest_positive ]]; then\n        smallest_positive=${list[i]}\n\
    \      fi\n    fi\n  done\n  if [[ $is_negative -eq 0 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n  if [[ $is_positive -eq 0 ]]; then\n    smallest_positive=\"None\"\
    \n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", " \
    \ local largest_negative=None\n  local smallest_positive=None\n  for i in $1;\
    \ do\n    if [ $i -lt 0 ] && [ $i -gt $largest_negative ]; then\n      largest_negative=$i\n\
    \    elif [ $i -gt 0 ] && [ $i -lt $smallest_positive ]; then\n      smallest_positive=$i\n\
    \    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative\n    local smallest_positive\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            negative_list+=($i)\n     \
    \   elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n \
    \   done\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ '%s\\n' \"${negative_list[@]}\" | sort -nr | head -n1)\n    else\n        largest_negative=\"\
    None\"\n    fi\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ '%s\\n' \"${positive_list[@]}\" | sort -n | head -n1)\n    else\n        smallest_positive=\"\
    None\"\n    fi\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local -a result=()\n  local largest_negative\n  local smallest_positive\n\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n\
    \  if [[ ${#negative_list[@]} -eq 0 ]]; then\n    largest_negative=\"None\"\n\
    \  else\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort\
    \ -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]} -eq 0 ]]; then\n    smallest_positive=\"\
    None\"\n  else\n    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n\n  result+=(\"$largest_negative\")\n  result+=(\"\
    $smallest_positive\")\n\n  printf \"%s\" \"${result[@]}\"", "  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n\
    \      if [[ $largest_negative = None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $smallest_positive = None ]] || [[ $i -lt $smallest_positive ]]; then\n \
    \       smallest_positive=$i\n      fi\n    fi\n  done\n  echo [\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]", "  local list=\"$1\"\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $list; do\n    if [ $i -lt 0 ]; then\n\
    \      if [ $largest_negative = None ] || [ $i -gt $largest_negative ]; then\n\
    \        largest_negative=$i\n      fi\n    elif [ $i -gt 0 ]; then\n      if\
    \ [ $smallest_positive = None ] || [ $i -lt $smallest_positive ]; then\n     \
    \   smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local largest_negative=None\n\
    \  local smallest_positive=None\n\n  for i in \"${list[@]}\"; do\n    if [[ $i\
    \ -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n \
    \     positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]} -gt\
    \ 0 ]]; then\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\"\
    \ | sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\" | sort -n |\
    \ head -n1)\n  fi\n\n  result+=($largest_negative)\n  result+=($smallest_positive)\n\
    \n  echo ${result[@]}", "  local -a array=($1)\n  local -a negative_array=()\n\
    \  local -a positive_array=()\n  local -a result=()\n  for i in \"${array[@]}\"\
    ; do\n    if [[ $i -lt 0 ]]; then\n      negative_array+=($i)\n    elif [[ $i\
    \ -gt 0 ]]; then\n      positive_array+=($i)\n    fi\n  done\n  if [[ ${#negative_array[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_array[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positive_array[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_array[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "  local largest_negative=None\n  local smallest_positive=None\n  for i in $1; do\n\
    \    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None ]] || [[ $i\
    \ -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n    elif\
    \ [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None ]] || [[ $i -lt\
    \ $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n    fi\n\
    \  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a negative_numbers\n    local -a positive_numbers\n    local number\n\
    \    for number in $1; do\n        if [[ $number -lt 0 ]]; then\n            negative_numbers+=($number)\n\
    \        elif [[ $number -gt 0 ]]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n    if [[ ${#negative_numbers[@]} -eq 0 ]]; then\n    \
    \    echo '\"None\"'\n    else\n        echo '\"'$(printf '%s\\n' \"${negative_numbers[@]}\"\
    \ | sort -nr | head -n 1)'\"'\n    fi\n    if [[ ${#positive_numbers[@]} -eq 0\
    \ ]]; then\n        echo '\"None\"'\n    else\n        echo '\"'$(printf '%s\\\
    n' \"${positive_numbers[@]}\" | sort -n | head -n 1)'\"'\n    fi", "  local -a\
    \ list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n \
    \ local -i i=0\n  local -i len=${#list[@]}\n  local -i is_positive=0\n  local\
    \ -i is_negative=0\n  local -i is_zero=0\n  local -i is_first=1\n  local -i is_first_positive=1\n\
    \  local -i is_first_negative=1\n  local -i is_first_zero=1\n  local -i is_first_positive_or_zero=1\n\
    \  local -i is_first_negative_or_zero=1\n  local -i is_first_positive_or_negative=1\n\
    \  local -i is_first_positive_or_negative_or_zero=1\n  local -i is_first_positive_and_negative=1\n\
    \  local -i is_first_positive_and_negative_or_zero=1\n  local -i is_first_positive_and_negative_and_zero=1\n\
    \  local -i is_first_positive_or_negative_and_zero=1\n  local -i is_first_positive_and_negative_or_zero_and_zero=1\n\
    \  local -i is_first_positive_or_negative_and_zero_and_zero=1\n  local -i is_first_positive_and_negative_or_zero_and_zero_and_zero=1\n\
    \  local -i is_first_positive_or_negative_and_zero_and_zero_and_zero=1\n  local\
    \ -i is_first_positive_and_negative_or_zero_and_zero_and_zero_and_zero=1\n  local\
    \ -i is_first_positive_or_negative_and_zero_and_zero_and_zero_and_zero=1\n  local\
    \ -i is_first_positive_and_negative_or_zero_and_zero_and_zero_and_zero_and_zero=1\n\
    \  local -i is_first_positive_or_negative_and_zero_and_zero_and_zero_and_zero_and_zero=1\n",
  "    local -a list=($1)\n    local -a negatives=()\n    local -a positives=()\n\
    \    local -a result=()\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            negatives+=($i)\n        elif [[ $i -gt 0 ]]; then\n\
    \            positives+=($i)\n        fi\n    done\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1))\n    fi\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1))\n    fi\n    echo \"${result[@]}\"",
  "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if [ $i -lt 0 ]; then\n            if [ $largest_negative\
    \ = None ] || [ $i -gt $largest_negative ]; then\n                largest_negative=$i\n\
    \            fi\n        elif [ $i -gt 0 ]; then\n            if [ $smallest_positive\
    \ = None ] || [ $i -lt $smallest_positive ]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local largest_negative\n\
    \  local smallest_positive\n\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n     \
    \ positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]} -eq 0 ]];\
    \ then\n    largest_negative=\"None\"\n  else\n    largest_negative=$(printf \"\
    %s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -eq 0 ]]; then\n    smallest_positive=\"None\"\n  else\n    smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n 1)\n  fi\n\n  result+=(\"\
    $largest_negative\")\n  result+=(\"$smallest_positive\")\n\n  echo \"${result[@]}\"",
  "  local -a list=($1)\n  local -a negatives\n  local -a positives\n  local -a result\n\
    \  local i\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]} -lt 0\
    \ ]]; then\n      negatives+=(${list[$i]})\n    elif [[ ${list[$i]} -gt 0 ]];\
    \ then\n      positives+=(${list[$i]})\n    fi\n  done\n  if [[ ${#negatives[@]}\
    \ -gt 0 ]]; then\n    result+=($(printf '\"%s\"' \"${negatives[@]}\" | sort -nr\
    \ | head -n 1))\n  else\n    result+=('\"None\"')\n  fi\n  if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n    result+=($(printf '\"%s\"' \"${positives[@]}\" | sort -n\
    \ | head -n 1))\n  else\n    result+=('\"None\"')\n  fi\n  echo \"${result[@]}\"",
  "    local largest_negative smallest_positive\n    largest_negative=\"None\"\n \
    \   smallest_positive=\"None\"\n    for i in $1; do\n        if [[ $i -lt 0 ]];\
    \ then\n            if [[ $largest_negative == \"None\" ]]; then\n           \
    \     largest_negative=$i\n            elif [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == \"None\" ]]; then\n      \
    \          smallest_positive=$i\n            elif [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local list=$1\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in $list; do\n        if (( i < 0 )); then\n            if [[ $largest_negative\
    \ = None ]] || (( i > largest_negative )); then\n                largest_negative=$i\n\
    \            fi\n        elif (( i > 0 )); then\n            if [[ $smallest_positive\
    \ = None ]] || (( i < smallest_positive )); then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $1; do\n    if [ $i -lt 0 ]; then\n      if [ $largest_negative =\
    \ None ] || [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n\
    \      fi\n    elif [ $i -gt 0 ]; then\n      if [ $smallest_positive = None ]\
    \ || [ $i -lt $smallest_positive ]; then\n        smallest_positive=$i\n     \
    \ fi\n    fi\n  done\n  echo ['\"'$largest_negative'\"', '\"'$smallest_positive'\"\
    ']", "  local -a list=($1)\n  local -a negatives\n  local -a positives\n  local\
    \ -a result\n  local i\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ ${list[$i]}\
    \ -lt 0 ]]; then\n      negatives+=(${list[$i]})\n    elif [[ ${list[$i]} -gt\
    \ 0 ]]; then\n      positives+=(${list[$i]})\n    fi\n  done\n  if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negatives[@]}\" | sort -nr | head -n 1))\n  fi\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positives[@]}\" | sort -n | head -n 1))\n  fi\n  echo \"${result[@]}\"",
  "  local -a list=($1)\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local largest_negative_number\n  local smallest_positive_number\n \
    \ local number\n  local numbers=($1)\n  for number in \"${numbers[@]}\"; do\n\
    \    if [[ $number -lt 0 ]]; then\n      if [[ -z $largest_negative_number ]]\
    \ || [[ $number -gt $largest_negative_number ]]; then\n        largest_negative_number=$number\n\
    \      fi\n    elif [[ $number -gt 0 ]]; then\n      if [[ -z $smallest_positive_number\
    \ ]] || [[ $number -lt $smallest_positive_number ]]; then\n        smallest_positive_number=$number\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"${largest_negative_number:-None}\\\"\
    , \\\"${smallest_positive_number:-None}\\\"]\"", "  local -a list=($1)\n  local\
    \ -a negative_list\n  local -a positive_list\n  local largest_negative\n  local\
    \ smallest_positive\n  local i\n  for i in \"${list[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n     \
    \ positive_list+=($i)\n    fi\n  done\n  if [[ ${#negative_list[@]} -gt 0 ]];\
    \ then\n    largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort\
    \ -nr | head -n 1)\n  else\n    largest_negative=\"None\"\n  fi\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n  else\n    smallest_positive=\"None\"\n  fi\n  echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a\
    \ list=($1)\n    local max_negative=None\n    local min_positive=None\n    for\
    \ i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            if [[\
    \ $max_negative == None ]] || [[ $i -gt $max_negative ]]; then\n             \
    \   max_negative=$i\n            fi\n        elif [[ $i -gt 0 ]]; then\n     \
    \       if [[ $min_positive == None ]] || [[ $i -lt $min_positive ]]; then\n \
    \               min_positive=$i\n            fi\n        fi\n    done\n    echo\
    \ \"[\\\"$max_negative\\\", \\\"$min_positive\\\"]\"", "  local -a arr=($1)\n\
    \  local -a neg=()\n  local -a pos=()\n  local -a res=()\n  local i\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif\
    \ [[ $i -gt 0 ]]; then\n      pos+=(\"$i\")\n    fi\n  done\n  if [[ ${#neg[@]}\
    \ -gt 0 ]]; then\n    res+=(\"$(printf \"%s\\n\" \"${neg[@]}\" | sort -nr | head\
    \ -n 1)\")\n  else\n    res+=(\"None\")\n  fi\n  if [[ ${#pos[@]} -gt 0 ]]; then\n\
    \    res+=(\"$(printf \"%s\\n\" \"${pos[@]}\" | sort -n | head -n 1)\")\n  else\n\
    \    res+=(\"None\")\n  fi\n  echo \"${res[@]}\"", "  local -a arr=()\n  local\
    \ -a neg=()\n  local -a pos=()\n  local -a result=()\n  local i\n  local n\n \
    \ local p\n  local -i cnt=0\n  local -i neg_cnt=0\n  local -i pos_cnt=0\n  local\
    \ -i neg_max=0\n  local -i pos_min=0\n  local -i neg_max_idx=0\n  local -i pos_min_idx=0\n\
    \  local -i neg_max_cnt=0\n  local -i pos_min_cnt=0\n  local -i neg_max_cnt_idx=0\n\
    \  local -i pos_min_cnt_idx=0\n  local -i neg_max_cnt_idx_cnt=0\n  local -i pos_min_cnt_idx_cnt=0\n\
    \  local -i neg_max_cnt_idx_cnt_idx=0\n  local -i pos_min_cnt_idx_cnt_idx=0\n\
    \  local -i neg_max_cnt_idx_cnt_idx_cnt=0\n  local -i pos_min_cnt_idx_cnt_idx_cnt=0\n\
    \  local -i neg_max_cnt_idx_cnt_idx_cnt_idx=0\n  local -i pos_min_cnt_idx_cnt_idx_cnt_idx=0\n\
    \  local -i neg_max_cnt_idx_cnt_idx_cnt_idx_cnt=0\n  local -i pos_min_cnt_idx_cnt_idx_cnt_idx_cnt=0\n\
    \  local -i neg_max_cnt_idx_cnt_idx_cnt_idx_cnt_idx=0\n  local -i pos_min_cnt_idx_cnt_idx_cnt_idx_cnt_idx=0\n\
    \  local -i neg_max_cnt_idx_", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local largest_negative=None\n\
    \  local smallest_positive=None\n\n  for i in \"${list[@]}\"; do\n    if [[ $i\
    \ -lt 0 ]]; then\n      negative_list+=($i)\n    elif [[ $i -gt 0 ]]; then\n \
    \     positive_list+=($i)\n    fi\n  done\n\n  if [[ ${#negative_list[@]} -gt\
    \ 0 ]]; then\n    largest_negative=$(printf '%s\\n' \"${negative_list[@]}\" |\
    \ sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_list[@]} -gt 0 ]]; then\n\
    \    smallest_positive=$(printf '%s\\n' \"${positive_list[@]}\" | sort -n | head\
    \ -n1)\n  fi\n\n  result+=(\"$largest_negative\")\n  result+=(\"$smallest_positive\"\
    )\n\n  echo \"${result[@]}\"", "    local -a list=($1)\n    local -a positive\n\
    \    local -a negative\n    local -a result\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -lt 0 ]]; then\n            negative+=(\"$i\")\n        elif\
    \ [[ $i -gt 0 ]]; then\n            positive+=(\"$i\")\n        fi\n    done\n\
    \    if [[ ${#negative[@]} -eq 0 ]]; then\n        result+=(\"None\")\n    else\n\
    \        result+=(\"$(printf '%s\\n' \"${negative[@]}\" | sort -nr | head -n 1)\"\
    )\n    fi\n    if [[ ${#positive[@]} -eq 0 ]]; then\n        result+=(\"None\"\
    )\n    else\n        result+=(\"$(printf '%s\\n' \"${positive[@]}\" | sort -n\
    \ | head -n 1)\")\n    fi\n    echo \"${result[@]}\"", "    local list=\"$1\"\n\
    \    local largest_negative=None\n    local smallest_positive=None\n    for i\
    \ in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive\
    \ == None ]] || [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\",\
    \ \\\"$smallest_positive\\\"]\"", "    local list=$1\n    local largest_negative=None\n\
    \    local smallest_positive=None\n    for i in $list; do\n        if [ $i -lt\
    \ 0 ] && [ $i -gt $largest_negative ]; then\n            largest_negative=$i\n\
    \        elif [ $i -gt 0 ] && [ $i -lt $smallest_positive ]; then\n          \
    \  smallest_positive=$i\n        fi\n    done\n    echo ['\"'$largest_negative'\"\
    ', '\"'$smallest_positive'\"']", "  local -a list=($1)\n  local -a negative_list=()\n\
    \  local -a positive_list=()\n  local -a result=()\n  local -i i=0\n  local -i\
    \ len=${#list[@]}\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i number=0\n\n  for ((i=0; i<len; i++)); do\n    number=${list[$i]}\n\
    \    if ((number < 0)); then\n      negative_list+=($number)\n    elif ((number\
    \ > 0)); then\n      positive_list+=($number)\n    fi\n  done\n\n  if ((${#negative_list[@]}\
    \ > 0)); then\n    largest_negative=${negative_list[0]}\n    for ((i=1; i<${#negative_list[@]};\
    \ i++)); do\n      if ((largest_negative < ${negative_list[$i]})); then\n    \
    \    largest_negative=${negative_list[$i]}\n      fi\n    done\n  fi\n\n  if ((${#positive_list[@]}\
    \ > 0)); then\n    smallest_positive=${positive_list[0]}\n    for ((i=1; i<${#positive_list[@]};\
    \ i++)); do\n      if ((smallest_positive > ${positive_list[$i]})); then\n   \
    \     smallest_positive=${positive_list[$i]}\n      fi\n    done\n  fi\n\n  if\
    \ ((largest_negative == 0)); then\n    result+=(None)\n  else\n    result+=($largest_negative)\n\
    \  fi\n\n  if ((smallest_positive == 0)); then\n    result+=(None)\n  else\n \
    \   result+=($smallest_positive)\n  fi\n\n  echo \"${result[@]}\"", "  local list=$1\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  for i in $list;\
    \ do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None ]] ||\
    \ [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n\
    \    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None ]] || [[\
    \ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n\
    \    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a arr=()\n    local -a pos=()\n    local -a neg=()\n    local\
    \ -a res=()\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local aa\n    local bb\n    local cc\n    local dd\n    local\
    \ ee\n    local ff\n    local gg\n    local hh\n    local ii\n    local jj\n \
    \   local kk\n    local ll\n    local mm\n    local nn\n    local oo\n    local\
    \ pp\n    local qq\n    local rr\n    local ss\n    local tt\n    local uu\n \
    \   local vv\n    local ww\n    local xx\n    local yy\n    local zz\n    local\
    \ aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n    local fff\n\
    \    local ggg\n    local hhh\n    local iii\n    local jjj\n    local kkk\n \
    \   local lll\n    local mmm\n    local nnn\n    local ooo\n    local ppp\n  \
    \  local qqq\n    local rrr\n    local sss\n    local ttt\n    local uuu\n   \
    \ local vvv\n    local www\n    local xxx\n    local yyy\n    local zzz\n    local\
    \ aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local eeee\n    local\
    \ ffff\n    local gggg\n    local hhhh\n    local iiii\n    local jjjj\n    local\
    \ kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local oooo\n    local\
    \ pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local tttt\n    local\
    \ uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local yyyy\n    local\
    \ zzzz\n    local aaaaa\n    local bbbbb\n", "  local largest_negative=None\n\
    \  local smallest_positive=None\n  for i in $1; do\n    if [[ $i -lt 0 ]]; then\n\
    \      if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive ]]; then\n\
    \        smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a arr=()\n  local -a neg=()\n  local\
    \ -a pos=()\n  local -a res=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ n=0\n  local p=0\n  local max=0\n  local min=0\n  local -i len=0\n  local -i\
    \ len_neg=0\n  local -i len_pos=0\n  local -i len_res=0\n  local -i is_neg=0\n\
    \  local -i is_pos=0\n  local -i is_zero=0\n  local -i is_empty=0\n  local -i\
    \ is_one=0\n  local -i is_neg_one=0\n  local -i is_pos_one=0\n  local -i is_neg_zero=0\n\
    \  local -i is_pos_zero=0\n  local -i is_neg_zero_one=0\n  local -i is_pos_zero_one=0\n\
    \  local -i is_neg_one_zero=0\n  local -i is_pos_one_zero=0\n  local -i is_neg_zero_one_zero=0\n\
    \  local -i is_pos_zero_one_zero=0\n  local -i is_neg_zero_one_zero_one=0\n  local\
    \ -i is_pos_zero_one_zero_one=0\n  local -i is_neg_zero_one_zero_one_zero=0\n\
    \  local -i is_pos_zero_one_zero_one_zero=0\n  local -i is_neg_zero_one_zero_one_zero_one=0\n\
    \  local -i is_pos_zero_one_zero_one_zero_one=0\n  local -i is_neg_zero_one_zero_one_zero_one_zero=0\n\
    \  local -i is_pos_zero_one_zero_one_zero_one_zero=0\n  local -i is_neg_zero_one_zero_one_zero_one_zero_one=0\n\
    \  local -i is_pos_zero_one_zero_one_zero_one", "    local -a list=($1)\n    local\
    \ max_neg=0\n    local min_pos=0\n    local is_neg=0\n    local is_pos=0\n   \
    \ for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            is_neg=1\n\
    \            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n    \
    \        fi\n        elif [[ $i -gt 0 ]]; then\n            is_pos=1\n       \
    \     if [[ $min_pos -eq 0 ]]; then\n                min_pos=$i\n            elif\
    \ [[ $i -lt $min_pos ]]; then\n                min_pos=$i\n            fi\n  \
    \      fi\n    done\n    if [[ $is_neg -eq 0 ]]; then\n        max_neg=\"None\"\
    \n    fi\n    if [[ $is_pos -eq 0 ]]; then\n        min_pos=\"None\"\n    fi\n\
    \    echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", "    local -a arr=()\n  \
    \  local -a neg=()\n    local -a pos=()\n    local -a res=()\n    local i\n  \
    \  local n\n    local p\n    local -i n_len\n    local -i p_len\n    local -i\
    \ len\n    local -i n_max\n    local -i p_min\n\n    # Split the input string\
    \ into an array\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    # Split the array\
    \ into two arrays, one for negative integers\n    # and one for positive integers\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ neg+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n            pos+=(\"$i\")\n\
    \        fi\n    done\n\n    # Get the length of the two arrays\n    n_len=${#neg[@]}\n\
    \    p_len=${#pos[@]}\n\n    # Get the largest of negative integers\n    if [[\
    \ $n_len -gt 0 ]]; then\n        n_max=${neg[0]}\n        for i in \"${neg[@]}\"\
    ; do\n            if [[ $i -gt $n_max ]]; then\n                n_max=$i\n   \
    \         fi\n        done\n    else\n        n_max=None\n    fi\n\n    # Get\
    \ the smallest of positive integers\n    if [[ $p_len -gt 0 ]]; then\n       \
    \ p_min=${pos[0]}\n        for i in \"${pos[@]}\"; do\n            if [[ $i -lt\
    \ $p_min ]]; then\n                p_min=$i\n            fi\n        done\n  \
    \  else\n        p_min=None\n    fi\n\n    # Return the result\n    echo \"[\\\
    \"$n_max\\\", \\\"$p_min\\\"]\"", "    local -a list=($1)\n    local -a negative\n\
    \    local -a positive\n    local -a result\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n   \
    \ local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0", "  local -a list=($1)\n\
    \  local largest_negative=None\n  local smallest_positive=None\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative =\
    \ None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive = None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local list=\"$1\"\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative\
    \ == None ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local largest_negative=None\n  local smallest_positive=None\n\n  for i in \"\
    ${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n   \
    \ elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n  if\
    \ [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=$(printf '%s\\\
    n' \"${negative_list[@]}\" | sort -nr | head -n1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf '%s\\n' \"${positive_list[@]}\"\
    \ | sort -n | head -n1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local largest_negative smallest_positive\n  largest_negative=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | grep -E '^-.*' | tail -n 1)\n  smallest_positive=$(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | grep -E '^[0-9].*' | head -n 1)\n  if [ -z\
    \ \"$largest_negative\" ]; then\n    largest_negative=\"None\"\n  fi\n  if [ -z\
    \ \"$smallest_positive\" ]; then\n    smallest_positive=\"None\"\n  fi\n  echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "    local -a\
    \ a=($1)\n    local -a b=()\n    local -a c=()\n    local -a d=()\n    for i in\
    \ ${a[@]}; do\n        if [[ $i -lt 0 ]]; then\n            b+=($i)\n        elif\
    \ [[ $i -gt 0 ]]; then\n            c+=($i)\n        fi\n    done\n    if [[ ${#b[@]}\
    \ -eq 0 ]]; then\n        d+=(None)\n    else\n        d+=($(printf \"%s\\n\"\
    \ ${b[@]} | sort -nr | head -n1))\n    fi\n    if [[ ${#c[@]} -eq 0 ]]; then\n\
    \        d+=(None)\n    else\n        d+=($(printf \"%s\\n\" ${c[@]} | sort -n\
    \ | head -n1))\n    fi\n    echo ${d[@]}", "  local -a list=($1)\n  local -a negatives=()\n\
    \  local -a positives=()\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=(\"\
    $i\")\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"$i\")\n    fi\n  done\n\
    \  if [[ ${#negatives[@]} -gt 0 ]]; then\n    largest_negative=$(printf \"%s\\\
    n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n  fi\n  if [[ ${#positives[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positives[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local largest_negative_integer=None\n    local smallest_positive_integer=None\n\
    \    for i in $1; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $largest_negative_integer\
    \ = None ]]; then\n                largest_negative_integer=$i\n            elif\
    \ [[ $i -gt $largest_negative_integer ]]; then\n                largest_negative_integer=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive_integer\
    \ = None ]]; then\n                smallest_positive_integer=$i\n            elif\
    \ [[ $i -lt $smallest_positive_integer ]]; then\n                smallest_positive_integer=$i\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative_integer\\\
    \", \\\"$smallest_positive_integer\\\"]\"", "  local -a numbers=($1)\n  local\
    \ largest_negative=None\n  local smallest_positive=None\n  local number\n  for\
    \ number in \"${numbers[@]}\"; do\n    if [[ $number -lt 0 ]]; then\n      if\
    \ [[ $largest_negative == None ]] || [[ $number -gt $largest_negative ]]; then\n\
    \        largest_negative=$number\n      fi\n    elif [[ $number -gt 0 ]]; then\n\
    \      if [[ $smallest_positive == None ]] || [[ $number -lt $smallest_positive\
    \ ]]; then\n        smallest_positive=$number\n      fi\n    fi\n  done\n  echo\
    \ \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"", "  local -a negative_integers\n\
    \  local -a positive_integers\n  local -a integers=($1)\n  for integer in \"${integers[@]}\"\
    ; do\n    if [[ $integer -lt 0 ]]; then\n      negative_integers+=($integer)\n\
    \    elif [[ $integer -gt 0 ]]; then\n      positive_integers+=($integer)\n  \
    \  fi\n  done\n  if [[ ${#negative_integers[@]} -eq 0 ]]; then\n    negative_integers+=(\"\
    None\")\n  fi\n  if [[ ${#positive_integers[@]} -eq 0 ]]; then\n    positive_integers+=(\"\
    None\")\n  fi\n  echo \"[\\\"$(echo \"${negative_integers[@]}\" | sort -nr | head\
    \ -n 1)\\\", \\\"$(echo \"${positive_integers[@]}\" | sort -n | head -n 1)\\\"\
    ]\"", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=0\n  local", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n\
    \  local -a res=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n  local -i lll=0\n  local -", "    local -a list=($1)\n    local -i\
    \ largest_negative=0\n    local -i smallest_positive=0\n    local -i i=0\n   \
    \ local -i len=${#list[@]}\n    local -i is_largest_negative_set=0\n    local\
    \ -i is_smallest_positive_set=0\n\n    while [ $i -lt $len ]; do\n        if [\
    \ ${list[$i]} -lt 0 ]; then\n            if [ $is_largest_negative_set -eq 0 ];\
    \ then\n                largest_negative=${list[$i]}\n                is_largest_negative_set=1\n\
    \            elif [ ${list[$i]} -gt $largest_negative ]; then\n              \
    \  largest_negative=${list[$i]}\n            fi\n        elif [ ${list[$i]} -gt\
    \ 0 ]; then\n            if [ $is_smallest_positive_set -eq 0 ]; then\n      \
    \          smallest_positive=${list[$i]}\n                is_smallest_positive_set=1\n\
    \            elif [ ${list[$i]} -lt $smallest_positive ]; then\n             \
    \   smallest_positive=${list[$i]}\n            fi\n        fi\n        ((i++))\n\
    \    done\n\n    if [ $is_largest_negative_set -eq 0 ]; then\n        largest_negative=\"\
    None\"\n    fi\n    if [ $is_smallest_positive_set -eq 0 ]; then\n        smallest_positive=\"\
    None\"\n    fi\n\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local largest_negative=None\n  local smallest_positive=None\n  for\
    \ i in $1; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $largest_negative == None\
    \ ]] || [[ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n  \
    \    fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $smallest_positive == None\
    \ ]] || [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a list\n    local -a positive\n    local -a negative\n   \
    \ local -a result\n    local i\n    list=($1)\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -lt 0 ]]; then\n            negative+=(\"$i\")\n        elif\
    \ [[ $i -gt 0 ]]; then\n            positive+=(\"$i\")\n        fi\n    done\n\
    \    if [[ ${#negative[@]} -eq 0 ]]; then\n        result+=('\"None\"')\n    else\n\
    \        result+=(\"$(printf '\"%s\"' \"${negative[@]}\" | sort -n | tail -n 1)\"\
    )\n    fi\n    if [[ ${#positive[@]} -eq 0 ]]; then\n        result+=('\"None\"\
    ')\n    else\n        result+=(\"$(printf '\"%s\"' \"${positive[@]}\" | sort -n\
    \ | head -n 1)\")\n    fi\n    echo \"${result[@]}\"", "  local -a arr=()\n  local\
    \ -a neg=()\n  local -a pos=()\n  local -a res=()\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n\
    \  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n \
    \ local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local\
    \ ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n\
    \  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local c", "    local -a list=($1)\n\
    \    local -i max_neg=0\n    local -i min_pos=0\n    local -i i=0\n    local -i\
    \ len=${#list[@]}\n    local -i found_neg=0\n    local -i found_pos=0\n\n    while\
    \ [ $i -lt $len ]; do\n        if [ ${list[$i]} -lt 0 ]; then\n            if\
    \ [ $found_neg -eq 0 ]; then\n                max_neg=${list[$i]}\n          \
    \      found_neg=1\n            elif [ ${list[$i]} -gt $max_neg ]; then\n    \
    \            max_neg=${list[$i]}\n            fi\n        elif [ ${list[$i]} -gt\
    \ 0 ]; then\n            if [ $found_pos -eq 0 ]; then\n                min_pos=${list[$i]}\n\
    \                found_pos=1\n            elif [ ${list[$i]} -lt $min_pos ]; then\n\
    \                min_pos=${list[$i]}\n            fi\n        fi\n        i=$i+1\n\
    \    done\n\n    if [ $found_neg -eq 0 ]; then\n        max_neg=\"None\"\n   \
    \ fi\n    if [ $found_pos -eq 0 ]; then\n        min_pos=\"None\"\n    fi\n\n\
    \    echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", "    local -a arr=(\"$@\"\
    )\n    local -a negatives=()\n    local -a positives=()\n    local -i i=0\n  \
    \  local -i len=${#arr[@]}\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i number=0\n\n    for ((i=0; i<len; i++)); do\n        number=${arr[$i]}\n\
    \        if ((number < 0)); then\n            negatives+=(\"$number\")\n     \
    \   elif ((number > 0)); then\n            positives+=(\"$number\")\n        fi\n\
    \    done\n\n    if ((${#negatives[@]} > 0)); then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n    else\n        largest_negative=None\n\
    \    fi\n\n    if ((${#positives[@]} > 0)); then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1)\n    else\n        smallest_positive=None\n\
    \    fi\n\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "    local -a list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [ \"$i\" -lt 0 ] && [ \"$largest_negative\"\
    \ = None ] || [ \"$i\" -gt \"$largest_negative\" ]; then\n            largest_negative=\"\
    $i\"\n        fi\n        if [ \"$i\" -gt 0 ] && [ \"$smallest_positive\" = None\
    \ ] || [ \"$i\" -lt \"$smallest_positive\" ]; then\n            smallest_positive=\"\
    $i\"\n        fi\n    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local -a list=($1)\n  local -a negative_list=()\n  local -a positive_list=()\n\
    \  local largest_negative_integer=None\n  local smallest_positive_integer=None\n\
    \n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n\
    \  if [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative_integer=$(printf\
    \ \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive_integer=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative_integer\\\"\
    , \\\"$smallest_positive_integer\\\"]\"", "    local -a array=($1)\n    local\
    \ -a negatives\n    local -a positives\n    local -a result\n    local i\n   \
    \ local n\n    local p\n\n    for i in \"${array[@]}\"; do\n        if (( i <\
    \ 0 )); then\n            negatives+=($i)\n        elif (( i > 0 )); then\n  \
    \          positives+=($i)\n        fi\n    done\n\n    if (( ${#negatives[@]}\
    \ > 0 )); then\n        n=$(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr |\
    \ head -n 1)\n    else\n        n=\"None\"\n    fi\n\n    if (( ${#positives[@]}\
    \ > 0 )); then\n        p=$(printf \"%s\\n\" \"${positives[@]}\" | sort -n | head\
    \ -n 1)\n    else\n        p=\"None\"\n    fi\n\n    result=($n $p)\n    echo\
    \ \"${result[@]}\"", "    local -a arr=()\n    local -a pos=()\n    local -a neg=()\n\
    \    local -a res=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local n=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n \
    \   local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n\
    \    local cccc=0\n   ", "  local list=$1\n  local largest_negative=None\n  local\
    \ smallest_positive=None\n  for i in $list; do\n    if [ $i -lt 0 ]; then\n  \
    \    if [ $largest_negative = None ] || [ $i -gt $largest_negative ]; then\n \
    \       largest_negative=$i\n      fi\n    elif [ $i -gt 0 ]; then\n      if [\
    \ $smallest_positive = None ] || [ $i -lt $smallest_positive ]; then\n       \
    \ smallest_positive=$i\n      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local list=$1\n  local largest_negative=None\n\
    \  local smallest_positive=None\n  local number\n  for number in $list; do\n \
    \   if [ $number -lt 0 ]; then\n      if [ $largest_negative = None ] || [ $number\
    \ -gt $largest_negative ]; then\n        largest_negative=$number\n      fi\n\
    \    elif [ $number -gt 0 ]; then\n      if [ $smallest_positive = None ] || [\
    \ $number -lt $smallest_positive ]; then\n        smallest_positive=$number\n\
    \      fi\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "    local -a arr\n    local -i i\n    local -i max_neg\n    local -i\
    \ min_pos\n    local -i count\n    local -i len\n    local -i is_neg\n    local\
    \ -i is_pos\n    local -i is_zero\n\n    arr=($1)\n    len=${#arr[@]}\n    max_neg=0\n\
    \    min_pos=0\n    count=0\n    is_neg=0\n    is_pos=0\n    is_zero=0\n\n   \
    \ for ((i=0; i<len; i++)); do\n        if [[ ${arr[i]} -lt 0 ]]; then\n      \
    \      is_neg=1\n            if [[ ${arr[i]} -gt $max_neg ]]; then\n         \
    \       max_neg=${arr[i]}\n            fi\n        elif [[ ${arr[i]} -gt 0 ]];\
    \ then\n            is_pos=1\n            if [[ $count -eq 0 ]]; then\n      \
    \          min_pos=${arr[i]}\n            elif [[ ${arr[i]} -lt $min_pos ]]; then\n\
    \                min_pos=${arr[i]}\n            fi\n            count=1\n    \
    \    else\n            is_zero=1\n        fi\n    done\n\n    if [[ $is_neg -eq\
    \ 0 ]]; then\n        max_neg=\"None\"\n    fi\n\n    if [[ $is_pos -eq 0 ]];\
    \ then\n        min_pos=\"None\"\n    fi\n\n    if [[ $is_zero -eq 1 ]]; then\n\
    \        max_neg=\"None\"\n        min_pos=\"None\"\n    fi\n\n    echo \"[\\\"\
    $max_neg\\\", \\\"$min_pos\\\"]\"", "    local -a list\n    local -i i\n    local\
    \ -i max_neg min_pos\n    local -i max_neg_set min_pos_set\n\n    list=($1)\n\
    \    max_neg_set=0\n    min_pos_set=0\n    for ((i=0; i<${#list[@]}; i++)); do\n\
    \        if [[ ${list[$i]} -lt 0 ]]; then\n            if [[ $max_neg_set -eq\
    \ 0 ]]; then\n                max_neg=${list[$i]}\n                max_neg_set=1\n\
    \            else\n                if [[ ${list[$i]} -gt $max_neg ]]; then\n \
    \                   max_neg=${list[$i]}\n                fi\n            fi\n\
    \        elif [[ ${list[$i]} -gt 0 ]]; then\n            if [[ $min_pos_set -eq\
    \ 0 ]]; then\n                min_pos=${list[$i]}\n                min_pos_set=1\n\
    \            else\n                if [[ ${list[$i]} -lt $min_pos ]]; then\n \
    \                   min_pos=${list[$i]}\n                fi\n            fi\n\
    \        fi\n    done\n\n    if [[ $max_neg_set -eq 0 ]]; then\n        max_neg=\"\
    None\"\n    fi\n    if [[ $min_pos_set -eq 0 ]]; then\n        min_pos=\"None\"\
    \n    fi\n\n    echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"", "  local -a arr=($1)\n\
    \  local max_neg=0\n  local min_pos=0\n  local first_neg=0\n  local first_pos=0\n\
    \  local i=0\n  local len=${#arr[@]}\n  for ((i=0; i<len; i++)); do\n    if [[\
    \ ${arr[$i]} -lt 0 ]]; then\n      if [[ $first_neg -eq 0 ]]; then\n        max_neg=${arr[$i]}\n\
    \        first_neg=1\n      else\n        if [[ ${arr[$i]} -gt $max_neg ]]; then\n\
    \          max_neg=${arr[$i]}\n        fi\n      fi\n    elif [[ ${arr[$i]} -gt\
    \ 0 ]]; then\n      if [[ $first_pos -eq 0 ]]; then\n        min_pos=${arr[$i]}\n\
    \        first_pos=1\n      else\n        if [[ ${arr[$i]} -lt $min_pos ]]; then\n\
    \          min_pos=${arr[$i]}\n        fi\n      fi\n    fi\n  done\n  if [[ $first_neg\
    \ -eq 0 ]]; then\n    max_neg=\"None\"\n  fi\n  if [[ $first_pos -eq 0 ]]; then\n\
    \    min_pos=\"None\"\n  fi\n  echo \"[\\\"$max_neg\\\", \\\"$min_pos\\\"]\"",
  "    local -a array=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_positive=0\n\
    \    local -i is_negative=0\n    local -i is_zero=0\n    local -i is_non_zero=0\n\
    \    local -i is_non_zero_positive=0\n    local -i is_non_zero_negative=0\n  \
    \  local -i is_non_zero_positive_or_negative=0\n    local -i is_non_zero_positive_and_negative=0\n\
    \    local -i is_non_zero_positive_and_negative_and_zero=0\n    local -i is_non_zero_positive_or_negative_and_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_or_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_and_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_and_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_and_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_and_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_and_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local -i is_non_zero_positive_or_negative_and_zero=0\n    local -i is_non_zero_positive_and_negative_or_zero=0\n\
    \    local", "    local -a arr=()\n    local -a neg=()\n    local -a pos=()\n\
    \    local -a res=()\n    local i=0\n    local j=0\n    local k=0\n    local n=0\n\
    \    local m=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local dddd=0", "  local -a arr=($1)\n  local -a neg\n  local -a pos\n  local\
    \ -a res\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      neg+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      pos+=($i)\n    fi\n  done\n  if [[ ${#neg[@]}\
    \ -eq 0 ]]; then\n    res+=(None)\n  else\n    res+=($(printf \"%s\\n\" \"${neg[@]}\"\
    \ | sort -nr | head -n1))\n  fi\n  if [[ ${#pos[@]} -eq 0 ]]; then\n    res+=(None)\n\
    \  else\n    res+=($(printf \"%s\\n\" \"${pos[@]}\" | sort -n | head -n1))\n \
    \ fi\n  echo \"${res[@]}\"", "  local list=\"$1\"\n  local largest_negative_integer=None\n\
    \  local smallest_positive_integer=None\n  for integer in $list; do\n    if [[\
    \ $integer -lt 0 ]]; then\n      if [[ $largest_negative_integer == None ]]; then\n\
    \        largest_negative_integer=$integer\n      elif [[ $integer -gt $largest_negative_integer\
    \ ]]; then\n        largest_negative_integer=$integer\n      fi\n    elif [[ $integer\
    \ -gt 0 ]]; then\n      if [[ $smallest_positive_integer == None ]]; then\n  \
    \      smallest_positive_integer=$integer\n      elif [[ $integer -lt $smallest_positive_integer\
    \ ]]; then\n        smallest_positive_integer=$integer\n      fi\n    fi\n  done\n\
    \  echo \"[\\\"$largest_negative_integer\\\", \\\"$smallest_positive_integer\\\
    \"]\"", "    local -a list=($1)\n    local largest_negative=None\n    local smallest_positive=None\n\
    \    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  if [[ $largest_negative == None ]] || [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n            fi\n        elif [[ $i -gt 0\
    \ ]]; then\n            if [[ $smallest_positive == None ]] || [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"]\"",
  "  local -a list=($1)\n  local -a negatives\n  local -a positives\n  for i in \"\
    ${list[@]}\"; do\n    if (( i < 0 )); then\n      negatives+=($i)\n    elif ((\
    \ i > 0 )); then\n      positives+=($i)\n    fi\n  done\n  local largest_negative=${negatives[0]}\n\
    \  local smallest_positive=${positives[0]}\n  for i in \"${negatives[@]}\"; do\n\
    \    if (( i > largest_negative )); then\n      largest_negative=$i\n    fi\n\
    \  done\n  for i in \"${positives[@]}\"; do\n    if (( i < smallest_positive ));\
    \ then\n      smallest_positive=$i\n    fi\n  done\n  if [[ -z $largest_negative\
    \ ]]; then\n    largest_negative=\"None\"\n  fi\n  if [[ -z $smallest_positive\
    \ ]]; then\n    smallest_positive=\"None\"\n  fi\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "    local list=\"$1\"\n    local largest_negative_integer=None\n\
    \    local smallest_positive_integer=None\n    for integer in $list; do\n    \
    \    if [[ $integer -lt 0 ]]; then\n            if [[ $largest_negative_integer\
    \ == None ]]; then\n                largest_negative_integer=$integer\n      \
    \      elif [[ $integer -gt $largest_negative_integer ]]; then\n             \
    \   largest_negative_integer=$integer\n            fi\n        elif [[ $integer\
    \ -gt 0 ]]; then\n            if [[ $smallest_positive_integer == None ]]; then\n\
    \                smallest_positive_integer=$integer\n            elif [[ $integer\
    \ -lt $smallest_positive_integer ]]; then\n                smallest_positive_integer=$integer\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$largest_negative_integer\\\
    \", \\\"$smallest_positive_integer\\\"]\"", "  local -a arr=($1)\n  local -i max_neg=0\n\
    \  local -i min_pos=0\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i is_neg=0\n\
    \  local -i is_pos=0\n  local -i is_zero=0\n  local -i is_not_zero=0\n  local\
    \ -i is_not_neg=0\n  local -i is_not_pos=0\n  local -i is_neg_or_zero=0\n  local\
    \ -i is_pos_or_zero=0\n  local -i is_neg_or_pos=0\n  local -i is_neg_and_pos=0\n\
    \  local -i is_neg_and_zero=0\n  local -i is_pos_and_zero=0\n  local -i is_neg_and_pos_and_zero=0\n\
    \  local -i is_neg_or_pos_or_zero=0\n  local -i is_neg_and_pos_or_zero=0\n  local\
    \ -i is_neg_or_pos_and_zero=0\n  local -i is_neg_and_pos_and_zero=0\n  local -i\
    \ is_neg_or_pos_or_zero=0\n  local -i is_neg_and_pos_or_zero=0\n  local -i is_neg_or_pos_and_zero=0\n\
    \  local -i is_neg_and_pos_and_zero=0\n  local -i is_neg_or_pos_or_zero=0\n  local\
    \ -i is_neg_and_pos_or_zero=0\n  local -i is_neg_or_pos_and_zero=0\n  local -i\
    \ is_neg_and_pos_and_zero=0\n  local -i is_neg_or_pos_or_zero=0\n  local -i is_neg_and_pos_or_zero=0\n\
    \  local -i is_neg_or_pos_and_zero=0\n  local -i is_neg_and_pos_and_zero=0\n \
    \ local -i", "    local -a negative_integers positive_integers\n    local -i i\n\
    \    for i in $1; do\n        if (( i < 0 )); then\n            negative_integers+=($i)\n\
    \        elif (( i > 0 )); then\n            positive_integers+=($i)\n       \
    \ fi\n    done\n    if (( ${#negative_integers[@]} == 0 )); then\n        echo\
    \ '\"None\"'\n    else\n        echo \"\\\"$(printf '%s\\n' \"${negative_integers[@]}\"\
    \ | sort -nr | head -n 1)\\\"\"\n    fi\n    if (( ${#positive_integers[@]} ==\
    \ 0 )); then\n        echo '\"None\"'\n    else\n        echo \"\\\"$(printf '%s\\\
    n' \"${positive_integers[@]}\" | sort -n | head -n 1)\\\"\"\n    fi", "  local\
    \ list=\"$1\"\n  local largest_negative=None\n  local smallest_positive=None\n\
    \  for i in $list; do\n    if [ $i -lt 0 ] && [ $i -gt $largest_negative ]; then\n\
    \      largest_negative=$i\n    elif [ $i -gt 0 ] && [ $i -lt $smallest_positive\
    \ ]; then\n      smallest_positive=$i\n    fi\n  done\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "  local -a list=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i i=0\n  local -i len=${#list[@]}\n\
    \  local -i is_largest_negative_set=0\n  local -i is_smallest_positive_set=0\n\
    \n  while (( i < len )); do\n    if (( list[i] < 0 )); then\n      if (( is_largest_negative_set\
    \ == 0 )); then\n        largest_negative=${list[i]}\n        is_largest_negative_set=1\n\
    \      elif (( list[i] > largest_negative )); then\n        largest_negative=${list[i]}\n\
    \      fi\n    elif (( list[i] > 0 )); then\n      if (( is_smallest_positive_set\
    \ == 0 )); then\n        smallest_positive=${list[i]}\n        is_smallest_positive_set=1\n\
    \      elif (( list[i] < smallest_positive )); then\n        smallest_positive=${list[i]}\n\
    \      fi\n    fi\n    (( i++ ))\n  done\n\n  if (( is_largest_negative_set ==\
    \ 0 )); then\n    largest_negative=\"None\"\n  fi\n\n  if (( is_smallest_positive_set\
    \ == 0 )); then\n    smallest_positive=\"None\"\n  fi\n\n  echo \"[\\\"$largest_negative\\\
    \", \\\"$smallest_positive\\\"]\"", "    if [[ $# -eq 0 ]]; then\n        echo\
    \ '[\"None\", \"None\"]'\n        return\n    fi\n\n    local largest_negative=None\n\
    \    local smallest_positive=None\n\n    for i in $@; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            if [[ $largest_negative == None ]]; then\n         \
    \       largest_negative=$i\n            elif [[ $i -gt $largest_negative ]];\
    \ then\n                largest_negative=$i\n            fi\n        elif [[ $i\
    \ -gt 0 ]]; then\n            if [[ $smallest_positive == None ]]; then\n    \
    \            smallest_positive=$i\n            elif [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n            fi\n        fi\n\
    \    done\n\n    echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\"\
    ]\"", "  local -a arr=($1)\n  local -a neg_arr=()\n  local -a pos_arr=()\n  local\
    \ -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n\
    \  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local\
    \ -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll", "  local -a list=($1)\n  local -a negative_list=()\n  local\
    \ -a positive_list=()\n  local largest_negative=None\n  local smallest_positive=None\n\
    \n  for i in \"${list[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negative_list+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positive_list+=($i)\n    fi\n  done\n\n\
    \  if [[ ${#negative_list[@]} -gt 0 ]]; then\n    largest_negative=$(printf \"\
    %s\\n\" \"${negative_list[@]}\" | sort -nr | head -n 1)\n  fi\n\n  if [[ ${#positive_list[@]}\
    \ -gt 0 ]]; then\n    smallest_positive=$(printf \"%s\\n\" \"${positive_list[@]}\"\
    \ | sort -n | head -n 1)\n  fi\n\n  echo \"[\\\"$largest_negative\\\", \\\"$smallest_positive\\\
    \"]\"", "  local largest_negative smallest_positive\n  local -a negative_array\
    \ positive_array\n  local -a input_array\n  local -i i\n  local -i len\n  local\
    \ -i largest_negative_index smallest_positive_index\n\n  # Split the input string\
    \ into an array\n  input_array=($1)\n\n  # Get the length of the array\n  len=${#input_array[@]}\n\
    \n  # Iterate through the array\n  for ((i=0; i<len; i++)); do\n    # If the element\
    \ is negative\n    if ((input_array[i] < 0)); then\n      # Add it to the negative\
    \ array\n      negative_array+=(${input_array[i]})\n    # If the element is positive\n\
    \    elif ((input_array[i] > 0)); then\n      # Add it to the positive array\n\
    \      positive_array+=(${input_array[i]})\n    fi\n  done\n\n  # Get the length\
    \ of the negative array\n  len=${#negative_array[@]}\n\n  # If the negative array\
    \ is not empty\n  if ((len > 0)); then\n    # Get the index of the largest negative\
    \ element\n    largest_negative_index=$(index_of_largest_element \"${negative_array[@]}\"\
    )\n    # Get the largest negative element\n    largest_negative=${negative_array[largest_negative_index]}\n\
    \  fi\n\n  # Get the length of the positive array\n  len=${#positive_array[@]}\n\
    \n  # If the positive array is not empty\n  if ((len > 0)); then\n    # Get the\
    \ index of the smallest positive element\n    smallest_positive_index=$(index_of_smallest_element\
    \ \"${positive_array[@]}\")\n    # Get the smallest positive element\n    smallest_positive=${positive_array[smallest_positive_index]}\n\
    \  fi\n\n  # Return the largest negative and smallest positive elements\n  echo\
    \ \"[\\\"${largest_negative:-None}\\\", \\\"${smallest_positive:-None}\\\"]\""]
stop_tokens:
- "\n}"

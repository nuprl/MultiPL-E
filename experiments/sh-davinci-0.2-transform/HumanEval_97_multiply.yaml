name: HumanEval_97_multiply
language: sh
prompt: "#!/bin/bash\n# Complete the function that takes two integers and returns\
  \ \n# the product of their unit digits.\n# Assume the input is always valid.\n#\
  \ Examples:\n# >>> $(multiply \"148\" \"412\")\n# \"16\"\n# >>> $(multiply \"19\"\
  \ \"28\")\n# \"72\"\n# >>> $(multiply \"2020\" \"1851\")\n# \"0\"\n# >>> $(multiply\
  \ \"14\" \"-15\")\n# \"20\"\n#\n# $1 is an integer\n# $2 is an integer\nmultiply()\
  \ {\n"
tests: "}\n\ncandidate() {\n    multiply \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"148\" \"412\") = \"16\" ]]\n    [[ $(candidate \"19\" \"28\") =\
  \ \"72\" ]]\n    [[ $(candidate \"2020\" \"1851\") = \"0\" ]]\n    [[ $(candidate\
  \ \"14\" \"-15\") = \"20\" ]]\n    [[ $(candidate \"76\" \"67\") = \"42\" ]]\n \
  \   [[ $(candidate \"17\" \"27\") = \"49\" ]]\n    [[ $(candidate \"0\" \"1\") =\
  \ \"0\" ]]\n    [[ $(candidate \"0\" \"0\") = \"0\" ]]\n}\n\nrun_test"
completions: ['    echo $(( $1 % 10 * $2 % 10 ))', '    echo $(( $1 % 10 * $2 % 10
    ))', '  echo $(( ${1: -1} * ${2: -1} ))', '    echo $(( $1 % 10 * $2 % 10 ))',
  "    # Write your code here\n    echo $(( $1 % 10 * $2 % 10 ))", "  # your code\
    \ here\n  echo $(( $1 % 10 * $2 % 10 ))", '    echo $(( $1 % 10 * $2 % 10 ))',
  "  # Write your code here\n  echo $(( $1 % 10 * $2 % 10 ))", '    echo $(( $1 %
    10 * $2 % 10 ))', "  # your code here\n  echo $(( $(echo $1 | sed 's/.*\\(.\\\
    )$/\\1/') * $(echo $2 | sed 's/.*\\(.\\)$/\\1/') ))", '  echo $(($1 % 10 * $2
    % 10))', "  echo \"$1\" | grep -q \"-\" && sign=\"-\" || sign=\"\"\n  echo \"\
    $1\" | grep -q \"-\" && num1=$(echo \"$1\" | sed 's/-//') || num1=\"$1\"\n  echo\
    \ \"$2\" | grep -q \"-\" && num2=$(echo \"$2\" | sed 's/-//') || num2=\"$2\"\n\
    \  echo \"$num1\" | grep -q \"0\" && echo \"0\" && return 0\n  echo \"$num2\"\
    \ | grep -q \"0\" && echo \"0\" && return 0\n  echo \"$num1\" | grep -q \"1\"\
    \ && echo \"$num2\" | grep -q \"1\" && echo \"$sign\"1 && return 0\n  echo \"\
    $num1\" | grep -q \"1\" && echo \"$sign\"\"$(echo \"$num2\" | sed 's/.$//')\"\
    \ && return 0\n  echo \"$num2\" | grep -q \"1\" && echo \"$sign\"\"$(echo \"$num1\"\
    \ | sed 's/.$//')\" && return 0\n  echo \"$sign\"\"$(echo \"$num1\" | sed 's/.$//')\"\
    \"$(echo \"$num2\" | sed 's/.$//')\"", "  echo $(( $(echo $1 | sed 's/.//') *\
    \ $(echo $2 | sed 's/.//') ))", "    echo \"$1\" | grep -q '^-' && sign1=\"-\"\
    \ || sign1=\"+\"\n    echo \"$2\" | grep -q '^-' && sign2=\"-\" || sign2=\"+\"\
    \n    echo \"$1\" | grep -q '^-' && num1=\"$(echo \"$1\" | sed 's/^-//')\" ||\
    \ num1=\"$1\"\n    echo \"$2\" | grep -q '^-' && num2=\"$(echo \"$2\" | sed 's/^-//')\"\
    \ || num2=\"$2\"\n    echo \"$num1\" | grep -q '^0' && num1=\"$(echo \"$num1\"\
    \ | sed 's/^0//')\"\n    echo \"$num2\" | grep -q '^0' && num2=\"$(echo \"$num2\"\
    \ | sed 's/^0//')\"\n    if [ \"$num1\" = \"\" ] || [ \"$num2\" = \"\" ]; then\n\
    \        echo \"0\"\n    else\n        echo \"$num1\" | grep -q '^[0-9]$' && num1=\"\
    $num1\" || num1=\"$(echo \"$num1\" | sed 's/.$//')\"\n        echo \"$num2\" |\
    \ grep -q '^[0-9]$' && num2=\"$num2\" || num2=\"$(echo \"$num2\" | sed 's/.$//')\"\
    \n        if [ \"$sign1\" = \"$sign2\" ]; then\n            echo \"$(($num1 *\
    \ $num2))\" | sed 's/.$//'\n        else\n            echo \"-$(($num1 * $num2))\"\
    \ | sed 's/.$//'\n        fi\n    fi", '  echo "$(( $1 % 10 * $2 % 10 ))"', '    echo
    $(( $1 % 10 * $2 % 10 ))', "  # Write your code here\n  echo $(( ${1: -1} * ${2:\
    \ -1} ))", '    echo $(( ${1: -1} * ${2: -1} ))', '    echo $(( $1 % 10 * $2 %
    10 ))', '  echo $(($1 % 10 * $2 % 10))']
stop_tokens:
- "\n}"

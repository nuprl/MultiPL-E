name: HumanEval_127_intersection
language: sh
prompt: "#!/bin/bash\n# You are given two intervals,\n# where each interval is a pair\
  \ of integers. For example, interval = (start, end) = (1, 2).\n# The given intervals\
  \ are closed which means that the interval (start, end)\n# includes both start and\
  \ end.\n# For each given interval, it is assumed that its start is less or equal\
  \ its end.\n# Your task is to determine whether the length of intersection of these\
  \ two \n# intervals is a prime number.\n# Example, the intersection of the intervals\
  \ (1, 3), (2, 4) is (2, 3)\n# which its length is 1, which not a prime number.\n\
  # If the length of the intersection is a prime number, return \"YES\",\n# otherwise,\
  \ return \"NO\".\n# If the two intervals don't intersect, return \"NO\".\n# [input/output]\
  \ samples:\n# >>> $(intersection \"1 2\" \"2 3\")\n# \"NO\"\n# >>> $(intersection\
  \ \"-1 1\" \"0 4\")\n# \"NO\"\n# >>> $(intersection \"-3 -1\" \"-5 5\")\n# \"YES\"\
  \n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nintersection()\
  \ {\n"
tests: "}\n\ncandidate() {\n    intersection \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 2\" \"2 3\") = \"NO\" ]]\n    [[ $(candidate \"-1 1\" \"\
  0 4\") = \"NO\" ]]\n    [[ $(candidate \"-3 -1\" \"-5 5\") = \"YES\" ]]\n    [[\
  \ $(candidate \"-2 2\" \"-4 0\") = \"YES\" ]]\n    [[ $(candidate \"-11 2\" \"-1\
  \ -1\") = \"NO\" ]]\n    [[ $(candidate \"1 2\" \"3 5\") = \"NO\" ]]\n    [[ $(candidate\
  \ \"1 2\" \"1 2\") = \"NO\" ]]\n    [[ $(candidate \"-2 -2\" \"-3 -2\") = \"NO\"\
  \ ]]\n}\n\nrun_test"
completions: ["  local start1=$(echo $1 | cut -d' ' -f1)\n  local end1=$(echo $1 |\
    \ cut -d' ' -f2)\n  local start2=$(echo $2 | cut -d' ' -f1)\n  local end2=$(echo\
    \ $2 | cut -d' ' -f2)\n  local start=$((start1 > start2 ? start1 : start2))\n\
    \  local end=$((end1 < end2 ? end1 : end2))\n  local length=$((end - start + 1))\n\
    \  if [ $length -lt 0 ]; then\n    echo \"NO\"\n  elif [ $length -eq 0 ]; then\n\
    \    echo \"NO\"\n  elif [ $length -eq 1 ]; then\n    echo \"NO\"\n  elif [ $length\
    \ -eq 2 ]; then\n    echo \"YES\"\n  elif [ $length -eq 3 ]; then\n    echo \"\
    YES\"\n  elif [ $length -eq 5 ]; then\n    echo \"YES\"\n  elif [ $length -eq\
    \ 7 ]; then\n    echo \"YES\"\n  elif [ $length -eq 11 ]; then\n    echo \"YES\"\
    \n  elif [ $length -eq 13 ]; then\n    echo \"YES\"\n  elif [ $length -eq 17 ];\
    \ then\n    echo \"YES\"\n  elif [ $length -eq 19 ]; then\n    echo \"YES\"\n\
    \  elif [ $length -eq 23 ]; then\n    echo \"YES\"\n  elif [ $length -eq 29 ];\
    \ then\n    echo \"YES\"\n  elif [ $length -eq 31 ]; then\n    echo \"YES\"\n\
    \  elif [ $length -eq 37 ]; then\n    echo \"YES\"\n  elif [ $length -eq 41 ];\
    \ then\n    echo \"YES\"\n  elif [ $length -eq 43 ]; then\n    echo \"YES\"\n\
    \  elif [ $length -eq 47 ]; then\n    echo \"YES\"\n  elif [ $length -eq 53 ];\
    \ then\n    echo \"YES\"\n  elif [ $length -eq 59 ]; then\n    echo \"YES\"\n\
    \  elif [ $length -eq 61 ]; then\n    echo \"YES\"\n  elif [ $length", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n\
    \    if [[ ${b[0]} -gt ${a[0]} ]]; then\n        start=${b[0]}\n    fi\n    if\
    \ [[ ${b[1]} -lt ${a[1]} ]]; then\n        end=${b[1]}\n    fi\n    if [[ $start\
    \ -gt $end ]]; then\n        echo \"NO\"\n        return\n    fi\n    local len=$((end\
    \ - start + 1))\n    if [[ $len -eq 1 ]]; then\n        echo \"NO\"\n        return\n\
    \    fi\n    local i=2\n    while [[ $i -lt $len ]]; do\n        if [[ $((len\
    \ % i)) -eq 0 ]]; then\n            echo \"NO\"\n            return\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo \"YES\"", "  local -a interval1=($1)\n\
    \  local -a interval2=($2)\n  local start1=${interval1[0]}\n  local end1=${interval1[1]}\n\
    \  local start2=${interval2[0]}\n  local end2=${interval2[1]}\n  local start=$((start1\
    \ > start2 ? start1 : start2))\n  local end=$((end1 < end2 ? end1 : end2))\n \
    \ local length=$((end - start + 1))\n  if ((length <= 0)); then\n    echo \"NO\"\
    \n    return\n  fi\n  for ((i = 2; i < length; i++)); do\n    if ((length % i\
    \ == 0)); then\n      echo \"NO\"\n      return\n    fi\n  done\n  echo \"YES\"",
  "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d'\
    \ ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local end2=$(echo $2\
    \ | cut -d' ' -f2)\n    local start=$(echo $start1 $start2 | sort -n | head -n1)\n\
    \    local end=$(echo $end1 $end2 | sort -n | tail -n1)\n    local length=$(($end\
    \ - $start))\n    if [ $length -lt 0 ]; then\n        echo \"NO\"\n    else\n\
    \        local is_prime=1\n        for (( i=2; i<$length; i++ )); do\n       \
    \     if [ $(($length % $i)) -eq 0 ]; then\n                is_prime=0\n     \
    \           break\n            fi\n        done\n        if [ $is_prime -eq 1\
    \ ]; then\n            echo \"YES\"\n        else\n            echo \"NO\"\n \
    \       fi\n    fi", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n\
    \    if [[ ${a[0]} -gt ${b[0]} ]]; then\n        c=(${a[0]} ${b[1]})\n    else\n\
    \        c=(${b[0]} ${a[1]})\n    fi\n    if [[ ${c[0]} -gt ${c[1]} ]]; then\n\
    \        echo \"NO\"\n        return\n    fi\n    local -i len=${c[1]}-${c[0]}+1\n\
    \    if [[ $len -eq 1 ]]; then\n        echo \"NO\"\n        return\n    fi\n\
    \    local -i i=2\n    while [[ $i -lt $len ]]; do\n        if [[ $len%$i -eq\
    \ 0 ]]; then\n            echo \"NO\"\n            return\n        fi\n      \
    \  i=$i+1\n    done\n    echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -i start=$((${a[0]} > ${b[0]} ? ${a[0]} : ${b[0]}))\n    local -i end=$((${a[1]}\
    \ < ${b[1]} ? ${a[1]} : ${b[1]}))\n    local -i len=$(($end - $start + 1))\n \
    \   if (($len < 1)); then\n        echo \"NO\"\n    else\n        local -i i\n\
    \        for ((i = 2; i < $len; i++)); do\n            if (($len % $i == 0));\
    \ then\n                echo \"NO\"\n                return\n            fi\n\
    \        done\n        echo \"YES\"\n    fi", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local start=${a[0]}\n  local end=${a[1]}\n  local start2=${b[0]}\n  local end2=${b[1]}\n\
    \  if ((start > end2 || start2 > end)); then\n    echo \"NO\"\n    return\n  fi\n\
    \  if ((start < start2)); then\n    start=${b[0]}\n  fi\n  if ((end > end2));\
    \ then\n    end=${b[1]}\n  fi\n  if ((start == end)); then\n    echo \"NO\"\n\
    \    return\n  fi\n  local len=$((end - start))\n  if ((len < 2)); then\n    echo\
    \ \"NO\"\n    return\n  fi\n  local i\n  for ((i=2; i<len; i++)); do\n    if ((len\
    \ % i == 0)); then\n      echo \"NO\"\n      return\n    fi\n  done\n  echo \"\
    YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n\
    \    local -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n\
    \    local -i start3\n    local -i end3\n    local -i len\n    local -i i\n  \
    \  local -i is_prime\n    if (( start > end )) || (( start2 > end2 )); then\n\
    \        echo \"NO\"\n        return\n    fi\n    if (( start > start2 )); then\n\
    \        start3=$start\n    else\n        start3=$start2\n    fi\n    if (( end\
    \ < end2 )); then\n        end3=$end\n    else\n        end3=$end2\n    fi\n \
    \   if (( start3 > end3 )); then\n        echo \"NO\"\n        return\n    fi\n\
    \    len=$(( end3 - start3 + 1 ))\n    if (( len < 2 )); then\n        echo \"\
    NO\"\n        return\n    fi\n    if (( len == 2 )); then\n        echo \"YES\"\
    \n        return\n    fi\n    is_prime=1\n    for (( i=2; i<len; i++ )); do\n\
    \        if (( len % i == 0 )); then\n            is_prime=0\n            break\n\
    \        fi\n    done\n    if (( is_prime )); then\n        echo \"YES\"\n   \
    \ else\n        echo \"NO\"\n    fi", "    local start1=$(echo $1 | cut -d ' '\
    \ -f 1)\n    local end1=$(echo $1 | cut -d ' ' -f 2)\n    local start2=$(echo\
    \ $2 | cut -d ' ' -f 1)\n    local end2=$(echo $2 | cut -d ' ' -f 2)\n    local\
    \ start=$(echo \"$start1 $start2\" | sort -n | tail -n 1)\n    local end=$(echo\
    \ \"$end1 $end2\" | sort -n | head -n 1)\n    if [ $start -gt $end ]; then\n \
    \       echo \"NO\"\n    else\n        local length=$(($end - $start + 1))\n \
    \       if [ $length -eq 1 ]; then\n            echo \"NO\"\n        else\n  \
    \          local i=2\n            while [ $i -lt $length ]; do\n             \
    \   if [ $(($length % $i)) -eq 0 ]; then\n                    echo \"NO\"\n  \
    \                  return\n                fi\n                i=$(($i + 1))\n\
    \            done\n            echo \"YES\"\n        fi\n    fi", "    local start1=$(echo\
    \ $1 | cut -d ' ' -f 1)\n    local end1=$(echo $1 | cut -d ' ' -f 2)\n    local\
    \ start2=$(echo $2 | cut -d ' ' -f 1)\n    local end2=$(echo $2 | cut -d ' ' -f\
    \ 2)\n    local start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1\
    \ < end2 ? end1 : end2))\n    local diff=$((end - start))\n    if [ $diff -lt\
    \ 0 ]; then\n        echo \"NO\"\n    else\n        local is_prime=1\n       \
    \ for ((i=2; i<=$diff; i++)); do\n            if [ $((diff % i)) -eq 0 ]; then\n\
    \                is_prime=0\n                break\n            fi\n        done\n\
    \        if [ $is_prime -eq 1 ]; then\n            echo \"YES\"\n        else\n\
    \            echo \"NO\"\n        fi\n    fi", "    # Write your code here\n \
    \   # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"NO\"", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -a c\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n\
    \    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n\
    \    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n\
    \    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n",
  "    local -a interval1=($1)\n    local -a interval2=($2)\n    local start1=${interval1[0]}\n\
    \    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n\
    \    local start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1\
    \ < end2 ? end1 : end2))\n    local length=$((end - start + 1))\n    if [[ $length\
    \ -lt 1 ]]; then\n        echo \"NO\"\n        return\n    fi\n    for ((i = 2;\
    \ i < $length; i++)); do\n        if [[ $((length % i)) -eq 0 ]]; then\n     \
    \       echo \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local -a d=()\n  local\
    \ -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a i=()\n\
    \  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n  local -a\
    \ n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a r=()\n \
    \ local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n  local -a\
    \ w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a aa=()\n\
    \  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local\
    \ -a af=()\n  local -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n\
    \  local -a ak=()\n  local -a al=()\n  local -a am=()\n  local -a an=()\n  local\
    \ -a ao=()\n  local -a ap=()\n  local -a aq=()\n  local -a ar=()\n  local -a as=()\n\
    \  local -a at=()\n  local -a au=()\n  local -a av=()\n  local -a aw=()\n  local\
    \ -a ax=()\n  local -a ay=()\n  local -a az=()\n  local -a ba=()\n  local -a bb=()\n\
    \  local -a bc=()\n  local -a bd=()\n  local -a be=()\n  local -a bf=()\n  local\
    \ -a bg=()\n  local -a bh=()\n  local -a bi=()\n  local -a bj=()", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n\
    \    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i len=0\n\
    \    local -i len2=0\n    local -i len3=0\n    local -i len4=0\n    local -i len5=0\n\
    \    local -i len6=0\n    local -i len7=0\n    local -i len8=0\n    local -i len9=0\n\
    \    local -i len10=0\n    local -i len11=0\n    local -i len12=0\n    local -i\
    \ len13=0\n    local -i len14=0\n    local -i len15=0\n    local -i len16=0\n\
    \    local -i len17=0\n    local -i len18=0\n    local -i len19=0\n    local -i\
    \ len20=0\n    local -i len21=0\n    local -i len22=0\n    local -i len23=0\n\
    \    local -i len24=0\n    local -i len25=0\n    local -i len26=0\n    local -i\
    \ len27=0\n    local -i len28=0\n    local -i len29=0\n    local -i len30=0\n\
    \    local -i len31=0\n    local -i len32=0\n    local -i len33=0\n    local -i\
    \ len34=0\n    local -i len35=0\n    local -i len36=0\n    local -i len37=0\n\
    \    local -i len38=0\n    local -i len39=0\n    local -i len40=0\n    local -i\
    \ len41=0\n    local -i len42=0\n    local -i len43=0\n    local -i len44=0\n\
    \    local -i len45=0\n    local -i len46=0\n    local -i len47=0\n    local -i\
    \ len48=0\n    local -i len49=0\n   ", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local start=${a[0]}\n    local end=${a[1]}\n    if (( ${b[0]} > ${a[0]} ));\
    \ then\n        start=${b[0]}\n    fi\n    if (( ${b[1]} < ${a[1]} )); then\n\
    \        end=${b[1]}\n    fi\n    if (( start > end )); then\n        echo \"\
    NO\"\n        return\n    fi\n    local len=$((end - start + 1))\n    if (( len\
    \ <= 1 )); then\n        echo \"NO\"\n        return\n    fi\n    if (( len ==\
    \ 2 )); then\n        echo \"YES\"\n        return\n    fi\n    local i\n    for\
    \ (( i=2; i<len; i++ )); do\n        if (( len % i == 0 )); then\n           \
    \ echo \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    #\n    #\n    #\n   \
    \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n", "    local -a a=($1)\n    local -a b=($2)\n    local\
    \ -a c\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\
    \    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i\
    \ ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i\
    \ ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i\
    \ al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i\
    \ ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i\
    \ at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i\
    \ ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i\
    \ bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i\
    \ bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i\
    \ bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i\
    \ bn=0\n    local -i bo=", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"NO\"", "    local start1=$(echo $1 | awk '{print $1}')\n    local\
    \ end1=$(echo $1 | awk '{print $2}')\n    local start2=$(echo $2 | awk '{print\
    \ $1}')\n    local end2=$(echo $2 | awk '{print $2}')\n    local start=$(echo\
    \ $start1 $start2 | awk '{print $1 > $2 ? $2 : $1}')\n    local end=$(echo $end1\
    \ $end2 | awk '{print $1 > $2 ? $1 : $2}')\n    local len=$(echo $start $end |\
    \ awk '{print $2 - $1}')\n    if [ $len -lt 0 ]; then\n        echo \"NO\"\n \
    \       return\n    fi\n    if [ $len -eq 0 ]; then\n        echo \"YES\"\n  \
    \      return\n    fi\n    local i=2\n    while [ $i -lt $len ]; do\n        if\
    \ [ $(($len % $i)) -eq 0 ]; then\n            echo \"NO\"\n            return\n\
    \        fi\n        i=$(($i + 1))\n    done\n    echo \"YES\"", "    local start1=$(echo\
    \ $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo\
    \ $2 | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    local length=$((end - start + 1))\n    if [[ $length -lt 0 ]]; then\n   \
    \     echo \"NO\"\n    elif [[ $length -eq 1 ]]; then\n        echo \"NO\"\n \
    \   elif [[ $length -eq 2 ]]; then\n        echo \"YES\"\n    else\n        local\
    \ isPrime=1\n        for (( i=2; i<$length; i++ )); do\n            if [[ $((length\
    \ % i)) -eq 0 ]]; then\n                isPrime=0\n                break\n   \
    \         fi\n        done\n        if [[ $isPrime -eq 1 ]]; then\n          \
    \  echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n    fi", " \
    \   local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n\
    \    local start2=${b[0]}\n    local end2=${b[1]}\n    if (( start > end || start2\
    \ > end2 )); then\n        echo \"NO\"\n        return\n    fi\n    if (( start\
    \ > start2 )); then\n        start=$start2\n    fi\n    if (( end < end2 )); then\n\
    \        end=$end2\n    fi\n    if (( start > end )); then\n        echo \"NO\"\
    \n        return\n    fi\n    local len=$(( end - start + 1 ))\n    if (( len\
    \ == 1 )); then\n        echo \"NO\"\n        return\n    fi\n    if (( len ==\
    \ 2 )); then\n        echo \"YES\"\n        return\n    fi\n    for (( i=2; i<len;\
    \ i++ )); do\n        if (( len % i == 0 )); then\n            echo \"NO\"\n \
    \           return\n        fi\n    done\n    echo \"YES\"", "  local -a a=($1)\n\
    \  local -a b=($2)\n  local start=${a[0]}\n  local end=${a[1]}\n  local start2=${b[0]}\n\
    \  local end2=${b[1]}\n  if ((start2 > end)); then\n    return 1\n  fi\n  if ((start\
    \ > end2)); then\n    return 1\n  fi\n  if ((start2 > start)); then\n    start=$start2\n\
    \  fi\n  if ((end2 < end)); then\n    end=$end2\n  fi\n  if ((start >= end));\
    \ then\n    return 1\n  fi\n  local len=$((end - start))\n  local i\n  for ((i=2;\
    \ i<len; i++)); do\n    if ((len % i == 0)); then\n      return 1\n    fi\n  done\n\
    \  echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n\
    \    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n\
    \    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n\
    \    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n\
    \    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n\
    \    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n\
    \    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n\
    \    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n\
    \    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n\
    \    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n\
    \    local -i bo=", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"NO\"", "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n\
    \    local -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n\
    \    local -i len=0\n    local -i len2=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n   ", "    local -a interval1=($1)\n\
    \    local -a interval2=($2)\n    local start1=${interval1[0]}\n    local end1=${interval1[1]}\n\
    \    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    if ((start > end)); then\n        echo \"NO\"\n        return\n    fi\n \
    \   local length=$((end - start + 1))\n    if ((length == 1)); then\n        echo\
    \ \"NO\"\n        return\n    fi\n    local -i i=2\n    while ((i * i <= length));\
    \ do\n        if ((length % i == 0)); then\n            echo \"NO\"\n        \
    \    return\n        fi\n        ((i++))\n    done\n    echo \"YES\"", "  local\
    \ a1=$(echo $1 | cut -d' ' -f1)\n  local a2=$(echo $1 | cut -d' ' -f2)\n  local\
    \ b1=$(echo $2 | cut -d' ' -f1)\n  local b2=$(echo $2 | cut -d' ' -f2)\n  local\
    \ c1=$((a1 > b1 ? a1 : b1))\n  local c2=$((a2 < b2 ? a2 : b2))\n  if [[ $c1 -gt\
    \ $c2 ]]; then\n    echo \"NO\"\n  else\n    local len=$((c2 - c1 + 1))\n    if\
    \ [[ $len -le 1 ]]; then\n      echo \"NO\"\n    else\n      local i=2\n     \
    \ while [[ $i -lt $len ]]; do\n        if [[ $((len % i)) -eq 0 ]]; then\n   \
    \       echo \"NO\"\n          return\n        fi\n        i=$((i + 1))\n    \
    \  done\n      echo \"YES\"\n    fi\n  fi", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i start2=${b[0]}\n\
    \    local -i end2=${b[1]}\n    local -i start3=0\n    local -i end3=0\n    local\
    \ -i length=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n\
    \    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n\
    \   ", "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n\
    \    local -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n\
    \    local -i start3=0\n    local -i end3=0\n    if (( start > end2 || start2\
    \ > end )); then\n        echo \"NO\"\n        return\n    fi\n    if (( start\
    \ > start2 )); then\n        start3=$start\n    else\n        start3=$start2\n\
    \    fi\n    if (( end > end2 )); then\n        end3=$end2\n    else\n       \
    \ end3=$end\n    fi\n    local -i len=$(( end3 - start3 + 1 ))\n    if (( len\
    \ < 2 )); then\n        echo \"NO\"\n        return\n    fi\n    local -i i=2\n\
    \    while (( i * i <= len )); do\n        if (( len % i == 0 )); then\n     \
    \       echo \"NO\"\n            return\n        fi\n        (( i++ ))\n    done\n\
    \    echo \"YES\"", "  local start1=$(echo $1 | cut -d' ' -f1)\n  local end1=$(echo\
    \ $1 | cut -d' ' -f2)\n  local start2=$(echo $2 | cut -d' ' -f1)\n  local end2=$(echo\
    \ $2 | cut -d' ' -f2)\n  local start=$(echo \"$start1 $start2\" | sort -n | tail\
    \ -n1)\n  local end=$(echo \"$end1 $end2\" | sort -n | head -n1)\n  if [ $start\
    \ -gt $end ]; then\n    echo \"NO\"\n  else\n    local len=$(($end - $start +\
    \ 1))\n    if [ $len -eq 1 ]; then\n      echo \"NO\"\n    else\n      local i=2\n\
    \      while [ $i -lt $len ]; do\n        if [ $(($len % $i)) -eq 0 ]; then\n\
    \          echo \"NO\"\n          return\n        fi\n        i=$(($i + 1))\n\
    \      done\n      echo \"YES\"\n    fi\n  fi", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i\
    \ start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i start3\n    local -i\
    \ end3\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local\
    \ -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n\
    \    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local\
    \ -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n\
    \    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local\
    \ -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n\
    \    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local\
    \ -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n\
    \    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local\
    \ -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n\
    \    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local\
    \ -i uuu\n", "    local -a interval1=($1)\n    local -a interval2=($2)\n    local\
    \ -i start1=${interval1[0]}\n    local -i end1=${interval1[1]}\n    local -i start2=${interval2[0]}\n\
    \    local -i end2=${interval2[1]}\n    local -i start=$((start1 > start2 ? start1\
    \ : start2))\n    local -i end=$((end1 < end2 ? end1 : end2))\n    local -i length=$((end\
    \ - start + 1))\n    if [[ $length -lt 0 ]]; then\n        echo \"NO\"\n     \
    \   return\n    fi\n    local -i i=2\n    while [[ $i -lt $length ]]; do\n   \
    \     if [[ $((length % i)) -eq 0 ]]; then\n            echo \"NO\"\n        \
    \    return\n        fi\n        i=$((i + 1))\n    done\n    echo \"YES\"", " \
    \ local a1=$(echo $1 | cut -d' ' -f1)\n  local a2=$(echo $1 | cut -d' ' -f2)\n\
    \  local b1=$(echo $2 | cut -d' ' -f1)\n  local b2=$(echo $2 | cut -d' ' -f2)\n\
    \  local c1=$(echo \"$a1 > $b1\" | bc)\n  local c2=$(echo \"$a2 < $b2\" | bc)\n\
    \  local c3=$(echo \"$c1 + $c2\" | bc)\n  if [[ $c3 -eq 2 ]]; then\n    echo \"\
    YES\"\n  else\n    echo \"NO\"\n  fi", "    local -a interval1=($1)\n    local\
    \ -a interval2=($2)\n    local start1=${interval1[0]}\n    local end1=${interval1[1]}\n\
    \    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    local length=$((end - start + 1))\n    if [[ $length -le 0 ]]; then\n   \
    \     echo \"NO\"\n        return\n    fi\n    local i=2\n    while [[ $i -lt\
    \ $length ]]; do\n        if [[ $((length % i)) -eq 0 ]]; then\n            echo\
    \ \"NO\"\n            return\n        fi\n        ((i++))\n    done\n    echo\
    \ \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#a[@]}\n    local\
    \ -i m=${#b[@]}\n    local -i x\n    local -i y\n    local -i z\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i p\n    local -i q\n    local -i r\n    local -", "  local\
    \ -a a=($1)\n  local -a b=($2)\n  local start=$((${a[0]} > ${b[0]} ? ${a[0]} :\
    \ ${b[0]}))\n  local end=$((${a[1]} < ${b[1]} ? ${a[1]} : ${b[1]}))\n  if ((start\
    \ > end)); then\n    echo \"NO\"\n    return\n  fi\n  local len=$((end - start\
    \ + 1))\n  if ((len < 2)); then\n    echo \"NO\"\n    return\n  fi\n  for ((i=2;\
    \ i<len; i++)); do\n    if ((len % i == 0)); then\n      echo \"NO\"\n      return\n\
    \    fi\n  done\n  echo \"YES\"", "  local -a interval1=($1)\n  local -a interval2=($2)\n\
    \  local start1=${interval1[0]}\n  local end1=${interval1[1]}\n  local start2=${interval2[0]}\n\
    \  local end2=${interval2[1]}\n  local start=$((start1 > start2 ? start1 : start2))\n\
    \  local end=$((end1 < end2 ? end1 : end2))\n  local length=$((end - start + 1))\n\
    \  if [[ $length -lt 1 ]]; then\n    echo \"NO\"\n    return\n  fi\n  for ((i\
    \ = 2; i < $length; i++)); do\n    if [[ $((length % i)) -eq 0 ]]; then\n    \
    \  echo \"NO\"\n      return\n    fi\n  done\n  echo \"YES\"", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local -a c=()\n    local -a d=()\n    local -a e=()\n\
    \    local -a f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n\
    \    local -a j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n\
    \    local -a n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n\
    \    local -a r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n\
    \    local -a v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n\
    \    local -a z=()\n    local -a aa=()\n    local -a ab=()\n    local -a ac=()\n\
    \    local -a ad=()\n    local -a ae=()\n    local -a af=()\n    local -a ag=()\n\
    \    local -a ah=()\n    local -a ai=()\n    local -a aj=()\n    local -a ak=()\n\
    \    local -a al=()\n    local -a am=()\n    local -a an=()\n    local -a ao=()\n\
    \    local -a ap=()\n    local -a aq=()\n    local -a ar=()\n    local -a as=()\n\
    \    local -a at=()\n    local -a au=()\n    local -a av=()\n    local -a aw=()\n\
    \    local -a ax=()\n    local -a ay=()\n    local -a az=()\n    local -a ba=()\n\
    \    local -a bb=()\n    local -a bc=()\n    local -a bd=()\n    local -a be=()\n\
    \    local -a bf=()\n    local -a bg=()\n    local -a bh=()\n    local -a bi=()\n\
    \    local -a bj=()", "  local a1=$(echo $1 | cut -d ' ' -f 1)\n  local a2=$(echo\
    \ $1 | cut -d ' ' -f 2)\n  local b1=$(echo $2 | cut -d ' ' -f 1)\n  local b2=$(echo\
    \ $2 | cut -d ' ' -f 2)\n  local start=$(echo $a1 $b1 | sort -n | tail -n 1)\n\
    \  local end=$(echo $a2 $b2 | sort -n | head -n 1)\n  local len=$(($end - $start))\n\
    \  if [ $len -lt 0 ]; then\n    echo \"NO\"\n  else\n    local is_prime=1\n  \
    \  for ((i=2; i<$len; i++)); do\n      if [ $(($len % $i)) -eq 0 ]; then\n   \
    \     is_prime=0\n        break\n      fi\n    done\n    if [ $is_prime -eq 1\
    \ ]; then\n      echo \"YES\"\n    else\n      echo \"NO\"\n    fi\n  fi", " \
    \   # your code here\n    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n\
    \    local -a d=()\n    local -a e=()\n    local -a f=()\n    local -a g=()\n\
    \    local -a h=()\n    local -a i=()\n    local -a j=()\n    local -a k=()\n\
    \    local -a l=()\n    local -a m=()\n    local -a n=()\n    local -a o=()\n\
    \    local -a p=()\n    local -a q=()\n    local -a r=()\n    local -a s=()\n\
    \    local -a t=()\n    local -a u=()\n    local -a v=()\n    local -a w=()\n\
    \    local -a x=()\n    local -a y=()\n    local -a z=()\n    local -a aa=()\n\
    \    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local -a ae=()\n\
    \    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local -a ai=()\n\
    \    local -a aj=()\n    local -a ak=()\n    local -a al=()\n    local -a am=()\n\
    \    local -a an=()\n    local -a ao=()\n    local -a ap=()\n    local -a aq=()\n\
    \    local -a ar=()\n    local -a as=()\n    local -a at=()\n    local -a au=()\n\
    \    local -a av=()\n    local -a aw=()\n    local -a ax=()\n    local -a ay=()\n\
    \    local -a az=()\n    local -a ba=()\n    local -a bb=()\n    local -a bc=()\n\
    \    local -a bd=()\n    local -a be=()\n    local -a bf=()\n    local -a bg=()\n\
    \    local -a bh=()\n    local -a bi=()\n    local", "  local -a a=($1)\n  local\
    \ -a b=($2)\n  local -a c\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i start\n  local -i end\n  local\
    \ -i len\n  local -i is_prime\n  local -i is_intersect\n  local -i is_empty\n\
    \  local -i is_single\n  local -i is_double\n  local -i is_triple\n  local -i\
    \ is_quadruple\n  local -i is_quintuple\n  local -i is_sextuple\n  local -i is_septuple\n\
    \  local -i is_octuple\n  local -i is_nonuple\n  local -i is_decuple\n  local\
    \ -i is_undecuple\n  local -i is_duodecuple\n  local -i is_tredecuple\n  local\
    \ -i is_quattuordecuple\n  local -i is_quindecuple\n  local -i is_sexdecuple\n\
    \  local -i is_septendecuple\n  local -i is_octodecuple\n  local -i is_novendecuple\n\
    \  local -i is_vigintuple\n  local -i is_unvigintuple\n  local -i is_duovigintuple\n\
    \  local -i is_tresvigintuple\n  local -i is_quattuorvigintuple\n  local -i is_quinquavigintuple\n\
    \  local -i is_sexvigintuple\n  local -i is_septemvigintuple\n  local -i is_octovigintuple\n\
    \  local -i is_novemvigintuple\n  local -i is_trigintuple\n  local -i is_untrigintuple\n\
    \  local -i is_duotrigintuple\n  local -i is_trestrigintuple\n  local -i is_quattuortrigintuple\n\
    \  local -i is_quinquatrigint", "    local start1=$(echo $1 | cut -d' ' -f1)\n\
    \    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo $2 | cut -d'\
    \ ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    if ((start > end)); then\n        echo \"NO\"\n    else\n        local len=$((end\
    \ - start + 1))\n        if ((len == 2 || len == 3 || len == 5 || len == 7));\
    \ then\n            echo \"YES\"\n        else\n            echo \"NO\"\n    \
    \    fi\n    fi", "  local -a a=($1)\n  local -a b=($2)\n  local start=${a[0]}\n\
    \  local end=${a[1]}\n  local start2=${b[0]}\n  local end2=${b[1]}\n  local -a\
    \ c\n  if [ $start -gt $end ]; then\n    start=$end\n    end=${a[0]}\n  fi\n \
    \ if [ $start2 -gt $end2 ]; then\n    start2=$end2\n    end2=${b[0]}\n  fi\n \
    \ if [ $start -gt $end2 ] || [ $start2 -gt $end ]; then\n    echo \"NO\"\n   \
    \ return\n  fi\n  if [ $start -lt $start2 ]; then\n    start=$start2\n  fi\n \
    \ if [ $end -gt $end2 ]; then\n    end=$end2\n  fi\n  if [ $start -eq $end ];\
    \ then\n    echo \"NO\"\n    return\n  fi\n  if [ $start -eq $((start+1)) ]; then\n\
    \    echo \"YES\"\n    return\n  fi\n  local i\n  for ((i=2; i<=$start; i++));\
    \ do\n    if [ $((start%i)) -eq 0 ]; then\n      echo \"NO\"\n      return\n \
    \   fi\n  done\n  echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n \
    \   local start=$((${a[0]}>${b[0]}?${a[0]}:${b[0]}))\n    local end=$((${a[1]}<${b[1]}?${a[1]}:${b[1]}))\n\
    \    local len=$(($end-$start+1))\n    if [ $len -le 0 ]; then\n        echo \"\
    NO\"\n    else\n        local i=2\n        while [ $i -lt $len ]; do\n       \
    \     if [ $((len%i)) -eq 0 ]; then\n                echo \"NO\"\n           \
    \     return\n            fi\n            i=$((i+1))\n        done\n        echo\
    \ \"YES\"\n    fi", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    if (( ${b[0]} > ${a[0]} )); then\n        start=${b[0]}\n\
    \    fi\n    if (( ${b[1]} < ${a[1]} )); then\n        end=${b[1]}\n    fi\n \
    \   if (( start > end )); then\n        echo \"NO\"\n        return\n    fi\n\
    \    local len=$(( end - start + 1 ))\n    local i=2\n    while (( i * i <= len\
    \ )); do\n        if (( len % i == 0 )); then\n            echo \"NO\"\n     \
    \       return\n        fi\n        (( i++ ))\n    done\n    echo \"YES\"", " \
    \   local start1=$(echo $1 | cut -d ' ' -f 1)\n    local end1=$(echo $1 | cut\
    \ -d ' ' -f 2)\n    local start2=$(echo $2 | cut -d ' ' -f 1)\n    local end2=$(echo\
    \ $2 | cut -d ' ' -f 2)\n    local start=$(echo \"$start1 $start2\" | sort -n\
    \ | tail -n 1)\n    local end=$(echo \"$end1 $end2\" | sort -n | head -n 1)\n\
    \    if [ $start -gt $end ]; then\n        echo \"NO\"\n    else\n        local\
    \ len=$(($end - $start + 1))\n        if [ $len -eq 1 ]; then\n            echo\
    \ \"NO\"\n        else\n            local i=2\n            while [ $i -lt $len\
    \ ]; do\n                if [ $(($len % $i)) -eq 0 ]; then\n                 \
    \   echo \"NO\"\n                    return\n                fi\n            \
    \    i=$(($i + 1))\n            done\n            echo \"YES\"\n        fi\n \
    \   fi", "    local -a interval1=($1)\n    local -a interval2=($2)\n    local\
    \ start1=${interval1[0]}\n    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n\
    \    local end2=${interval2[1]}\n    local start=$((start1 > start2 ? start1 :\
    \ start2))\n    local end=$((end1 < end2 ? end1 : end2))\n    if ((start > end));\
    \ then\n        echo \"NO\"\n        return\n    fi\n    local length=$((end -\
    \ start + 1))\n    if ((length == 1)); then\n        echo \"NO\"\n        return\n\
    \    fi\n    for ((i = 2; i < length; i++)); do\n        if ((length % i == 0));\
    \ then\n            echo \"NO\"\n            return\n        fi\n    done\n  \
    \  echo \"YES\"", "  local -a a=($1)\n  local -a b=($2)\n  local start=${a[0]}\n\
    \  local end=${a[1]}\n  local start2=${b[0]}\n  local end2=${b[1]}\n  local -a\
    \ c=()\n  local -a d=()\n  if [ $start -gt $end ]; then\n    c=($end $start)\n\
    \  else\n    c=($start $end)\n  fi\n  if [ $start2 -gt $end2 ]; then\n    d=($end2\
    \ $start2)\n  else\n    d=($start2 $end2)\n  fi\n  if [ ${c[0]} -gt ${d[1]} ]\
    \ || [ ${d[0]} -gt ${c[1]} ]; then\n    echo \"NO\"\n  else\n    local -a e=()\n\
    \    if [ ${c[0]} -gt ${d[0]} ]; then\n      e=(${c[0]} ${c[1]})\n    else\n \
    \     e=(${d[0]} ${c[1]})\n    fi\n    if [ ${e[0]} -gt ${d[1]} ]; then\n    \
    \  e=(${d[1]} ${c[1]})\n    fi\n    local len=$((${e[1]} - ${e[0]}))\n    local\
    \ -a f=()\n    for ((i=2; i<=$len; i++)); do\n      if [ $((len % i)) -eq 0 ];\
    \ then\n        f+=($i)\n      fi\n    done\n    if [ ${#f[@]} -eq 0 ]; then\n\
    \      echo \"YES\"\n    else\n      echo \"NO\"\n    fi\n  fi", "  # get the\
    \ start and end of each interval\n  local start1=$(echo $1 | cut -d' ' -f1)\n\
    \  local end1=$(echo $1 | cut -d' ' -f2)\n  local start2=$(echo $2 | cut -d' '\
    \ -f1)\n  local end2=$(echo $2 | cut -d' ' -f2)\n  # if the intervals don't intersect,\
    \ return \"NO\"\n  if (( start1 > end2 || start2 > end1 )); then\n    echo \"\
    NO\"\n    return\n  fi\n  # get the start and end of the intersection\n  local\
    \ start=$(( start1 > start2 ? start1 : start2 ))\n  local end=$(( end1 < end2\
    \ ? end1 : end2 ))\n  # if the length of the intersection is a prime number, return\
    \ \"YES\",\n  # otherwise, return \"NO\"\n  if is_prime $(( end - start + 1 ));\
    \ then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local -a c\n    local -i i=0\n    local -i j=0\n   \
    \ local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"NO\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"NO\"", "  local -a a=($1)\n  local -a b=($2)\n  local -i start=${a[0]}\n\
    \  local -i end=${a[1]}\n  local -i start2=${b[0]}\n  local -i end2=${b[1]}\n\
    \  local -i len=0\n  if (( start > end )); then\n    local -i tmp=start\n    start=end\n\
    \    end=tmp\n  fi\n  if (( start2 > end2 )); then\n    local -i tmp=start2\n\
    \    start2=end2\n    end2=tmp\n  fi\n  if (( start > end2 || start2 > end ));\
    \ then\n    echo \"NO\"\n    return\n  fi\n  if (( start2 > start )); then\n \
    \   start=start2\n  fi\n  if (( end2 < end )); then\n    end=end2\n  fi\n  len=$((\
    \ end - start ))\n  if (( len < 2 )); then\n    echo \"NO\"\n    return\n  fi\n\
    \  if (( len == 2 )); then\n    echo \"YES\"\n    return\n  fi\n  if (( len %\
    \ 2 == 0 )); then\n    echo \"NO\"\n    return\n  fi\n  local -i i=3\n  while\
    \ (( i * i <= len )); do\n    if (( len % i == 0 )); then\n      echo \"NO\"\n\
    \      return\n    fi\n    (( i += 2 ))\n  done\n  echo \"YES\"", "    local -a\
    \ a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n\
    \    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i start3=$((start\
    \ > start2 ? start : start2))\n    local -i end3=$((end < end2 ? end : end2))\n\
    \    local -i len=$((end3 - start3 + 1))\n    if ((len <= 0)); then\n        echo\
    \ \"NO\"\n        return\n    fi\n    local -i i\n    for ((i = 2; i < len; i++));\
    \ do\n        if ((len % i == 0)); then\n            echo \"NO\"\n           \
    \ return\n        fi\n    done\n    echo \"YES\"", "    local a1=\"$(echo $1 |\
    \ cut -d' ' -f1)\"\n    local a2=\"$(echo $1 | cut -d' ' -f2)\"\n    local b1=\"\
    $(echo $2 | cut -d' ' -f1)\"\n    local b2=\"$(echo $2 | cut -d' ' -f2)\"\n  \
    \  local c1=$((a1 > b1 ? a1 : b1))\n    local c2=$((a2 < b2 ? a2 : b2))\n    if\
    \ ((c1 > c2)); then\n        echo \"NO\"\n    else\n        local len=$((c2 -\
    \ c1 + 1))\n        if ((len == 1)); then\n            echo \"NO\"\n        else\n\
    \            local i=2\n            while ((i < len)); do\n                if\
    \ ((len % i == 0)); then\n                    echo \"NO\"\n                  \
    \  return\n                fi\n                ((i++))\n            done\n   \
    \         echo \"YES\"\n        fi\n    fi", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # Example: echo \"\
    Hello world\"\n  echo \"NO\"", "    local -a a=($1)\n    local -a b=($2)\n   \
    \ local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i start2=${b[0]}\n\
    \    local -i end2=${b[1]}\n    local -i max_start=$((start > start2 ? start :\
    \ start2))\n    local -i min_end=$((end < end2 ? end : end2))\n    local -i length=$((min_end\
    \ - max_start + 1))\n    if [[ $length -lt 1 ]]; then\n        echo \"NO\"\n \
    \       return\n    fi\n    local -i i=2\n    while [[ $i -lt $length ]]; do\n\
    \        if [[ $((length % i)) -eq 0 ]]; then\n            echo \"NO\"\n     \
    \       return\n        fi\n        ((i++))\n    done\n    echo \"YES\"", "  \
    \  local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d'\
    \ ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local end2=$(echo $2\
    \ | cut -d' ' -f2)\n    local start=$(echo $start1 $start2 | tr ' ' '\\n' | sort\
    \ -n | head -n1)\n    local end=$(echo $end1 $end2 | tr ' ' '\\n' | sort -n |\
    \ tail -n1)\n    local length=$(echo $end $start | tr ' ' '\\n' | sort -n | tail\
    \ -n1)\n    local length=$(($length - $start))\n    if [ $length -lt 0 ]; then\n\
    \        echo \"NO\"\n        return\n    fi\n    local is_prime=1\n    for ((i=2;\
    \ i<=$length; i++)); do\n        if [ $(($length % $i)) -eq 0 ]; then\n      \
    \      is_prime=0\n            break\n        fi\n    done\n    if [ $is_prime\
    \ -eq 1 ]; then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi",
  "    local start1=$(echo $1 | cut -d ' ' -f 1)\n    local end1=$(echo $1 | cut -d\
    \ ' ' -f 2)\n    local start2=$(echo $2 | cut -d ' ' -f 1)\n    local end2=$(echo\
    \ $2 | cut -d ' ' -f 2)\n    local start=$(echo \"$start1 $start2\" | sort -n\
    \ | head -n 1)\n    local end=$(echo \"$end1 $end2\" | sort -n | tail -n 1)\n\
    \    if [ \"$start\" -ge \"$end\" ]; then\n        echo \"NO\"\n        return\n\
    \    fi\n    local len=$((end - start))\n    local i=2\n    while [ $i -lt $len\
    \ ]; do\n        if [ $((len % i)) -eq 0 ]; then\n            echo \"NO\"\n  \
    \          return\n        fi\n        i=$((i + 1))\n    done\n    echo \"YES\"",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i=0\n  local -i\
    \ j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n",
  "  local -a a=($1)\n  local -a b=($2)\n  local start=${a[0]}\n  local end=${a[1]}\n\
    \  local start2=${b[0]}\n  local end2=${b[1]}\n  local -a c\n  if (( start > end\
    \ )); then\n    c=($end $start)\n  else\n    c=($start $end)\n  fi\n  if (( start2\
    \ > end2 )); then\n    b=($end2 $start2)\n  else\n    b=($start2 $end2)\n  fi\n\
    \  if (( c[0] > b[1] || c[1] < b[0] )); then\n    echo \"NO\"\n    return\n  fi\n\
    \  if (( c[0] > b[0] )); then\n    start=c[0]\n  else\n    start=b[0]\n  fi\n\
    \  if (( c[1] < b[1] )); then\n    end=c[1]\n  else\n    end=b[1]\n  fi\n  if\
    \ (( end - start < 2 )); then\n    echo \"NO\"\n    return\n  fi\n  local i\n\
    \  for (( i = 2; i < end; i++ )); do\n    if (( start % i == 0 )); then\n    \
    \  echo \"NO\"\n      return\n    fi\n  done\n  echo \"YES\"", "    local start1=$(echo\
    \ $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo\
    \ $2 | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo\
    \ $start1 $start2 | tr ' ' '\\n' | sort -n | head -n1)\n    local end=$(echo $end1\
    \ $end2 | tr ' ' '\\n' | sort -n | tail -n1)\n    local length=$((end - start\
    \ + 1))\n    if [[ $length -lt 1 ]]; then\n        echo \"NO\"\n    elif [[ $length\
    \ -eq 1 ]]; then\n        echo \"NO\"\n    elif [[ $length -eq 2 ]]; then\n  \
    \      echo \"YES\"\n    elif [[ $length -eq 3 ]]; then\n        echo \"YES\"\n\
    \    elif [[ $length -eq 5 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 7 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 11 ]]; then\n\
    \        echo \"YES\"\n    elif [[ $length -eq 13 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 17 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 19 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 23 ]]; then\n\
    \        echo \"YES\"\n    elif [[ $length -eq 29 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 31 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 37 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 41 ]]; then\n\
    \        echo \"YES\"\n    elif [[ $length -eq 43 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 47 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 53 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 59 ]]; then\n\
    \        echo \"", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    local start2=${b[0]}\n    local end2=${b[1]}\n   \
    \ local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i d", "    local -a\
    \ interval1=($1)\n    local -a interval2=($2)\n    local start1=${interval1[0]}\n\
    \    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n\
    \    local start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1\
    \ < end2 ? end1 : end2))\n    local length=$((end - start + 1))\n    if [[ $length\
    \ -lt 1 ]]; then\n        echo \"NO\"\n        return\n    fi\n    local i=2\n\
    \    while [[ $i -lt $length ]]; do\n        if [[ $((length % i)) -eq 0 ]]; then\n\
    \            echo \"NO\"\n            return\n        fi\n        ((i++))\n  \
    \  done\n    echo \"YES\"", "    local -a interval1=($1)\n    local -a interval2=($2)\n\
    \    local start1=${interval1[0]}\n    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n\
    \    local end2=${interval2[1]}\n    local start=$((start1 > start2 ? start1 :\
    \ start2))\n    local end=$((end1 < end2 ? end1 : end2))\n    local length=$((end\
    \ - start + 1))\n    if [[ $length -lt 1 ]]; then\n        echo \"NO\"\n     \
    \   return\n    fi\n    if [[ $length -eq 1 ]]; then\n        echo \"YES\"\n \
    \       return\n    fi\n    if [[ $length -eq 2 ]]; then\n        echo \"NO\"\n\
    \        return\n    fi\n    if [[ $length -eq 3 ]]; then\n        echo \"YES\"\
    \n        return\n    fi\n    if [[ $length -eq 4 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 5 ]]; then\n        echo \"YES\"\
    \n        return\n    fi\n    if [[ $length -eq 6 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 7 ]]; then\n        echo \"YES\"\
    \n        return\n    fi\n    if [[ $length -eq 8 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 9 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 10 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 11 ]]; then\n        echo \"YES\"\
    \n        return\n    fi\n    if [[ $length -eq 12 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 13 ]]; then\n        echo \"YES\"\
    \n        return\n    fi\n    if [[ $length -eq 14 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length -eq 15 ]]; then\n        echo \"NO\"\
    \n        return\n    fi\n    if [[ $length", "    local -a a=(${1// / })\n  \
    \  local -a b=(${2// / })\n    local -i a1=${a[0]}\n    local -i a2=${a[1]}\n\
    \    local -i b1=${b[0]}\n    local -i b2=${b[1]}\n    local -i c1=$((a1 > b1\
    \ ? a1 : b1))\n    local -i c2=$((a2 < b2 ? a2 : b2))\n    local -i d=$((c2 -\
    \ c1))\n    local -i e=$((d < 0 ? 0 : d))\n    local -i f=$((e + 1))\n    local\
    \ -i g=$((f < 2 ? 0 : f))\n    local -i h=$((g < 3 ? 0 : g))\n    local -i i=$((h\
    \ < 5 ? 0 : h))\n    local -i j=$((i < 7 ? 0 : i))\n    local -i k=$((j < 11 ?\
    \ 0 : j))\n    local -i l=$((k < 13 ? 0 : k))\n    local -i m=$((l < 17 ? 0 :\
    \ l))\n    local -i n=$((m < 19 ? 0 : m))\n    local -i o=$((n < 23 ? 0 : n))\n\
    \    local -i p=$((o < 29 ? 0 : o))\n    local -i q=$((p < 31 ? 0 : p))\n    local\
    \ -i r=$((q < 37 ? 0 : q))\n    local -i s=$((r < 41 ? 0 : r))\n    local -i t=$((s\
    \ < 43 ? 0 : s))\n    local -i u=$((t < 47 ? 0 : t))\n    local -i v=$((u < 53\
    \ ? 0 : u))\n    local -i w=$((v < 59 ? 0 : v))\n    local -i x=$((w < 61 ? 0\
    \ : w))\n    local -i y=$((x < 67 ? 0 : x))\n    local -i z=$((y < 71 ? 0 : y))\n\
    \    local -i aa=$((z < 73 ? 0 : z))\n    local -i ab=$((aa < 79 ? 0 : a", " \
    \   local a1=$(echo $1 | cut -d' ' -f1)\n    local a2=$(echo $1 | cut -d' ' -f2)\n\
    \    local b1=$(echo $2 | cut -d' ' -f1)\n    local b2=$(echo $2 | cut -d' ' -f2)\n\
    \    local max=$(echo \"$a1 $b1\" | tr ' ' '\\n' | sort -n | tail -n1)\n    local\
    \ min=$(echo \"$a2 $b2\" | tr ' ' '\\n' | sort -n | head -n1)\n    local len=$(($min\
    \ - $max))\n    if [[ $len -lt 0 ]]; then\n        echo \"NO\"\n    else\n   \
    \     local i=2\n        while [[ $i -lt $len ]]; do\n            if [[ $((len\
    \ % i)) -eq 0 ]]; then\n                echo \"NO\"\n                return\n\
    \            fi\n            i=$((i + 1))\n        done\n        echo \"YES\"\n\
    \    fi", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"NO\"",
  "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d'\
    \ ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local end2=$(echo $2\
    \ | cut -d' ' -f2)\n    local start=$(echo $start1 $start2 | sort -n | tail -n1)\n\
    \    local end=$(echo $end1 $end2 | sort -n | head -n1)\n    if [ $start -ge $end\
    \ ]; then\n        echo \"NO\"\n    else\n        local len=$(($end - $start))\n\
    \        if [ $len -eq 1 ]; then\n            echo \"YES\"\n        else\n   \
    \         local i=2\n            while [ $i -lt $len ]; do\n                if\
    \ [ $(($len % $i)) -eq 0 ]; then\n                    echo \"NO\"\n          \
    \          return\n                fi\n                i=$(($i + 1))\n       \
    \     done\n            echo \"YES\"\n        fi\n    fi", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n    if [[\
    \ ${b[0]} -gt $start ]]; then\n        start=${b[0]}\n    fi\n    if [[ ${b[1]}\
    \ -lt $end ]]; then\n        end=${b[1]}\n    fi\n    if [[ $start -gt $end ]];\
    \ then\n        echo \"NO\"\n        return\n    fi\n    local len=$((end - start\
    \ + 1))\n    if [[ $len -eq 1 ]]; then\n        echo \"NO\"\n        return\n\
    \    fi\n    local i=2\n    while [[ $i -lt $len ]]; do\n        if [[ $((len\
    \ % i)) -eq 0 ]]; then\n            echo \"NO\"\n            return\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo \"YES\"", "    local -a a=($1)\n   \
    \ local -a b=($2)\n    local -a c=()\n    local -a d=()\n    local -a e=()\n \
    \   local -a f=()\n    local -a g=()\n    local -a h=()\n    local -a i=()\n \
    \   local -a j=()\n    local -a k=()\n    local -a l=()\n    local -a m=()\n \
    \   local -a n=()\n    local -a o=()\n    local -a p=()\n    local -a q=()\n \
    \   local -a r=()\n    local -a s=()\n    local -a t=()\n    local -a u=()\n \
    \   local -a v=()\n    local -a w=()\n    local -a x=()\n    local -a y=()\n \
    \   local -a z=()\n    local -a A=()\n    local -a B=()\n    local -a C=()\n \
    \   local -a D=()\n    local -a E=()\n    local -a F=()\n    local -a G=()\n \
    \   local -a H=()\n    local -a I=()\n    local -a J=()\n    local -a K=()\n \
    \   local -a L=()\n    local -a M=()\n    local -a N=()\n    local -a O=()\n \
    \   local -a P=()\n    local -a Q=()\n    local -a R=()\n    local -a S=()\n \
    \   local -a T=()\n    local -a U=()\n    local -a V=()\n    local -a W=()\n \
    \   local -a X=()\n    local -a Y=()\n    local -a Z=()\n    local -a aa=()\n\
    \    local -a ab=()\n    local -a ac=()\n    local -a ad=()\n    local -a ae=()\n\
    \    local -a af=()\n    local -a ag=()\n    local -a ah=()\n    local -a ai=()\n\
    \    local -a aj=()\n    local -a ak=()", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i start2=${b[0]}\n\
    \    local -i end2=${b[1]}\n    local -i length=0\n    local -i length2=0\n  \
    \  local -i length3=0\n    local -i length4=0\n    local -i length5=0\n    local\
    \ -i length6=0\n    local -i length7=0\n    local -i length8=0\n    local -i length9=0\n\
    \    local -i length10=0\n    local -i length11=0\n    local -i length12=0\n \
    \   local -i length13=0\n    local -i length14=0\n    local -i length15=0\n  \
    \  local -i length16=0\n    local -i length17=0\n    local -i length18=0\n   \
    \ local -i length19=0\n    local -i length20=0\n    local -i length21=0\n    local\
    \ -i length22=0\n    local -i length23=0\n    local -i length24=0\n    local -i\
    \ length25=0\n    local -i length26=0\n    local -i length27=0\n    local -i length28=0\n\
    \    local -i length29=0\n    local -i length30=0\n    local -i length31=0\n \
    \   local -i length32=0\n    local -i length33=0\n    local -i length34=0\n  \
    \  local -i length35=0\n    local -i length36=0\n    local -i length37=0\n   \
    \ local -i length38=0\n    local -i length39=0\n    local -i length40=0\n    local\
    \ -i length41=0\n    local -i length42=0\n    local -i length43=0\n    local -i\
    \ length44=0\n    local -i length45=0\n    local -i length46=0\n    local -i length47=0\n\
    \    local -i length48=0\n    local -i length49=0\n   ", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"NO\"", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i\
    \ start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i start3\n    local -i\
    \ end3\n    if (( start > end )) || (( start2 > end2 )); then\n        echo \"\
    NO\"\n        return\n    fi\n    if (( start > start2 )); then\n        start3=$start\n\
    \    else\n        start3=$start2\n    fi\n    if (( end < end2 )); then\n   \
    \     end3=$end\n    else\n        end3=$end2\n    fi\n    if (( start3 > end3\
    \ )); then\n        echo \"NO\"\n        return\n    fi\n    local -i len=$((end3-start3+1))\n\
    \    local -i i\n    for (( i=2; i<len; i++ )); do\n        if (( len % i == 0\
    \ )); then\n            echo \"NO\"\n            return\n        fi\n    done\n\
    \    echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#a[@]}\n\
    \    local -i m=${#b[@]}\n    local -i start=0\n    local -i end=0\n    local\
    \ -i len=0\n    local -i is_prime=0\n    local -i is_intersect=0\n    local -i\
    \ is_first=0\n    local -i is_second=0\n    local -i is_third=0\n    local -i\
    \ is_fourth=0\n    local -i is_fifth=0\n    local -i is_sixth=0\n    local -i\
    \ is_seventh=0\n    local -i is_eighth=0\n    local -i is_ninth=0\n    local -i\
    \ is_tenth=0\n    local -i is_eleventh=0\n    local -i is_twelfth=0\n    local\
    \ -i is_thirteenth=0\n    local -i is_fourteenth=0\n    local -i is_fifteenth=0\n\
    \    local -i is_sixteenth=0\n    local -i is_seventeenth=0\n    local -i is_eighteenth=0\n\
    \    local -i is_nineteenth=0\n    local -i is_twentieth=0\n    local -i is_twenty_first=0\n\
    \    local -i is_twenty_second=0\n    local -i is_twenty_third=0\n    local -i\
    \ is_twenty_fourth=0\n    local -i is_twenty_fifth=0\n    local -i is_twenty_sixth=0\n\
    \    local -i is_twenty_seventh=0\n    local -i is_twenty_eighth=0\n    local\
    \ -i is_twenty_ninth=0\n    local -i is_thirtieth=0\n    local -i is_thirty_first=0\n\
    \    local -i is_thirty_second=0\n    local -i is_thirty_third=", "    local -a\
    \ a=($1)\n    local -a b=($2)\n    local -a c=()\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n\
    \    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n\
    \    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n\
    \    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n\
    \    local -i nnn=0\n    local -i o", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -i start=${a[0]}\n  local -i end=${a[1]}\n  local -i start2=${b[0]}\n\
    \  local -i end2=${b[1]}\n  if (( start2 > end )); then\n    echo \"NO\"\n   \
    \ return\n  fi\n  if (( start > end2 )); then\n    echo \"NO\"\n    return\n \
    \ fi\n  if (( start2 < start )); then\n    start=$start2\n  fi\n  if (( end2 >\
    \ end )); then\n    end=$end2\n  fi\n  local -i len=$(( end - start + 1 ))\n \
    \ if (( len == 1 )); then\n    echo \"NO\"\n    return\n  fi\n  local -i i\n \
    \ for (( i=2; i<len; i++ )); do\n    if (( len % i == 0 )); then\n      echo \"\
    NO\"\n      return\n    fi\n  done\n  echo \"YES\"", "  local a=($1)\n  local\
    \ b=($2)\n  local start=${a[0]}\n  local end=${a[1]}\n  local start2=${b[0]}\n\
    \  local end2=${b[1]}\n  if [ $start -gt $end ]; then\n    start=$end\n    end=$start\n\
    \  fi\n  if [ $start2 -gt $end2 ]; then\n    start2=$end2\n    end2=$start2\n\
    \  fi\n  if [ $start -gt $end2 ] || [ $start2 -gt $end ]; then\n    echo \"NO\"\
    \n    return\n  fi\n  local start=$((start > start2 ? start : start2))\n  local\
    \ end=$((end < end2 ? end : end2))\n  local length=$((end - start + 1))\n  if\
    \ [ $length -le 1 ]; then\n    echo \"NO\"\n    return\n  fi\n  local i=2\n  while\
    \ [ $i -lt $length ]; do\n    if [ $((length % i)) -eq 0 ]; then\n      echo \"\
    NO\"\n      return\n    fi\n    i=$((i + 1))\n  done\n  echo \"YES\"", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local start=$((${a[0]} > ${b[0]} ? ${a[0]}\
    \ : ${b[0]}))\n    local end=$((${a[1]} < ${b[1]} ? ${a[1]} : ${b[1]}))\n    if\
    \ ((start > end)); then\n        echo \"NO\"\n        return\n    fi\n    local\
    \ len=$((end - start + 1))\n    if ((len == 1)); then\n        echo \"NO\"\n \
    \       return\n    fi\n    local i=2\n    while ((i * i <= len)); do\n      \
    \  if ((len % i == 0)); then\n            echo \"NO\"\n            return\n  \
    \      fi\n        ((i++))\n    done\n    echo \"YES\"", "  local start1=$(echo\
    \ $1 | cut -d' ' -f1)\n  local end1=$(echo $1 | cut -d' ' -f2)\n  local start2=$(echo\
    \ $2 | cut -d' ' -f1)\n  local end2=$(echo $2 | cut -d' ' -f2)\n  local start=$(echo\
    \ \"$start1 $start2\" | sort -n | head -n1)\n  local end=$(echo \"$end1 $end2\"\
    \ | sort -n | tail -n1)\n  local length=$(echo \"$end - $start\" | bc)\n  if [\
    \ $length -lt 0 ]; then\n    echo \"NO\"\n  else\n    if [ $length -eq 0 ]; then\n\
    \      echo \"YES\"\n    else\n      for ((i=2; i<=$length; i++)); do\n      \
    \  if [ $(echo \"$length % $i\" | bc) -eq 0 ]; then\n          echo \"NO\"\n \
    \         return\n        fi\n      done\n      echo \"YES\"\n    fi\n  fi", " \
    \   local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n\
    \    local start2=${b[0]}\n    local end2=${b[1]}\n    if ((start > end2)) ||\
    \ ((start2 > end)); then\n        echo \"NO\"\n        return\n    fi\n    if\
    \ ((start < start2)); then\n        start=$start2\n    fi\n    if ((end > end2));\
    \ then\n        end=$end2\n    fi\n    local len=$((end - start + 1))\n    if\
    \ ((len <= 1)); then\n        echo \"NO\"\n        return\n    fi\n    local i=2\n\
    \    while ((i * i <= len)); do\n        if ((len % i == 0)); then\n         \
    \   echo \"NO\"\n            return\n        fi\n        ((i++))\n    done\n \
    \   echo \"YES\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"NO\"",
  "    local -a interval1=($1)\n    local -a interval2=($2)\n    local start=0\n \
    \   local end=0\n    if [[ ${interval1[0]} -ge ${interval2[0]} ]]; then\n    \
    \    start=${interval1[0]}\n    else\n        start=${interval2[0]}\n    fi\n\
    \    if [[ ${interval1[1]} -le ${interval2[1]} ]]; then\n        end=${interval1[1]}\n\
    \    else\n        end=${interval2[1]}\n    fi\n    if [[ $start -gt $end ]];\
    \ then\n        echo \"NO\"\n        return\n    fi\n    local length=$((end -\
    \ start + 1))\n    if [[ $length -eq 1 ]]; then\n        echo \"NO\"\n       \
    \ return\n    fi\n    local i=2\n    while [[ $i -lt $length ]]; do\n        if\
    \ [[ $((length % i)) -eq 0 ]]; then\n            echo \"NO\"\n            return\n\
    \        fi\n        ((i++))\n    done\n    echo \"YES\"", "  local -a a=($1)\n\
    \  local -a b=($2)\n  local -a c=()\n  if (( ${a[0]} <= ${b[0]} )); then\n   \
    \ c[0]=${b[0]}\n  else\n    c[0]=${a[0]}\n  fi\n  if (( ${a[1]} <= ${b[1]} ));\
    \ then\n    c[1]=${a[1]}\n  else\n    c[1]=${b[1]}\n  fi\n  if (( ${c[0]} > ${c[1]}\
    \ )); then\n    echo \"NO\"\n  else\n    local -i l=${c[1]}-${c[0]}+1\n    if\
    \ (( l <= 1 )); then\n      echo \"NO\"\n    else\n      local -i i=2\n      while\
    \ (( i*i <= l )); do\n        if (( l % i == 0 )); then\n          echo \"NO\"\
    \n          return\n        fi\n        (( i++ ))\n      done\n      echo \"YES\"\
    \n    fi\n  fi", "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo\
    \ $1 | cut -d' ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local\
    \ end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo $start1 $start2 | sort\
    \ -n | head -n1)\n    local end=$(echo $end1 $end2 | sort -n | tail -n1)\n   \
    \ local len=$(echo $end - $start + 1 | bc)\n    if [ $len -lt 1 ]; then\n    \
    \    echo \"NO\"\n    else\n        local i=2\n        while [ $i -lt $len ];\
    \ do\n            if [ $(echo $len % $i | bc) -eq 0 ]; then\n                echo\
    \ \"NO\"\n                return\n            fi\n            i=$(echo $i + 1\
    \ | bc)\n        done\n        echo \"YES\"\n    fi", "    local -a interval1=($1)\n\
    \    local -a interval2=($2)\n    local start=${interval1[0]}\n    local end=${interval1[1]}\n\
    \    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n    local -a\
    \ intersection=()\n    if [ $start -gt $end ]; then\n        start=$end\n    \
    \    end=${interval1[0]}\n    fi\n    if [ $start2 -gt $end2 ]; then\n       \
    \ start2=$end2\n        end2=${interval2[0]}\n    fi\n    if [ $start -gt $end2\
    \ ] || [ $start2 -gt $end ]; then\n        echo \"NO\"\n        return\n    fi\n\
    \    if [ $start -ge $start2 ]; then\n        start=$start2\n    fi\n    if [\
    \ $end -le $end2 ]; then\n        end=$end\n    else\n        end=$end2\n    fi\n\
    \    local length=$((end-start+1))\n    if [ $length -eq 1 ]; then\n        echo\
    \ \"NO\"\n        return\n    fi\n    local i=2\n    while [ $i -lt $length ];\
    \ do\n        if [ $((length%i)) -eq 0 ]; then\n            echo \"NO\"\n    \
    \        return\n        fi\n        i=$((i+1))\n    done\n    echo \"YES\"",
  "    local start1=\"$(echo $1 | cut -d' ' -f1)\"\n    local end1=\"$(echo $1 | cut\
    \ -d' ' -f2)\"\n    local start2=\"$(echo $2 | cut -d' ' -f1)\"\n    local end2=\"\
    $(echo $2 | cut -d' ' -f2)\"\n    local start=$((start1 > start2 ? start1 : start2))\n\
    \    local end=$((end1 < end2 ? end1 : end2))\n    if ((start > end)); then\n\
    \        echo \"NO\"\n        return\n    fi\n    local length=$((end - start\
    \ + 1))\n    if ((length < 2)); then\n        echo \"NO\"\n        return\n  \
    \  fi\n    if ((length == 2)); then\n        echo \"YES\"\n        return\n  \
    \  fi\n    for ((i = 2; i < length; i++)); do\n        if ((length % i == 0));\
    \ then\n            echo \"NO\"\n            return\n        fi\n    done\n  \
    \  echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n\
    \    local -i start=0\n    local -i end=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n", " \
    \ local -a a=($1)\n  local -a b=($2)\n  local start=$((a[0]>b[0]?a[0]:b[0]))\n\
    \  local end=$((a[1]<b[1]?a[1]:b[1]))\n  local len=$((end-start+1))\n  if ((len<=0));\
    \ then\n    echo \"NO\"\n  elif ((len==1)); then\n    echo \"YES\"\n  else\n \
    \   local i\n    for ((i=2;i<len;i++)); do\n      if ((len%i==0)); then\n    \
    \    echo \"NO\"\n        return\n      fi\n    done\n    echo \"YES\"\n  fi",
  "  local -r a=\"$1\"\n  local -r b=\"$2\"\n  local -r a_start=\"$(echo \"$a\" |\
    \ cut -d' ' -f1)\"\n  local -r a_end=\"$(echo \"$a\" | cut -d' ' -f2)\"\n  local\
    \ -r b_start=\"$(echo \"$b\" | cut -d' ' -f1)\"\n  local -r b_end=\"$(echo \"\
    $b\" | cut -d' ' -f2)\"\n  local -r start=\"$(echo \"$a_start $b_start\" | sort\
    \ -n | tail -n1)\"\n  local -r end=\"$(echo \"$a_end $b_end\" | sort -n | head\
    \ -n1)\"\n  local -r length=\"$((end - start))\"\n  if [[ \"$length\" -lt 0 ]];\
    \ then\n    echo \"NO\"\n  else\n    if [[ \"$length\" -eq 0 ]]; then\n      echo\
    \ \"YES\"\n    else\n      if [[ \"$length\" -eq 1 ]]; then\n        echo \"NO\"\
    \n      else\n        local -r sqrt=\"$(echo \"sqrt($length)\" | bc)\"\n     \
    \   local -r is_prime=\"$(echo \"$length\" | factor | grep -v \"^$length: \")\"\
    \n        if [[ -z \"$is_prime\" ]]; then\n          echo \"NO\"\n        else\n\
    \          echo \"YES\"\n        fi\n      fi\n    fi\n  fi", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n    local\
    \ start2=${b[0]}\n    local end2=${b[1]}\n    if (( start > end2 || start2 > end\
    \ )); then\n        echo \"NO\"\n        return\n    fi\n    if (( start < start2\
    \ )); then\n        start=$start2\n    fi\n    if (( end > end2 )); then\n   \
    \     end=$end2\n    fi\n    if (( start == end )); then\n        echo \"NO\"\n\
    \        return\n    fi\n    local len=$(( end - start ))\n    local i=2\n   \
    \ while (( i <= len )); do\n        if (( len % i == 0 )); then\n            echo\
    \ \"NO\"\n            return\n        fi\n        (( i++ ))\n    done\n    echo\
    \ \"YES\"", "    # write your code here\n    # use echo to print result\n    echo\
    \ \"NO\"", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    local start2=${b[0]}\n    local end2=${b[1]}\n   \
    \ if (( start > end2 || start2 > end )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    if (( start < start2 )); then\n        start=$start2\n    fi\n  \
    \  if (( end > end2 )); then\n        end=$end2\n    fi\n    if (( start == end\
    \ )); then\n        echo \"NO\"\n        return\n    fi\n    if (( start == 2\
    \ )); then\n        echo \"YES\"\n        return\n    fi\n    if (( start % 2\
    \ == 0 )); then\n        echo \"NO\"\n        return\n    fi\n    for (( i=3;\
    \ i<=end; i+=2 )); do\n        if (( start % i == 0 )); then\n            echo\
    \ \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"", "  local\
    \ -a a=($1)\n  local -a b=($2)\n  local start=$((${a[0]}>${b[0]}?${a[0]}:${b[0]}))\n\
    \  local end=$((${a[1]}<${b[1]}?${a[1]}:${b[1]}))\n  if ((start>end)); then\n\
    \    echo \"NO\"\n    return\n  fi\n  local len=$((end-start+1))\n  local -a primes=(2\
    \ 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)\n  for\
    \ p in ${primes[@]}; do\n    if ((p==len)); then\n      echo \"YES\"\n      return\n\
    \    fi\n  done\n  echo \"NO\"", "  local start1=$(echo $1 | cut -d ' ' -f 1)\n\
    \  local end1=$(echo $1 | cut -d ' ' -f 2)\n  local start2=$(echo $2 | cut -d\
    \ ' ' -f 1)\n  local end2=$(echo $2 | cut -d ' ' -f 2)\n  local start=$(echo \"\
    $start1 $start2\" | sort -n | tail -n 1)\n  local end=$(echo \"$end1 $end2\" |\
    \ sort -n | head -n 1)\n  local length=$(echo \"$end - $start\" | bc)\n  if [\
    \ $length -lt 0 ]; then\n    echo \"NO\"\n  else\n    local prime=1\n    for ((i=2;\
    \ i<=$length; i++)); do\n      if [ $(echo \"$length % $i\" | bc) -eq 0 ]; then\n\
    \        prime=0\n        break\n      fi\n    done\n    if [ $prime -eq 1 ];\
    \ then\n      echo \"YES\"\n    else\n      echo \"NO\"\n    fi\n  fi", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local start=$((a[0]>b[0]?a[0]:b[0]))\n \
    \   local end=$((a[1]<b[1]?a[1]:b[1]))\n    if ((start>end)); then\n        echo\
    \ \"NO\"\n        return\n    fi\n    local len=$((end-start+1))\n    if ((len<2));\
    \ then\n        echo \"NO\"\n        return\n    fi\n    local i\n    for ((i=2;i<len;i++));\
    \ do\n        if ((len%i==0)); then\n            echo \"NO\"\n            return\n\
    \        fi\n    done\n    echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i start2=${b[0]}\n\
    \    local -i end2=${b[1]}\n    local -i start3=0\n    local -i end3=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local\
    \ -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local\
    \ -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local\
    \ -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local\
    \ -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local\
    \ -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local\
    \ -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local\
    \ -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n", " \
    \   local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    if (( ${a[0]}\
    \ <= ${b[0]} )); then\n        c[0]=${b[0]}\n    else\n        c[0]=${a[0]}\n\
    \    fi\n    if (( ${a[1]} <= ${b[1]} )); then\n        c[1]=${a[1]}\n    else\n\
    \        c[1]=${b[1]}\n    fi\n    if (( ${c[0]} <= ${c[1]} )); then\n       \
    \ local -i len=${c[1]}-${c[0]}+1\n        if (( len > 1 )); then\n           \
    \ local -i i=2\n            while (( i*i <= len )); do\n                if ((\
    \ len % i == 0 )); then\n                    echo \"NO\"\n                   \
    \ return\n                fi\n                (( i++ ))\n            done\n  \
    \          echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n \
    \   else\n        echo \"NO\"\n    fi", "    local -a arr1=($1)\n    local -a\
    \ arr2=($2)\n    local start1=${arr1[0]}\n    local end1=${arr1[1]}\n    local\
    \ start2=${arr2[0]}\n    local end2=${arr2[1]}\n    local start=$((start1>start2?start1:start2))\n\
    \    local end=$((end1<end2?end1:end2))\n    local len=$((end-start+1))\n    if\
    \ [[ $len -lt 0 ]]; then\n        echo \"NO\"\n        return\n    fi\n    local\
    \ i=2\n    while [[ $i -lt $len ]]; do\n        if [[ $((len%i)) -eq 0 ]]; then\n\
    \            echo \"NO\"\n            return\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local\
    \ -a c\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\
    \    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i\
    \ ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i\
    \ ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i\
    \ al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i\
    \ ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i\
    \ at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i\
    \ ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i\
    \ bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i\
    \ bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i\
    \ bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i\
    \ bn=0\n    local -i bo=", "    # $1 is a space-separated list\n    # $2 is a\
    \ space-separated list\n    # $3 is a space-separated list\n    # $4 is a space-separated\
    \ list\n    # $5 is a space-separated list\n    # $6 is a space-separated list\n\
    \    # $7 is a space-separated list\n    # $8 is a space-separated list\n    #\
    \ $9 is a space-separated list\n    # ${10} is a space-separated list\n    # ${11}\
    \ is a space-separated list\n    # ${12} is a space-separated list\n    # ${13}\
    \ is a space-separated list\n    # ${14} is a space-separated list\n    # ${15}\
    \ is a space-separated list\n    # ${16} is a space-separated list\n    # ${17}\
    \ is a space-separated list\n    # ${18} is a space-separated list\n    # ${19}\
    \ is a space-separated list\n    # ${20} is a space-separated list\n    # ${21}\
    \ is a space-separated list\n    # ${22} is a space-separated list\n    # ${23}\
    \ is a space-separated list\n    # ${24} is a space-separated list\n    # ${25}\
    \ is a space-separated list\n    # ${26} is a space-separated list\n    # ${27}\
    \ is a space-separated list\n    # ${28} is a space-separated list\n    # ${29}\
    \ is a space-separated list\n    # ${30} is a space-separated list\n    # ${31}\
    \ is a space-separated list\n    # ${32} is a space-separated list\n    # ${33}\
    \ is a space-separated list\n    # ${34} is a space-separated list\n    # ${35}\
    \ is a space-separated list\n    # ${36} is a space-separated list\n    # ${37}\
    \ is a space-separated list\n    # ${38} is a space-separated list\n    # ${39}\
    \ is a space-separated list\n    # ${40} is a space-separated list\n", "  local\
    \ start1=$(echo $1 | awk '{print $1}')\n  local end1=$(echo $1 | awk '{print $2}')\n\
    \  local start2=$(echo $2 | awk '{print $1}')\n  local end2=$(echo $2 | awk '{print\
    \ $2}')\n  local start=$(echo \"$start1 $start2\" | sort -n | tail -n 1)\n  local\
    \ end=$(echo \"$end1 $end2\" | sort -n | head -n 1)\n  local len=$(($end - $start\
    \ + 1))\n  local i=2\n  while [ $i -lt $len ]; do\n    if [ $(($len % $i)) -eq\
    \ 0 ]; then\n      echo \"NO\"\n      return\n    fi\n    i=$(($i + 1))\n  done\n\
    \  if [ $len -gt 1 ]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi",
  "    local a=($1)\n    local b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n\
    \    if [[ ${b[0]} -gt $start ]]; then\n        start=${b[0]}\n    fi\n    if\
    \ [[ ${b[1]} -lt $end ]]; then\n        end=${b[1]}\n    fi\n    if [[ $start\
    \ -gt $end ]]; then\n        echo \"NO\"\n        return\n    fi\n    local len=$((end\
    \ - start + 1))\n    if [[ $len -eq 1 ]]; then\n        echo \"NO\"\n        return\n\
    \    fi\n    for ((i=2; i<len; i++)); do\n        if [[ $((len % i)) -eq 0 ]];\
    \ then\n            echo \"NO\"\n            return\n        fi\n    done\n  \
    \  echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    if (( ${b[0]} > start )); then\n        start=${b[0]}\n\
    \    fi\n    if (( ${b[1]} < end )); then\n        end=${b[1]}\n    fi\n    if\
    \ (( start > end )); then\n        echo \"NO\"\n        return\n    fi\n    local\
    \ len=$(( end - start + 1 ))\n    if (( len == 1 )); then\n        echo \"NO\"\
    \n        return\n    fi\n    local i\n    for (( i = 2; i < len; i++ )); do\n\
    \        if (( len % i == 0 )); then\n            echo \"NO\"\n            return\n\
    \        fi\n    done\n    echo \"YES\"", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"NO\"", "  local -a a=($1)\n  local -a b=($2)\n  local\
    \ start=$((a[0]>b[0]?a[0]:b[0]))\n  local end=$((a[1]<b[1]?a[1]:b[1]))\n  local\
    \ len=$((end-start+1))\n  if [[ $len -lt 1 ]]; then\n    echo \"NO\"\n  else\n\
    \    local -i i=2\n    while [[ $i -lt $len ]]; do\n      if [[ $((len%i)) -eq\
    \ 0 ]]; then\n        echo \"NO\"\n        return\n      fi\n      ((i++))\n \
    \   done\n    echo \"YES\"\n  fi", "  local a1=$(echo $1 | cut -d' ' -f1)\n  local\
    \ a2=$(echo $1 | cut -d' ' -f2)\n  local b1=$(echo $2 | cut -d' ' -f1)\n  local\
    \ b2=$(echo $2 | cut -d' ' -f2)\n  local c1=$(echo \"$a1 $b1\" | tr ' ' '\\n'\
    \ | sort -n | head -n1)\n  local c2=$(echo \"$a2 $b2\" | tr ' ' '\\n' | sort -n\
    \ | tail -n1)\n  local len=$(echo \"$c2 - $c1\" | bc)\n  if [[ $len -lt 0 ]];\
    \ then\n    echo \"NO\"\n  else\n    local prime=1\n    for (( i=2; i<$len; i++\
    \ )); do\n      if [[ $((len%i)) -eq 0 ]]; then\n        prime=0\n        break\n\
    \      fi\n    done\n    if [[ $prime -eq 1 ]]; then\n      echo \"YES\"\n   \
    \ else\n      echo \"NO\"\n    fi\n  fi", "  # your code here\n  local -a a=($1)\n\
    \  local -a b=($2)\n  local -a c=()\n  if (( ${a[0]} > ${a[1]} )); then\n    local\
    \ -i tmp=${a[0]}\n    a[0]=${a[1]}\n    a[1]=$tmp\n  fi\n  if (( ${b[0]} > ${b[1]}\
    \ )); then\n    local -i tmp=${b[0]}\n    b[0]=${b[1]}\n    b[1]=$tmp\n  fi\n\
    \  if (( ${a[0]} > ${b[1]} || ${b[0]} > ${a[1]} )); then\n    echo \"NO\"\n  \
    \  return\n  fi\n  if (( ${a[0]} >= ${b[0]} )); then\n    c[0]=${a[0]}\n  else\n\
    \    c[0]=${b[0]}\n  fi\n  if (( ${a[1]} <= ${b[1]} )); then\n    c[1]=${a[1]}\n\
    \  else\n    c[1]=${b[1]}\n  fi\n  if (( c[1] - c[0] < 2 )); then\n    echo \"\
    NO\"\n    return\n  fi\n  local -i i=2\n  while (( i * i <= c[1] - c[0] )); do\n\
    \    if (( (c[1] - c[0]) % i == 0 )); then\n      echo \"NO\"\n      return\n\
    \    fi\n    (( i++ ))\n  done\n  echo \"YES\"", "    local start1=$(echo $1 |\
    \ awk '{print $1}')\n    local end1=$(echo $1 | awk '{print $2}')\n    local start2=$(echo\
    \ $2 | awk '{print $1}')\n    local end2=$(echo $2 | awk '{print $2}')\n    local\
    \ start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1 < end2 ?\
    \ end1 : end2))\n    local length=$((end - start + 1))\n    if [[ $length -lt\
    \ 1 ]]; then\n        echo \"NO\"\n    else\n        local is_prime=1\n      \
    \  for ((i=2; i<$length; i++)); do\n            if [[ $((length % i)) -eq 0 ]];\
    \ then\n                is_prime=0\n                break\n            fi\n  \
    \      done\n        if [[ $is_prime -eq 1 ]]; then\n            echo \"YES\"\n\
    \        else\n            echo \"NO\"\n        fi\n    fi", "    local start1=$(echo\
    \ $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo\
    \ $2 | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    local length=$((end - start + 1))\n    if [ $length -lt 0 ]; then\n     \
    \   echo \"NO\"\n    elif [ $length -eq 0 ]; then\n        echo \"YES\"\n    else\n\
    \        local i=2\n        while [ $i -lt $length ]; do\n            if [ $((length\
    \ % i)) -eq 0 ]; then\n                echo \"NO\"\n                return\n \
    \           fi\n            i=$((i + 1))\n        done\n        echo \"YES\"\n\
    \    fi", "  local -a interval1=($1)\n  local -a interval2=($2)\n  local start1=${interval1[0]}\n\
    \  local end1=${interval1[1]}\n  local start2=${interval2[0]}\n  local end2=${interval2[1]}\n\
    \  local start=$((start1 > start2 ? start1 : start2))\n  local end=$((end1 < end2\
    \ ? end1 : end2))\n  if ((start > end)); then\n    echo \"NO\"\n    return\n \
    \ fi\n  local length=$((end - start + 1))\n  if ((length == 1)); then\n    echo\
    \ \"NO\"\n    return\n  fi\n  for ((i = 2; i < length; i++)); do\n    if ((length\
    \ % i == 0)); then\n      echo \"NO\"\n      return\n    fi\n  done\n  echo \"\
    YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n    local\
    \ -a d=()\n    local -a e=()\n    local -a f=()\n    local -a g=()\n    local\
    \ -a h=()\n    local -a i=()\n    local -a j=()\n    local -a k=()\n    local\
    \ -a l=()\n    local -a m=()\n    local -a n=()\n    local -a o=()\n    local\
    \ -a p=()\n    local -a q=()\n    local -a r=()\n    local -a s=()\n    local\
    \ -a t=()\n    local -a u=()\n    local -a v=()\n    local -a w=()\n    local\
    \ -a x=()\n    local -a y=()\n    local -a z=()\n    local -a A=()\n    local\
    \ -a B=()\n    local -a C=()\n    local -a D=()\n    local -a E=()\n    local\
    \ -a F=()\n    local -a G=()\n    local -a H=()\n    local -a I=()\n    local\
    \ -a J=()\n    local -a K=()\n    local -a L=()\n    local -a M=()\n    local\
    \ -a N=()\n    local -a O=()\n    local -a P=()\n    local -a Q=()\n    local\
    \ -a R=()\n    local -a S=()\n    local -a T=()\n    local -a U=()\n    local\
    \ -a V=()\n    local -a W=()\n    local -a X=()\n    local -a Y=()\n    local\
    \ -a Z=()\n    local -a aa=()\n    local -a ab=()\n    local -a ac=()\n    local\
    \ -a ad=()\n    local -a ae=()\n    local -a af=()\n    local -a ag=()\n    local\
    \ -a ah=()\n    local -a ai=()\n    local -a aj=()\n    local -a ak=()", "  local\
    \ -a a=($1)\n  local -a b=($2)\n  local start=$((${a[0]}>${b[0]}?${a[0]}:${b[0]}))\n\
    \  local end=$((${a[1]}<${b[1]}?${a[1]}:${b[1]}))\n  if (($start>$end)); then\n\
    \    echo \"NO\"\n    return\n  fi\n  local len=$(($end-$start+1))\n  if (($len==1));\
    \ then\n    echo \"NO\"\n    return\n  fi\n  local i=2\n  while (($i*$i<=$len));\
    \ do\n    if (($len%$i==0)); then\n      echo \"NO\"\n      return\n    fi\n \
    \   ((i++))\n  done\n  echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local start=$((${a[0]}>${b[0]}?${a[0]}:${b[0]}))\n    local end=$((${a[1]}<${b[1]}?${a[1]}:${b[1]}))\n\
    \    if [[ $start -gt $end ]]; then\n        echo \"NO\"\n        return\n   \
    \ fi\n    local len=$(($end-$start+1))\n    local i=2\n    while [[ $i -lt $len\
    \ ]]; do\n        if [[ $len%$i -eq 0 ]]; then\n            echo \"NO\"\n    \
    \        return\n        fi\n        i=$(($i+1))\n    done\n    echo \"YES\"",
  "    local -a a=($1)\n    local -a b=($2)\n    local start=$(( ${a[0]} > ${b[0]}\
    \ ? ${a[0]} : ${b[0]} ))\n    local end=$(( ${a[1]} < ${b[1]} ? ${a[1]} : ${b[1]}\
    \ ))\n    if [[ $start -gt $end ]]; then\n        echo \"NO\"\n        return\n\
    \    fi\n    local len=$(( $end - $start + 1 ))\n    if [[ $len -eq 1 ]]; then\n\
    \        echo \"NO\"\n        return\n    fi\n    local i\n    for (( i=2; i<$len;\
    \ i++ )); do\n        if [[ $(( $len % $i )) -eq 0 ]]; then\n            echo\
    \ \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"", "  local\
    \ -a interval1=($1)\n  local -a interval2=($2)\n  local start1=${interval1[0]}\n\
    \  local end1=${interval1[1]}\n  local start2=${interval2[0]}\n  local end2=${interval2[1]}\n\
    \  local start=$((start1 > start2 ? start1 : start2))\n  local end=$((end1 < end2\
    \ ? end1 : end2))\n  local length=$((end - start + 1))\n  if ((length <= 0));\
    \ then\n    echo \"NO\"\n    return\n  fi\n  local -i i=2\n  while ((i * i <=\
    \ length)); do\n    if ((length % i == 0)); then\n      echo \"NO\"\n      return\n\
    \    fi\n    ((i++))\n  done\n  echo \"YES\"", "  local -a a=($1)\n  local -a\
    \ b=($2)\n  local -a c=()\n  if (( a[0] > b[1] || b[0] > a[1] )); then\n    echo\
    \ \"NO\"\n  else\n    c[0]=$(( a[0] > b[0] ? a[0] : b[0] ))\n    c[1]=$(( a[1]\
    \ < b[1] ? a[1] : b[1] ))\n    if (( c[1] - c[0] < 2 )); then\n      echo \"NO\"\
    \n    else\n      echo \"YES\"\n    fi\n  fi", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i\
    \ start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i len=0\n    if ((start\
    \ > end)) || ((start2 > end2)); then\n        echo \"NO\"\n        return\n  \
    \  fi\n    if ((start > start2)); then\n        start=start2\n    fi\n    if ((end\
    \ < end2)); then\n        end=end2\n    fi\n    if ((start > end)); then\n   \
    \     echo \"NO\"\n        return\n    fi\n    len=$((end - start + 1))\n    if\
    \ ((len < 2)); then\n        echo \"NO\"\n        return\n    fi\n    if ((len\
    \ == 2)); then\n        echo \"YES\"\n        return\n    fi\n    if ((len % 2\
    \ == 0)); then\n        echo \"NO\"\n        return\n    fi\n    if ((len % 3\
    \ == 0)); then\n        echo \"NO\"\n        return\n    fi\n    if ((len % 5\
    \ == 0)); then\n        echo \"NO\"\n        return\n    fi\n    if ((len % 7\
    \ == 0)); then\n        echo \"NO\"\n        return\n    fi\n    echo \"YES\"",
  "    local -a interval1=($1)\n    local -a interval2=($2)\n    local start1=${interval1[0]}\n\
    \    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n\
    \    local start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1\
    \ < end2 ? end1 : end2))\n    local length=$((end - start + 1))\n    if [[ $length\
    \ -lt 0 ]]; then\n        echo \"NO\"\n    elif [[ $length -eq 0 ]]; then\n  \
    \      echo \"NO\"\n    elif [[ $length -eq 1 ]]; then\n        echo \"NO\"\n\
    \    elif [[ $length -eq 2 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 3 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 5 ]]; then\n \
    \       echo \"YES\"\n    elif [[ $length -eq 7 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 11 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 13 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 17 ]]; then\n\
    \        echo \"YES\"\n    elif [[ $length -eq 19 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 23 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 29 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 31 ]]; then\n\
    \        echo \"YES\"\n    elif [[ $length -eq 37 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 41 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 43 ]]; then\n        echo \"YES\"\n    elif [[ $length -eq 47 ]]; then\n\
    \        echo \"YES\"\n    elif [[ $length -eq 53 ]]; then\n        echo \"YES\"\
    \n    elif [[ $length -eq 59 ]]; then\n        echo \"YES\"\n    elif [[ $length\
    \ -eq 61 ]", "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n\
    \    local -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local -a c=()\n    local -i i=0\n    local -i j=0\n    local -i\
    \ k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n  \
    \  local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n  \
    \  local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n  \
    \  local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n  \
    \  local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n  \
    \  local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n  \
    \  local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n  \
    \  local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n\
    \    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n\
    \    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n\
    \    local -i mmm=", "    local -a a=($1)\n    local -a b=($2)\n    local -a c=()\n\
    \    local -a d=()\n    local -a e=()\n    local -a f=()\n    local -a g=()\n\
    \    local -a h=()\n    local -a i=()\n    local -a j=()\n    local -a k=()\n\
    \    local -a l=()\n    local -a m=()\n    local -a n=()\n    local -a o=()\n\
    \    local -a p=()\n    local -a q=()\n    local -a r=()\n    local -a s=()\n\
    \    local -a t=()\n    local -a u=()\n    local -a v=()\n    local -a w=()\n\
    \    local -a x=()\n    local -a y=()\n    local -a z=()\n    local -a A=()\n\
    \    local -a B=()\n    local -a C=()\n    local -a D=()\n    local -a E=()\n\
    \    local -a F=()\n    local -a G=()\n    local -a H=()\n    local -a I=()\n\
    \    local -a J=()\n    local -a K=()\n    local -a L=()\n    local -a M=()\n\
    \    local -a N=()\n    local -a O=()\n    local -a P=()\n    local -a Q=()\n\
    \    local -a R=()\n    local -a S=()\n    local -a T=()\n    local -a U=()\n\
    \    local -a V=()\n    local -a W=()\n    local -a X=()\n    local -a Y=()\n\
    \    local -a Z=()\n    local -a aa=()\n    local -a ab=()\n    local -a ac=()\n\
    \    local -a ad=()\n    local -a ae=()\n    local -a af=()\n    local -a ag=()\n\
    \    local -a ah=()\n    local -a ai=()\n    local -a aj=()\n    local -a ak=()",
  "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i=0\n  local -i\
    \ j=0\n  local -i k=0\n  local -i m=${#a[@]}\n  local -i n=${#b[@]}\n  local -i\
    \ start\n  local -i end\n  local -i len\n  local -i is_prime\n  local -i is_intersect\n\
    \  local -i is_prime=0\n  local -i is_intersect=0\n  while ((i < m && j < n));\
    \ do\n    if ((a[i] < b[j])); then\n      ((i++))\n    elif ((a[i] > b[j])); then\n\
    \      ((j++))\n    else\n      c[k++]=${a[i]}\n      ((i++))\n      ((j++))\n\
    \    fi\n  done\n  if ((k > 0)); then\n    ((is_intersect=1))\n    start=${c[0]}\n\
    \    end=${c[k-1]}\n    len=$((end - start + 1))\n    is_prime=1\n    for ((i=2;\
    \ i<len; i++)); do\n      if ((len % i == 0)); then\n        is_prime=0\n    \
    \    break\n      fi\n    done\n  fi\n  if ((is_intersect == 0)); then\n    echo\
    \ \"NO\"\n  elif ((is_prime == 1)); then\n    echo \"YES\"\n  else\n    echo \"\
    NO\"\n  fi", "  local start1=$(echo $1 | cut -d' ' -f1)\n  local end1=$(echo $1\
    \ | cut -d' ' -f2)\n  local start2=$(echo $2 | cut -d' ' -f1)\n  local end2=$(echo\
    \ $2 | cut -d' ' -f2)\n  local start=$(echo \"$start1 $start2\" | sort -n | head\
    \ -n1)\n  local end=$(echo \"$end1 $end2\" | sort -n | tail -n1)\n  local len=$(echo\
    \ \"$end - $start\" | bc)\n  local is_prime=$(is_prime $len)\n  if [ $is_prime\
    \ == \"YES\" ]; then\n    echo \"YES\"\n  else\n    echo \"NO\"\n  fi", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n\
    \    if [[ ${b[0]} -gt $start ]]; then\n        start=${b[0]}\n    fi\n    if\
    \ [[ ${b[1]} -lt $end ]]; then\n        end=${b[1]}\n    fi\n    if [[ $start\
    \ -gt $end ]]; then\n        echo \"NO\"\n        return\n    fi\n    local len=$((end\
    \ - start + 1))\n    local i=2\n    while [[ $i -lt $len ]]; do\n        if [[\
    \ $((len % i)) -eq 0 ]]; then\n            echo \"NO\"\n            return\n \
    \       fi\n        i=$((i + 1))\n    done\n    echo \"YES\"", "    local -a a=($1)\n\
    \    local -a b=($2)\n    local -a c\n    local -a d\n    local -a e\n    local\
    \ -a f\n    local -a g\n    local -a h\n    local -a i\n    local -a j\n    local\
    \ -a k\n    local -a l\n    local -a m\n    local -a n\n    local -a o\n    local\
    \ -a p\n    local -a q\n    local -a r\n    local -a s\n    local -a t\n    local\
    \ -a u\n    local -a v\n    local -a w\n    local -a x\n    local -a y\n    local\
    \ -a z\n    local -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n \
    \   local -a ae\n    local -a af\n    local -a ag\n    local -a ah\n    local\
    \ -a ai\n    local -a aj\n    local -a ak\n    local -a al\n    local -a am\n\
    \    local -a an\n    local -a ao\n    local -a ap\n    local -a aq\n    local\
    \ -a ar\n    local -a as\n    local -a at\n    local -a au\n    local -a av\n\
    \    local -a aw\n    local -a ax\n    local -a ay\n    local -a az\n    local\
    \ -a ba\n    local -a bb\n    local -a bc\n    local -a bd\n    local -a be\n\
    \    local -a bf\n    local -a bg\n    local -a bh\n    local -a bi\n    local\
    \ -a bj\n    local -a bk\n    local -a bl\n    local -a bm\n    local -a bn\n\
    \    local -a bo\n    local -a bp\n    local -a bq\n    local -a br\n    local\
    \ -a bs\n    local -a bt\n    local -a bu\n    local -a bv\n    local -a bw\n\
    \    local -a bx\n    local -a by\n    local -a bz\n    local -a ca\n    local\
    \ -a cb", "  local -a a=($1)\n  local -a b=($2)\n  local -a c=($(intersect \"\
    ${a[@]}\" \"${b[@]}\"))\n  local len=\"${#c[@]}\"\n  if [[ \"$len\" -eq 0 ]];\
    \ then\n    echo \"NO\"\n  elif [[ \"$len\" -eq 1 ]]; then\n    echo \"NO\"\n\
    \  else\n    local -a d=($(seq \"${c[0]}\" \"${c[1]}\"))\n    local len=\"${#d[@]}\"\
    \n    if [[ \"$len\" -eq 1 ]]; then\n      echo \"NO\"\n    else\n      if [[\
    \ \"$(is_prime \"$len\")\" -eq 1 ]]; then\n        echo \"YES\"\n      else\n\
    \        echo \"NO\"\n      fi\n    fi\n  fi", "  local -a interval1=($1)\n  local\
    \ -a interval2=($2)\n  local start1=${interval1[0]}\n  local end1=${interval1[1]}\n\
    \  local start2=${interval2[0]}\n  local end2=${interval2[1]}\n  local start=$((start1\
    \ > start2 ? start1 : start2))\n  local end=$((end1 < end2 ? end1 : end2))\n \
    \ local length=$((end - start + 1))\n  if [[ $length -lt 1 ]]; then\n    echo\
    \ \"NO\"\n    return\n  fi\n  local i=2\n  while [[ $i -lt $length ]]; do\n  \
    \  if [[ $((length % i)) -eq 0 ]]; then\n      echo \"NO\"\n      return\n   \
    \ fi\n    i=$((i + 1))\n  done\n  echo \"YES\"", "    local start1=$(echo $1 |\
    \ cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo\
    \ $2 | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo\
    \ \"$start1 $start2\" | sort -n | tail -n1)\n    local end=$(echo \"$end1 $end2\"\
    \ | sort -n | head -n1)\n    local length=$(echo \"$end - $start\" | bc)\n   \
    \ if [ $length -lt 0 ]; then\n        echo \"NO\"\n    else\n        if [ $(is_prime\
    \ $length) == \"YES\" ]; then\n            echo \"YES\"\n        else\n      \
    \      echo \"NO\"\n        fi\n    fi", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -i start=${a[0]}\n    local -i end=${a[1]}\n    local -i start2=${b[0]}\n\
    \    local -i end2=${b[1]}\n    local -i start3=0\n    local -i end3=0\n    local\
    \ -i len=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i\
    \ l=0\n    local -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n",
  "    local -a interval1=($1)\n    local -a interval2=($2)\n    local start=0\n \
    \   local end=0\n    if [ ${interval1[0]} -ge ${interval2[0]} ]; then\n      \
    \  start=${interval1[0]}\n    else\n        start=${interval2[0]}\n    fi\n  \
    \  if [ ${interval1[1]} -le ${interval2[1]} ]; then\n        end=${interval1[1]}\n\
    \    else\n        end=${interval2[1]}\n    fi\n    if [ $start -gt $end ]; then\n\
    \        echo \"NO\"\n        return\n    fi\n    local len=$((end - start + 1))\n\
    \    if [ $len -eq 1 ]; then\n        echo \"NO\"\n        return\n    fi\n  \
    \  local i=2\n    while [ $i -lt $len ]; do\n        if [ $((len % i)) -eq 0 ];\
    \ then\n            echo \"NO\"\n            return\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local start=$((a[0] > b[0] ? a[0] : b[0]))\n    local end=$((a[1] < b[1]\
    \ ? a[1] : b[1]))\n    local len=$((end - start + 1))\n    if ((len < 1)); then\n\
    \        echo \"NO\"\n    elif ((len == 1)); then\n        echo \"YES\"\n    else\n\
    \        local i\n        for ((i = 2; i < len; i++)); do\n            if ((len\
    \ % i == 0)); then\n                echo \"NO\"\n                return\n    \
    \        fi\n        done\n        echo \"YES\"\n    fi", "    local -a interval1=($1)\n\
    \    local -a interval2=($2)\n    local start1=${interval1[0]}\n    local end1=${interval1[1]}\n\
    \    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    local length=$((end - start + 1))\n    if ((length < 1)); then\n        echo\
    \ \"NO\"\n        return\n    fi\n    for ((i = 2; i < length; i++)); do\n   \
    \     if ((length % i == 0)); then\n            echo \"NO\"\n            return\n\
    \        fi\n    done\n    echo \"YES\"", "    local start1=$(echo $1 | cut -d'\
    \ ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo $2\
    \ | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo\
    \ \"$start1 $start2\" | sort -n | head -n1)\n    local end=$(echo \"$end1 $end2\"\
    \ | sort -n | tail -n1)\n    local len=$(echo \"$end - $start\" | bc)\n    if\
    \ [ $len -lt 0 ]; then\n        echo \"NO\"\n    else\n        local i=2\n   \
    \     while [ $i -lt $len ]; do\n            if [ $(echo \"$len % $i\" | bc) -eq\
    \ 0 ]; then\n                echo \"NO\"\n                return\n           \
    \ fi\n            i=$(echo \"$i + 1\" | bc)\n        done\n        echo \"YES\"\
    \n    fi", "  local -a a=($1)\n  local -a b=($2)\n  local -i start=${a[0]}\n \
    \ local -i end=${a[1]}\n  local -i start2=${b[0]}\n  local -i end2=${b[1]}\n \
    \ local -i s=0\n  local -i e=0\n  if (( start > end )); then\n    s=end\n    e=start\n\
    \  else\n    s=start\n    e=end\n  fi\n  if (( start2 > end2 )); then\n    start2=end2\n\
    \    end2=start2\n  fi\n  if (( s > end2 || e < start2 )); then\n    echo \"NO\"\
    \n  else\n    local -i s2=$(( s > start2 ? s : start2 ))\n    local -i e2=$((\
    \ e < end2 ? e : end2 ))\n    local -i l=$(( e2 - s2 + 1 ))\n    local -i i=2\n\
    \    local -i is_prime=1\n    while (( i < l )); do\n      if (( l % i == 0 ));\
    \ then\n        is_prime=0\n        break\n      fi\n      (( i++ ))\n    done\n\
    \    if (( is_prime )); then\n      echo \"YES\"\n    else\n      echo \"NO\"\n\
    \    fi\n  fi", "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n\
    \    local -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n\
    \    local -i length=0\n    if (( start > end || start2 > end2 )); then\n    \
    \    echo \"NO\"\n        return\n    fi\n    if (( start > start2 )); then\n\
    \        start=start2\n    fi\n    if (( end < end2 )); then\n        end=end2\n\
    \    fi\n    if (( start > end )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    length=$(( end - start + 1 ))\n    if (( length < 2 )); then\n  \
    \      echo \"NO\"\n        return\n    fi\n    if (( length == 2 )); then\n \
    \       echo \"YES\"\n        return\n    fi\n    if (( length % 2 == 0 )); then\n\
    \        echo \"NO\"\n        return\n    fi\n    for (( i=3; i<length; i+=2 ));\
    \ do\n        if (( length % i == 0 )); then\n            echo \"NO\"\n      \
    \      return\n        fi\n    done\n    echo \"YES\"", "  local -a a1=($1)\n\
    \  local -a a2=($2)\n  local -a a3\n  local -a a4\n  local -a a5\n  local -a a6\n\
    \  local -a a7\n  local -a a8\n  local -a a9\n  local -a a10\n  local -a a11\n\
    \  local -a a12\n  local -a a13\n  local -a a14\n  local -a a15\n  local -a a16\n\
    \  local -a a17\n  local -a a18\n  local -a a19\n  local -a a20\n  local -a a21\n\
    \  local -a a22\n  local -a a23\n  local -a a24\n  local -a a25\n  local -a a26\n\
    \  local -a a27\n  local -a a28\n  local -a a29\n  local -a a30\n  local -a a31\n\
    \  local -a a32\n  local -a a33\n  local -a a34\n  local -a a35\n  local -a a36\n\
    \  local -a a37\n  local -a a38\n  local -a a39\n  local -a a40\n  local -a a41\n\
    \  local -a a42\n  local -a a43\n  local -a a44\n  local -a a45\n  local -a a46\n\
    \  local -a a47\n  local -a a48\n  local -a a49\n  local -a a50\n  local -a a51\n\
    \  local -a a52\n  local -a a53\n  local -a a54\n  local -a a55\n  local -a a56\n\
    \  local -a a57\n  local -a a58\n  local -a a59\n  local -a a60\n  local -a a61\n\
    \  local -a a62\n  local -a a63\n  local -a a64\n  local -a a65\n  local -a a66\n\
    \  local -a a67\n  local -a a68\n  local -a a69\n  local -a a70\n  local -a a71\n\
    \  local -a a72", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    local start2=${b[0]}\n    local end2=${b[1]}\n   \
    \ local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i d", "    local -a\
    \ a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n\
    \    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i start3=0\n\
    \    local -i end3=0\n    local -i len=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n   ", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -a c\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n\
    \    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n\
    \    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n\
    \    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n",
  "    # $1 is a space-separated list\n    # $2 is a space-separated list\n    # $3\
    \ is a space-separated list\n    # $4 is a space-separated list\n    # $5 is a\
    \ space-separated list\n    # $6 is a space-separated list\n    # $7 is a space-separated\
    \ list\n    # $8 is a space-separated list\n    # $9 is a space-separated list\n\
    \    # ${10} is a space-separated list\n    # ${11} is a space-separated list\n\
    \    # ${12} is a space-separated list\n    # ${13} is a space-separated list\n\
    \    # ${14} is a space-separated list\n    # ${15} is a space-separated list\n\
    \    # ${16} is a space-separated list\n    # ${17} is a space-separated list\n\
    \    # ${18} is a space-separated list\n    # ${19} is a space-separated list\n\
    \    # ${20} is a space-separated list\n    # ${21} is a space-separated list\n\
    \    # ${22} is a space-separated list\n    # ${23} is a space-separated list\n\
    \    # ${24} is a space-separated list\n    # ${25} is a space-separated list\n\
    \    # ${26} is a space-separated list\n    # ${27} is a space-separated list\n\
    \    # ${28} is a space-separated list\n    # ${29} is a space-separated list\n\
    \    # ${30} is a space-separated list\n    # ${31} is a space-separated list\n\
    \    # ${32} is a space-separated list\n    # ${33} is a space-separated list\n\
    \    # ${34} is a space-separated list\n    # ${35} is a space-separated list\n\
    \    # ${36} is a space-separated list\n    # ${37} is a space-separated list\n\
    \    # ${38} is a space-separated list\n    # ${39} is a space-separated list\n\
    \    # ${40} is a space-separated list\n", "    local start1=$(echo $1 | cut -d'\
    \ ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo $2\
    \ | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo\
    \ $start1 $start2 | sort -n | tail -n1)\n    local end=$(echo $end1 $end2 | sort\
    \ -n | head -n1)\n    if [ $start -ge $end ]; then\n        echo \"NO\"\n    else\n\
    \        local length=$(($end - $start))\n        if [ $length -eq 1 ]; then\n\
    \            echo \"NO\"\n        else\n            local i=2\n            while\
    \ [ $i -lt $length ]; do\n                if [ $(($length % $i)) -eq 0 ]; then\n\
    \                    echo \"NO\"\n                    return\n               \
    \ fi\n                i=$(($i + 1))\n            done\n            echo \"YES\"\
    \n        fi\n    fi", "    local start1=$(echo $1 | cut -d' ' -f1)\n    local\
    \ end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n\
    \    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo \"$start1 $start2\"\
    \ | sort -n | head -n1)\n    local end=$(echo \"$end1 $end2\" | sort -n | tail\
    \ -n1)\n    local len=$(echo \"$end - $start\" | bc)\n    if [ $len -lt 0 ]; then\n\
    \        echo \"NO\"\n    else\n        local is_prime=1\n        for ((i=2; i<$len;\
    \ i++)); do\n            if [ $(echo \"$len % $i\" | bc) -eq 0 ]; then\n     \
    \           is_prime=0\n                break\n            fi\n        done\n\
    \        if [ $is_prime -eq 1 ]; then\n            echo \"YES\"\n        else\n\
    \            echo \"NO\"\n        fi\n    fi", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local -a c=()\n    if (( ${a[0]} <= ${b[0]} )); then\n      \
    \  c[0]=${b[0]}\n    else\n        c[0]=${a[0]}\n    fi\n    if (( ${a[1]} <=\
    \ ${b[1]} )); then\n        c[1]=${a[1]}\n    else\n        c[1]=${b[1]}\n   \
    \ fi\n    if (( ${c[0]} > ${c[1]} )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    local -i len=${c[1]}-${c[0]}+1\n    local -i i=2\n    while (( i*i\
    \ <= len )); do\n        if (( len % i == 0 )); then\n            echo \"NO\"\n\
    \            return\n        fi\n        (( i++ ))\n    done\n    echo \"YES\"",
  "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local -a d\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local\
    \ -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local\
    \ -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local\
    \ -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local\
    \ -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local\
    \ -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local\
    \ -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local\
    \ -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local\
    \ -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local\
    \ -i kkk=0\n    local -i lll=0\n    local -", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -a c=()\n  local -a d=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n\
    \  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i\
    \ ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n \
    \ local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i\
    \ ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n \
    \ local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i\
    \ ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n \
    \ local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i\
    \ bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i b", "  local\
    \ -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local -i i=0\n  local -i j=0\n\
    \  local -i k=0\n  local -i m=${#a[@]}\n  local -i n=${#b[@]}\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n\
    \  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n\
    \  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n\
    \  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n\
    \  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n\
    \  local -i Z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i\
    \ ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n \
    \ local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i\
    \ am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i", "  local\
    \ -a interval1=($1)\n  local -a interval2=($2)\n  local start1=${interval1[0]}\n\
    \  local end1=${interval1[1]}\n  local start2=${interval2[0]}\n  local end2=${interval2[1]}\n\
    \  local start=$((start1 > start2 ? start1 : start2))\n  local end=$((end1 < end2\
    \ ? end1 : end2))\n  local length=$((end - start + 1))\n  if [[ $length -lt 0\
    \ ]]; then\n    echo \"NO\"\n  elif [[ $length -eq 0 ]]; then\n    echo \"NO\"\
    \n  elif [[ $length -eq 1 ]]; then\n    echo \"NO\"\n  elif [[ $length -eq 2 ]];\
    \ then\n    echo \"NO\"\n  elif [[ $length -eq 3 ]]; then\n    echo \"YES\"\n\
    \  elif [[ $length -eq 5 ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 7 ]];\
    \ then\n    echo \"YES\"\n  elif [[ $length -eq 11 ]]; then\n    echo \"YES\"\n\
    \  elif [[ $length -eq 13 ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 17\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 19 ]]; then\n    echo \"YES\"\
    \n  elif [[ $length -eq 23 ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 29\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 31 ]]; then\n    echo \"YES\"\
    \n  elif [[ $length -eq 37 ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 41\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 43 ]]; then\n    echo \"YES\"\
    \n  elif [[ $length -eq 47 ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 53\
    \ ]]; then\n    echo \"YES\"\n  elif [[ $length -eq 59 ]]; then\n    echo \"YES\"\
    \n  elif [[ $length -eq 61 ]", "  local -a a=($1)\n  local -a b=($2)\n  local\
    \ -a c=($(intersect \"${a[@]}\" \"${b[@]}\"))\n  if [ ${#c[@]} -eq 0 ]; then\n\
    \    echo \"NO\"\n  else\n    local -i len=$((${c[1]} - ${c[0]} + 1))\n    if\
    \ is_prime $len; then\n      echo \"YES\"\n    else\n      echo \"NO\"\n    fi\n\
    \  fi", "    local start1=\"$(echo $1 | cut -d' ' -f1)\"\n    local end1=\"$(echo\
    \ $1 | cut -d' ' -f2)\"\n    local start2=\"$(echo $2 | cut -d' ' -f1)\"\n   \
    \ local end2=\"$(echo $2 | cut -d' ' -f2)\"\n    local start=$((start1 > start2\
    \ ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n    local\
    \ len=$((end - start + 1))\n    if [ $len -lt 0 ]; then\n        echo \"NO\"\n\
    \    else\n        local is_prime=1\n        for ((i=2; i<$len; i++)); do\n  \
    \          if [ $((len % i)) -eq 0 ]; then\n                is_prime=0\n     \
    \           break\n            fi\n        done\n        if [ $is_prime -eq 1\
    \ ]; then\n            echo \"YES\"\n        else\n            echo \"NO\"\n \
    \       fi\n    fi", "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo\
    \ $1 | cut -d' ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local\
    \ end2=$(echo $2 | cut -d' ' -f2)\n    local start=$((start1 > start2 ? start1\
    \ : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n    local len=$((end\
    \ - start + 1))\n    if [[ $len -lt 0 ]]; then\n        echo \"NO\"\n    elif\
    \ [[ $len -eq 1 ]]; then\n        echo \"NO\"\n    elif [[ $len -eq 2 ]]; then\n\
    \        echo \"YES\"\n    else\n        local i=3\n        while [[ $i -lt $len\
    \ ]]; do\n            if [[ $((len % i)) -eq 0 ]]; then\n                echo\
    \ \"NO\"\n                return\n            fi\n            ((i++))\n      \
    \  done\n        echo \"YES\"\n    fi", "    local start1=$(echo $1 | cut -d'\
    \ ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo $2\
    \ | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo\
    \ $start1 $start2 | sort -n | tail -n1)\n    local end=$(echo $end1 $end2 | sort\
    \ -n | head -n1)\n    if [ $start -gt $end ]; then\n        echo \"NO\"\n    else\n\
    \        local length=$(($end - $start + 1))\n        if [ $length -eq 1 ]; then\n\
    \            echo \"NO\"\n        else\n            local is_prime=1\n       \
    \     for ((i=2; i<$length; i++)); do\n                if [ $(($length % $i))\
    \ -eq 0 ]; then\n                    is_prime=0\n                    break\n \
    \               fi\n            done\n            if [ $is_prime -eq 1 ]; then\n\
    \                echo \"YES\"\n            else\n                echo \"NO\"\n\
    \            fi\n        fi\n    fi", "    local start1=$(echo $1 | cut -d' '\
    \ -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n    local start2=$(echo $2\
    \ | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo\
    \ \"$start1 $start2\" | sort -n | head -n1)\n    local end=$(echo \"$end1 $end2\"\
    \ | sort -n | tail -n1)\n    local len=$(($end - $start + 1))\n    if [ $len -lt\
    \ 0 ]; then\n        echo \"NO\"\n    elif [ $len -eq 0 ]; then\n        echo\
    \ \"NO\"\n    elif [ $len -eq 1 ]; then\n        echo \"NO\"\n    elif [ $len\
    \ -eq 2 ]; then\n        echo \"NO\"\n    elif [ $len -eq 3 ]; then\n        echo\
    \ \"YES\"\n    elif [ $len -eq 5 ]; then\n        echo \"YES\"\n    elif [ $len\
    \ -eq 7 ]; then\n        echo \"YES\"\n    elif [ $len -eq 11 ]; then\n      \
    \  echo \"YES\"\n    elif [ $len -eq 13 ]; then\n        echo \"YES\"\n    elif\
    \ [ $len -eq 17 ]; then\n        echo \"YES\"\n    elif [ $len -eq 19 ]; then\n\
    \        echo \"YES\"\n    elif [ $len -eq 23 ]; then\n        echo \"YES\"\n\
    \    elif [ $len -eq 29 ]; then\n        echo \"YES\"\n    elif [ $len -eq 31\
    \ ]; then\n        echo \"YES\"\n    elif [ $len -eq 37 ]; then\n        echo\
    \ \"YES\"\n    elif [ $len -eq 41 ]; then\n        echo \"YES\"\n    elif [ $len\
    \ -eq 43 ]; then\n        echo \"YES\"\n    elif [ $len -eq 47 ]; then\n     \
    \   echo \"YES\"\n    elif [ $len -eq 53 ]; then\n        echo \"YES\"\n    elif\
    \ [ $len -eq 59 ]; then\n        echo \"YES\"\n    elif [ $len -eq 61 ];", " \
    \   local -a first=($1)\n    local -a second=($2)\n    local start=0\n    local\
    \ end=0\n    if (( ${first[0]} <= ${second[0]} ))\n    then\n        start=${second[0]}\n\
    \    else\n        start=${first[0]}\n    fi\n    if (( ${first[1]} <= ${second[1]}\
    \ ))\n    then\n        end=${first[1]}\n    else\n        end=${second[1]}\n\
    \    fi\n    if (( start > end ))\n    then\n        echo \"NO\"\n        return\n\
    \    fi\n    local length=$(( end - start + 1 ))\n    if (( length == 1 ))\n \
    \   then\n        echo \"NO\"\n        return\n    fi\n    if (( length == 2 ))\n\
    \    then\n        echo \"YES\"\n        return\n    fi\n    for (( i = 2; i <\
    \ length; i++ ))\n    do\n        if (( length % i == 0 ))\n        then\n   \
    \         echo \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"",
  "    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local -i i=0\n  \
    \  local -i j=0\n    local -i k=0\n    local -i m=${#a[@]}\n    local -i n=${#b[@]}\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local\
    \ -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n\
    \    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local\
    \ -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n\
    \    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local\
    \ -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n\
    \    local -i Z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n \
    \   local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n \
    \   local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n \
    \   local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n \
    \   local -i ap=0\n    local -i aq", "  local -a a=($1)\n  local -a b=($2)\n \
    \ local start=${a[0]}\n  local end=${a[1]}\n  local start2=${b[0]}\n  local end2=${b[1]}\n\
    \  local -a c=()\n  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a\
    \ g=()\n  local -a h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n \
    \ local -a l=()\n  local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a\
    \ p=()\n  local -a q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n \
    \ local -a u=()\n  local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a\
    \ y=()\n  local -a z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n\
    \  local -a ad=()\n  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local\
    \ -a ah=()\n  local -a ai=()\n  local -a aj=()\n  local -a ak=()\n  local -a al=()\n\
    \  local -a am=()\n  local -a an=()\n  local -a ao=()\n  local -a ap=()\n  local\
    \ -a aq=()\n  local -a ar=()\n  local -a as=()\n  local -a at=()\n  local -a au=()\n\
    \  local -a av=()\n  local -a aw=()\n  local -a ax=()\n  local -a ay=()\n  local\
    \ -a az=()\n  local -a ba=()\n  local -a bb=()\n  local -a bc=()\n  local -a bd=()\n\
    \  local -a be=()\n ", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    if [[ ${b[0]} -gt $start ]]; then\n        start=${b[0]}\n\
    \    fi\n    if [[ ${b[1]} -lt $end ]]; then\n        end=${b[1]}\n    fi\n  \
    \  if [[ $start -gt $end ]]; then\n        echo \"NO\"\n        return\n    fi\n\
    \    local len=$((end - start + 1))\n    if [[ $len -eq 1 ]]; then\n        echo\
    \ \"NO\"\n        return\n    fi\n    local i=2\n    while [[ $i -lt $len ]];\
    \ do\n        if [[ $((len % i)) -eq 0 ]]; then\n            echo \"NO\"\n   \
    \         return\n        fi\n        i=$((i + 1))\n    done\n    echo \"YES\"",
  "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n\
    \    if (( ${b[0]} > start )); then\n        start=${b[0]}\n    fi\n    if ((\
    \ ${b[1]} < end )); then\n        end=${b[1]}\n    fi\n    if (( start > end ));\
    \ then\n        echo \"NO\"\n        return\n    fi\n    local len=$((end - start\
    \ + 1))\n    if (( len == 1 )); then\n        echo \"NO\"\n        return\n  \
    \  fi\n    if (( len == 2 )); then\n        echo \"YES\"\n        return\n   \
    \ fi\n    for ((i=2; i<len; i++)); do\n        if (( len % i == 0 )); then\n \
    \           echo \"NO\"\n            return\n        fi\n    done\n    echo \"\
    YES\"", "    local -a a=($1)\n    local -a b=($2)\n    local start=$(( ${a[0]}\
    \ > ${b[0]} ? ${a[0]} : ${b[0]} ))\n    local end=$(( ${a[1]} < ${b[1]} ? ${a[1]}\
    \ : ${b[1]} ))\n    local len=$(( end - start + 1 ))\n    if (( len <= 0 )); then\n\
    \        echo \"NO\"\n    elif (( len == 1 )); then\n        echo \"NO\"\n   \
    \ elif (( len == 2 )); then\n        echo \"YES\"\n    elif (( len % 2 == 0 ));\
    \ then\n        echo \"NO\"\n    else\n        local i\n        for (( i = 3;\
    \ i * i <= len; i += 2 )); do\n            if (( len % i == 0 )); then\n     \
    \           echo \"NO\"\n                return\n            fi\n        done\n\
    \        echo \"YES\"\n    fi", "  local -a interval1=($1)\n  local -a interval2=($2)\n\
    \  local start1=${interval1[0]}\n  local end1=${interval1[1]}\n  local start2=${interval2[0]}\n\
    \  local end2=${interval2[1]}\n  local start=$((start1>start2?start1:start2))\n\
    \  local end=$((end1<end2?end1:end2))\n  local length=$((end-start+1))\n  if ((length<=0));\
    \ then\n    echo \"NO\"\n  else\n    local i\n    for ((i=2;i<length;i++)); do\n\
    \      if ((length%i==0)); then\n        echo \"NO\"\n        return\n      fi\n\
    \    done\n    echo \"YES\"\n  fi", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local start=${a[0]}\n    local end=${a[1]}\n    local start2=${b[0]}\n  \
    \  local end2=${b[1]}\n    local -a c=()\n    if (( start > end )); then\n   \
    \     start=${a[1]}\n        end=${a[0]}\n    fi\n    if (( start2 > end2 ));\
    \ then\n        start2=${b[1]}\n        end2=${b[0]}\n    fi\n    if (( start\
    \ > end2 || start2 > end )); then\n        echo \"NO\"\n        return\n    fi\n\
    \    if (( start2 > start )); then\n        start=$start2\n    fi\n    if (( end2\
    \ < end )); then\n        end=$end2\n    fi\n    local len=$(( end - start + 1\
    \ ))\n    if (( len < 2 )); then\n        echo \"NO\"\n        return\n    fi\n\
    \    local i=2\n    while (( i * i <= len )); do\n        if (( len % i == 0 ));\
    \ then\n            echo \"NO\"\n            return\n        fi\n        (( i++\
    \ ))\n    done\n    echo \"YES\"", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local start=${a[0]}\n    local end=${a[1]}\n    local start2=${b[0]}\n  \
    \  local end2=${b[1]}\n    local -a c=()\n    if ((start > end2)) || ((start2\
    \ > end)); then\n        echo \"NO\"\n        return\n    fi\n    if ((start >\
    \ start2)); then\n        start=$start2\n    fi\n    if ((end > end2)); then\n\
    \        end=$end2\n    fi\n    if ((start == end)); then\n        echo \"NO\"\
    \n        return\n    fi\n    local -i i=0\n    for ((i=start+1; i<end; i++));\
    \ do\n        c+=($i)\n    done\n    local -i j=0\n    local -i k=0\n    local\
    \ -i l=0\n    for ((j=0; j<${#c[@]}; j++)); do\n        l=0\n        for ((k=2;\
    \ k<${c[j]}; k++)); do\n            if ((${c[j]} % k == 0)); then\n          \
    \      l=1\n                break\n            fi\n        done\n        if ((l\
    \ == 0)); then\n            echo \"YES\"\n            return\n        fi\n   \
    \ done\n    echo \"NO\"", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # Example echo \"Hello world\"\n  echo \"\
    NO\"", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n  \
    \  local end=${a[1]}\n    local start2=${b[0]}\n    local end2=${b[1]}\n    if\
    \ (( start > end || start2 > end2 )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    if (( start > start2 )); then\n        start=$start2\n    fi\n  \
    \  if (( end < end2 )); then\n        end=$end2\n    fi\n    if (( start > end\
    \ )); then\n        echo \"NO\"\n        return\n    fi\n    local len=$(( end\
    \ - start + 1 ))\n    if (( len == 1 )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    if (( len == 2 )); then\n        echo \"YES\"\n        return\n \
    \   fi\n    if (( len % 2 == 0 )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    local i\n    for (( i = 3; i < len; i += 2 )); do\n        if ((\
    \ len % i == 0 )); then\n            echo \"NO\"\n            return\n       \
    \ fi\n    done\n    echo \"YES\"", "    local -r start1=$(echo $1 | cut -d ' '\
    \ -f 1)\n    local -r end1=$(echo $1 | cut -d ' ' -f 2)\n    local -r start2=$(echo\
    \ $2 | cut -d ' ' -f 1)\n    local -r end2=$(echo $2 | cut -d ' ' -f 2)\n    local\
    \ -r max_start=$(echo $start1 $start2 | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \    local -r min_end=$(echo $end1 $end2 | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local -r length=$((min_end - max_start))\n    if [[ length -lt 0 ]]; then\n\
    \        echo \"NO\"\n    else\n        local -r is_prime=$(is_prime $length)\n\
    \        if [[ $is_prime -eq 1 ]]; then\n            echo \"YES\"\n        else\n\
    \            echo \"NO\"\n        fi\n    fi", "    local -a a=($1)\n    local\
    \ -a b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n    local start2=${b[0]}\n\
    \    local end2=${b[1]}\n    if (( start > end || start2 > end2 )); then\n   \
    \     echo \"NO\"\n        return\n    fi\n    if (( start > start2 )); then\n\
    \        start=$start2\n    fi\n    if (( end < end2 )); then\n        end=$end2\n\
    \    fi\n    if (( start > end )); then\n        echo \"NO\"\n        return\n\
    \    fi\n    local len=$(( end - start + 1 ))\n    if (( len == 2 )); then\n \
    \       echo \"YES\"\n        return\n    fi\n    if (( len % 2 == 0 )); then\n\
    \        echo \"NO\"\n        return\n    fi\n    local i\n    for (( i = 3; i\
    \ <= len; i += 2 )); do\n        if (( len % i == 0 )); then\n            echo\
    \ \"NO\"\n            return\n        fi\n    done\n    echo \"YES\"", "    local\
    \ start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d' ' -f2)\n\
    \    local start2=$(echo $2 | cut -d' ' -f1)\n    local end2=$(echo $2 | cut -d'\
    \ ' -f2)\n    local start=$(echo \"$start1 $start2\" | sort -n | head -n1)\n \
    \   local end=$(echo \"$end1 $end2\" | sort -n | tail -n1)\n    local length=$(echo\
    \ \"$end - $start\" | bc)\n    if [ $length -lt 0 ]; then\n        echo \"NO\"\
    \n    else\n        local is_prime=1\n        for i in $(seq 2 $length); do\n\
    \            if [ $(echo \"$length % $i\" | bc) -eq 0 ]; then\n              \
    \  is_prime=0\n                break\n            fi\n        done\n        if\
    \ [ $is_prime -eq 1 ]; then\n            echo \"YES\"\n        else\n        \
    \    echo \"NO\"\n        fi\n    fi", "  local -a a=($1)\n  local -a b=($2)\n\
    \  local -i start=${a[0]}\n  local -i end=${a[1]}\n  local -i start2=${b[0]}\n\
    \  local -i end2=${b[1]}\n  local -i start3=0\n  local -i end3=0\n  local -i len=0\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n ", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"NO\"", "    local a1=$(echo $1 | cut -d' ' -f1)\n  \
    \  local a2=$(echo $1 | cut -d' ' -f2)\n    local b1=$(echo $2 | cut -d' ' -f1)\n\
    \    local b2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo $a1 $b1 | tr\
    \ ' ' '\\n' | sort -n | tail -n1)\n    local end=$(echo $a2 $b2 | tr ' ' '\\n'\
    \ | sort -n | head -n1)\n    if [ $start -gt $end ]; then\n        echo \"NO\"\
    \n    else\n        local len=$(($end - $start + 1))\n        if [ $len -eq 1\
    \ ]; then\n            echo \"NO\"\n        else\n            local i=2\n    \
    \        while [ $i -lt $len ]; do\n                if [ $(($len % $i)) -eq 0\
    \ ]; then\n                    echo \"NO\"\n                    return\n     \
    \           fi\n                i=$(($i + 1))\n            done\n            echo\
    \ \"YES\"\n        fi\n    fi", "    local start1=$(echo $1 | cut -d ' ' -f 1)\n\
    \    local end1=$(echo $1 | cut -d ' ' -f 2)\n    local start2=$(echo $2 | cut\
    \ -d ' ' -f 1)\n    local end2=$(echo $2 | cut -d ' ' -f 2)\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    local length=$((end - start + 1))\n    if [[ $length -lt 1 ]]; then\n   \
    \     echo \"NO\"\n    else\n        local is_prime=1\n        for ((i=2; i<$length;\
    \ i++)); do\n            if [[ $((length % i)) -eq 0 ]]; then\n              \
    \  is_prime=0\n                break\n            fi\n        done\n        if\
    \ [[ $is_prime -eq 1 ]]; then\n            echo \"YES\"\n        else\n      \
    \      echo \"NO\"\n        fi\n    fi", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -a c=()\n    if [[ ${a[0]} -gt ${b[0]} ]]; then\n        c[0]=${a[0]}\n\
    \    else\n        c[0]=${b[0]}\n    fi\n    if [[ ${a[1]} -lt ${b[1]} ]]; then\n\
    \        c[1]=${a[1]}\n    else\n        c[1]=${b[1]}\n    fi\n    if [[ ${c[0]}\
    \ -gt ${c[1]} ]]; then\n        echo \"NO\"\n    else\n        local len=$((${c[1]}\
    \ - ${c[0]} + 1))\n        if [[ $len -eq 1 ]]; then\n            echo \"NO\"\n\
    \        else\n            local i\n            for ((i=2; i<len; i++)); do\n\
    \                if [[ $((len % i)) -eq 0 ]]; then\n                    echo \"\
    NO\"\n                    return\n                fi\n            done\n     \
    \       echo \"YES\"\n        fi\n    fi", "    local -a a=($1)\n    local -a\
    \ b=($2)\n    local start=${a[0]}\n    local end=${a[1]}\n    local start2=${b[0]}\n\
    \    local end2=${b[1]}\n    local -a c=()\n    local -a d=()\n    if ((start\
    \ > end)); then\n        c=($end $start)\n    else\n        c=($start $end)\n\
    \    fi\n    if ((start2 > end2)); then\n        d=($end2 $start2)\n    else\n\
    \        d=($start2 $end2)\n    fi\n    local -a e=()\n    if ((c[0] > d[0]));\
    \ then\n        e[0]=${c[0]}\n    else\n        e[0]=${d[0]}\n    fi\n    if ((c[1]\
    \ < d[1])); then\n        e[1]=${c[1]}\n    else\n        e[1]=${d[1]}\n    fi\n\
    \    if ((e[0] > e[1])); then\n        echo \"NO\"\n        return\n    fi\n \
    \   local len=$((e[1] - e[0] + 1))\n    if ((len < 2)); then\n        echo \"\
    NO\"\n        return\n    fi\n    local i=2\n    local isprime=1\n    while ((i\
    \ < len)); do\n        if ((len % i == 0)); then\n            isprime=0\n    \
    \        break\n        fi\n        ((i++))\n    done\n    if ((isprime == 1));\
    \ then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", "    local\
    \ -a interval1=($1)\n    local -a interval2=($2)\n    local start1=${interval1[0]}\n\
    \    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n\
    \    local start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1\
    \ < end2 ? end1 : end2))\n    if ((start > end)); then\n        echo \"NO\"\n\
    \        return\n    fi\n    local length=$((end - start + 1))\n    local -a primes=(2\
    \ 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)\n    for\
    \ prime in ${primes[@]}; do\n        if ((prime == length)); then\n          \
    \  echo \"YES\"\n            return\n        fi\n    done\n    echo \"NO\"", " \
    \   local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local\
    \ -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n   \
    \ local -i start3=0\n    local -i end3=0\n    local -i len=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n   ", "    # $1 is a space-separated\
    \ list\n    # $2 is a space-separated list\n    # $3 is a space-separated list\n\
    \    # $4 is a space-separated list\n    # $5 is a space-separated list\n    #\
    \ $6 is a space-separated list\n    # $7 is a space-separated list\n    # $8 is\
    \ a space-separated list\n    # $9 is a space-separated list\n    # ${10} is a\
    \ space-separated list\n    # ${11} is a space-separated list\n    # ${12} is\
    \ a space-separated list\n    # ${13} is a space-separated list\n    # ${14} is\
    \ a space-separated list\n    # ${15} is a space-separated list\n    # ${16} is\
    \ a space-separated list\n    # ${17} is a space-separated list\n    # ${18} is\
    \ a space-separated list\n    # ${19} is a space-separated list\n    # ${20} is\
    \ a space-separated list\n    # ${21} is a space-separated list\n    # ${22} is\
    \ a space-separated list\n    # ${23} is a space-separated list\n    # ${24} is\
    \ a space-separated list\n    # ${25} is a space-separated list\n    # ${26} is\
    \ a space-separated list\n    # ${27} is a space-separated list\n    # ${28} is\
    \ a space-separated list\n    # ${29} is a space-separated list\n    # ${30} is\
    \ a space-separated list\n    # ${31} is a space-separated list\n    # ${32} is\
    \ a space-separated list\n    # ${33} is a space-separated list\n    # ${34} is\
    \ a space-separated list\n    # ${35} is a space-separated list\n    # ${36} is\
    \ a space-separated list\n    # ${37} is a space-separated list\n    # ${38} is\
    \ a space-separated list\n    # ${39} is a space-separated list\n    # ${40} is\
    \ a space-separated list\n", "  local -a a=($1)\n  local -a b=($2)\n  local start=${a[0]}\n\
    \  local end=${a[1]}\n  local start2=${b[0]}\n  local end2=${b[1]}\n  local -i\
    \ len=0\n  local -i len2=0\n  local -i len3=0\n  local -i len4=0\n  local -i len5=0\n\
    \  local -i len6=0\n  local -i len7=0\n  local -i len8=0\n  local -i len9=0\n\
    \  local -i len10=0\n  local -i len11=0\n  local -i len12=0\n  local -i len13=0\n\
    \  local -i len14=0\n  local -i len15=0\n  local -i len16=0\n  local -i len17=0\n\
    \  local -i len18=0\n  local -i len19=0\n  local -i len20=0\n  local -i len21=0\n\
    \  local -i len22=0\n  local -i len23=0\n  local -i len24=0\n  local -i len25=0\n\
    \  local -i len26=0\n  local -i len27=0\n  local -i len28=0\n  local -i len29=0\n\
    \  local -i len30=0\n  local -i len31=0\n  local -i len32=0\n  local -i len33=0\n\
    \  local -i len34=0\n  local -i len35=0\n  local -i len36=0\n  local -i len37=0\n\
    \  local -i len38=0\n  local -i len39=0\n  local -i len40=0\n  local -i len41=0\n\
    \  local -i len42=0\n  local -i len43=0\n  local -i len44=0\n  local -i len45=0\n\
    \  local -i len46=0\n  local -i len47=0\n  local -i len48=0\n  local -i len49=0\n\
    \  local -i len50=0\n", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    local start2=${b[0]}\n    local end2=${b[1]}\n   \
    \ if [ $start -gt $end ]; then\n        local tmp=$start\n        start=$end\n\
    \        end=$tmp\n    fi\n    if [ $start2 -gt $end2 ]; then\n        local tmp=$start2\n\
    \        start2=$end2\n        end2=$tmp\n    fi\n    if [ $start -gt $end2 ]\
    \ || [ $start2 -gt $end ]; then\n        echo \"NO\"\n        return\n    fi\n\
    \    local start3=$start\n    if [ $start2 -gt $start3 ]; then\n        start3=$start2\n\
    \    fi\n    local end3=$end\n    if [ $end2 -lt $end3 ]; then\n        end3=$end2\n\
    \    fi\n    local len=$((end3-start3+1))\n    if [ $len -lt 2 ]; then\n     \
    \   echo \"NO\"\n        return\n    fi\n    local i=2\n    while [ $i -lt $len\
    \ ]; do\n        if [ $((len%i)) -eq 0 ]; then\n            echo \"NO\"\n    \
    \        return\n        fi\n        i=$((i+1))\n    done\n    echo \"YES\"",
  "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo $1 | cut -d'\
    \ ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local end2=$(echo $2\
    \ | cut -d' ' -f2)\n    local start=$(echo $start1 $start2 | sort -n | head -n1)\n\
    \    local end=$(echo $end1 $end2 | sort -n | tail -n1)\n    local len=$(($end\
    \ - $start))\n    if [ $len -lt 0 ]; then\n        echo \"NO\"\n    else\n   \
    \     local is_prime=1\n        for ((i=2; i<$len; i++)); do\n            if [\
    \ $(($len % $i)) -eq 0 ]; then\n                is_prime=0\n                break\n\
    \            fi\n        done\n        if [ $is_prime -eq 1 ]; then\n        \
    \    echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n    fi",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    local start1=$(echo $1 |\
    \ cut -d ' ' -f 1)\n    local end1=$(echo $1 | cut -d ' ' -f 2)\n    local start2=$(echo\
    \ $2 | cut -d ' ' -f 1)\n    local end2=$(echo $2 | cut -d ' ' -f 2)\n    local\
    \ start=$(echo \"$start1 $start2\" | sort -n | head -n 1)\n    local end=$(echo\
    \ \"$end1 $end2\" | sort -n | tail -n 1)\n    local len=$(echo \"$end - $start\"\
    \ | bc)\n    if [[ $len -lt 0 ]]; then\n        echo \"NO\"\n        return\n\
    \    fi\n    local flag=0\n    for ((i=2; i<=$len; i++)); do\n        if [[ $len%$i\
    \ -eq 0 ]]; then\n            flag=1\n            break\n        fi\n    done\n\
    \    if [[ $flag -eq 0 ]]; then\n        echo \"YES\"\n    else\n        echo\
    \ \"NO\"\n    fi", "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n\
    \    local -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n\
    \    local -i start3=$((start > start2 ? start : start2))\n    local -i end3=$((end\
    \ < end2 ? end : end2))\n    local -i len=$((end3 - start3 + 1))\n    if ((len\
    \ <= 0)); then\n        echo \"NO\"\n        return\n    fi\n    local -i i\n\
    \    for ((i = 2; i * i <= len; i++)); do\n        if ((len % i == 0)); then\n\
    \            echo \"NO\"\n            return\n        fi\n    done\n    echo \"\
    YES\"", "    local -a interval1=($1)\n    local -a interval2=($2)\n    local start1=${interval1[0]}\n\
    \    local end1=${interval1[1]}\n    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n\
    \    local start=$((start1 > start2 ? start1 : start2))\n    local end=$((end1\
    \ < end2 ? end1 : end2))\n    local length=$((end - start + 1))\n    if ((length\
    \ < 1)); then\n        echo \"NO\"\n        return\n    fi\n    local -i i\n \
    \   for ((i = 2; i < length; i++)); do\n        if ((length % i == 0)); then\n\
    \            echo \"NO\"\n            return\n        fi\n    done\n    echo \"\
    YES\"", "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo $1\
    \ | cut -d' ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local end2=$(echo\
    \ $2 | cut -d' ' -f2)\n    local start=$((start1 > start2 ? start1 : start2))\n\
    \    local end=$((end1 < end2 ? end1 : end2))\n    local length=$((end - start\
    \ + 1))\n    if [ $length -lt 1 ]; then\n        echo \"NO\"\n    else\n     \
    \   local i=2\n        while [ $i -lt $length ]; do\n            if [ $((length\
    \ % i)) -eq 0 ]; then\n                echo \"NO\"\n                return\n \
    \           fi\n            i=$((i + 1))\n        done\n        echo \"YES\"\n\
    \    fi", "    local -a a=($1)\n    local -a b=($2)\n    local start=$(max ${a[0]}\
    \ ${b[0]})\n    local end=$(min ${a[1]} ${b[1]})\n    local len=$((end - start\
    \ + 1))\n    if [[ $len -lt 1 ]]; then\n        echo \"NO\"\n    elif [[ $len\
    \ -eq 1 ]]; then\n        echo \"YES\"\n    else\n        if [[ $(is_prime $len)\
    \ -eq 1 ]]; then\n            echo \"YES\"\n        else\n            echo \"\
    NO\"\n        fi\n    fi", "    local -a a=($1)\n    local -a b=($2)\n    local\
    \ -a c=()\n    if (( a[0] <= b[0] )) && (( a[1] >= b[0] )); then\n        c[0]=${b[0]}\n\
    \    elif (( a[0] >= b[0] )) && (( a[0] <= b[1] )); then\n        c[0]=${a[0]}\n\
    \    else\n        echo \"NO\"\n        return\n    fi\n    if (( a[1] >= b[1]\
    \ )); then\n        c[1]=${b[1]}\n    elif (( a[1] <= b[1] )); then\n        c[1]=${a[1]}\n\
    \    else\n        echo \"NO\"\n        return\n    fi\n    if (( c[0] == c[1]\
    \ )); then\n        echo \"NO\"\n        return\n    fi\n    local -i i=0\n  \
    \  local -i j=0\n    for (( i=c[0]; i<=c[1]; i++ )); do\n        for (( j=2; j<i;\
    \ j++ )); do\n            if (( i % j == 0 )); then\n                echo \"NO\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    YES\"", "  local start1 end1 start2 end2\n  read start1 end1 <<< \"${1// / }\"\
    \n  read start2 end2 <<< \"${2// / }\"\n  if (( start1 > end2 || start2 > end1\
    \ )); then\n    echo \"NO\"\n  else\n    local start end\n    if (( start1 > start2\
    \ )); then\n      start=$start1\n    else\n      start=$start2\n    fi\n    if\
    \ (( end1 < end2 )); then\n      end=$end1\n    else\n      end=$end2\n    fi\n\
    \    if (( start == end )); then\n      echo \"NO\"\n    else\n      local i\n\
    \      for (( i = start + 1; i < end; i++ )); do\n        if (( i % 2 == 0 ));\
    \ then\n          echo \"NO\"\n          return\n        fi\n        local j\n\
    \        for (( j = 3; j < i; j += 2 )); do\n          if (( i % j == 0 )); then\n\
    \            echo \"NO\"\n            return\n          fi\n        done\n   \
    \   done\n      echo \"YES\"\n    fi\n  fi", "  local -a interval1=($1)\n  local\
    \ -a interval2=($2)\n  local start1=${interval1[0]}\n  local end1=${interval1[1]}\n\
    \  local start2=${interval2[0]}\n  local end2=${interval2[1]}\n  local start=$((start1\
    \ > start2 ? start1 : start2))\n  local end=$((end1 < end2 ? end1 : end2))\n \
    \ local length=$((end - start + 1))\n  if [[ $length -lt 1 ]]; then\n    echo\
    \ \"NO\"\n    return\n  fi\n  for ((i = 2; i < $length; i++)); do\n    if [[ $((length\
    \ % i)) -eq 0 ]]; then\n      echo \"NO\"\n      return\n    fi\n  done\n  echo\
    \ \"YES\"", "    local start1=$(echo $1 | cut -d' ' -f1)\n    local end1=$(echo\
    \ $1 | cut -d' ' -f2)\n    local start2=$(echo $2 | cut -d' ' -f1)\n    local\
    \ end2=$(echo $2 | cut -d' ' -f2)\n    local start=$(echo \"$start1 $start2\"\
    \ | sort -n | head -n1)\n    local end=$(echo \"$end1 $end2\" | sort -n | tail\
    \ -n1)\n    local length=$(echo \"$end - $start\" | bc)\n    if [ $length -lt\
    \ 0 ]; then\n        echo \"NO\"\n    else\n        local is_prime=1\n       \
    \ for ((i=2; i<=$length; i++)); do\n            if [ $(echo \"$length % $i\" |\
    \ bc) -eq 0 ]; then\n                is_prime=0\n                break\n     \
    \       fi\n        done\n        if [ $is_prime -eq 1 ]; then\n            echo\
    \ \"YES\"\n        else\n            echo \"NO\"\n        fi\n    fi", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n\
    \    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i start3=0\n\
    \    local -i end3=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n", "    local -a a=($1)\n    local -a b=($2)\n\
    \    local -a c=()\n    if (( a[0] <= b[0] )); then\n        if (( a[1] >= b[0]\
    \ )); then\n            if (( a[1] <= b[1] )); then\n                c=(${b[0]}\
    \ ${a[1]})\n            else\n                c=(${b[0]} ${b[1]})\n          \
    \  fi\n        fi\n    else\n        if (( b[1] >= a[0] )); then\n           \
    \ if (( b[1] <= a[1] )); then\n                c=(${a[0]} ${b[1]})\n         \
    \   else\n                c=(${a[0]} ${a[1]})\n            fi\n        fi\n  \
    \  fi\n    if (( ${#c[@]} == 0 )); then\n        echo \"NO\"\n    else\n     \
    \   local -i len=${c[1]}-${c[0]}+1\n        if (( len == 1 )); then\n        \
    \    echo \"NO\"\n        else\n            local -i i=2\n            while ((\
    \ i*i <= len )); do\n                if (( len % i == 0 )); then\n           \
    \         echo \"NO\"\n                    return\n                fi\n      \
    \          (( i++ ))\n            done\n            echo \"YES\"\n        fi\n\
    \    fi", "  local -r interval1=\"$1\"\n  local -r interval2=\"$2\"\n  local -r\
    \ start1=$(echo \"$interval1\" | cut -d ' ' -f 1)\n  local -r end1=$(echo \"$interval1\"\
    \ | cut -d ' ' -f 2)\n  local -r start2=$(echo \"$interval2\" | cut -d ' ' -f\
    \ 1)\n  local -r end2=$(echo \"$interval2\" | cut -d ' ' -f 2)\n  local -r start=$((start1\
    \ > start2 ? start1 : start2))\n  local -r end=$((end1 < end2 ? end1 : end2))\n\
    \  local -r length=$((end - start + 1))\n  local -r is_prime=$(is_prime \"$length\"\
    )\n  echo \"$is_prime\"", "  local a1=$(echo $1 | cut -d' ' -f1)\n  local a2=$(echo\
    \ $1 | cut -d' ' -f2)\n  local b1=$(echo $2 | cut -d' ' -f1)\n  local b2=$(echo\
    \ $2 | cut -d' ' -f2)\n  local c1=$(echo \"$a1 > $b1\" | bc)\n  local c2=$(echo\
    \ \"$a2 < $b2\" | bc)\n  if [ $c1 -eq 1 ] && [ $c2 -eq 1 ]; then\n    echo \"\
    YES\"\n  else\n    echo \"NO\"\n  fi", "  local start1=$(echo $1 | cut -d' ' -f1)\n\
    \  local end1=$(echo $1 | cut -d' ' -f2)\n  local start2=$(echo $2 | cut -d' '\
    \ -f1)\n  local end2=$(echo $2 | cut -d' ' -f2)\n  local start=$(echo \"$start1\
    \ $start2\" | sort -n | tail -n1)\n  local end=$(echo \"$end1 $end2\" | sort -n\
    \ | head -n1)\n  if [[ $start -gt $end ]]; then\n    echo \"NO\"\n  else\n   \
    \ local length=$((end - start + 1))\n    if [[ $length -eq 1 ]]; then\n      echo\
    \ \"NO\"\n    else\n      local i=2\n      while [[ $i -lt $length ]]; do\n  \
    \      if [[ $((length % i)) -eq 0 ]]; then\n          echo \"NO\"\n         \
    \ return\n        fi\n        i=$((i + 1))\n      done\n      echo \"YES\"\n \
    \   fi\n  fi", "    local -a a=($1)\n    local -a b=($2)\n    local start=${a[0]}\n\
    \    local end=${a[1]}\n    local start2=${b[0]}\n    local end2=${b[1]}\n   \
    \ local -a c=()\n    if ((start2 > end)) || ((start > end2)); then\n        echo\
    \ \"NO\"\n        return\n    fi\n    if ((start2 > start)); then\n        start=$start2\n\
    \    fi\n    if ((end2 < end)); then\n        end=$end2\n    fi\n    if ((start\
    \ == end)); then\n        echo \"NO\"\n        return\n    fi\n    for ((i=start+1;\
    \ i<end; i++)); do\n        c+=($i)\n    done\n    local -a d=()\n    for ((i=0;\
    \ i<${#c[@]}; i++)); do\n        local is_prime=1\n        for ((j=2; j<${c[i]};\
    \ j++)); do\n            if ((${c[i]} % j == 0)); then\n                is_prime=0\n\
    \                break\n            fi\n        done\n        if ((is_prime ==\
    \ 1)); then\n            d+=(${c[i]})\n        fi\n    done\n    if ((${#d[@]}\
    \ == 0)); then\n        echo \"NO\"\n    else\n        echo \"YES\"\n    fi",
  "    local -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local\
    \ -i end=${a[1]}\n    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n   \
    \ local -i len=0\n    local -i len2=0\n    local -i i=0\n    local -i j=0\n  \
    \  local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n   ", "    local -a interval1=($1)\n\
    \    local -a interval2=($2)\n    local start1=${interval1[0]}\n    local end1=${interval1[1]}\n\
    \    local start2=${interval2[0]}\n    local end2=${interval2[1]}\n    local start=$((start1\
    \ > start2 ? start1 : start2))\n    local end=$((end1 < end2 ? end1 : end2))\n\
    \    if ((start > end)); then\n        echo \"NO\"\n        return\n    fi\n \
    \   local length=$((end - start + 1))\n    if ((length == 1)); then\n        echo\
    \ \"NO\"\n        return\n    fi\n    local -i i=2\n    while ((i * i <= length));\
    \ do\n        if ((length % i == 0)); then\n            echo \"NO\"\n        \
    \    return\n        fi\n        ((i++))\n    done\n    echo \"YES\"", "    local\
    \ -r a1=$(echo $1 | cut -d' ' -f1)\n    local -r a2=$(echo $1 | cut -d' ' -f2)\n\
    \    local -r b1=$(echo $2 | cut -d' ' -f1)\n    local -r b2=$(echo $2 | cut -d'\
    \ ' -f2)\n    local -r c1=$((a1 > b1 ? a1 : b1))\n    local -r c2=$((a2 < b2 ?\
    \ a2 : b2))\n    local -r d=$((c2 - c1))\n    if ((d < 0)); then\n        echo\
    \ \"NO\"\n    elif ((d == 0)); then\n        echo \"YES\"\n    else\n        local\
    \ -r e=$(factor $d | cut -d' ' -f2)\n        if ((e == d)); then\n           \
    \ echo \"YES\"\n        else\n            echo \"NO\"\n        fi\n    fi", " \
    \   local start1=$(echo $1 | awk '{print $1}')\n    local end1=$(echo $1 | awk\
    \ '{print $2}')\n    local start2=$(echo $2 | awk '{print $1}')\n    local end2=$(echo\
    \ $2 | awk '{print $2}')\n    local start=$((start1 > start2 ? start1 : start2))\n\
    \    local end=$((end1 < end2 ? end1 : end2))\n    if [ $start -ge $end ]; then\n\
    \        echo \"NO\"\n        return\n    fi\n    local len=$((end - start + 1))\n\
    \    if [ $len -eq 2 ] || [ $len -eq 3 ] || [ $len -eq 5 ] || [ $len -eq 7 ];\
    \ then\n        echo \"YES\"\n    else\n        echo \"NO\"\n    fi", "    local\
    \ -a a=($1)\n    local -a b=($2)\n    local -i start=${a[0]}\n    local -i end=${a[1]}\n\
    \    local -i start2=${b[0]}\n    local -i end2=${b[1]}\n    local -i length=0\n\
    \    local -i length2=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n   "]
stop_tokens:
- "\n}"
